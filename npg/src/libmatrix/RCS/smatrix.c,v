head	2.3;
access;
symbols;
locks; strict;
comment	@ * @;


2.3
date	2004.08.31.14.42.32;	author tom;	state Exp;
branches;
next	2.2;

2.2
date	2004.02.12.22.12.27;	author tom;	state Exp;
branches;
next	2.0;

2.0
date	2004.01.02.21.40.12;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	99.12.13.18.06.58;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	99.02.15.14.12.06;	author tom;	state Exp;
branches;
next	;


desc
@@


2.3
log
@*** empty log message ***
@
text
@/*	$Log: smatrix.c,v $
 * Revision 2.2  2004/02/12  22:12:27  tom
 * Feb 2004
 *
 * Revision 2.0  2004/01/02  21:40:12  tom
 * splint cleaning
 *
 * Revision 1.2  1999/12/13  18:06:58  tom
 * tov revision
 *
 * Revision 1.1  1999/02/15  14:12:06  tom
 * Initial revision
 * */
/*	========================================================================
 *	Module:			smatrix.c
 *	Date:			Jan 1999
 *	Author:			Tom Videen
 *	Description:	Allocate a 2D matrix of short integers
 *					with range m[nyl..nyh][nxl..nxh]
 *	========================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/libmatrix/RCS/smatrix.c,v 2.2 2004/02/12 22:12:27 tom Exp tom $";
#endif

#include <stdio.h>
#include <stdlib.h>
#define NR_END 1

short        **smatrix (nyl, nyh, nxl, nxh)
	long            nyl, nyh, nxl, nxh;

{
	long            i;
	long            nrow = nyh - nyl + 1;
	long            ncol = nxh - nxl + 1;
	short         **m;

/* allocate pointers to pointers to rows */
 
    m = (short **) malloc ((unsigned int) ((nrow + NR_END) * sizeof (short *)));
	if (!m) {
		fprintf (stdout, "ERROR [smatrix]: malloc\n");
		return (NULL);
	}
	m += NR_END;
	m -= nyl;

/* allocate pointers to cols and set pointers to them */

	m[nyl] = (short *) malloc ((unsigned int) ((nrow * ncol + NR_END) * sizeof (short *)));
	if (!m[nyl]) {
		fprintf (stdout, "ERROR [smatrix]: malloc\n");
		free (m);
		return (NULL);
	}
	m[nyl] += NR_END;
	m[nyl] -= nxl;

	for (i = nyl + 1; i <= nyh; i++)
		m[i] = m[i - 1] + ncol;

/* return pointer to array of pointers to planes */

	return m;
}
@


2.2
log
@Feb 2004
@
text
@d2 3
d24 1
a24 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libmatrix/RCS/smatrix.c,v 2.0 2004/01/02 21:40:12 tom Exp tom $";
@


2.0
log
@splint cleaning
@
text
@d2 3
d21 1
a21 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libmatrix/RCS/smatrix.c,v 1.2 1999/12/13 18:06:58 tom Exp tom $";
@


1.2
log
@tov revision
@
text
@d2 3
d10 1
a10 1
 *	Date:			Jan-99
d16 1
d18 1
a18 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libmatrix/RCS/smatrix.c,v 1.1 1999/02/15 14:12:06 tom Exp tom $";
d39 1
a39 1
		exit (1);
d49 2
a50 1
		exit (1);
@


1.1
log
@Initial revision
@
text
@d1 4
a4 1
/*	$Log$ */
d13 4
d18 1
a20 2
static char     rcsid[] = "$Header: /home/npggw/tom/src/libmatrix/RCS/smatrix.c,v 1.3 1995/07/28 15:09:44 tom Exp $";

@
