head	2.3;
access;
symbols;
locks; strict;
comment	@ * @;


2.3
date	2004.08.31.14.42.32;	author tom;	state Exp;
branches;
next	2.2;

2.2
date	2004.02.12.22.12.27;	author tom;	state Exp;
branches;
next	2.0;

2.0
date	2004.01.02.21.40.12;	author tom;	state Exp;
branches;
next	1.6;

1.6
date	99.12.13.18.06.58;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	96.03.12.23.26.57;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	95.07.21.22.33.16;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	95.07.20.19.14.32;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	95.07.20.17.53.35;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	95.07.20.14.57.22;	author tom;	state Exp;
branches;
next	;


desc
@@


2.3
log
@*** empty log message ***
@
text
@/*	$Log: matrix_mult.c,v $
 * Revision 2.2  2004/02/12  22:12:27  tom
 * Feb 2004
 *
 * Revision 2.0  2004/01/02  21:40:12  tom
 * splint cleaning
 *
 * Revision 1.6  1999/12/13  18:06:58  tom
 * tov revision
 *
 * Revision 1.5  1996/03/12  23:26:57  tom
 * *** empty log message ***
 *
 * Revision 1.4  1995/07/21  22:33:16  tom
 * *** empty log message ***
 *
 * Revision 1.3  1995/07/20  19:14:32  tom
 * processes vectors
 *
 * Revision 1.2  1995/07/20  17:53:35  tom
 * multiplies matrix * vector
 *
	$Id: matrix_mult.c,v 2.2 2004/02/12 22:12:27 tom Exp tom $ */
/*	========================================================================
 *	Module:			matrix_mult.c
 *	Date:			Jul 1995
 *	Author:			Tom Videen
 *	Description:	Multiply type float matrices:  c[m][p] = a[m][n] * b[n][p]
 *	Input:
 *		a[m][n] -   matrix (m rows, n columns)
 *		b[n][p] -   matrix (n rows, p columns)
 *		m, n, p -   dimensions of matrices (indexed from 1 as in nrecipes)
 *	Output:
 *		c[m][p] -   product matrix (m rows, p columns)
 *	========================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/libmatrix/RCS/matrix_mult.c,v 2.2 2004/02/12 22:12:27 tom Exp tom $";
#endif

void            matrix_mult (a, b, c, m, n, p)
	float         **a, **b, **c;
	int             m, n, p;
{
	int             i, j, k;

	for (i = 1; i <= m; i++) {
		for (j = 1; j <= p; j++) {
			c[i][j] = 0.0;
			for (k = 1; k <= n; k++)
				c[i][j] += a[i][k] * b[k][j];
		}
	}
}
@


2.2
log
@Feb 2004
@
text
@d2 3
d23 1
a23 1
	$Id: matrix_mult.c,v 2.0 2004/01/02 21:40:12 tom Exp tom $ */
d39 1
a39 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libmatrix/RCS/matrix_mult.c,v 2.0 2004/01/02 21:40:12 tom Exp tom $";
@


2.0
log
@splint cleaning
@
text
@d2 3
d20 1
a20 1
	$Id: matrix_mult.c,v 1.6 1999/12/13 18:06:58 tom Exp tom $ */
d36 1
a36 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libmatrix/RCS/matrix_mult.c,v 1.6 1999/12/13 18:06:58 tom Exp tom $";
@


1.6
log
@tov revision
@
text
@d2 3
d17 1
a17 1
	$Id: matrix_mult.c,v 1.5 1996/03/12 23:26:57 tom Exp tom $ */
d20 1
a20 1
 *	Date:			20-Jul-95
d31 1
d33 1
a33 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libmatrix/RCS/matrix_mult.c,v 1.5 1996/03/12 23:26:57 tom Exp tom $";
@


1.5
log
@*** empty log message ***
@
text
@d2 3
d14 1
a14 1
	$Id: matrix_mult.c,v 1.4 1995/07/21 22:33:16 tom Exp tom $ */
a27 2
#include <stdio.h>

d29 1
a29 1
static char     rcsid[] = "$Header: /home/petsun19/tom/src/libmatrix/RCS/matrix_mult.c,v 1.4 1995/07/21 22:33:16 tom Exp tom $";
@


1.4
log
@*** empty log message ***
@
text
@d2 3
d11 1
a11 1
	$Id: matrix_mult.c,v 1.3 1995/07/20 19:14:32 tom Exp tom $ */
a16 1
 *					when c and b are points, p = 1
a24 1

d27 3
a29 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libmatrix/RCS/matrix_mult.c,v 1.3 1995/07/20 19:14:32 tom Exp tom $";
d32 1
a32 1
	float         **a, *b, *c;
a34 1
	float         **bb, **cc;
d37 5
a41 15
	if (p == 1) {
		for (i = 1; i <= m; i++) {
			c[i] = 0.0;
			for (j = 1; j <= n; j++)
				c[i] += a[i][j] * b[j];
		}
	} else {
		bb = (float **) b;
		cc = (float **) c;
		for (i = 1; i <= m; i++) {
			for (j = 1; j <= p; j++) {
				cc[i][j] = 0.0;
				for (k = 1; k <= n; k++)
					cc[i][j] += a[i][k] * bb[k][j];
			}
@


1.3
log
@processes vectors
@
text
@d2 3
d8 1
a8 1
	$Id: matrix_mult.c,v 1.2 1995/07/20 17:53:35 tom Exp tom $ */
d26 1
a26 1
static char     rcsid[] = "$Header: /export/home/npggw/tom/src/libmatrix/RCS/matrix_mult.c,v 1.2 1995/07/20 17:53:35 tom Exp tom $";
d39 1
a39 1
				c[i] += a[i][j] * b[i];
@


1.2
log
@multiplies matrix * vector
@
text
@d1 5
a5 2
/*	$Log$
	$Id$ */
d10 2
a11 2
 *	Description:	Multiply type float matrices:  c[m][n] = a[m][p] * b[p][n]
 *					when c and b are points, n = 1
d13 2
a14 2
 *		a[m][p] -   matrix (m rows, p columns)
 *		b[p][n] -   matrix (p rows, n columns)
a15 1
 *
d17 1
a17 1
 *		c[m][n] -   product matrix (m rows, n columns)
d23 1
a23 1
static char     rcsid[] = "$Header: /export/home/npggw/tom/src/libmatrix/RCS/matrix_mult.c,v 1.1 1995/07/20 14:57:22 tom Exp tom $";
d26 1
a26 1
	float         **a, **b, **c;
d29 1
d32 1
a32 1
	if (n == 1) {
d35 2
a36 2
			for (k = 1; k <= p; k++)
				c[i] += a[i][k] * b[i];
d39 2
d42 4
a45 4
			for (j = 1; j <= n; j++) {
				c[i][j] = 0.0;
				for (k = 1; k <= p; k++)
					c[i][j] += a[i][k] * b[k][j];
@


1.1
log
@Initial revision
@
text
@d21 1
a21 1
static char     rcsid[] = "$Header$";
d29 3
a31 3
	for (i = 1; i <= m; i++) {
		for (j = 1; j <= n; j++) {
			c[i][j] = 0.0;
d33 9
a41 1
				c[i][j] += a[i][k] * b[k][j];
@
