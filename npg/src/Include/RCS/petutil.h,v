head	1.8;
access;
symbols;
locks
	tom:1.8; strict;
comment	@ * @;


1.8
date	95.12.01.15.06.18;	author tom;	state Exp;
branches;
next	1.7;

1.7
date	95.11.10.15.18.59;	author tom;	state Exp;
branches;
next	1.6;

1.6
date	95.10.31.15.50.53;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	95.10.31.15.50.01;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	95.10.31.15.41.05;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	95.10.31.15.35.00;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	95.10.30.22.45.15;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	95.10.30.18.18.38;	author tom;	state Exp;
branches;
next	;


desc
@@


1.8
log
@added ECAT953_OFFSET_AFTER_OCT95
@
text
@/*$Id: petutil.h,v 1.7 1995/11/10 15:18:59 tom Exp tom $*/
/*$Log: petutil.h,v $
 * Revision 1.7  1995/11/10  15:18:59  tom
 * added ECAT953_SCANNER and ECAT961_SCANNER
 *
 * Revision 1.6  1995/10/31  15:50:53  tom
 * *** empty log message ***
 *
 * Revision 1.5  1995/10/31  15:50:01  tom
 * ty added SYSTEM_TYPE_PETT6
 *
 * Revision 1.37  1995/10/30  20:12:42  ty7777
 * Added SYSTEM_TYPE_PETT6.
 *
 * Revision 1.36  1995/10/13  15:57:02  ty7777
 * Added DEFAULT_ECAT961_SEP and DEFAULT_TYPE_961.
 *
 * Revision 1.35  1995/09/05  17:10:04  ty7777
 * Added constant ERROR_BOUND.
 *
 * Revision 1.34  1995/08/03  21:01:30  ty7777
 * Modified SliceX ().
 *
 * Revision 1.33  1995/07/24  18:36:13  ty7777
 * Added DEFAULT_XORIGIN and DEFAULT_ZORIGIN.
 *
 * Revision 1.32  1995/07/13  21:15:57  ty7777
 * Added normal mean.
 *
 * Revision 1.31  1995/06/30  16:04:04  ty7777
 * Added Emission type 1000.
 *
 * Revision 1.30  1995/06/12  21:47:55  ty7777
 * Added hdr2ifh ().
 *
 * Revision 1.29  1995/06/01  18:08:24  ty7777
 * Added updateifhdr.
 *
 * Revision 1.28  1995/05/18  20:12:34  ty7777
 * Added INTERFILE.
 *
 * Revision 1.27  1995/05/18  19:36:17  ty7777
 * Added readifimg () and readifhdr ().
 *
 * Revision 1.26  1995/05/03  20:45:37  ty7777
 * Added TRANSVERSE, CORONAL, FACING_LEFT, and FACING_RIGHT.
 *
 * Revision 1.25  1995/04/12  20:04:41  ty7777
 * Same as the last version.
 *
 * Revision 1.24  1995/04/10  18:32:42  ty7777
 * Added type for ROUND.
 *
 * Revision 1.23  1995/01/03  20:36:29  ty7777
 * Same as the last version.
 *
 * Revision 1.22  1994/11/01  20:33:05  ty7777
 * Added new ECAT_OFFSET.
 *
 * Revision 1.21  1994/10/25  18:37:22  ty7777
 * Moved X Window related constants to winutil.h.
 *
 * Revision 1.20  1994/10/20  19:06:26  ty7777
 * Deleted X11 related function declarations.
 *
 * Revision 1.19  1994/09/28  14:54:36  ty7777
 * Added xscale to SXR_OUTPUT.
 *
 * Revision 1.18  1994/09/20  15:20:19  ty7777
 * Added peakslice to SXR_OUTPUT.
 *
 * Revision 1.17  1994/09/16  16:01:30  ty7777
 * Same as the last one.
 *
 * Revision 1.16  1994/09/15  21:22:59  ty7777
 * Added petkslice to SXR_OUTPUT and slice_peak to PET_SLICE.
 *
 * Revision 1.15  1994/05/13  21:46:43  ty7777
 * Split SliceXY and XYtoSlice to SliceX, XtoSlice, SliceY, and YtoSlice.
 * The left hand coordinate systems is changed to the right hand system.
 *
 * Revision 1.14  1994/04/18  19:15:13  ty7777
 * Added DEFAULT_ZORIGIN.
 *
 * Revision 1.13  1994/04/14  20:06:49  ty7777
 * Added slice2z () and z2slice () declaration.
 *
 * Revision 1.12  1994/04/14  19:48:15  ty7777
 * Delted SliceZ () and ZtoSlice ().
 *
 * Revision 1.11  1994/04/14  18:57:24  ty7777
 * Added zorigin to COMMENT_DATA and changed the definition for SliceZ () and ZtoSlice ().
 *
 * Revision 1.10  1994/04/06  20:21:05  ty7777
 * Redeclare Lowered.
 *
 * Revision 1.9  1994/03/11  22:54:25  ty7777
 * Added definition for threshold.
 *
 * Revision 1.8  1994/03/03  20:59:17  ty7777
 * Replace id with header.
 *
 * Revision 1.7  1994/02/25  17:04:38  ty7777
 * Change the prototype for get_voxsize ().
 *
 * Revision 1.6  1994/02/04  20:41:41  ty7777
 * Added matrix_multi.
 *
 * Revision 1.5  1994/02/03  21:04:31  ty7777
 * Added HD6_BRAIN and T88_BRAIN.
 *
 * Revision 1.4  1994/02/01  16:35:25  ty7777
 * Added FILTER_MNUM_SLICES and FILTER_BNUM_SLICES to be used by gauss and butterworth.
 *
 * Revision 1.3  1993/12/17  21:32:27  ty7777
 * Added init_slice and init_offset for SXR_OUTPUT.
 *
 * Revision 1.2  1993/12/17  16:00:22  ty7777
 * Modified documentation.
 *
 * Revision 1.1  1993/11/11  17:53:16  ty7777
 * Initial revision
 **/

/*___________________________________________________________________ 	
File Name:	petutil.h

Description:	Header file containing declarations for PET, interfile,
		and OS32 specific information, including, but not limited 
		to PETT6 image headers, decoding and encoding information, 
		and standard sizes for file information. 
 
Author:		Tom Yang 

Date:		03/24/1992
___________________________________________________________________*/

#ifndef _PETUTIL_INCLUDED
#define _PETUTIL_INCLUDED

static char rcsid_petutil [] = "$Header: /export/home/npggw/tom/include/RCS/petutil.h,v 1.7 1995/11/10 15:18:59 tom Exp tom $";

#include <sys/types.h>
#include <package.h>
#include <llist.h>


/* 
 * Standard sizes for OS32 and PETT6 data 
 */

#define	RECORD_SIZE			256		/* OS32 record size */
#define HEADER_SIZE			RECORD_SIZE
#define	PETT6_SCANNER			6		/* PETT 6 scanner code */
#define	SUPER_PETT_I_SCANNER		7		/* Super PETT I scanner code */
#define	SUPER_PETT_II_SCANNER		8		/* Super PETT II scanner code */
#define	ECAT_SCANNER			10		/* ECAT scanner code */
#define	ECAT953_SCANNER			10		/* ECAT 953 scanner code, same as ECAT_SCANNER */
#define	INTERFILE			11		/* interfile format code */
#define	ECAT961_SCANNER			12		/* ECAT 961 scanner code */
#define	ERROR_SCANNER			-1		/* error scanner code */
#define	MMS_PER_CM			10	/* milimeters in a cm */
#define	PETT6_PIXEL_SIZE		0.286	/* PETT6 image pixel size, cm / pixel */ 
#define	PETT6_SEPARATION		1.44	/* PETT6 slice separation, cm */ 
#define	SMG_PIXEL_SIZE			0.2	/* SMG 49 image pixel size, cm / pixel */ 
#define	SMG_SEPARATION			0.2	/* SMG 49 image slice separation, cm */ 
#define ENCODED_SLICE_WIDTH		128
#define ENCODED_SLICE_HEIGHT		128
#define ENCODED_SLICE_DIM		ENCODED_SLICE_WIDTH * ENCODED_SLICE_HEIGHT 
#define ENCODED_RECS_PER_SLICE		129		/* num. of records per ENCODED slice */ 
							/* (128 x 128 x 2) / 256 */
#define ENCODED_FILE_FORM_LEN		10
#define ENCODED_PETTNUM_POS		6
#define ENCODED_NUMSLICES_POS		7
#define ENCODED_NUMRECORDS_POS		8
#define ENCODED_RECORD_POS		9
#define HALF_DWIDTH			(ENCODED_SLICE_WIDTH - PETT6_SLICE_WIDTH) / 2	
#define HALF_DHEIGHT			(ENCODED_SLICE_HEIGHT - PETT6_SLICE_HEIGHT) / 2	
#define PETT6_SLICE_WIDTH		100	
#define PETT6_SLICE_HEIGHT		100	
#define PETT6_SLICE_SIZE		PETT6_SLICE_WIDTH * PETT6_SLICE_WIDTH * sizeof (short)	
#define PETT6_RECS_PER_SLICE		80		/* num. of records per PETT6 slice */
#define PETT6_GARBAGE_SIZE		RECORD_SIZE - PETT6_SLICE_SIZE % RECORD_SIZE
#define PETT6_FILE_FLAG_LEN		2
#define PETT6_RUN_NAME_LEN		6
#define PETT6_SUBJECT_ID_LEN		8
#define PETT6_DATE_LEN			6
#define PETT6_COMPOUND_LEN		10
#define PETT6_FILTER_LEN		12
#define FILTER_NAME_LEN			7
#define FILTER_PARAMS_LEN		PETT6_FILTER_LEN - FILTER_NAME_LEN
#define PETT6_NUMBER			6
#define PETT6_14			14		/* 14 used for pixel size 2.86 */
#define PETT6_49			49		/* PETT VI .SMG images */
#define PETT6_NUM_SLICES_POS		31
#define PETT6_POS			120
#define PETT6_7SLICES			7
#define SPETT_I_NUM_SLICES_POS		18
#define SUPER_PETT_I_NAME_POS		115
#define SUPER_PETT_II_OTHERS		1		/* Other Super PETT II scanner code */
#define SPETT_II_NUM_SLICES_POS		32
#define PI				3.1415926
#define HALF_CIRCLE_DEGREES		180
#define GAUSSIAN_FILTER_CODE		100
#define BUTTERWORTH_FILTER_CODE		200
#define FILTER_XDIM			144
#define FILTER_YDIM			144
#define FILTER_ZDIMS			48
#define FILTER_ZDIMM			64
#define FILTER_ZDIMB			96
#define FILTER_STHRESH_NUM		40		/* if num_slices <= 40, use FILTER_ZDIMS */
#define FILTER_MTHRESH_NUM		56		/* if num_slices <= 56, use FILTER_ZDIMM */
#define FILTER_BTHRESH_NUM		90		/* if num_slices <= 90, use FILTER_ZDIMB */
#define DEFAULT_ECAT_SEP		0.3375		/* 953 scanner default plane separation, in cm */
#define DEFAULT_ECAT961_SEP		0.3125		/* 961 scanner default plane separation, in cm */
#define EMISSION_PET1000		1000		
#define EMISSION_PET1020		1020		
#define EMISSION_PET2000		2000		
#define EMISSION_PET2010		2010		
#define TRANSMISSION_PET1010		1010		
#define EMISSION_ECAT			3		
#define TRANSMISSION_ECAT		2		
#define BUTTERWORTH_FILTER_LABEL	"3D Butterworth"	/* used in study_description */
#define GAUSS_FILTER_LABEL		"3D Gauss"
#define PETTVI_IMAGE_LABEL		"PETT VI"
#define SCALE_LABEL			"SF:"
#define XFLIP_LABEL			"X:r"		/* X axis reversed or right on right */
#define ZORIGIN_LABEL			"z0:"		/* z origin slice */
#define ECAT_FILE_TYPE			3000		/* ECAT file type */
#define SXR_FILE_EXTENSION		".sxr"		/* .sxr file extension */
#define DEFAULT_CALIBRATION_FACTOR	1.0		/* default ECAT calibration factor */
#define DEFAULT_FRAME_DURATION		100000		/* default ECAT frame duration */
#define DATA_TYPE_STRING		0		/* data contained in string is a string */
#define DATA_TYPE_INTEGER		1		/* data contained in string is an integer */
#define DATA_TYPE_REAL			2		/* data contained in string is a real number */
#define	MILISECONDS_PER_SECOND		1000		/* miliseconds in a second */
#define STANDARD_DEVIATIONS3D_SIZE	31
#define SAMPLING_MODE_2D		2
#define SAMPLING_MODE_3D		3
#define PROGRAM_XRAY30			"xray 3.0"
#define PROGRAM_XRAY31			"xray 3.1"
#define PROGRAM_XRAY32			"xray 3.2"
#define	XRAY_TYPE_RADIOLOGY		20		/* xray 3.0 with ECAT images not flipped */
#define	XRAY_TYPE_NEUROLOGY		21		/* xray 3.1 with ECAT images flipped */
#define	XRAY_TYPE_XRAY32		22		/* xray 3.2 with PET peak slice */
#define PROGRAM_SXRWELD			"sxrweld"
#define	DATE_COMPONENTS			3		/* length of date array */ 
#define	YEAR				0		/* year index of date array */ 
#define	MONTH				1		/* month index of date array */ 
#define	DAY				2		/* day index of date array */ 
#define	PEAK_PER_SLICE			1		/* peak per slice type */ 
#define	PEAK_PER_SCAN			2		/* peak per scan type */ 
#define TRANSMISSION_SCAN		1		
#define EMISSION_SCAN			2		
#define DEFAULT_PETT6_TRANS_THRESH	80		
#define DEFAULT_ECAT_TRANS_THRESH	80		
#define DEFAULT_ECAT_EMISSION_THRESH	50		
#define	ZATLAS_DIMENSION		7.0	/* the vertical dimension from center of AC-PC in atlas */ 
#define	APATLAS_DIMENSION		16.3	/* length AC-PC in the atlas */ 
#define	PETT6_REFERENCE			3	/* default PETT6 reference slice number */ 
#define	PETT6_OFFSET			0.0	/* default PETT6 offset from reference slice */ 
#define	ECAT_REFERENCE			16	/* default ECAT reference slice number */ 
#define	ECAT_OFFSET			352.8	/* default ECAT offset from reference slice, mm */ 
#define	ECAT_OFFSET_AFTER_OCT94		351.7	/* After Oct, 94, ECAT offset from reference slice, mm */ 
#define	ECAT953_OFFSET_AFTER_OCT95	363.7	/* After Oct 19, 95 */
#define	ECAT961_OFFSET			534.5	/* ECAT offset for the 961 scanner */ 
#define	PERCENT_FACTOR			0.01	/* percent factor = 1 / 100 */ 
#define	ONE_HUNDRED			100	/* one hundred */ 
#define	EARSEP_OFFSET			0.3	/* factor added to ear separation */ 
#define	ECAT_NUM_SLICES			31	/* Default ECAT number of slices */ 
#define	HD6_BRAIN			1	/* atlas is hd6 */ 
#define	T88_BRAIN			2	/* atlas is t88 */ 
#define	DEFAULT_XORIGIN			64.5	/* default xorigin */
#define	DEFAULT_YORIGIN			64.5	/* default yorigin */
#define	DEFAULT_ZORIGIN			31	/* default zorigin */
#define	PEAK_SLICE_UNDEFINED		-1	/* the peak slice is undefined */
#define	TRANSVERSE			0	/* the orientation is horizontal */
#define	CORONAL				1	/* the coronal orientation */
#define	FACING_LEFT			2	/* sagittal orientation: facing left */
#define	FACING_RIGHT			3	/* sagittal orientation: facing right */
#define	MODE_USE_ANALYZE_HEADER		1	/* use the analyze .hdr file to get voxel size */
#define	MODE_DEFAULT_VOXEL_SIZE		2	/* use the default voxel size for analyze .hdr files */
#define	NORMAL_MEAN			1000	/* mean for normalized images */
#define	ERROR_BOUND			0.00001	/* used for comparing real numbers */
#define	SYSTEM_TYPE_PETT6		6	/* system type for images converted from PETT6 */
#define	SYSTEM_TYPE_953			953	/* 953 system type */
#define	SYSTEM_TYPE_961			961	/* 961 system type */



/*
 * INFORMATION RECORD FOR PETT VI DATA FILES     
 *	(HEADER.TXT 07-Nov-89)
 */

/*_________________________________________________________

WORD(S)		BYTE(S)		USED FOR:
 _______	_______		_________
1		1-2		'**' in standard files;   [A2]
				'++' in condensed files on tape;
2-4		3-8		Run name [A6]
5		9-10		Rotation (0 = no; 1 = yes)
6		11-12		Number of wobbles per second (1)
7		13-14		Number of wobble points      (16)
8		15-16		Scan time in seconds
9-12		17-24		Subject ID   [A8]
13-15		25-30		Date         [A6]
16		31-32		Resolution (0=low, 1=high)
17		33-34		(1)
18		35-36		Slice number (1--49)
19-20		37-40		Decay constant for isotope  [REAL*4]
21		41-42		Rotation of picture (0=old fmt.; 1=new fmt.)
22		43-44		Scan time of 1 collection frame in seconds
				(0 for non-dynamic files)
23-24		45-48		Total corrected counts  [I*4]
25-29		49-58		Compound name [A10]
30		59-60		(1)
31		61-62		(1)
32		63-64		Number of images in series (7, 14, 32, 49)
33-37		65-74		(not presently used)
38		75-76		Type of file
39		77-78		(not presently used)
40		79-80		Rotation increment (0=1/4 angle, 1=1/2 angle)
41-46		81-92		Filter name used in reconstruction [A12]
47-48		93-96		(not presently used)
49		97-98		Uncorrected norm average
50		99-100		Norm average
51-52		101-104		*Slice total raw events        [I*4]
53-54		105-108		*Slice total random events     [I*4]
				(includes some scatter for emission scans)
55-56		109-112		*Slice total raw-random events [I*4]
				(randoms >= 0 before all subtractions)
57-69		113-138		(not presently used)
70		139-140		Scan time for norm run in seconds
71-78		141-156		(not presently used)
79-94		157-188		Metabolic data storage (DX'ed images only)
95-120		189-240		(not presently used)
121		241-242		PETT number (6)
122		243-244		Model number (0)
123-128		245-256		Location of PETT (MALLINCKRODT)   [A12]



All locations contain binary information unless otherwise
specified in brackets.

Header record does not always contain all of the information
shown. Some of the information is inserted as the data file is
processed.

*Locations 51-56 (Total, Randoms, Total-Randoms) have valid values
 only for files created after 06-Nov-89.

Information significant for SPIDERAM
____________________________________

WORD(S)		BYTE(S)		USED FOR:
_______		_______		_________

2-4		3-8		Run name  {label}
8		15-16		Scan time {label}
13-15		25-30		Date      {label}
19-20		37-40		Decay const (identifies isotope) {label}
23-24		45-48		Total counts  {label}
25-29		49-58		Compound name {label}
32		63-64		Number of slices in series (if 0, assume 7)
				(Scan file list images must all have the
				same number of slices)
121		241-242		PETT number (MUST BE 6 for Spideram to read
				the file as a PETT VI image)

Word 38 contains a code number indicating the TYPE OF FILE.

Old Reconstruction Stream:
_________________________

 Code    Set by
Number	Program:		Type of file			Size
______	_______			____________			____

2	SETUP6		Raw data				2306
8	NORMAV		Norm average data (NORMHEAD)                    1
10	SLEPAL		Raw data separated by slices (SLICES)	2030
100	BINAL		Binned data (SORTS)			441
200	RANATTN		Attenuation profile (TSORTS)		441
205	PIEFACT		Artificial attenuation profile (AFACTS)	882
300	RANNORM		Normalization profile (NSORTS)		441
500	ARYAL		Corrected profile (ASORTS)		441
505	TRANSIAL	Corrected transmission profile (ASORTS)	441
1000	RECOAL		Picture data (IMAGES, etc.)		561


New Reconstruction Stream:  (1988)
_________________________

Code	Set by
Number	Program:		Type of file				Size
______	_______			____________				____

2	SETUP6		Raw data (SCAN, ATTEN, NORM)			2306
20	SLICESEP	Slices separated/randoms subtracted (SLICES)	1015
120	BINPROF		Binned data (SORTS, NSORTS, TSORTS)		875
320	NORMAVE		Normal Header (NORMHEAD)			1
420	CORATTEN	Corrected transmission profile (ASORTS)		875
520	CORSCAN		Corrected emissions profile (ASORTS)		875
1020	BACKPROJ	Reconstructed image (IMAGE)			560


EM Preprocessing Stream:  (1989)
_______________________

Code	Set by
Number	Program:		Type of file				Size
______	_______			____________				____

40	EMSLICE6	Slices separated/randoms subtracted (SLICES)	1015
140	EMBIN6		Binned data  (EESORTS, ERSORTS, ENSORTS)	861
150	EMRINGC6	Binned data divided by ring factor (ETSORTS)	861

_________________________________________________________*/


/* 
 * PETT VI Image Header File Format 
 *
 * This C struct represents the structure of PETT VI headers as represented on 
 * Concurrent OS/32 systems.  The headers are repeated before each slice
 * in an image file on the Concurrent system.  Note that floating point 
 * numbers require conversion to IEEE format for use on UNIX systems.
 *
 */

typedef struct {
	char	file_flag [2];		/* "**" standard, "++" condensed */
	char	run_name [6];		/* specify the tracer name: OC1, OC2, OO1, OO2, etc. */
	short	rotation;		/* 0 = no, 1 = yes */
	short	wobble_rate;		/* wobbles per second, normally 1 */
	short	nwobble_pts;		/* number of wobble points, norm 16 */
	short	scan_time;		/* scan time in seconds */
	char	subject_id [8];		/* single / paried */
	char	date [6];		/* MMDDYY */
	short	resolution;		/* 0 = low, 1 = high */
	short	isotope_code;		/* always 1 */
	short	slice_number;		/* 1--49 */
	int	decay_constant;		/* decay constant for isotope, int rep. for float*/
	short	image_orientation;	/* rotation, 0 = old fmt., 1 = new fmt. */
	short	time_per_frame;		/* scan time of 1 frame, in seconds */
	int	total_counts;		/* total counts in slice */
	char	compound [10];		/* isotope used for scan */
	short	unused_1 [2];		/* empty space */
	short	number_of_slices;	/* number of images in series, 7, 14, 32, 49 */
	short	unused_2 [5];		/* empty space */
	short	file_type;		/* type of image file */
	short	ecat_orientation;	/* 1: flipped; others: not flipped */
	short	rotation_increment;	/* 0 = 1/4 angle, 1 = 1/2 angle */
	char	filter [12];		/* filter used in reconstruction */
	short 	unused_4 [2];		/* empty space */
	short	un_norm_average;	/* uncorrected normalization average */
	short	norm_average;		/* normalization average */
	int	total_raw_events;	/* slice total raw events */
	int	total_random_events;	/* slice total random events */
	int	raw_random_events;	/* slice total raw - random events */
	short 	unused_5 [13];		/* empty space */
	short 	norm_run_time;		/* scan time in sec for norm. run */
	short 	unused_6 [8];		/* empty space */
	short 	metabolic_data [16];	/* Metabolic data storage (DX'ed images only) */
	short 	unused_7 [26];		/* empty space */
	short 	pett_number;		/* PETT number (6) */
	short 	model_number;		/* Model number (0) */
	char	pett_location [12];	/* MALLINCKRODT */
} PETT6HDR;


/*__________________________________________________________________

Encoded File Header Information                  ENCODED.TXT  (07-Apr-87)
______________________________

Array	
Loc	Word(s) 	Information			Format
____	________	___________			______

1	1	'ENCODED   '				[A10]
2	6	Type of encoding (1)			[I*2]
3	7	PETT Number (6,7,8)			[I*2]
4	8	Number of Slices			[I*2]
5	9	Number of Records in this file		[I*2]
6	10	Record No. for Slice #1			[I*2]
7	11	Record No. for Slice #2			[I*2]
8	12	Record No. for Slice #3			[I*2]
9	13	Record No. for Slice #4			[I*2]
10	14	Record No. for Slice #5			[I*2]
11	15	Record No. for Slice #6			[I*2]
12	16	Record No. for Slice #7			[I*2]
13	17	Record No. for Slice #8			[I*2]
14	18	Record No. for Slice #9			[I*2]
15	19	Record No. for Slice #10		[I*2]
16	20	Record No. for Slice #11		[I*2]
17	21	Record No. for Slice #12		[I*2]
18	22	Record No. for Slice #13		[I*2]
19	23	Record No. for Slice #14		[I*2]
                         .
                         .
                         .

54	58	Record No. for Slice #49		[I*2]
59-128	Unused



For images with n slices, the next n records will contain the headers
for each slice.

Following the headers is the image data.  Each slice begins on a record
boundary and is located by the record number in the file header.

Encoded extension is .CMG, decoded extension is .IMG  (processed)
Encoded extension is .CSG, decoded extension is .SMG  (summed images)
Encoded extension is .CSM, decoded extension is .SUM  (sum of multiple frames)
Encoded extension is .CIF, decoded extension is .DIF  (difference images)
Encoded extension is .C  , decoded extension is .     (unprocessed)

____________________________________________________________________*/


/* 
 * PETT Encoded Header File Format 
 *
 * This C struct contains the structure of ENCODED headers as represented on 
 * Concurrent OS/32 systems. Note that floating point numbers require 
 * conversion to IEEE format for use on UNIX systems.
 *
 * 07/10/90 M. Todd Gamble
 */

typedef struct {
	u_char 	fileform [10];	/* type of form: ENCODED or not */
	u_short	code;		/* type of encoding  */
	u_short pnum;		/* PETT number (6-8) */
	u_short nslcs;		/* number of slices in file */
	u_short nrecs;		/* number of records in file */
	u_short rec [49];	/* record no.where slice data begins */
	short	unused [70];	/* empty space */
} ENCODEDHDR;



/* 
 * PETT header with significant information
 */
typedef struct {
	char	run_name [6];		/* specify the tracer name: OC1, OC2, OO1, OO2, etc. */
	short	scan_time;		/* scan time in seconds */
	char	subject_id [8];		/* single / paried */
	char	date [6];		/* MMDDYY */
	short	slice_number;		/* 1--49 */
	float	decay_constant;		/* decay constant for isotope, float */
	char	compound [10];		/* isotope used for scan */
	short	number_of_slices;	/* number of images in series, 7, 14, 32, 49 */
	char	filter [12];		/* filter used in reconstruction */
} PETIMAGEHDR;


/* 
 * Header file header, used in hdrinfo.
 */
typedef struct {
	char	scanner [14];
	char	scanname [8];
	char	scandate [8];
	short	slices;
	short	scantime;
	char	compound [10];
	char	filter [12];
	short	rcontype;
	short	resolution;
	char	procdate [8];
	char	initials [4];
	short	ntype;
	short	unused_1;
	char	piename [8];
	int	totalcnts;
	int	scancnts;
	int	scanst;
	int	scanlen;
	int	framelen;
	int	tau;
	int	pettcnv1;
	int	aflow1;
	int	bflow1;
	int	bvfactor1;
	int	aoxygen1;
	int	boxygen1;
	int	awater1;
	int	bwater1;
	int	o2cnts1;
	int	oxycont1;
	int	decay_factor1;
	int	pettcnv2;
	int	aflow2;
	int	bflow2;
	int	bvfactor2;
	int	aoxygen2;
	int	boxygen2;
	int	awater2;
	int	bwater2;
	int	o2cnts2;
	int	oxycont2;
	int	decay_factor2;
	int	pieslope;
	int	efactor;
	short	unused_2 [26];
} OS32_HEADER_DATA;		/* real numbers are represented in int format */

typedef struct {
	char	scanner [14];
	char	scanname [8];
	char	scandate [8];
	short	slices;
	short	scantime;
	char	compound [10];
	char	filter [12];
	short	rcontype;
	short	resolution;
	char	procdate [8];
	char	initials [4];
	short	ntype;
	short	unused_1;
	char	piename [8];
	float	totalcnts;
	float	scancnts;
	float	scanst;
	float	scanlen;
	float	framelen;
	float	tau;
	float	pettcnv1;
	float	aflow1;
	float	bflow1;
	float	bvfactor1;
	float	aoxygen1;
	float	boxygen1;
	float	awater1;
	float	bwater1;
	float	o2cnts1;
	float	oxycont1;
	float	decay_factor1;
	float	pettcnv2;
	float	aflow2;
	float	bflow2;
	float	bvfactor2;
	float	aoxygen2;
	float	boxygen2;
	float	awater2;
	float	bwater2;
	float	o2cnts2;
	float	oxycont2;
	float	decay_factor2;
	float	pieslope;
	float	efactor;
	short	unused_2 [26];
} HEADER_DATA;		/* real numbers are IEEE reals */


/* 
 * Structure for xray.
 */
typedef struct 
{
	int	type;			/* SXR file type: xray 3.0, 20; 3.1, 21; xray 3.2, 22 */
	BOOLEAN	incorrect_dz;		/* TRUE: header contains "incorrect delta-z" */
	int	peaktype;		/* scan peak or slice peak */
	int	peakslice;		/* slice (>= 1) which has the peak value */ 
	int	threshold;		/* threshold value */
	float	pixel_size;		/* pixel size (cm / pixel) */
	float	magnification_factor;	/* magnification factor for the skull X ray */
	int	number_slices;		/* number of slices */
	float	slice_separation;	/* PET slice separation (cm) */
	int	reference_slice;	/* PET reference slice from which measures are made */
	int	init_slice;		/* reference slice number at time of initialization */
	float	zatlas_dimension;	/* the vertical dimension from center of AC-PC in atlas (cm) */
	float	apatlas_dimension;	/* length of the AC-PC in the atlas (cm) */
	float	film_position;		/* Film position */
	float	scan_position;		/* Scan position */
	float	reference_offset;	/* offset from reference slice, mm */
	float	xscale;			/* x scaling factor */
	float	init_offset;		/* initialization offset */
	float	apxray;			/* length of the AC-PC line on the skull xray (cm) */
	float	degx;			/* angle between a PET slice and the AC-PC line (degree) */
	float	zxray;			/* distance from the center of the AC-PC to the vertex of 
					   the skull xray (cm) */
	float	dz;			/* distance from the center of the AC-PC to reference 
					   slice using a line perpendicular to reference slice (cm) */
	float	dap;			/* distance from the A-P center of the reference slice
					   to the intersection point of the line perpendicular to the 
					   reference slice passing the center of the AC-PC 
					   and the reference slice (cm) */
	float	apcenter;		/* coordinate of the A-P center for the reference slice (pixel) */
	float	ear_separation;		/* Right-Left separation of the ear markers (cm) */
	float	eardap;			/* distance between the ear markers in the skull xray (cm) 
					   parallel to the AC-PC line */
	float	eardz;			/* distance between the ear markers in the skull xray (cm) 
					   perpendicular to the AC-PC line */
	float	degy;			/* angle of rotation about the y-axis (degree), 
					   computed from eardz and earsep */
	float	degz;			/* angle of rotation about the z-axis (degree),
					   computed from eardap and earsep */
	float	*rlpetdim;		/* Right-Left dimension of PET slices (pixel) */
	float	*rlcenter;		/* center of the right-left axis of PET slices (pixel no.) */
	float	*vertical_petdim;	/* Top-Bottom dimension of PET slices (pixel) */
	float	*rlslicedim;		/* Right-Left dimension of slices (cm) in Xray*/
} SXR_OUTPUT;				/* structure for skull X ray output */


/* 
 * Structures for 2-D and 3-D points.
 */
typedef struct {
	int	x;			
	int	y;			
} POINT2D;

typedef struct {
	float	x;			
	float	y;			
} FLOAT_POINT2D;

typedef struct {
	int	x;			
	int	y;			
	int	z;			
} POINT3D;

typedef struct {
	float	x;			
	float	y;			
	float	z;			
} FLOAT_POINT3D;

typedef struct 
{
	int	slice_index;		
	short	*input;		/* PET image data after clipping */
	float	slice_peak;	/* peak of slice */		
	int	xstart;		/* PET image x start */
	int	ystart;		/* PET image y start */
	int	width;		/* PET image width */
	int	height;		/* PET image height */
	POINT2D	bottom;
	POINT2D	left;
	POINT2D	right;
	POINT2D	top;
} PET_SLICE_DATA;		/* structure for a single PET slice, used in xray and sxrweld */

typedef struct {
	BOOLEAN	xflip_flag;		/* TRUE: flipped; FALSE: not flipped */			
	BOOLEAN	scale_flag;		/* has label SF: */		
	float	scale;			/* scaling factor */
	BOOLEAN	gauss3d_filter;		/* image is a 3D gauss filtered image */			
	BOOLEAN	butterworth3d_filter;	/* image is a 3D butterworth filtered image */			
	BOOLEAN	pett6_flag;		/* image is created from a PETT VI image */			
	int	zorigin;		/* slice number corresponding to origin of z axis */
} COMMENT_INFO;				/* Possible information contained in field study_description
					of the ECAT image main header */


/* 
 * Global Functions
 */
PUBLIC	int		DetermineType ();
PUBLIC	void		DrawSymbol ();
PUBLIC	int		Ecat2Pett6 ();
PUBLIC	void		FillHeaderPett6 ();
PUBLIC	int		GetECATBasicHeader ();
PUBLIC	int		GetImagePett6 ();
PUBLIC	int		GetImageSuperPett ();
PUBLIC	int		GetPetParameters ();
PUBLIC	int		GetVersion ();
PUBLIC	void		Lowered ();
PUBLIC	void		PutImagePett6 ();
PUBLIC	void		Transformation ();
PUBLIC	int		check_imageattr ();
PUBLIC	int		comment_info ();
PUBLIC	void		copyrec ();
PUBLIC	int		get3dreal ();
PUBLIC	int		gethdr ();
PUBLIC	int		getifhdr ();
PUBLIC	void		getimage ();
PUBLIC	int		getimagedim ();
PUBLIC	int		getimage_type ();
PUBLIC	int		getrealimg ();
PUBLIC	int		getsxr ();
PUBLIC	int		get_voxsize ();
PUBLIC	void		hd6tot88 ();
PUBLIC	int		hdr2ifh ();
PUBLIC	int		ieee2pe ();
PUBLIC	int		info2comment ();
PUBLIC	void		itoa ();
PUBLIC	void		matrix_multi ();
PUBLIC	int		padimage ();
PUBLIC	float		pe2ieee ();
PUBLIC	int		readifhdr ();
PUBLIC	int		readifimg ();
PUBLIC	int		reflection ();
PUBLIC	int		savesxr ();
PUBLIC	int		setpath ();
PUBLIC	float		slice2z ();
PUBLIC	int		threshold ();
PUBLIC	int		trim ();
PUBLIC	int		updateifhdr ();
PUBLIC	int		write3dreal ();
PUBLIC	int		writeifhdr ();
PUBLIC	int		writeifimg ();
PUBLIC	int		writerealimg ();
PUBLIC	char		*xmstr2str ();
PUBLIC	void		xs_register_pattern ();
PUBLIC	void		zoom ();
PUBLIC	int		z2slice ();


/* 
 * macros 
 */
#define ROUND(x)	(short int) ((x) > 0 ? ((x) + 0.5) : ((x) - 0.5))	
								/* rounding float/double to int */
#define SliceX(x)	((x) - DEFAULT_XORIGIN) * 2		/* convert slice number to X value */
#define XtoSlice(x)	DEFAULT_XORIGIN + ((x) / 2.0)		/* convert X value to slice number */
#define SliceY(x)	(DEFAULT_YORIGIN - (x)) * 2		/* convert slice number to Y value */
#define YtoSlice(x)	DEFAULT_YORIGIN - ((x) / 2.0)		/* convert Y value to slice number */
#define SIGN(x)		((x) > 0 ? 1 : ((x) < 0 ? -1: 0))	/* determine sign */
#define radian2deg(x)	((x) * (HALF_CIRCLE_DEGREES / PI))	/* radians to degrees conversion */
#define deg2radian(x)	((x) * (PI / HALF_CIRCLE_DEGREES))	/* degrees to radians conversion */

#endif  /* _PETIMAGE_INCLUDED */

@


1.7
log
@added ECAT953_SCANNER and ECAT961_SCANNER
@
text
@d1 1
a1 1
/*$Id: petutil.h,v 1.6 1995/10/31 15:50:53 tom Exp tom $*/
d3 3
d141 1
a141 1
static char rcsid_petutil [] = "$Header: /home/npggw/tom/inc/RCS/petutil.h,v 1.6 1995/10/31 15:50:53 tom Exp tom $";
d265 1
@


1.6
log
@*** empty log message ***
@
text
@d1 1
a1 1
/*$Id: petutil.h,v 1.5 1995/10/31 15:50:01 tom Exp tom $*/
d3 3
d138 1
a138 1
static char rcsid_petutil [] = "$Header: /home/npggw/tom/inc/RCS/petutil.h,v 1.5 1995/10/31 15:50:01 tom Exp tom $";
d155 1
d157 1
@


1.5
log
@ty added SYSTEM_TYPE_PETT6
@
text
@d1 1
a1 1
/*$Id: petutil.h,v 1.37 1995/10/30 20:12:42 ty7777 Exp $*/
d3 3
d135 1
a135 1
static char rcsid_petutil [] = "$Header: /usr/local/include/petutil/RCS/petutil.h,v 1.37 1995/10/30 20:12:42 ty7777 Exp $";
d138 2
a139 2
#include <petutil/package.h>
#include <petutil/llist.h>
@


1.4
log
@*** empty log message ***
@
text
@d1 1
a1 1
/*$Id: petutil.h,v 1.3 1995/10/31 15:35:00 tom Exp tom $*/
d3 2
a4 2
 * Revision 1.3  1995/10/31  15:35:00  tom
 * ty revision
d132 1
a132 1
static char rcsid_petutil [] = "$Header: /home/npggw/tom/inc/RCS/petutil.h,v 1.3 1995/10/31 15:35:00 tom Exp tom $";
d135 2
a136 2
#include <package.h>
#include <llist.h>
d273 1
@


1.3
log
@ty revision
@
text
@d1 1
a1 1
/*$Id: petutil.h,v 1.36 1995/10/13 15:57:02 ty7777 Exp $*/
d3 3
d132 1
a132 1
static char rcsid_petutil [] = "$Header: /usr/local/include/petutil/RCS/petutil.h,v 1.36 1995/10/13 15:57:02 ty7777 Exp $";
d135 2
a136 2
#include <petutil/package.h>
#include <petutil/llist.h>
@


1.2
log
@remove reference to path petutil
@
text
@d1 1
a1 1
/*$Id: petutil.h,v 1.1 1995/10/30 18:18:38 tom Exp tom $*/
a2 3
 * Revision 1.1  1995/10/30  18:18:38  tom
 * Initial revision
 *
d129 1
a129 1
static char rcsid_petutil [] = "$Header: /home/npggw/tom/inc/RCS/petutil.h,v 1.1 1995/10/30 18:18:38 tom Exp tom $";
d132 2
a133 2
#include <package.h>
#include <llist.h>
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*$Id: petutil.h,v 1.36 1995/10/13 15:57:02 ty7777 Exp $*/
d3 3
d132 1
a132 1
static char rcsid_petutil [] = "$Header: /usr/local/include/petutil/RCS/petutil.h,v 1.36 1995/10/13 15:57:02 ty7777 Exp $";
d135 2
a136 2
#include <petutil/package.h>
#include <petutil/llist.h>
@
