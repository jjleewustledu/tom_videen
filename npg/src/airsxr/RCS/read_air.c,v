head	2.0;
access;
symbols;
locks; strict;
comment	@ * @;


2.0
date	2004.02.13.16.38.03;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	2002.11.26.20.06.11;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	95.09.26.22.05.56;	author tom;	state Exp;
branches;
next	;


desc
@@


2.0
log
@Feb 2004
@
text
@/*  $Id: read_air.c,v 1.2 2002/11/26 20:06:11 tom Exp tom $
    $Log: read_air.c,v $
 * Revision 1.2  2002/11/26  20:06:11  tom
 * *** empty log message ***
 *
 * Revision 1.1  1995/09/26  22:05:56  tom
 * Initial revision
 *
 * Revision 1.1  1995/09/26  15:31:46  tom
 * Initial revision
 *
 * Revision 1.3  1995/07/26  18:13:56  tom
 * lint
 *
 * Revision 1.2  1995/07/25  19:11:23  tom
 * fixed AIR matrix
 *
 * Revision 1.1  1995/07/25  14:52:12  tom
 * Initial revision
 * */
/* ===============================================================================
 *  Module:         read_air.c
 *  Date:           25-Jul-95
 *  Author:         Tom Videen
 *  Description:
 *      Read an AIR file into the structure, air1, and
 *      convert the transformation matrix into a matrix, mat, which
 *		might be used in standard matrix multiplications.
 *	Notes:
 *		The AIR matrix is bizarre (see manual appendix section VI)
 *		but the matrix created will work if the fixed image is isotropic.
 *	Return:
 *		0 = success
 *		1 = error
 * ===============================================================================
*/
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/airsxr/RCS/read_air.c,v 1.2 2002/11/26 20:06:11 tom Exp tom $";
#endif

#include <stdio.h>
#include <AIR1.h>

#define MSIZE 4					 /* matrix dimension */

int             read_air (filename, air1, mat)
	char           *filename;
	struct air     *air1;
	float         **mat;

{
	FILE           *fptr;
	int             i, j, n;

/*	Open file file */

	fptr = fopen (filename, "rb");
	if (fptr == NULL) {
		(void) fprintf (stderr, "ERROR: cannot open %s\n", filename);
		return 1;
	}
	n = fread ((char *) air1, 1, sizeof (struct air), fptr);
	(void) fclose (fptr);
	if (n != sizeof (struct air)) {
		(void) fprintf (stderr, "ERROR: reading %s\n", filename);
		return 1;
	}
/*	Initialize the matrix */

	mat[4][1] = 0;
	mat[4][2] = 0;
	mat[4][3] = 0;
	mat[4][4] = 1;

	for (i = 1; i < MSIZE; i++)
		mat[i][4] = (float) air1->e[0][i - 1];

	for (i = 1; i < MSIZE; i++)
		for (j = 1; j < MSIZE; j++)
			mat[j][i] = (float) air1->e[i][j - 1];

	return 0;
}
@


1.2
log
@*** empty log message ***
@
text
@d1 1
a1 1
/*  $Id: read_air.c,v 1.1 1995/09/26 22:05:56 tom Exp $
d3 3
d37 5
a46 5
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/airsxr/RCS/read_air.c,v 1.1 1995/09/26 22:05:56 tom Exp $";

#endif

@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*  $Id: read_air.c,v 1.1 1995/09/26 15:31:46 tom Exp $
d3 3
d35 1
a35 1
#include "AIR.h"
d40 1
a40 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/airmat/RCS/read_air.c,v 1.1 1995/09/26 15:31:46 tom Exp $";
@
