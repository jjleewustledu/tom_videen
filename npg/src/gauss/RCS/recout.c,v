head	2.0;
access;
symbols;
locks; strict;
comment	@ * @;


2.0
date	95.12.18.15.19.39;	author tom;	state Exp;
branches;
next	;


desc
@initial TOV version
@


2.0
log
@*** empty log message ***
@
text
@/*	$Id$
	$Log$ */
/*	========================================================================
 *	Module:			recout.c
 *	Date:			Dec-95
 *	Author:			Tom Videen
 *	Description:	Copy an input image's recfile to the output recfile
 *	 
 *	Input:
 *		recfp   -   pointer to a new rec file
 *		filename -  name of the image file associated with an old rec file
 *	Output:
 *		contents of old rec file copied to recfp
 *	 
 *	Algorithm:
 *	1)  Create the old rec file name.
 *	2)  Open the old rec file. 
 *	3)  If no old rec file, write "not found" to the new rec file.
 *		Otherwise, copy the contents of the old rec file to the new one.
 *	
 *	========================================================================
 */
static char     rcsid[] = "$Header: /home/npggw/tom/src/scaleimage/RCS/recout.c,v 1.1 1995/12/15 21:44:18 tom Exp $";

#include <stdio.h>
#include <string.h>
#define MAXLINE 512
#define MAXPATH 1024

/*	-----------------------
 *	Function recout
 *	-----------------------
 */
void	recout (recfp, filename)
	FILE           *recfp;
	char           *filename;
{
	FILE           *fp;
	char            recfile[MAXPATH];
	char            line[MAXLINE];

	strcpy (recfile, filename);
	strcat (recfile, ".rec");
	if ((fp = fopen (recfile, "r")) == NULL)
		fprintf (recfp, "%s not found\n", recfile);
	else {
		while (fgets (line, MAXLINE, fp) != NULL)
			fprintf (recfp, "%s", line);
		fclose (fp);
	}
}
@
