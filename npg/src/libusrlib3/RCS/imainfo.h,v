head	1.1;
access;
symbols;
locks; strict;
comment	@ * @;


1.1
date	96.10.08.17.58.33;	author tom;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/*[ Compilation unit ********************************************************\
*
* Name        : imainfo.h
*
* Author      : Wittenberg (aw); Siemens AG Med MRE2; (09131)/84-6821
*
* Language    : C
*
* Description : struct 	imainfo
*		struct 	imainfo_int
*		struct	newima
*		struct	imalis
*		Macro	INT2EXT
*		Macro	EXT2INT
*		
*		This include file contains the external and internal 
*		definitions of an image record. The internal type 
*		'imainfo_int' will be stored in the INGRES database. The
*		structure 'imainfo_int' may not be used by any external 
*		application!!! It is used only within the lib_db_intern!!!
*
*		All other application must use 'struct imainfo' as usal.
*		NOTE: 	there are some entries which are still in the 
*		       	structure but are not stored in the INGRES tables, 
*		     	because they are redundant, not longer used  
*			or not MR parameters (e.g gipsynumber,tilt_gantry...)
*
*		The internal structure will be transformed to the external
*		with macro INT2EXT.
*		(and vice versa with macro EXT2INT if necessary)
* 
* Origin	: 1990-May-30   F.Schimmel   
* Redesign	: 1993-Mar-05	A.Wittenberg                 
*
\****************************************************************************/

/*] END: */

#include "db_defines.h"

#ifndef DB_IMAGE_INCL
struct imainfo { 
	long	image_key_id;
	short	image_type;
	long	nextima_uid;
	long	previma_uid;
	char	study_border_flag[DB_SBFLAGLEN];
	char	center_slice_flag[DB_CSFLAGLEN];
	long	no_within_scan;
	char	image_date[DB_DATELEN];
	char	measure_date[DB_DATELEN];
	long	pat_uid;
	long	study_uid;
	long	study_number;
	long	cmbarr_no;
	double	slice_position;
	double	slice_thickness;
	char	coil_type[DB_COILTYPLEN];
	double	time_rep;
	double	time_echo;
	double	field_of_view_h;
	double	field_of_view_w;
	char	slice_orient[DB_SLICEORLEN];
	double	time_inversion;
	double	flip_angle;
	long	tilt_gantry;
	short	display_flag;
	short	delete_flag;
	short	expo_flag;
	short	expo_factor;
	short	arch_flag;
	short	copy_flag;
	short	mark_flag;
	short	valid_flag;
	long	orig_sorting;
	long	act_sorting;
	char	trigger_type[DB_TRIGTYPLEN];
	short	trigger_delay;
	char	study_type[DB_STUTYPLEN];
	char	contrast_agent[DB_CALEN];
	char	pat_orient[DB_PATORLEN];
	long	comdia_uid;
	long	mas;
	char	ima_mode[DB_IMAMODELEN];
	char	ima_organ[DB_IMAORGANLEN];
	long	ima_number;
	long	scan_number;
	long	ima_memloc;
	long	ima_memlen;
	long	ima_memoff;
	long	ima_head_loc;
	long	ima_head_memlen;
	long	ima_head_memoff;
	char	hostname[DB_HOSTNAMELEN];
	char	fs_index[DB_FS_INDEXLEN];
	char	filename[DB_FILENAMELEN];
	long	ilib_image_id;
	long	gipsynumber;
	long	gipsyaddress;
	char	data_set_subtype1[DB_DSSUBTYPLEN];
	char	data_set_subtype2[DB_DSSUBTYPLEN];
	long	table_height;
	long	table_location;
	char	modality[DB_MODALLEN];
	long	image_sign;
	long	dummy1;
	long	dummy2;
	long	dummy3;
	long	dummy4;
	long	dummy5;
	float	row_vectorX;
	float	row_vectorY;
	float	row_vectorZ;
	float	col_vectorX;
	float	col_vectorY;
	float	col_vectorZ;
	float	pos_vectorX;
	float	pos_vectorY;
	float	pos_vectorZ;
	long	eval_mask;
	long	last_eval;
	long	group_no;
	long	sequence_type;
	long	calc_order;
	char	last_move_date[DB_DATELEN];
	float	voi_posX;
	float	voi_posY;
	float	voi_posZ;
	float	voi_sizeX;
	float	voi_sizeY;
	float	voi_sizeZ;
	short	matrix_col;
	short	matrix_row;
};

  struct imainfo_int {
    long image_key_id;
    short image_type;
    long nextima_uid;
    long previma_uid;
    char study_border_flag[3];
    char center_slice_flag[2];
    char image_date[26];
    char measure_date[26];
    long pat_uid;
    long study_uid;
    short study_number;
    short cmbarr_no;
    float slice_position;
    float slice_thickness;
    char coil_type[10];
    float time_rep;
    float time_echo;
    float field_of_view_h;
    float field_of_view_w;
    char slice_orient[4];
    float time_inversion;
    float flip_angle;
    short delete_flag;
    short expo_flag;
    short expo_factor;
    short arch_flag;
    short copy_flag;
    short mark_flag;
    short valid_flag;
    long orig_sorting;
    long act_sorting;
    char trigger_type[4];
    short trigger_delay;
    char study_type[4];
    char contrast_agent[2];
    char pat_orient[8];
    long comdia_uid;
    char ima_mode[9];
    short ima_number;
    long ima_memlen;
    long ima_memoff;
    long ima_head_memlen;
    long ima_head_memoff;
    short hostname;
    short fs_index;
    char data_set_subtype1[6];
    char data_set_subtype2[6];
    long table_location;
    char modality[4];
    short image_sign;
    short dummy3;
    short dummy5;
    float row_vectorX;
    float row_vectorY;
    float row_vectorZ;
    float col_vectorX;
    float col_vectorY;
    float col_vectorZ;
    float pos_vectorX;
    float pos_vectorY;
    float pos_vectorZ;
    long eval_mask;
    long last_eval;
    short group_no;
    short sequence_type;
    long calc_order;
    char last_move_date[26];
    float voi_posX;
    float voi_posY;
    float voi_posZ;
    float voi_sizeX;
    float voi_sizeY;
    float voi_sizeZ;
    short matrix_col;
    short matrix_row;
  };

#define DB_IMAGE_INCL 1
#endif

#ifndef DB_NEWIMA_INCL
struct newima {
	struct newima *next;
 	struct imainfo image;
 };
#define DB_NEWIMA_INCL 1
#endif

#ifndef DB_IMALIS_INCL
struct imalis {
  struct imalis  *follower;
  long            pat_id;
  long		  stu_id;
  long		  ima_id;
  long	         success;	/*  success =  ERROR MESSAGE
  				 *  see dbmsg.h			 */
};


#define DB_IMALIS_INCL 1
#endif
@
