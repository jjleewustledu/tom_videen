head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	99.12.17.17.36.39;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	96.10.08.17.58.33;	author tom;	state Exp;
branches;
next	;


desc
@@


1.2
log
@include is local
@
text
@/*[ Compilation unit ********************************************************\
*
* Name        : patinfo.h
* Author      : Wittenberg (aw); Siemens AG Med MRE2; (09131)/84-6821
* Language    : C
* Description : struct 	comdiainfo
*		struct 	newcomdia
*		struct	patinfo
*		struct	newpat
*		struct	patprotinfo
*		
* This include file gives the structure definitions for the 
* users of the DB library interface function users, to      
* access the patient table and comdia (comments, diagnosis) 
* data.                                                     
* 
* Origin	: 1990-May-30   F.Schimmel   
* Redesign	: 1993-Mar-05	A.Wittenberg                 
*
\****************************************************************************/

/*] END: */

#ifndef DB_DEFINES
#include "db_defines.h"
#endif

#ifndef  DB_COMDIA_INCL
struct comdiainfo  {
	long	comdia_uid;
	long	pat_uid;
	char	comment1[DB_COMMENTLEN];
	char	comment2[DB_COMMENTLEN];
	char	diagnosis[DB_DIAGLEN];
} ;
#define DB_COMDIA_INCL	1
#endif

#ifndef  DB_NEWCOMDIA_INCL
struct newcomdia {
	struct  newcomdia *next;
	struct	comdiainfo comdia;
};
#define DB_NEWCOMDIA_INCL 1
#endif

#ifndef  DB_PATIENT_INCL
/*
struct patinfo {
	long	pat_uid;
	long	pat_next_uid;
	long	pat_prev_uid;
	char	pat_name[DB_PATNAMELEN];
	char	pat_id[DB_PATIDLEN];
	char	pat_birth[DB_PATBIRTHLEN];
	char	pat_sex[DB_PATSEXLEN];
	char	pat_age[DB_PATAGELEN];
	double	pat_weight;
	double	pat_height;
	char	pat_maiden[DB_PATNAMELEN];
	long	pat_sum_mas;
	char	pat_register[DB_DATELEN];
	long	pat_act_study;
	short	pat_sum_ima;
	short	pat_max_ima;
	short	pat_sum_study;
	short	pat_max_study;
	short	pat_max_scan;
	short	pat_sum_raw;
	short	pat_valid;
	short	pat_delete;
	short	pat_arch;
	short	pat_expo;
	short	pat_net;
	short	pat_pos1;
	short	pat_pos2;
	short	pat_sort;
	long	pat_sorting;
	short	pat_view;
	long	comdia_uid;
	char	pat_physician[DB_PATPHYSLEN];
	long	pat_first_ima;
	long	pat_center_ima;
	long	dummy1;
	long	dummy2;
	long	dummy3;
	long	dummy4;
	long	dummy5;
	short	pat_mark;
	short	MM1_flag;
	short	MM2_flag;
	short	MM3_flag;
};
*/

  struct patinfo {
    long pat_uid;
    long pat_next_uid;
    long pat_prev_uid;
    char pat_name[27];
    char pat_id[27];
    char pat_birth[15];
    char pat_sex[3];
    char pat_age[5];
    double pat_weight;
    double pat_height;
    char pat_maiden[27];
    long pat_sum_mas;
    char pat_register[26];
    long pat_act_study;
    short pat_sum_ima;
    short pat_max_ima;
    short pat_sum_study;
    short pat_max_study;
    short pat_max_scan;
    short pat_sum_raw;
    short pat_valid;
    short pat_delete;
    short pat_arch;
    short pat_expo;
    short pat_net;
    short pat_pos1;
    short pat_pos2;
    short pat_sort;
    long pat_sorting;
    short pat_view;
    long comdia_uid;
    char pat_physician[27];
    long pat_first_ima;
    long pat_center_ima;
    long dummy1;
    long dummy2;
    long dummy3;
    long dummy4;
    long dummy5;
    short pat_mark;
    short MM1_flag;
    short MM2_flag;
    short MM3_flag;
  };

#define  DB_PATIENT_INCL 1
#endif

#ifndef DB_NEWPAT_INCL
struct newpat {
	struct  newpat *next;
	struct	patinfo patient;
	struct	comdiainfo comdia;
};
#define  DB_NEWPAT_INCL  1
#endif

#ifndef DB_PATPROT_INCL
struct patprotinfo {
	long	pat_uid;
	char	hostname[DB_HOSTNAMELEN];
	long	appl_code;
	char	application[DB_APPLNAMELEN];
	long	prot_counter;
	long	lockmode;
};

#define  DB_PATPROT_INCL  1
#endif
@


1.1
log
@Initial revision
@
text
@a3 1
*
a4 1
*
a5 1
*
d25 1
a25 1
#include <db_defines.h>
@
