head	2.5;
access;
symbols;
locks; strict;
comment	@c @;


2.5
date	2004.02.16.19.39.57;	author tom;	state Exp;
branches;
next	2.0;

2.0
date	96.10.23.21.26.41;	author tom;	state Exp;
branches;
next	1.6;

1.6
date	94.09.30.15.24.05;	author ty7777;	state Exp;
branches;
next	1.5;

1.5
date	94.09.21.19.26.38;	author ty7777;	state Exp;
branches;
next	1.4;

1.4
date	94.09.21.18.48.02;	author ty7777;	state Exp;
branches;
next	1.3;

1.3
date	94.09.21.18.45.50;	author ty7777;	state Exp;
branches;
next	1.2;

1.2
date	94.09.14.18.35.20;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	94.01.28.22.36.09;	author ty7777;	state Exp;
branches;
next	;


desc
@Initial checking in, working version.
@


2.5
log
@Feb 2004
@
text
@C$Log: l1xget.f,v $
c Revision 2.0  1996/10/23  21:26:41  tom
c Solaris
c
c Revision 1.6  1994/09/30  15:24:05  ty7777
c Read xscale.
c
c Revision 1.5  1994/09/21  19:26:38  ty7777
c Added processing for reading xray 3.1 sxr files.
c
c Revision 1.4  1994/09/21  18:48:02  ty7777
c Added comments.
c
c Revision 1.3  1994/09/21  18:45:50  ty7777
c Updated for reading xray 3.2 files.
c
c Revision 1.2  1994/09/14  18:35:20  ty7777
c Updated to read sxr files generated by xray.
c
c Revision 1.1  1994/01/28  22:36:09  ty7777
c Initial revision
c
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  Subroutine:   L1XGET.FTN
C
C  Author:       Tom O. Videen
C  Date:         13-May-87
C  Written For:  LOCATES.FTN
C
C  Intent:
C     This subroutine reads SXR data from a disk file.
C     Reads file types: 1, 2, 3, 12, 13, 14, 20, 21, and 22.
C
C  History:
C     Revised Version of XDATA.FTN  by Joel Perlmutter
C     Modified 25-Feb-88 by TOV to allow reading types 13 & 14 files.
C     Modified by Tom Yang on 28-Jan-94 to port to the UNIX platform.
C     Modified by Tom Yang on 14-Sep-94 to read sxr files generated 
C       by xray.
C     Modified by Tom Yang on 21-Sep-94 to read sxr files generated 
C       by xray 3.2.
C     Modified by Tom Yang on 30-Sep-94 to read the xscale factor.
C
C  Common Blocks from LOCATES.INC:
C     **LUINFO   - logical units (also /USRIO/)   (read only)
C     **PETDATA   - tomograph parameters;         (write)
C     **SXRDATA   - skull xray parameters         (write)
C
C  Uses:
C     L1FILE
C
C  TERMINAL.LIB
C     YESNO
C
C  Called by:  L1XDATA
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC*
C
      SUBROUTINE L1XGET(ERROR)
C
      INCLUDE 'locates.inc'
C
      INTEGER*4    FTYPE, N, L
      REAL         DEGX, DEGY, DEGZ
      CHARACTER*1  BELL
      CHARACTER*3  EXT
      CHARACTER*256 FNAME, BLANK
      CHARACTER*80 Q
      CHARACTER*120 STR
      LOGICAL*1    ERROR, NEW, ANS
      CHARACTER*256 RCSHEADER
C
      RCSHEADER = '$Id: l1xget.f,v 2.0 1996/10/23 21:26:41 tom Exp tom $'
C
      BELL = CHAR(7)
      BLANK = ' '
      EXT = 'sxr'
      NEW = .FALSE.
      ERROR = .TRUE.
C
C  Get the file name where the old parameters are stored
C
100   FNAME = BLANK
      CALL L1FILE (FNAME, EXT, NEW)
      IF (FNAME .EQ. BLANK) RETURN
C
C  Read file type information, atlas and header
C  (Types 1-3 and 12-14 are supported)
C
      READ (DISK, *) FTYPE
      IF (FTYPE .NE. 1 .AND. FTYPE .NE. 2 .AND. FTYPE .NE. 3 
     2    .AND. FTYPE .NE. 12 .AND. FTYPE .NE. 13 .AND. FTYPE .NE. 14
     3    .AND. FTYPE .NE. 20 .AND. FTYPE .NE. 21 .AND. FTYPE .NE. 22) THEN
        WRITE (USEROUT, *) '*** ERROR:  File Type ', FTYPE, ' is ',
     2     'NOT compatible ***', BELL
        CLOSE (DISK)
        GO TO 100
      END IF
C
C  Read atlas name and header
C
8100  FORMAT (120A)
8200  FORMAT (5A)
      READ (DISK, 8100) STR
      L = INANYR (STR, ' ')
      WRITE (USEROUT, *) STR (1:L)
      Q = 'Use this file'
      ANS = .TRUE.
      CALL YESNO (Q, ANS)
      IF (.NOT. ANS) THEN
        CLOSE (DISK)
        GO TO 100
      END IF
C
C  Read skull xray information
C
      READ (DISK, 8200) SCAN
      IF (FTYPE .GT. 2 .AND. FTYPE .LE. 14) THEN
        READ (DISK, *) PIX, MF, NSLICES, SLCSIZE, REFSLICE, ZATLDIM, APATLDIM
      ELSE IF (FTYPE .GE. 20 .AND. FTYPE .LE. 21) THEN
        READ (DISK, *) PIX, MF, NSLICES, SLCSIZE, REFSLICE, ZATLDIM, APATLDIM, 
     2    FILMPOS, SCANPOS, OFFSET
      ELSE IF (FTYPE .GE. 22) THEN
        READ (DISK, *) PIX, MF, NSLICES, SLCSIZE, REFSLICE, ZATLDIM, APATLDIM, 
     2    FILMPOS, SCANPOS, OFFSET, PEAKSLICE, XSCALE
      ELSE
        PIX = 0.27
        MF  = 0.9302
        NSLICES  = 7
        SLCSIZE  = 1.44
        REFSLICE = 3
        ZATLDIM  = 7.0
        APATLDIM = 16.3
      END IF
      IF (FTYPE .GE. 12) THEN
        READ (DISK, *, END = 400) APXRAY, DEGX, ZXRAY, DZ, DAP, APCTR, EARSEP,
     2    EARDAP, EARDZ, DEGY, DEGZ
      ELSE
        READ (DISK, *, END = 400) APXRAY, DEGX, ZXRAY, DZ, DAP, APCTR
        EARSEP = 0.0
        EARDAP = 0.0
        EARDZ  = 0.0
        DEGY   = 0.0
        DEGZ   = 0.0
      END IF
      ANGX = DEGX * 3.1416 / 180.0
      ANGY = DEGY * 3.1416 / 180.0
      ANGZ = DEGZ * 3.1416 / 180.0
      IF (FTYPE .LE. 14) THEN
        DO 300 N = 1, NSLICES
          READ (DISK, *, END = 400) RLPETDIM (N), RLCTR (N)
300     CONTINUE
      ELSE
        DO 310 N = 1, NSLICES
          READ (DISK, *, END = 400) RLPETDIM (N), RLCTR (N), VERTPETDIM (N), RLSLICEDIM (N)
310     CONTINUE
      ENDIF
C
C  Adjust values for old SXR files (which used 50.5,50.5 as the center)
C  (Type 12, 13, and 14 SXR files use 64.5,64.5 as the center)
C
      IF (FTYPE.LT.12) THEN
        APCTR = APCTR + 14.0
        DO 350 N=1,NSLICES
          RLCTR(N) = RLCTR(N) + 14.0
350     CONTINUE
      END IF
C
C  Read Errors for file types 1, 2, 3, and 12
C
      IF (FTYPE.GT.12) GO TO 500
      READ(DISK,*,ERR=500,END=500)
      WRITE(USEROUT,*) '*** ERROR:  SXR file has too many PET slices'  ,
     2   BELL
      CLOSE(DISK)
      ERROR = .TRUE.
      GO TO 100
C
400   WRITE(USEROUT,*) '*** ERROR:  SXR file too few PET slices',BELL
      WRITE(USEROUT,*) '*** There should be ',NSLICES,' slices'
      CLOSE(DISK)
      ERROR = .TRUE.
      GO TO 100
C
C  Successful read
C
500   WRITE(USEROUT,*)
      WRITE(USEROUT,*) 'SXR data read from ',FNAME
      CLOSE(DISK)
      ERROR = .FALSE.
C
      RETURN
      END
@


2.0
log
@Solaris
@
text
@d2 3
d74 1
a74 1
      RCSHEADER = '$Id: l1xget.f,v 1.6 1994/09/30 15:24:05 ty7777 Exp tom $'
@


1.6
log
@Read xscale.
@
text
@a0 2

C$Id: l1xget.f,v 1.5 1994/09/21 19:26:38 ty7777 Exp ty7777 $
d2 3
a19 1
C
a58 2
C
C
d65 1
a65 1
      CHARACTER*20 FNAME, BLANK
d71 1
a71 1
      RCSHEADER = '$Id: l1xget.f,v 1.5 1994/09/21 19:26:38 ty7777 Exp ty7777 $'
@


1.5
log
@Added processing for reading xray 3.1 sxr files.
@
text
@d2 1
a2 1
C$Id: l1xget.f,v 1.4 1994/09/21 18:48:02 ty7777 Exp ty7777 $
d4 3
d40 1
d73 1
a73 1
      RCSHEADER = '$Id: l1xget.f,v 1.4 1994/09/21 18:48:02 ty7777 Exp ty7777 $'
d125 1
a125 1
     2    FILMPOS, SCANPOS, OFFSET, PEAKSLICE
@


1.4
log
@Added comments.
@
text
@d2 1
a2 1
C$Id: l1xget.f,v 1.3 1994/09/21 18:45:50 ty7777 Exp ty7777 $
d4 3
d69 1
a69 1
      RCSHEADER = '$Id: l1xget.f,v 1.3 1994/09/21 18:45:50 ty7777 Exp ty7777 $'
d146 2
a147 2
      DO 300 N = 1, NSLICES
        READ (DISK, *, END = 400) RLPETDIM (N), RLCTR (N)
d150 2
a151 1
        READ (DISK, *, END = 400) RLPETDIM (N), RLCTR (N), VERTPETDIM (N), RLSLICEDIM (N)
@


1.3
log
@Updated for reading xray 3.2 files.
@
text
@d2 1
a2 1
C$Id: l1xget.f,v 1.2 1994/09/14 18:35:20 ty7777 Exp ty7777 $
d4 3
d32 2
d66 1
a66 1
      RCSHEADER = '$Id: l1xget.f,v 1.2 1994/09/14 18:35:20 ty7777 Exp ty7777 $'
@


1.2
log
@Updated to read sxr files generated by xray.
@
text
@d2 1
a2 1
C$Id: l1xget.f,v 1.1 1994/01/28 22:36:09 ty7777 Exp ty7777 $
d4 3
d21 1
a21 1
C     Reads file types: 1, 2, 3, 12, 13, 14, and 21.
d61 1
a61 1
      RCSHEADER = '$Id: l1xget.f,v 1.1 1994/01/28 22:36:09 ty7777 Exp ty7777 $'
d81 1
a81 1
     3    .AND. FTYPE .NE. 21) THEN
d108 1
a108 1
      ELSE IF (FTYPE .GE. 21) THEN
d111 3
@


1.1
log
@Initial revision
@
text
@d2 5
a6 2
C$Id$
C$Log$
d18 1
a18 1
C     Reads file types: 1, 2, 3, 12, 13, and 14.
d24 2
d48 2
a49 2
      INTEGER*4    FTYPE,N
      REAL         DEGX,DEGY,DEGZ
d52 4
a55 3
      CHARACTER*20 FNAME,BLANK
      CHARACTER*80 Q,STR
      LOGICAL*1    ERROR,NEW,ANS
d58 1
a58 1
      RCSHEADER = '$Id$'
d69 2
a70 2
      CALL L1FILE(FNAME,EXT,NEW)
      IF (FNAME.EQ.BLANK) RETURN
d75 7
a81 6
      READ (DISK,*) FTYPE
      IF (FTYPE.NE.1 .AND. FTYPE.NE.2 .AND. FTYPE.NE.3 .AND.
     2    FTYPE.NE.12 .AND. FTYPE.NE.13 .AND. FTYPE.NE.14) THEN
        WRITE(USEROUT,*)'*** ERROR:  File Type ',FTYPE,' is ',
     2     'NOT compatible ***',BELL
        CLOSE(DISK)
d87 5
a91 4
8100  FORMAT(80A)
8200  FORMAT(5A)
      READ (DISK,8100) STR
      WRITE(USEROUT,*) STR
d94 3
a96 3
      CALL YESNO(Q,ANS)
      IF (.NOT.ANS) THEN
        CLOSE(DISK)
d102 6
a107 3
      READ(DISK,8200) SCAN
      IF (FTYPE.GT.2) THEN
        READ(DISK,*) PIX,MF,NSLICES,SLCSIZE,REFSLICE,ZATLDIM,APATLDIM
d117 3
a119 3
      IF (FTYPE.GE.12) THEN
        READ(DISK,*,END=400) APXRAY,DEGX,ZXRAY,DZ,DAP,APCTR,EARSEP,
     2    EARDAP,EARDZ,DEGY,DEGZ
d121 1
a121 1
        READ(DISK,*,END=400) APXRAY,DEGX,ZXRAY,DZ,DAP,APCTR
d128 11
a138 6
      ANGX = DEGX*3.1416/180.0
      ANGY = DEGY*3.1416/180.0
      ANGZ = DEGZ*3.1416/180.0
      DO 300 N=1,NSLICES
        READ(DISK,*,END=400) RLPETDIM(N),RLCTR(N)
300   CONTINUE
@
