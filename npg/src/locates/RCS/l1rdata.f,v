head	2.5;
access;
symbols;
locks; strict;
comment	@c @;


2.5
date	2004.02.16.19.39.57;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	95.06.30.17.03.25;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	94.01.28.22.31.41;	author ty7777;	state Exp;
branches;
next	;


desc
@Initial checking in, working version.
@


2.5
log
@Feb 2004
@
text
@
C$Id: l1rdata.f,v 1.2 1995/06/30 17:03:25 tom Exp tom $
C$Log: l1rdata.f,v $
c Revision 1.2  1995/06/30  17:03:25  tom
c *** empty log message ***
c
c Revision 1.1  1994/01/28  22:31:41  ty7777
c Initial revision
c
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  Subroutine:   L1RDATA.FTN
C
C  Author:       Tom O. Videen
C  Date:         23-Apr-87
C  Written For:  LOCATES.FTN
C
C  Modified by Tom Yang on 28-Jan-94 to port to the UNIX platform.
C
C  Intent:
C     This subroutine transfer region data from disk files to
C     the program or vice-versa.
C
C  Common Blocks from LOCATES.INC:
C     **LUINFO   - logical units (also /USRIO/)   (read only)
C
C  Uses Subroutine:
C     L1RGET
C     L1RSAVE
C
C  TERMINAL.LIB
C     GETCHAR
C     TCONTROL
C
C  Called by:  LOCATE
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC*
C
      SUBROUTINE L1RDATA
C
      INCLUDE 'locates.inc'
C
      CHARACTER*1  CH,BELL
      CHARACTER*80 Q,CHARSET
      LOGICAL*1    ERROR
      CHARACTER*256 RCSHEADER
C
      RCSHEADER = '$Id: l1rdata.f,v 1.2 1995/06/30 17:03:25 tom Exp tom $'
C
      BELL = CHAR(7)
      CHARSET = 'SGEsge'
C
C100   CALL TCONTROL(1,0,0)
C     CALL TCONTROL(2,0,0)
100   WRITE(USEROUT,*)
      WRITE(USEROUT,*) 'REGION Data Transfer'
      WRITE(USEROUT,*) '--------------------'
200   WRITE(USEROUT,*)
      WRITE(USEROUT,*) '   S = SAVE regions in disk file'
      WRITE(USEROUT,*) '   G = GET regions from disk file'
      WRITE(USEROUT,*) '   E = EXIT to main program'
      WRITE(USEROUT,*)
      CH = 'E'
      Q = 'Selection (S,G,E)'
      CALL GETCHAR(Q,CH,CHARSET)
C
      IF (CH.EQ.'S' .OR. CH.EQ.'s') THEN
        CALL L1RSAVE(ERROR)
        IF (ERROR) WRITE(USEROUT,*) '*** ERROR Saving File',BELL
        GO TO 200
      ELSE IF (CH.EQ.'G' .OR. CH.EQ.'g') THEN
        CALL L1RGET(ERROR)
        IF (ERROR) WRITE(USEROUT,*) '*** ERROR Reading File',BELL
        GO TO 200
      ELSE IF (CH.EQ.'E' .OR. CH.EQ.'e') THEN
        RETURN
      END IF
      GO TO 100
C
      END
@


1.2
log
@*** empty log message ***
@
text
@d2 1
a2 1
C$Id: l1rdata.f,v 1.1 1994/01/28 22:31:41 ty7777 Exp tom $
d4 3
d49 1
a49 1
      RCSHEADER = '$Id: l1rdata.f,v 1.1 1994/01/28 22:31:41 ty7777 Exp tom $'
@


1.1
log
@Initial revision
@
text
@d2 5
a6 2
C$Id$
C$Log$
d46 1
a46 1
      RCSHEADER = '$Id$'
a77 1
      RETURN
@
