head	2.0;
access;
symbols;
locks; strict;
comment	@ * @;


2.0
date	2004.02.20.16.23.04;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	2003.04.03.21.46.38;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	97.03.19.22.35.09;	author tom;	state Exp;
branches;
next	;


desc
@@


2.0
log
@Feb 2004
@
text
@/* $Log: getorigin.c,v $
 * Revision 1.2  2003/04/03  21:46:38  tom
 * *** empty log message ***
 *
 * Revision 1.1  1997/03/19  22:35:09  tom
 * Initial revision
 * */
/*	===============================================================================
 *	Module:			getorigin.c
 *	Date:			Mar 1997
 *	Author:			Tom Videen
 *	Description:	Get origin from the parameter file.
 *	===============================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/voistat/RCS/getorigin.c,v 1.2 2003/04/03 21:46:38 tom Exp tom $";
#endif

#include <stdio.h>
#include <stdlib.h>				 /* atoi */
#include <string.h>
#include <imgutil.h>
#include <myvalues.h>			 /* ERROR */

int             getorigin (prmfile, zorigin)
	char           *prmfile;
	int            *zorigin;
{
	FILE           *fp;
	char            line[MAXLINE];
	char            label[MAXLINE];
	char            parameter[MAXLINE];
	char            atlas_name[MAXLINE];

	*zorigin = 0;
	*atlas_name = '\0';
	(void) strcpy (atlas_name, "t88");

	fp = fopen (prmfile, "r");
	if (fp == (FILE *) NULL) {
		fprintf (stderr, "Error opening parameter file %s\n", prmfile);
		return (ERROR);
	}
/*
 *	Read each line of parameter file.
 *	If the line has 2 strings, compare the label with the list of eligible keys:
 *	and if the key is found, set the appropriate parameter.
 */

	while (fgets (line, MAXLINE, fp) != NULL) {
		if (sscanf (line, "%s %s", label, parameter) == 2) {

/*
 *	Get zorigin
 */
			if (strcmp (label, "z0:") == 0) {
				if (stringtype (parameter) == TYPE_INTEGER)
					*zorigin = atoi (parameter);
				else {
					fprintf (stderr, "Error reading z0 from %s\n", prmfile);
					return (ERROR);
				}
/*
 *	Get atlas_name
 */
			} else if (strcmp (label, "atlas:") == 0) {
				if (strcmp (parameter, "none") == 0 ||
				    strcmp (parameter, "t88") == 0 ||
				    strcmp (parameter, "dh68") == 0)
					(void) strcpy (atlas_name, parameter);
				else {
					fprintf (stderr, "Error reading atlas_name from %s\n", prmfile);
					return (ERROR);
				}
			}
		}
	}

	if (*zorigin == 0) {
		if (strcmp (atlas_name, "t88") == 0)
			*zorigin = 31;
		else if (strcmp (atlas_name, "dh68") == 0)
            *zorigin = 43;
	}
	fprintf (stdout, "Z-origin = %d\n", *zorigin);
	return (OK);
}
@


1.2
log
@*** empty log message ***
@
text
@d2 3
d10 1
a10 1
 *	Date:			Mar-97
d15 5
a25 4
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/voistat/RCS/getorigin.c,v 1.1 1997/03/19 22:35:09 tom Exp tom $";
#endif

@


1.1
log
@Initial revision
@
text
@d1 4
a4 1
/* $Log$ */
d19 1
a19 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/t88trans/RCS/getorigin.c,v 2.0 1996/08/14 20:13:21 tom Exp $";
d34 1
a34 1
	strcpy (atlas_name, "t88");
d38 1
a38 1
		printf ("Error opening parameter file %s\n", prmfile);
d57 1
a57 1
					printf ("Error reading z0 from %s\n", prmfile);
d67 1
a67 1
					strcpy (atlas_name, parameter);
d69 1
a69 1
					printf ("Error reading atlas_name from %s\n", prmfile);
d82 1
a82 1
	printf ("Z-origin = %d\n", *zorigin);
@
