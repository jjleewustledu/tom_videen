head	2.22;
access;
symbols;
locks; strict;
comment	@# @;


2.22
date	2006.05.09.14.11.54;	author tom;	state Exp;
branches;
next	2.21;

2.21
date	2006.05.03.19.10.16;	author tom;	state Exp;
branches;
next	2.20;

2.20
date	2004.02.16.20.48.50;	author tom;	state Exp;
branches;
next	2.5;

2.5
date	2004.02.16.20.48.07;	author tom;	state Exp;
branches;
next	2.4;

2.4
date	2003.12.12.18.02.54;	author tom;	state Exp;
branches;
next	2.3;

2.3
date	96.10.30.21.02.45;	author tom;	state Exp;
branches;
next	2.2;

2.2
date	96.10.30.20.56.32;	author tom;	state Exp;
branches;
next	2.1;

2.1
date	96.09.26.11.47.36;	author tom;	state Exp;
branches;
next	2.0;

2.0
date	96.05.23.20.07.58;	author tom;	state Exp;
branches;
next	;


desc
@tov version
@


2.22
log
@*** empty log message ***
@
text
@#!/bin/csh
#	Module:	maskimg
#	Author:	Tom Videen
#	Date:	May 2006
#	Use:	Mask an image using a second image

if ($#argv != 4 && $#argv != 5) then
	echo "Usage:  maskimg input mask output threshold [setvalue]"
	echo " e.g.:  maskimg in.v mask.v out.v 1234"
	echo "    or  maskimg in.v mask.v out.v 1234 100"
	exit 1
endif

if (! $?NPG) setenv NPG /usr/local/npg

set in = $1
set mask = $2
set out = $3
set threshold = $4
if ($#argv == 5) then
	set setval = $5
	set flag = 1
else
	set setval = 0
	set flag = 0
endif

if (! -e $in) then
	echo "ERROR: cannot find $in"
	exit 1
else if (! -e $mask) then
	echo "ERROR: cannot find $mask"
	exit 1
endif

${NPG}/bin/maskimg.bin ${in} ${mask} ${out} ${threshold} ${setval} ${flag}
@


2.21
log
@rebuild for fractional thresholds
@
text
@a33 3
else if (-e $out) then
	echo "ERROR: ${out} already exists"
	exit 1
@


2.20
log
@Feb 2004
@
text
@d4 1
a4 1
#	Date:	Oct 1996
d31 1
a31 2
endif
if (! -e $mask) then
d34 2
a35 3
endif
if (-e $out) then
	echo "ERROR: ${out} already exists."
@


2.5
log
@Feb 2004
@
text
@@


2.4
log
@NPG
@
text
@@


2.3
log
@add setval
@
text
@d4 1
a4 1
#	Date:	Oct-96
a6 1
set BINPATH = /usr/local/npg/bin
d8 4
a11 4
	echo " usage:  maskimg input mask output threshold [setvalue]"
	echo "  e.g.:  maskimg in.v mask.v out.v 1234"
	echo "     or  maskimg in.v mask.v out.v 1234 100"
	exit
d14 2
d28 3
a30 3
if (!(-e ${in})) then
	echo "ERROR: input image ${in} does not exist."
	exit
d32 3
a34 3
if (!(-e ${mask})) then
	echo "ERROR: mask image ${mask} does not exist."
	exit
d36 3
a38 3
if (-e ${out}) then
	echo "ERROR: output image ${out} already exists."
	exit
d41 1
a41 1
${BINPATH}/maskimg.bin ${in} ${mask} ${out} ${threshold} ${setval} ${flag}
@


2.2
log
@add setval
@
text
@d8 1
a8 1
if ($#argv != 4 && $argc != 5) then
d19 7
a25 1
set setval = $5
a38 5
if (${setval} != "") then
    set flag = 1
else
	set flag = 0
endif
@


2.1
log
@*** empty log message ***
@
text
@d4 1
a4 1
#	Date:	May-96
d8 4
a11 3
if ($#argv != 4) then
	echo " usage:  maskimg input mask output threshold"
	echo "  e.g.:  maskimg in.v mask.v out.v 1"
d19 1
d33 5
d39 1
a39 1
${BINPATH}/maskimg.bin ${in} ${mask} ${out} ${threshold}
@


2.0
log
@*** empty log message ***
@
text
@d7 1
a7 1
set BINPATH = /home/petsun19/tom/src/maskimg
@
