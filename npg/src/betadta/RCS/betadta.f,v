head	1.8;
access;
symbols;
locks; strict;
comment	@c @;


1.8
date	99.12.10.19.54.32;	author tom;	state Exp;
branches;
next	1.7;

1.7
date	95.05.23.15.03.28;	author tom;	state Exp;
branches;
next	1.6;

1.6
date	94.04.20.22.26.57;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	94.04.20.17.33.50;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	93.12.02.22.30.02;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	93.12.02.22.22.34;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	93.05.11.15.26.21;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	92.07.22.22.32.01;	author ty7777;	state Exp;
branches;
next	;


desc
@
betadta Release Version 1.1.
@


1.8
log
@*** empty log message ***
@
text
@C$Header: /home/npggw/tom/src/betadta/RCS/betadta.f,v 1.7 1995/05/23 15:03:28 tom Exp tom $
C$Log: betadta.f,v $
c Revision 1.7  1995/05/23  15:03:28  tom
c changed prompt for hematocrit
c
c Revision 1.6  1994/04/20  22:26:57  tom
c added message explaining manual shift
c
c Revision 1.5  1994/04/20  17:33:50  tom
c fixed write format error
c
c Revision 1.4  1993/12/02  22:30:02  tom
c Fix rcsheader
c
c Revision 1.3  1993/12/02  22:22:34  tom
c Added libpe utilities.
c Allow all scan types (co, oo, etc.)
c Add extra points of oxygen
c Add RCSHEADER
c
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  Program:      BETADTA.FTN
C
C  Author:       Avi Snyder
C  Date:         05-Sep-90
C  Written For:  Automated blood sampler data files
C
C  History:
C     Modified 20-Dec-90 by TOV to change all ACCEPT statements
C        to READ (IN).
C     Modified 09-Apr-91 AZS
C        Time of first bin defined as 0 in kernel calculation.
C     Modified 10-Apr-91 AZS
C        Calculates blood-bankpair delay by two methods and
C        optionally shifts blood curve into alignment.
C     Modified 20-May-91 AZS to extend measured data backwards
C        20 seconds in preparation for deconvolution.
C     Modified 08-Jul-91 AZS to call GETTKE for decovolution
C         parameters and implement extraction fraction shifting.
C     Modified 12-Feb-92 by Tom Yang to port to Sun Unix.
C	  Changed the logical units numbers to 5 and 6. Changed
C	  all character format. Modified the open statements.
C	  Changed the data format for hexidecimal numbers.
C     Modified 16-Mar-92 AZS to properly read non-1 sec bins.
C			Modified 02-Dec-93 by TOV:
C				1) added libpe utilities (getint, getreal, gtstring)
C				2) allow co, oo, etc. curves
C
C  Intent:
C     Version of CRVDCNV for generating .DTA files
C
C  Logical Units:
C     5 = User input (IN)
C     6 = User output and prompts
C     8 = Input .CRV file
C
C  Uses Subroutines contained in:
C     DECONV
C     FFTPE
C     GETTKE
C     POLFIT
C
C  Internal Subroutines:
C     CRVCOPY
C     EXPAND
C     CRVCOR
C     CRVMIN
C     MAXCRV
C     CRVDIF
C     CRVSMO
C     CRVPEAK
C     CRVTOFF
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      PROGRAM BETADTA
C
      INTEGER*4		 IN
      INTEGER*4		 SCANTYPE  ! type  of scan (1-6)
      INTEGER*4    ISOTOPE
      INTEGER*4    USERIN    ! log unit assigned for terminal input
      INTEGER*4    USEROUT   ! log unit for terminal output!
			INTEGER*4		 XBIN			 ! extra time bins for hand drawn samples
C
      CHARACTER*20	STR
      CHARACTER*24	FILSPC, ROOSPC
      CHARACTER*80	SCANID
			CHARACTER*80	Q,STRING
      CHARACTER*15	NUCLIDE(6)
      CHARACTER*34	RUNTYPE(6)
C
      LOGICAL*4		LBANK/.TRUE./
      LOGICAL*4		LDECOR/.TRUE./
      LOGICAL*4		LEXIST
			LOGICAL*1		ANSWER
C
      PARAMETER (NBINMAX = 4096)
C
      REAL*4		B(NBINMAX), Y(NBINMAX)
      REAL*4		H(NBINMAX), G(NBINMAX), X(NBINMAX)
      REAL*4		S(NBINMAX), D(NBINMAX)
      REAL*4		A(2 * NBINMAX + 4)
      REAL*4		AP(0:2), AA(3,3), AT(50)
      REAL*4    HALFLIFE(6)
			REAL*4		OXYCONT
			REAL*4		HEMATOCRIT
			REAL*4		COUNTS(100)
			REAL*4		TIME(100)
			REAL*4		COUNT1
			REAL*4		TIME1
C
C     A:	SCRATCH ARRAY
C     H:	BLOOD SUCKER IMPULSE RESPONSE FUNCTION
C     G:	RAW BLOOD CURVE
C     B:	RAW BANK PAIR CURVE
C     Y:	DECAY CORRECTED BANK PAIR CURVE
C     X:	DECAY CORRECTED BLOOD CURVE
C     S:	DECAY CORRECTED DECONVOLVED BLOOD CURVE
C     D:	DECAY CORRECTED 10 * (d/dt) BANK PAIR CURVE
C
			CHARACTER*256	RCSHEADER
      COMMON /USRIO/ USERIN,USEROUT

			RCSHEADER = "$Id: betadta.f,v 1.7 1995/05/23 15:03:28 tom Exp tom $"
      DATA	TIMPBIN/1./
      DATA	NBINFIT/3/
      DATA	IN /5/
C
      DATA USERIN, USEROUT /5, 6/
C
      DATA  RUNTYPE(1) /'O-15 Oxygen Metabolism Study  (OO)'/
      DATA  RUNTYPE(2) /'O-15 Water Blood Flow Study   (HO)'/
      DATA  RUNTYPE(3) /'O-15 Blood Volume Study       (CO)'/
      DATA  RUNTYPE(4) /'C-11 Butanol Blood Flow Study (BU)'/
      DATA  RUNTYPE(5) /'F-18 Study                        '/
      DATA  RUNTYPE(6) /'Misc. Study                       '/
C
      DATA  NUCLIDE(1) /'O-15           '/
      DATA  NUCLIDE(2) /'N-13           '/
      DATA  NUCLIDE(3) /'C-11           '/
      DATA  NUCLIDE(4) /'Ga-68          '/
      DATA  NUCLIDE(5) /'F-18           '/
      DATA  NUCLIDE(6) /'NONE (no decay)'/
C
C  Halflives are in seconds with same number of significant figures as
C  given in the following source:
C  Lederer & Shirley, Table of Isotopes, 1978 (7th edition), John Wiley.
C
      DATA  HALFLIFE(1) /122.1/  ! METEVAL compatible
      DATA  HALFLIFE(2) /597.8/
      DATA  HALFLIFE(3) /1223./
      DATA  HALFLIFE(4) /4100./
      DATA  HALFLIFE(5) /6583.2/
      DATA  HALFLIFE(6) /1.0E+9/
C
8000  FORMAT(F7.3)
8100  FORMAT(F)
8200  FORMAT(I1)
8300  FORMAT(A24)
8400  FORMAT(A4)
8500  FORMAT(A20)

		WRITE (USEROUT,*) ">>>  Conversion factors used to run 8-10, ",
     &   "but all bets are off now..."
		WRITE (USEROUT,*) " "
		Q = "Well Counter Conversion Multiplier"
		CALL GETREAL(Q,WELLF,1.,100.)

		Q = "Sampling rate (sec/bin)"
		TIMPBIN = 1.
		CALL GETREAL(Q,TIMPBIN,0.1,100.)

		Q = "Maximum number of bins in a run"
		NBIN = 500
		CALL GETINT(Q,NBIN,1,10000)

      CALL GETTKE (IN, T0, AK1, E, HEMATOCRIT)
C     20 second deconvolution buffer
      NBUF = IFIX (20. / TIMPBIN) + 1   
      NEXPAND = 7
   12 TIMPBINE = TIMPBIN * (.5) ** NEXPAND
      U = AK1 * (FLOAT (NBINMAX) * TIMPBINE - T0)
      IF (U .GT. 0. .AND. E * U ** 2 .GT. 20.) GOTO 15
      NEXPAND = NEXPAND - 1
      GOTO 12
   15 N = IFIX(ALOG(FLOAT(NBINMAX) / FLOAT(NBIN + NBUF)) / ALOG(2.))
      NEXPAND = MIN0(NEXPAND, N)
      TYPE "(' NEXPAND', I3)", NEXPAND
      TIMPBINE = TIMPBIN * (.5) ** NEXPAND
C     KERNEL CALCULATION
      DO 11 I = 1, NBINMAX
      U = AK1 * (FLOAT(I - 1) * TIMPBINE - T0)
      IF (U .LE. 0. .OR. E * U ** 2 .GT. 20.) THEN
      H(I) = 0.
      ELSE
      R = 1. / (1. + U)
      H(I) = AK1 * TIMPBINE * R * EXP(-E * U ** 2) * (2. * E * U + R)
      ENDIF
   11 CONTINUE
      I0 = IFIX(T0 / TIMPBINE)
      IF (H (NBINMAX) .NE. 0) 
     &	TYPE "(' H (HNBINMAX)', E12.6)", H (NBINMAX)
  131 FORMAT(' IMPULSE AREA', F10.4)
      T = 0.
      DO 13 I = 1, NBINMAX
   13 T = T + H(I)
      TYPE 131, T
      DO 14 I = 1, NBINMAX
   14 H(I) = H(I) / T

      TYPE "(' ENTER 0 FOR NO SHIFT')"
      TYPE "(' ENTER 1 TO SHIFT BY CURVE TAKEOFFS')"
      TYPE "(' ENTER 2 TO SHIFT BY UPTAKE MODELING PEAKS')"
      TYPE "(' ENTER 3 TO SHIFT BY USER GIVEN VALUE')"
		Q = "Shift"
		NSHIFT = 1
		CALL GETINT(Q,NSHIFT,0,3)

      EF = .85
      IF (NSHIFT .EQ. 2) THEN
			Q = "Extraction Fraction"
			CALL GETREAL(Q,EF,0.1,1.0)
      ENDIF
      IF(NSHIFT .EQ. 3) TYPE
     &"(' YOU WILL BE ASKED TO ENTER SHIFTS FOR EACH CURVE')"

		Q = "POST DECONVOLUTION NSMOOTH"
		NSMO = 2
		CALL GETINT(Q,NSMO,0,10)
			
16		Q = "Subject ID (i.e., p2000)"
		STRING = " "
		CALL GTSTRING(Q,STRING)
      LR = INANYR(STRING, " ")
		ROOSPC = STRING(1:LR)
      FILSPC = ROOSPC(1:LR)//".dta"
      INQUIRE(FILE = FILSPC, EXIST = LEXIST, ERR = 16)
      IF (LEXIST) THEN
        TYPE "(1X, A20,' ALREADY EXISTS')", FILSPC
        GOTO 16
      ENDIF
      OPEN (1, FILE = FILSPC, STATUS = 'NEW', ERR = 16)
      TYPE "(' OPENING ', A24)", FILSPC
      WRITE (1, 119) ROOSPC (1:10), WELLF, T0, AK1, E, NSMO
  119 FORMAT('@@ @@@@ ', A10,
     &' WELLF=', F6.2, ' T0=', F5.2, ' K1=', 
     &F6.3, ' E= ', F4.3, ' NSMO=', I2)

		Q = "Total Number of Scans"
		NSCAN = 1
		CALL GETINT(Q,NSCAN,1,100)
      WRITE (1, "(I)") NSCAN

C-----------------------------

      DO 39 N = 1, NSCAN
C
C  Get Scan Type
C
8600  FORMAT (4X, I1, ' = ', A)
      DO 100 I = 1, 6
        WRITE (USEROUT, 8600) I, RUNTYPE (I)
100   CONTINUE
      WRITE (USEROUT, *)
      Q = "Scan Type"
      CALL GETINT (Q, SCANTYPE, 1, 6)
C
C  Get ISOTOPE if it is not specified by the scan type
C
      IF (SCANTYPE .GE. 6) THEN
        WRITE (USEROUT, *)
        DO 200 I=1,6
          WRITE (USEROUT, 8600) I, NUCLIDE (I)
200     CONTINUE
        WRITE (USEROUT, *)
        Q = 'Isotope Number'
        CALL GETINT (Q, ISOTOPE, 1, 6)
        WRITE (USEROUT, *) 'Isotope = ', NUCLIDE (ISOTOPE)
      ELSE
        IF (SCANTYPE .EQ. 4) THEN
          ISOTOPE = 3
        ELSE IF (SCANTYPE .EQ. 5) THEN
          ISOTOPE = 5
        ELSE
          ISOTOPE = 1
        ENDIF
      END IF
			THALF = HALFLIFE(ISOTOPE)
      TYPE "(' Halflife set to',F9.2,' seconds')", THALF
      AK0 = ALOG(2.) / THALF

36		Q = "Scan ID (i.e., ho1)"
			SCANID = " "
			CALL GTSTRING(Q,SCANID)
			LEN = INANYR(SCANID," ")
      FILSPC = ROOSPC(1:LR)//SCANID(1:LEN)//".crv"
      OPEN (8, FILE = FILSPC, STATUS = 'OLD', ERR = 38)
      GOTO 37
38		FILSPC = ROOSPC(1:LR)//SCANID(1:LEN)//".CRV"
      OPEN (8, FILE = FILSPC, STATUS = 'OLD', ERR = 138)
      GOTO 37
  138 TYPE "(' OPEN ERROR ', A24)", FILSPC
      GOTO 36
   37 WRITE (1, "(I1, 1X, A)") SCANTYPE, SCANID(1:20)

			IF (SCANTYPE .EQ. 3) THEN
				START = 15.	
				SEC = 300.
				WRITE(USEROUT,*) ">>> By convention, scan start for CO's is ",
     &    "usually 15"
				WRITE(USEROUT,*) " "
			ELSE
				SEC = 40.
			END IF

			Q = "Scan Start Time (sec)"
			CALL GETREAL(Q,START,0.,1000.)

			Q = "Scan Length (sec)"
			CALL GETREAL(Q,SEC,1.,1000.)

      READ (8, 8500) STR
      TYPE 117, STR
  117 FORMAT (1X, A20)
      READ (8,*) NBIN
      TYPE "(' NBIN = ', I6)", NBIN
      IF (2 ** NEXPAND * NBIN .GT. NBINMAX) 
     &  STOP 'NBIN TOO LARGE'
      DO 31 I = 1, NBIN
        IF (LBANK) THEN
          READ (8, *) T, J, K
          M = NINT(T)
        ELSE
          READ (8, *) T, J
          M = NINT(T)
          K = 0
        ENDIF
C        IF (M .NE. I) STOP '.CRV FILE READ ERROR'
        G(I) = FLOAT(J) * WELLF
   31   B(I) = FLOAT(K)
      CLOSE (8)
      CALL CRVMAX (B, NBIN, BANKMAX)
      CALL CRVCOPY (G, NBIN, X)
      DO 41 I = NBIN + 1, NBINMAX
   41 X(I) = 0.
      TYPE "(' EXPANDED NBIN',I6)", NBIN * 2 ** NEXPAND
      NBINE = NBIN
      DO 42 K = 1, NEXPAND
   42 CALL EXPAND (X, NBINE)
      CALL CRVCOR(X,NBINE,TIMPBINE,AK0)
      NBUFE = NBUF * 2 ** NEXPAND
      DO 44 I = 1, NBUFE
   44   X (NBINMAX - I + 1) = X(1)
      CALL DECONV (X, H, S, NBINMAX, A)
      K = NBINE / NBIN
      DO 43 I = 1, NBIN
   43 S(I) = S(I * K)
      DO 47 I = 1, NSMO
   47 CALL CRVSMO (S, NBIN)
      CALL CRVTOFF (S, NBIN, BT)
      CALL CRVCOPY (B, NBIN, Y)
      CALL CRVCOR (Y, NBIN, TIMPBIN, AK0)
      CALL CRVTOFF (Y, NBIN, HT)
      J = NINT (HT + 30. / TIMPBIN)
      CALL CRVCOPY (Y, NBIN, D)
      CALL CRVDIF (D, NBIN, TIMPBIN)
      CALL CRVSMO (D, NBIN)
      CALL CRVSMO (D, NBIN)
      CALL CRVPEAK (D, NBIN, HP)
      DO 45 I = 1, J
   45 D(I) = 10. * D(I)
      DO 46 I = J + 1, NBIN
   46 D(I) = 0.
   49 CONTINUE
      CALL CRVCOPY (S, NBIN, A)
      CALL CRVDIF (A, NBIN, TIMPBIN)
      DO 52 I = 1, NBIN
   52 A(I) = EF * S(I) + (1. - EF) * A(I)
      CALL CRVPEAK (A, NBIN, BP)
      IB = IFIX(BP)
      IH = IFIX(HP)
      DO 51 I = 1, 2 * NBINFIT + 1
      AT(I) = FLOAT (I - NBINFIT - 1)
   51 TYPE "(I3, 3F12.0)", I, AT(I), 
     &A(IB - NBINFIT + I), D(IH - NBINFIT + I)
      CALL POLFIT(AT, A(IB + 1 - NBINFIT), 
     &2 * NBINFIT + 1, AP, AA, 3, CHISQR)
      BPFIT = +.5 + FLOAT(IB) - .5 * AP(1) / AP(2)
      CALL POLFIT (AT, D(IH + 1 - NBINFIT), 
     &2 * NBINFIT + 1, AP, AA, 3, CHISQR)
      HPFIT = +.5 + FLOAT (IH) - .5 * AP(1) / AP(2)
      TYPE "(' DELAY BY CURVE TAKEOFFS   (sec)', F8.2)"
     &, (BT-HT) * TIMPBIN
      TYPE "(' DELAY BY EXTRACTION MODEL (sec)', F8.2)"
     &, (BPFIT - HPFIT) * TIMPBIN
C
      IF (NSHIFT .EQ. 3) THEN
      	WRITE (USEROUT,*) "Negative shifts move the blood curve earlier."
      	WRITE (USEROUT,*) "Hence, if you shifted by the Curve Takeoff, ",
     &    "you should enter ", -BT+HT
				Q = "Shift (sec)"
				T = 0.
				CALL GETREAL(Q,T,-100.,100.)
        SHIFT = T / TIMPBIN
      ENDIF
      IF (NSHIFT .EQ. 1) SHIFT = -BT + HT
      IF (NSHIFT .EQ. 2) SHIFT = -BPFIT + HPFIT
      IF (NSHIFT .NE. 0) THEN
      J = NINT(SHIFT - .5)
      W = SHIFT - FLOAT(J)
      DO 61 I = 1, NBIN
   61 A(I) = 0.
      DO 62 I = 1, NBIN
      IF (I + J .GT. 0 .AND. I + J .LE. NBIN)
     & A(I + J) = A(I + J) + (1. - W) * S(I)
      IF (I + J + 1 .GT. 0 .AND. I + J + 1 .LE. NBIN)
     & A(I + J + 1) = A (I + J + 1) + W * S(I)
   62 CONTINUE
      CALL CRVCOPY (A, NBIN, S)
      ENDIF
      QQ = 0.
      CALL CRVMIN(S, NBIN, QQ)
      CALL CRVMIN(D, NBIN, QQ)
      IF (LDECOR) GOTO 54
      CALL CRVCOR(S, NBIN, TIMPBIN, -AK0)
      CALL CRVCOR(Y, NBIN, TIMPBIN, -AK0)
      CALL CRVCOR(D, NBIN, TIMPBIN, -AK0)
   54 CONTINUE
      WRITE(1, "(2F9.0)") START, SEC
      WRITE(1, "(F10.4)") BANKMAX / 1000.

			XBIN = 0
			TIME1 = FLOAT(NBIN) * TIMPBIN
			COUNT1 = 0.
      IF (SCANTYPE .EQ. 1) THEN
        Q = 'Oxygen Content (ml/ml)'
        CALL GETREAL (Q, OXYCONT, 0.01, 0.40)
		WRITE (USEROUT, *) 'If the last point WILL NOT be the plasma counts, enter 0.'
		WRITE (USEROUT, *) 'If you would like to enter additional hand drawn samples for calculation'
		WRITE (USEROUT, *) 'of recirculating water fraction with the last point being the plasma'
		WRITE (USEROUT, *) 'counts, then enter the hematocrit.'
        Q = 'Hematocrit (percent)'
        CALL GETREAL (Q, HEMATOCRIT, 0., 60.)
				IF (HEMATOCRIT .GT. 0.) THEN
					WRITE (USEROUT,*) "Add 2 blood points to end of curve for oxygen"
300				CALL BLDENTER(AK0, TIME1, COUNT1)
					IF (COUNT1 .GT. 0.) THEN	
						XBIN = XBIN + 1
						TIME(XBIN) = TIME1
						COUNTS(XBIN) = COUNT1
					END IF
					Q = "Add another point"
					CALL YESNO(Q,ANSWER)
					IF (ANSWER) GO TO 300
				END IF
      ELSE
        OXYCONT = 0.
        HEMATOCRIT = 0.
      END IF
	    WRITE(1, "(2F10.4)") OXYCONT, HEMATOCRIT

C
C  Writes to DTA file:
C  secs, decay-cor deconv blood crv, decay-cor bankpair, d/dt bankpair
C
101		FORMAT(F9.2, 3F9.0)
      WRITE(1,"(I)") NBIN+XBIN
      DO 53 I=1,NBIN
53		WRITE(1, 101) FLOAT(I) * TIMPBIN, S(I), Y(I), D(I)
			IF (XBIN .GT. 0) THEN
      	DO 540 I=1,XBIN
					WRITE(1, 101) TIME(I), COUNTS(I), 0., 0.
540			CONTINUE
			END IF

   39 CONTINUE

C---------------------------------

      CLOSE(1)
      STOP
      END
C
      SUBROUTINE CRVCOPY (A, N, B)
      REAL*4 A(N), B(N)
      DO 1 I = 1, N
    1 B(I) = A(I)
      RETURN
      END
C
      SUBROUTINE EXPAND (A, NBIN)
      REAL*4 A(NBIN)
      DO 1 I = 1, NBIN
      II = NBIN - I + 1
    1 A(2*II) = A(II)
      DO 2 I = 1, NBIN - 1
      II = 2 * I
    2 A(II+1) = .5 * (A(II) + A(II + 2))
      NBIN = 2 * NBIN
      RETURN
      END
C
      SUBROUTINE CRVCOR (A, N, TIMPBIN, AK0)
      REAL*4 A(N)
      DO 1 I = 1, N
      T = FLOAT(I) * TIMPBIN
    1 A(I) = A(I) * EXP(AK0 * T)
      RETURN
      END
C
      SUBROUTINE CRVMIN (X, N, A)
      REAL*4 X(N)
      DO 1 I = 1, N
    1 X(I) = AMAX1(X(I), A)
      RETURN
      END
C
      SUBROUTINE CRVMAX (X, N, A)
      REAL*4 X(N)
      A = 0.
      DO 1 I = 1, N
    1 A = AMAX1 (X(I), A)
      RETURN
      END
C
      SUBROUTINE CRVDIF (A, N, TIMPBIN)
      REAL*4 A(N)
      U = A(1)
      DO 1 I = 1, N - 2
      T = .5 * (A(I + 2) - U)
      U = A(I + 1)
    1 A(I + 1) = T / TIMPBIN
      A(1) = 0.
      A(N) = 0.
      RETURN
      END
C
      SUBROUTINE CRVSMO (A, N)
      REAL*4 A(N)
      T = A(1)
      DO 1 I = 2, N
      U = A(I - 1) + 2. * A(I) + A(I + 1)
      A(I - 1) = T
    1 T = .25 * U
      RETURN
      END
C
C     RETURNS FBIN CORRESPONDING TO PEAK
C     FBIN IS BIN COUNTING FROM 0 + FRACTION
      SUBROUTINE CRVPEAK (A, N, FBIN)
      REAL*4 A(N)
      M = 1
      DO 1 I = 1, N
    1 IF (A(I) .GT. A(M)) M = I
      FBIN = -.5 + FLOAT(M) + .5 * (A(M - 1) - A(M + 1)) 
     &/ (A(M + 1) + A(M - 1) - 2. * A(M))
      RETURN
      END
C
C     RETURNS FBIN CORRESPONDING TO TAKEOFF
C     FBIN IS BIN COUNTING FROM 0 + FRACTION
      SUBROUTINE CRVTOFF (A, N, FBIN)
      REAL*4 A(N)
      DATA CRIT/.1/
      M = 1
      DO 1 I = 1, N
    1 IF (A(I) .GT. A(M)) M = I
      V = (A(M) - A(1)) * CRIT + A(1)
      DO 2 I = 1, N
    2 IF (A(I) .GT. V) GOTO 3
    3 FBIN = -.5 + FLOAT(I) - (A(I) - V) / (A(I) - A(I - 1))
      RETURN
      END
@


1.7
log
@changed prompt for hematocrit
@
text
@d1 1
a1 1
C$Header: /home/npggw/tom/src/betadta/RCS/betadta.f,v 1.6 1994/04/20 22:26:57 tom Exp tom $
d3 3
d125 1
a125 1
			RCSHEADER = "$Id: betadta.f,v 1.6 1994/04/20 22:26:57 tom Exp tom $"
d164 1
a164 4
      WRITE (USEROUT,*) "Copyright 1990-1994, Washington University."
      WRITE (USEROUT,*) "All rights reserved. Unauthorized reproduction prohibited."
      WRITE (USEROUT,*) "----------------------------------------------------------"
			WRITE (USEROUT,*) ">>>  Conversion factors used to run 8-10, ",
d166 3
a168 3
			WRITE (USEROUT,*) " "
			Q = "Well Counter Conversion Multiplier"
			CALL GETREAL(Q,WELLF,1.,100.)
d170 3
a172 3
			Q = "Sampling rate (sec/bin)"
			TIMPBIN = 1.
			CALL GETREAL(Q,TIMPBIN,0.1,100.)
d174 3
a176 3
			Q = "Maximum number of bins in a run"
			NBIN = 500
			CALL GETINT(Q,NBIN,1,10000)
d216 3
a218 3
			Q = "Shift"
			NSHIFT = 1
			CALL GETINT(Q,NSHIFT,0,3)
d222 2
a223 2
				Q = "Extraction Fraction"
				CALL GETREAL(Q,EF,0.1,1.0)
d228 3
a230 3
			Q = "POST DECONVOLUTION NSMOOTH"
			NSMO = 2
			CALL GETINT(Q,NSMO,0,10)
d233 2
a234 2
			STRING = " "
			CALL GTSTRING(Q,STRING)
d236 1
a236 1
			ROOSPC = STRING(1:LR)
d250 3
a252 3
			Q = "Total Number of Scans"
			NSCAN = 1
			CALL GETINT(Q,NSCAN,1,100)
@


1.6
log
@added message explaining manual shift
@
text
@d1 1
a1 1
C$Header: /home/petsun2/tom/src/betadta/RCS/betadta.f,v 1.5 1994/04/20 17:33:50 tom Exp tom $
d3 3
d122 1
a122 1
			RCSHEADER = "$Id: betadta.f,v 1.5 1994/04/20 17:33:50 tom Exp tom $"
d439 4
a442 3
        WRITE (USEROUT, *) 'If the last blood point is NOT the well ',
     2    'counts for plasma,'
        WRITE (USEROUT, *) '  then enter 0 for hematocrit.'
@


1.5
log
@fixed write format error
@
text
@d1 1
a1 1
C$Header: /home/petsun2/tom/src/betadta/RCS/betadta.f,v 1.4 1993/12/02 22:30:02 tom Exp $
d3 3
d119 1
a119 1
			RCSHEADER = "$Id: betadta.f,v 1.4 1993/12/02 22:30:02 tom Exp $"
d158 5
a162 1
			WRITE (USEROUT,*) ">>>  Conversion factors are typically 8-10"
d396 3
a398 1
      	WRITE (USEROUT,*) "Negative shift times will shift to left"
@


1.4
log
@Fix rcsheader
@
text
@d1 1
a1 1
C$Header: /home/petsun2/tom/src/betadta/RCS/betadta.f,v 1.3 1993/12/02 22:22:34 tom Exp tom $
d3 3
d116 1
a116 1
			RCSHEADER = "$Id$"
d220 1
a220 1
			CALL GETINT(Q,NSMO,1,10)
d389 1
a389 1
      	WRITE (USEROUT,A) "Negative shift times will shift to left"
@


1.3
log
@Added libpe utilities.
Allow all scan types (co, oo, etc.)
Add extra points of oxygen
Add RCSHEADER
@
text
@d1 8
a8 2
C$Header$
C$Log$
d113 1
a113 1
			RCSHEADER = "$Id"
@


1.2
log
@Make floating point data format work.
@
text
@d1 2
d28 3
d61 6
a66 1
      INTEGER*4		IN
d70 4
a73 2
      CHARACTER*4	SCANID
      CHARACTER*1	ASCII
d78 1
d87 7
d104 4
d112 27
d145 15
a159 21
C
      TYPE "(' ENTER RADIONUCLIDE')"
      READ (IN, "(A1)") ASCII
      IF (ASCII .EQ. 'O' .OR. ASCII .EQ. 'o')THEN
        THALF = 122.1
        TYPE
     &"(' *** NOTE INCORRECT T1/2 COMPATIBLE WITH METPROC ***')"
      ENDIF
      IF (ASCII .EQ. 'C' .OR. ASCII .EQ. 'c') THALF = 1218.
      AK0 = ALOG(2.) / THALF
      TYPE "(' HALF LIFE SET TO',F9.2,' SECONDS')", THALF
      AK0 = ALOG(2.) / THALF
      TYPE "(' ENTER WELL COUNTER CONVERSION MULTIPLIER <1.>')"
      READ (IN, *) WELLF
      IF (WELLF .EQ. 0.) WELLF = 1.
      TYPE "(' ENTER TIME PER BIN IN SEC <1.>')"
      READ (IN, *) TIMPBIN
      IF (TIMPBIN .LE. 0.) TIMPBIN = 1.
      TYPE "(' ENTER MAXIMUM NUMBER OF BINS IN A RUN')"
      READ (IN, *) NBIN
      CALL GETTKE (IN, T0, AK1, E)
d192 1
d197 4
a200 1
      READ (IN, 8200) NSHIFT
d203 2
a204 3
        TYPE "(' ENTER EXTRACTION FRACTION <0.85>')"
        READ (IN, 8500) STR
        IF (INANYR (STR, ' ') .GT. 0) DECODE (4, 8100, STR) EF
d208 11
a218 12
      TYPE "(' ENTER POST DECONVOLUTION NSMOOTH <2>')"
      READ (IN, 8500) STR
      IF (INANYR(STR, ' ') .LE. 0)THEN
        NSMO = 2
      ELSE
        DECODE (4, 8200, STR) NSMO
      ENDIF
   16 TYPE "(' ENTER SCAN FILE SPECICATION ROOT (e.g., P1916)')"
      READ (IN, 8300) ROOSPC
      LR = INANYR(ROOSPC, ' ')
      FILSPC = ROOSPC
      FILSPC(LR+1:LR+4) = '.dta'
d230 4
a233 2
      TYPE "(' ENTER TOTAL NUMBER OF SCANS')"
      READ (IN, *) NSCAN
d235 3
d239 40
a278 6
   36 TYPE "(' ENTER SCAN ID (e.g., ho1)')"
      READ (IN, 8400) SCANID
      FILSPC = ROOSPC
      FILSPC (LR+1:LR+4) = SCANID
      L = INANYR(FILSPC,' ')
      FILSPC(L+1:L+4) = '.crv'
d281 1
a281 1
   38 FILSPC(L+1:L+4) = '.CRV'
d286 18
a303 3
   37 WRITE (1, "(I1, 1X, A4)") 2, SCANID
      TYPE "(' ENTER POST INJECTION SCAN START TIME, LENGTH (SEC)')"
      READ (IN, *) START, SEC
d380 4
a383 3
      TYPE
     &  "(' ENTER SHIFT TIME (sec) (NEGATIVE VALUES SHIFT TO LEFT)')"
        READ (IN, *) T
d401 3
a403 3
      Q = 0.
      CALL CRVMIN(S, NBIN, Q)
      CALL CRVMIN(D, NBIN, Q)
d411 36
a446 2
      WRITE(1, "(2F10.4)") 0., 0.
      WRITE(1,"(I)")NBIN
d448 7
a454 2
   53 WRITE(1, 101) FLOAT(I) * TIMPBIN, S(I), Y(I), D(I)
  101 FORMAT(F9.2, 3F9.0)
d456 3
@


1.1
log
@Initial revision
@
text
@d88 1
a88 2
8000  FORMAT(F5.0)
7900  FORMAT(F4.0)
d107 1
a107 1
      READ (IN, 8000) WELLF
d110 1
a110 1
      READ (IN, 7900) TIMPBIN
d171 1
a171 1
      FILSPC(LR+1:LR+4) = '.DTA'
d187 1
a187 1
   36 TYPE "(' ENTER SCAN ID (e.g., HO1)')"
d192 1
a192 1
      FILSPC(L+1:L+4) = '.CRV'
d195 4
a198 1
   38 TYPE "(' OPEN ERROR ', A24)", FILSPC
d281 1
a281 1
        READ (IN, 8000) T
@
