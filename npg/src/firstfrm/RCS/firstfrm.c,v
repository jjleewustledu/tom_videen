head	1.1;
access;
symbols;
locks; strict;
comment	@ * @;


1.1
date	2008.09.06.15.21.16;	author tom;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/*	$Log$ */
/* ===============================================================================
 *	Module:			firstfrm.c
 *	Date:			Sep 2008
 *	Author:			Tom Videen
 *	Description:	Get first and last frames of dynamic image
 *	Notes:
 *		If error, write -1 followed by string message to stdout
 *	Otherwise write:
 *		file format
 *		first frame, last frame, dim1, dim2, dim3 (5 integers)
 * ===============================================================================
 */
/*@@unused@@*/
static char     rcsid[] = "$Header: /home/npggw/tom/src/firstfrm/RCS/firstfrm.c,v 2.4 2008/08/21 17:59:53 tom Exp $";

#include <stdio.h>
#include <stdlib.h>
#include <image.h>
#include <libimage.h>
#include <nrutil.h>
#include <pettable.h>

int             main (argc, argv)
/*@@unused@@*/
	int             argc;
	char           *argv[];
{
	ImageFile      *file;
	Index           indx;
	char           *fname;
	int             first, last;
	int             firstfrm, lastfrm;
	unsigned long   dim1, dim2, dim3;

	fname = argv[1];
	firstfrm = 1;
	lastfrm = 100;
	indx.frm = firstfrm;
	indx.pln = 1;
	indx.gate = 1;
	indx.data = 0;
	indx.bed = 0;
	file = make_imgfile (fname);
	if (open_imgfile (file) == ERROR) {
		fprintf (stdout, "-1  Cannot open %s\n", fname);
		return (ERROR);
	}
	if (get_mh (file) == ERROR) {
		fprintf (stdout, "-1  Cannot get MainHeader from %s\n", fname);
		return (ERROR);
	}
	indx.frm = firstimgfrm (file);

	if (indx.frm <= 0) {
		fprintf (stdout, "-1  Cannot find %s data\n", fname);
		return (ERROR);
	} else if (firstfrm == 1 && lastfrm == 1 && indx.frm > 0) {
		firstfrm = indx.frm;
		lastfrm = firstfrm;
	} else if (indx.frm > firstfrm) {
		if (indx.frm <= lastfrm) {
			firstfrm = indx.frm;
		} else {
			fprintf (stdout, "-1  Cannot find %s frame %d\n", fname, firstfrm);
			return (ERROR);
		}
	}
	first = indx.frm;
	if (get_sh (file, &indx) == ERROR) {
		fprintf (stdout, "-1  Cannot read file subheader in %s\n", fname);
		return (ERROR);
	}
	dim1 = (unsigned long) file->sh->dim1;
	dim2 = (unsigned long) file->sh->dim2;
	dim3 = (unsigned long) file->sh->dim3;

	while (existimgfrm (file, &indx) != ERROR)
		indx.frm++;
	last = indx.frm - 1;
	if (last < lastfrm)
		lastfrm = last;
	if (first > firstfrm) {
		if (firstfrm <= 1) {
			firstfrm = first;
			if (lastfrm < firstfrm)
				lastfrm = firstfrm;
		} else {
			fprintf (stdout, "-1  Cannot read frame %d in %s\n", firstfrm, fname);
			return (ERROR);
		}
	}
	if (firstfrm > lastfrm) {
		fprintf (stdout, "-1  Cannot read frame %d in %s\n", firstfrm, fname);
		return (ERROR);
	}
    fprintf (stdout, "%d\n", file->mh->file_format);
	fprintf (stdout, "%d %d %d %d %d\n", firstfrm, lastfrm, (int) dim1, (int) dim2, (int) dim3);

	close_imgfile (file);
	free_imgfile (file);
	return (OK);
}
@
