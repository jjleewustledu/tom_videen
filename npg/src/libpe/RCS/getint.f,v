head	2.0;
access;
symbols;
locks; strict;
comment	@c @;


2.0
date	2004.02.12.22.21.45;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	2004.02.12.22.19.09;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	2002.11.27.21.49.58;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	92.10.13.18.50.40;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	92.04.13.19.08.15;	author tom;	state Exp;
branches;
next	;


desc
@Terminal functions for spideram.
@


2.0
log
@Feb 2004
@
text
@CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  GETINT.FTN
C
C  This procedure gets an integer from the user.
C     It prompts the user with the current value of the integer.
C     If the user enters only RETURN, the current value of the
C     integer is returned (if it is in the allowed range).
C     The value of the integer entered is checked with the
C     input variables MIN and MAX (MIN<=I<=MAX).
C
C  Uses Common Block  /USRIO/ USERIN,USEROUT
C     USERIN - logical unit for terminal input;
C     USEROUT - logical unit for terminal output;
C
C  Variables:
C     Q = question (passed without a question mark)
C     I = integer value
C     MIN = minimum allowed value
C     MAX = maximum allowed value
C
C  Subroutine of TERMINAL.LIB
C  T.O. Videen -- 18-SEP-86
C
C  Modified by Tom Yang on Oct. 13, 1992 to replace CTOI to NEWCTOI.
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE GETINT (Q, I, MIN, MAX)

      INTEGER*4    I, J, L, L1, L2, L3, M, MIN, MAX, USERIN, USEROUT
      CHARACTER*1  CH, BELL
      CHARACTER*20 STR, BLANK
      CHARACTER*80 Q

      COMMON /USRIO/ USERIN, USEROUT

      BLANK = ' '
      BELL  = CHAR (7)

      L = INANYR (Q, ' ')
50    WRITE (USEROUT, *) Q(1:L), '? <', I, '>'
      READ (USERIN, 8320, ERR = 9000) STR

C  If no characters were entered, check that the old value is
C    within the allowed range.

      IF (STR .EQ. BLANK) THEN
        J = I
        GO TO 7000
      END IF

C  Find the first non-blank character

      L1 = INANYL (STR, ' ')
      IF (L1 .EQ. 0) GO TO 9000

C  If this character is '+' or '-', the following character
C    must be a digit

      CH = STR(L1: L1)
      IF ((CH .EQ. '+') .OR. (CH .EQ. '-')) THEN
        L2 = L1 + 1
      ELSE
        L2 = L1
      END IF

C  The character at L2 must be a digit

      M = IANYL (STR (L2: L2), '1234567890')
      IF (M .EQ. 0) GO TO 9000

C  Get character just beyond the last digit of the integer

      L3 = INANYL (STR (L2: 20), '1234567890')
      IF (L3 .EQ. 0) THEN
        L3 = 21
      ELSE
        L3 = L3 + L2 - 1
      END IF

C  All remaining characters in the string must be blank

      IF (L3 .LE. 20) THEN
        M = INANYL (STR (L3: 20), ' ')
        IF (M .NE. 0) GO TO 9000
      END IF

C  The string is a syntactically correct integer and can be converted

      J = NEWCTOI (STR (L1: L3 - 1))

C  Check that the integer is within the allowed range

7000  If ((J .LT. MIN) .OR. (J .GT. MAX)) GO TO 9000

C  If nothing has failed yet, return the new value of I

      I = J
      RETURN

8320  FORMAT (A20)

9000  WRITE (USEROUT,*) 'ERROR: Enter an integer between ',MIN,' and ',MAX,BELL
      GO TO 50

      END
@


1.5
log
@Feb 2004
@
text
@@


1.3
log
@*** empty log message ***
@
text
@@


1.2
log
@Replace CTOI with NEWCTOI.
@
text
@a0 3
C$Id$
C$Log$
C
a22 1
C
d25 1
a25 2
C  Modified by Tom Yang on Oct. 13, 1992 to replace CTOI to
C  NEWCTOI.
d29 1
a29 1
C
d34 1
a34 1
C
d36 1
a36 1
C
d39 1
a39 1
C
d43 1
a43 1
C
d46 1
a46 1
C
d51 1
a51 1
C
d53 1
a53 1
C
d56 1
a56 1
C
d59 1
a59 1
C
d66 1
a66 1
C
d68 1
a68 1
C
d71 1
a71 1
C
d73 1
a73 1
C
d80 1
a80 1
C
d82 1
a82 1
C
d87 1
a87 1
C
d89 1
a89 1
C
d91 1
a91 1
C
d93 1
a93 1
C
d95 1
a95 1
C
d97 1
a97 1
C
a98 1
C
d100 1
a100 1
C
d102 2
a103 3
C
9000  TYPE *,'*** ERROR---enter an integer between ',
     2  MIN, ' and ', MAX,' ***', BELL
d105 1
a105 1
C
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
d29 3
d33 1
a33 6
C $Log:	getint.f,v $
c Revision 1.1  89/11/21  12:41:19  12:41:19  todd (M. Todd Gamble)
c Initial revision
c 
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE GETINT(Q,I,MIN,MAX)
d35 3
a37 3
      INTEGER*4    I,J,L,L1,L2,L3,M,MIN,MAX,USERIN,USEROUT
      CHARACTER*1  CH,BELL
      CHARACTER*20 STR,BLANK
d40 1
a40 1
      COMMON /USRIO/ USERIN,USEROUT
d43 1
a43 1
      BELL = CHAR(7)
d45 3
a47 3
      L = INANYR(Q,' ')
50    WRITE(USEROUT,*) Q(1:L),'? <',I,'>'
      READ (USERIN,8320,ERR=9000) STR
d52 1
a52 1
      IF (STR.EQ.BLANK) THEN
d59 2
a60 2
      L1 = INANYL(STR,' ')
      IF (L1.EQ.0) GO TO 9000
d65 3
a67 3
      CH = STR(L1:L1)
      IF ((CH.EQ.'+').OR.(CH.EQ.'-')) THEN
        L2 = L1+1
d74 2
a75 2
      M = IANYL(STR(L2:L2),'1234567890')
      IF (M.EQ.0) GO TO 9000
d79 2
a80 2
      L3 = INANYL(STR(L2:20),'1234567890')
      IF (L3.EQ.0) THEN
d83 1
a83 1
        L3 = L3+L2-1
d88 3
a90 3
      IF (L3.LE.20) THEN
        M = INANYL(STR(L3:20),' ')
        IF (M.NE.0) GO TO 9000
d95 1
a95 1
      J = NEWCTOI(STR(L1:L3-1))
d99 1
a99 1
7000  If ((J.LT.MIN).OR.(J.GT.MAX)) GO TO 9000
d107 1
a107 1
8320  FORMAT(A20)
d110 1
a110 1
     2  MIN,' and ',MAX,' ***',BELL
@
