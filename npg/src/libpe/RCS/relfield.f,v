head	2.0;
access;
symbols;
locks; strict;
comment	@c @;


2.0
date	2004.02.12.22.21.45;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	2004.02.12.22.19.09;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	92.04.13.19.10.47;	author tom;	state Exp;
branches;
next	;


desc
@Fields function for spideram.
@


2.0
log
@Feb 2004
@
text
@CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  RELFIELD.F
C
C  This procedure gets a real number from the user.
C     The real no. is read from a specified field on the terminal
C     screen.
C     The current value of the real is written to the field.
C     If the user enters only RETURN, the current value of the
C     real number is returned.
C     If a new value is entered, it's range is checked with the
C     input variables MIN and MAX (MIN <= R <= MAX).
C     If WARNLINE <= 0, a bell sounds and no warning is written.
C
C  Modified 06-Feb-86 to allow termination of input with up or down arrows.
C     Returns a variable NEXT.
C
C  Variables:
C     R = real number
C     MIN = minimum allowed value
C     MAX = maximum allowed value
C     LEN = length of the field (character spaces);
C     ROW,COL = location of the first character of the field;
C     WARNLINE = line number (row) in which to write warnings;
C        (the maximum WARNLINE should be 1 less than the number of
C         lines that may be displayed on the terminal)
C     NEXT set true or false upon exiting:
C        true ==> subroutine terminated with RETURN or DOWN ARROW;
C        false==> subroutine terminated with UP ARROW;
C
C  Uses:
C     INFIELD
C     ERSFIELD
C     WRTFIELD
C
C  Subroutine of FIELDS.LIB
C
C  T.O. Videen -- 12-Feb-86
C
C Revision 1.2  89/11/28  13:42:45  13:42:45  todd (M. Todd Gamble)
C modified for HPUX
C
C Modified 91/09/17 by Tom Yang to clear spaces for STR before
C calling INFIELD when porting to Sun X Window.
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE RELFIELD (R, MIN, MAX, LEN, ROW, COL, WARNLINE, NEXT)
C
      INTEGER*4    LEN, ROW, COL, WARNLINE, MINLEN, MAXLEN, STRLEN, 
     2             L1, L2, K, USERIN, USEROUT
      REAL         R, MIN, MAX, X
      CHARACTER*80 NUMSTR, MINNUM, MAXNUM, ERRMSG, STR, BLANK
      CHARACTER*1  BELL
      LOGICAL*1    NEXT, WARNFLAG
C
      COMMON  /USRIO/ USERIN, USEROUT
C
      DATA  BLANK  /' '/
C
      BELL	= CHAR (7)
      WARNFLAG	= .FALSE.
      MINNUM	= ' '
      MAXNUM	= ' '
C
      WRITE (MINNUM, *) MIN
      WRITE (MAXNUM, *) MAX
C
      MINLEN	= INANYR (MINNUM, ' 0')
      MAXLEN	= INANYR (MAXNUM, ' 0')
      ERRMSG	= '*** ERROR---enter a real number between '//
     2          MINNUM(1:MINLEN)//' and '//MAXNUM(1:MAXLEN)//
     3          ' ***'//BELL
      CALL RELFORMT (R,LEN,NUMSTR)
      L1	= INANYL (NUMSTR, ' 0')
      STRLEN	= INANYR (NUMSTR, ' 0')
100   STR	= NUMSTR (L1:STRLEN)
      CALL INFIELD (STR, LEN, ROW, COL, NEXT)
C
C	Check for inappropriate input string
C	(e.g., blank string, more than one sign or decimal point,
C	decimal point preceding the sign, presence of a character other
C	than a digit or a decimal point within the string, non-blank
C	character preceding the sign)
C
      IF (STR .EQ. BLANK) GO TO 8010
      L1	= IANYL (STR, '.')
      IF (L1 .NE. 0) THEN
	L2	= IANYR (STR, '.')
        IF (L1 .NE. L2) GO TO 8010
      ELSE
        L2	= 80
      END IF
      L1	= IANYL (STR, '-+')
      IF (L1 .NE. 0) THEN
	IF (L1 .GT. L2) GO TO 8010
        L2	= IANYR (STR, '-+')
        IF (L1 .NE. L2) GO TO 8010
        L2	= INANYL (STR, ' ')
        IF (L1 .GT. L2) GO TO 8010
      END IF
      IF (L1 .EQ. 0) THEN
	L1	= INANYL (STR, ' ')
      ELSE
	L1	= L1 + 1
      END IF
      L2	= INANYR (STR, ' ')
      K	= INANYL (STR (L1:L2), '1234567890.')
      IF (K .NE. 0) GO TO 8010
C
C	Convert the string to a real number
C
      READ (STR, *) X
C
C	Check that the real number is within the allowed range
C
      IF ((X .LT. MIN) .OR. (X .GT. MAX)) GO TO 8010
C
C	If nothing has failed yet, return the new value of R
C
      R	= X
      IF (WARNFLAG) CALL ERSFIELD (79, WARNLINE, 1)
C
      RETURN
C
8010  IF (WARNLINE .GT. 0) THEN
	WARNFLAG	= .TRUE.
	CALL ERSFIELD (79, WARNLINE, 1)
        CALL WRTFIELD (ERRMSG, 79, WARNLINE, 1)
      ELSE
	WRITE (USEROUT, *) BELL
      END IF
      CALL ERSFIELD (LEN, ROW, COL)
      GO TO 100
C
C
      END
@


1.5
log
@Feb 2004
@
text
@@


1.1
log
@Initial revision
@
text
@@
