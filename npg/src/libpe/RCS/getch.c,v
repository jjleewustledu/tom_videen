head	2.0;
access;
symbols;
locks; strict;
comment	@ * @;


2.0
date	2004.02.12.22.21.45;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	2004.02.12.22.19.09;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	99.12.14.15.56.50;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	92.04.13.19.10.56;	author tom;	state Exp;
branches;
next	;


desc
@Fields function for spideram.
@


2.0
log
@Feb 2004
@
text
@#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <termio.h>
#include <memory.h>

void            getch_ (ch)
	char           *ch;
{
	struct termio   otty, ntty;
	int             fd;

	fd = 0;					 /* use stdin */

	if (ioctl (fd, TCGETA, &otty) == -1) {
		perror ("1:getc");
		exit (-1);
	}
	memcpy (&ntty, &otty, sizeof (struct termio));

	ntty.c_iflag &= ~INLCR;			 /* Don't map NL to CR on input */
	ntty.c_iflag &= ~ICRNL;			 /* Don't map CR to NL on input */
	ntty.c_lflag &= ~ICANON;		 /* Disable canonical processing */
	ntty.c_cc[VMIN] = 1;			 /* don't wait */
	ntty.c_cc[VTIME] = 1;			 /* Set timeout to 0.1 seconds */

	if (ioctl (fd, TCSETA, &ntty) == -1) {
		perror ("2:getc");
		exit (-1);
	}
	read (fd, ch, 1);

	if (ioctl (fd, TCSETA, &otty) == -1) {
		perror ("3:getc");
		exit (-1);
	}
	fflush (stdout);
}
@


1.5
log
@Feb 2004
@
text
@@


1.2
log
@lint cleaning
@
text
@@


1.1
log
@Initial revision
@
text
@d2 2
a4 1
#include <fcntl.h>
d7 2
a8 2
void 	getch_(ch)
char 	*ch;
d10 2
a11 3
	char		oldch;
	struct termio	otty, ntty;
	int		fd;
d13 1
a13 2
	fd	= 0;				/* use stdin */
	oldch	= *ch;				/* save the old value */
d17 1
a17 1
		exit(-1);
a18 1

d21 5
a25 5
	ntty.c_iflag		&= ~INLCR;   	/* Don't map NL to CR on input */
	ntty.c_iflag		&= ~ICRNL;   	/* Don't map CR to NL on input */
	ntty.c_lflag		&= ~ICANON;  	/* Disable canonical processing */
	ntty.c_cc [VMIN]	= 1;     	/* don't wait */
	ntty.c_cc [VTIME]	= 1;	 	/* Set timeout to 0.1 seconds */ 
d31 1
a32 2
	read (fd, ch, 1); 

a36 1

@
