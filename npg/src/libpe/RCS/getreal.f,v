head	2.0;
access;
symbols;
locks; strict;
comment	@c @;


2.0
date	2004.02.12.22.21.45;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	2004.02.12.22.19.09;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	2002.11.27.21.49.58;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	92.10.13.18.51.14;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	92.04.13.19.08.15;	author tom;	state Exp;
branches;
next	;


desc
@Terminal functions for spideram.
@


2.0
log
@Feb 2004
@
text
@CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  getreal.f
C
C  This procedure gets a real number from the user.
C     It prompts the user with the current value of the real number.
C     If the user enters only RETURN, the current value of the
C     real number is returned.
C     If a new value is entered, it's range is checked with the
C     input variables MIN and MAX (MIN <= R <= MAX).
C
C  Uses Common Block  /USRIO/ USERIN,USEROUT
C     USERIN - logical unit for terminal input;
C     USEROUT - logical unit for terminal output;
C
C  Variables:
C     Q = question (passed without a question mark)
C     R = real number
C     MIN = minimum allowed value
C     MAX = maximum allowed value
C
C  Subroutine of TERMINAL.LIB
C
C  T.O. Videen -- 18-SEP-86
C
C  Modified by Tom Yang on Oct. 13, 1992 to replace CTOI with
C	NEWCTOI because a CTOI bug.
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

      SUBROUTINE GETREAL (Q, R, MIN, MAX)

      INTEGER*4    L, L1, L2, L3, DP, M, N, WHOLE, FRACT, USERIN, USEROUT
      REAL         R, X, MIN, MAX, SIGN, DPLACES
      CHARACTER*1  CH, BELL
      CHARACTER*20 STR, BLANK
      CHARACTER*80 Q

      COMMON /USRIO/ USERIN,USEROUT

C  The following variables refer to locations in the string STR:
C     L1 is the first non-blank character
C     L2 is the first non-blank character which is not '+' or '-'
C     DP is the decimal point
C     L3 is the first character following the number

      BLANK = ' '
      BELL  = CHAR (7)

      L = INANYR (Q, ' ')
50    WRITE (USEROUT, *) ' ', Q(1:L), '?  <', R, '>'
      READ (USERIN, 8320, ERR = 9000) STR

      SIGN    = +1.0
      WHOLE   = 0
      FRACT   = 0
      DPLACES = 0.0

C  If no characters were entered, check that the old value
C  is within the allowed range.
C  ---------------------------------------------------------

      IF (STR .EQ. BLANK) THEN
        X = R
        GO TO 7000
      END IF

C  Find the first non-blank character

      L1 = INANYL (STR, ' ')
      IF (L1 .EQ. 0) GO TO 9000

C  If this character is '+' or '-', the following character
C    must be a digit or '.'

      CH = STR (L1:L1)
      IF (CH .EQ. '+') THEN
        L2 = L1 + 1
      ELSE IF (CH .EQ. '-') THEN
        SIGN = -1.0
        L2 = L1 + 1
      ELSE
        L2 = L1
      END IF

C  If the character at L2 is not a digit, then
C    it must be a decimal followed by a digit.

      M = IANYL (STR (L2:L2), '1234567890')
      IF (M .EQ. 0) THEN
        CH = STR (L2:L2)
        IF (CH .EQ. '.') THEN
          N = IANYL (STR (L2 + 1: L2 + 1), '1234567890')
          IF (N .NE. 0) THEN
            DP = L2
            GO TO 200
          ELSE
            GO TO 9000
          END IF
        ELSE
          GO TO 9000
        END IF
      END IF

C  Get the whole part of the number (L2 to DP-1)
C  ---------------------------------------------

      M = INANYL (STR (L2:20), '1234567890')
      IF (M .EQ. 0) THEN
        DP = 21
      ELSE
        DP = M + L2 - 1
      END IF

C  Maximum integer is 2147483647, so more than 9 digits
C    will not convert

      IF ((DP - L2) .GT. 9) GO TO 9100
      WHOLE = NEWCTOI (STR (L2: DP - 1))

C  If the next character is not a '.', this is the end of the number

      CH = STR (DP: DP)
      IF (CH .NE. '.') THEN
        L3 = DP
        GO TO 300
      END IF

C  If the character following the decimal is not a digit,
C    this it the end of the number

      M = IANYL (STR (DP + 1: DP + 1), '1234567890')
      IF (M .EQ. 0) THEN
        L3 = DP+1
        GO TO 300
      END IF

C  Get the fractional part of the number (DP+1 to L3-1)
C  ----------------------------------------------------

200   L3 = INANYL (STR (DP + 1: 20), '1234567890')
      IF (L3 .EQ. 0) THEN
        L3 = 21
      ELSE
        L3 = L3 + DP
      END IF

C  Maximum integer is 2147483647, so more than 9 digits
C    will not convert

      IF ((L3 - DP - 1) .GT. 9) GO TO 9100
      FRACT = NEWCTOI (STR (DP + 1: L3 - 1))
      DPLACES = FLOAT (L3 - 1 - DP)

C  All remaining characters in the string must be blank

300   IF (L3 .LE. 20) THEN
        M = INANYL (STR (L3: 20), ' ')
        IF (M .NE. 0) GO TO 9000
      END IF

C  The string is a syntactically correct real number
C    and can be converted
C  ---------------------------------------------------

      IF (FRACT .NE. 0) THEN
        X = FLOAT (WHOLE) + (FLOAT (FRACT) / (10.0 ** DPLACES))
      ELSE
        X = FLOAT (WHOLE)
      END IF
      X = X * SIGN

C  Check that the real number is within the allowed range

7000  If ((X .LT. MIN) .OR. (X .GT. MAX)) GO TO 9000

C  If nothing has failed yet, return the new value of R

      R = X
      RETURN

8320  FORMAT (A20)

9000  WRITE (USEROUT,*) 'ERROR: Enter a real number between ',MIN, ' and ', MAX, BELL
      GO TO 50

9100  WRITE (USEROUT,*) '*** ERROR---no more than 9 digits are allowed   ***'
      WRITE (USEROUT,*) '***         on either side of the decimal point ***',BELL
      GO TO 50

      END
@


1.5
log
@Feb 2004
@
text
@@


1.3
log
@*** empty log message ***
@
text
@@


1.2
log
@Replace CTOI with NEWCTOI.
@
text
@d29 1
a29 1
C
d31 2
a32 3
C
      INTEGER*4    L, L1, L2, L3, DP, M, N, WHOLE, FRACT,
     &             USERIN, USEROUT
d37 1
a37 1
C
d39 1
a39 1
C
d45 1
a45 1
C
d48 1
a48 1
C
d52 1
a52 1
C
d57 1
a57 1
C
d61 1
a61 1
C
d66 1
a66 1
C
d68 1
a68 1
C
d71 1
a71 1
C
d74 1
a74 1
C
d84 1
a84 1
C
d87 1
a87 1
C
d103 1
a103 1
C
d106 1
a106 1
C
d113 1
a113 1
C
d116 1
a116 1
C
d119 1
a119 1
C
d121 1
a121 1
C
d127 1
a127 1
C
d130 1
a130 1
C
d136 1
a136 1
C
d139 1
a139 1
C
d146 1
a146 1
C
d149 1
a149 1
C
d153 1
a153 1
C
d155 1
a155 1
C
d160 1
a160 1
C
d164 1
a164 1
C
d171 1
a171 1
C
d173 1
a173 1
C
d175 1
a175 1
C
d177 1
a177 1
C
a178 1
C
d180 1
a180 1
C
d183 1
a183 2
9000  WRITE (USEROUT,*) '*** ERROR---enter a real number between ',
     2 MIN, ' and ', MAX,' ***', BELL
d185 3
a187 3
C
9100  TYPE *,'*** ERROR---no more than 9 digits are allowed   ***'
      TYPE *,'***         on either side of the decimal point ***',BELL
d189 1
a189 1
C
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
C  GETREAL.FTN
d26 2
a28 13
C $Log:	getreal.f,v $
c Revision 1.3  89/11/21  12:41:57  12:41:57  todd (M. Todd Gamble)
c No Changes.
c 
c 
c Revision 1.2  89/11/20  15:01:18  15:01:18  todd (M. Todd Gamble)
c Changed from FORMAT statements that had no width specified for real number
c I/O to list directed I/O.
c 
c Revision 1.1  89/11/20  14:57:42  14:57:42  todd (M. Todd Gamble)
c Initial revision
c 
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
d30 1
a30 1
      SUBROUTINE GETREAL(Q,R,MIN,MAX)
d32 5
a36 4
      INTEGER*4    L,L1,L2,L3,DP,M,N,WHOLE,FRACT,USERIN,USEROUT
      REAL         R,X,MIN,MAX,SIGN,DPLACES
      CHARACTER*1  CH,BELL
      CHARACTER*20 STR,BLANK
d48 1
a48 1
      BELL = CHAR(7)
d50 3
a52 3
      L = INANYR(Q,' ')
50    WRITE(USEROUT,*) ' ',Q(1:L),'?  <',R,'>'
      READ (USERIN,8320,ERR=9000) STR
d54 3
a56 3
      SIGN = +1.0
      WHOLE = 0
      FRACT = 0
d63 1
a63 1
      IF (STR.EQ.BLANK) THEN
d70 2
a71 2
      L1 = INANYL(STR,' ')
      IF (L1.EQ.0) GO TO 9000
d76 4
a79 4
      CH = STR(L1:L1)
      IF (CH.EQ.'+') THEN
        L2 = L1+1
      ELSE IF (CH.EQ.'-') THEN
d81 1
a81 1
        L2 = L1+1
d89 6
a94 6
      M = IANYL(STR(L2:L2),'1234567890')
      IF (M.EQ.0) THEN
        CH = STR(L2:L2)
        IF (CH.EQ.'.') THEN
          N = IANYL(STR(L2+1:L2+1),'1234567890')
          IF (N.NE.0) THEN
d108 2
a109 2
      M = INANYL(STR(L2:20),'1234567890')
      IF (M.EQ.0) THEN
d112 1
a112 1
        DP = M+L2-1
d118 2
a119 2
      IF ((DP-L2).GT.9) GO TO 9100
      WHOLE = CTOI(STR(L2:DP-1),K)
d123 2
a124 2
      CH = STR(DP:DP)
      IF (CH.NE.'.') THEN
d132 2
a133 2
      M = IANYL(STR(DP+1:DP+1),'1234567890')
      IF (M.EQ.0) THEN
d141 2
a142 2
200   L3 = INANYL(STR(DP+1:20),'1234567890')
      IF (L3.EQ.0) THEN
d145 1
a145 1
        L3 = L3+DP
d151 3
a153 3
      IF ((L3-DP-1).GT.9) GO TO 9100
      FRACT = CTOI(STR(DP+1:L3-1),K)
      DPLACES = FLOAT(L3-1-DP)
d157 3
a159 3
300   IF (L3.LE.20) THEN
        M = INANYL(STR(L3:20),' ')
        IF (M.NE.0) GO TO 9000
d166 2
a167 2
      IF (FRACT.NE.0) THEN
        X = FLOAT(WHOLE) + (FLOAT(FRACT)/(10.0**DPLACES))
d169 1
a169 1
        X = FLOAT(WHOLE)
d175 1
a175 1
7000  If ((X.LT.MIN).OR.(X.GT.MAX)) GO TO 9000
d183 1
a183 1
8320  FORMAT(A20)
d185 2
a186 2
9000  WRITE(USEROUT,*) '*** ERROR---enter a real number between ',MIN,
     2 ' and ',MAX,' ***',BELL
@
