head	2.0;
access;
symbols;
locks; strict;
comment	@c @;


2.0
date	2004.02.12.22.21.45;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	2004.02.12.22.19.09;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	94.05.24.16.42.08;	author ty7777;	state Exp;
branches;
next	;


desc
@Initial checking in, working version.
@


2.0
log
@Feb 2004
@
text
@C$Id: parse.f,v 1.5 2004/02/12 22:19:09 tom Exp tom $
C$Log: parse.f,v $
c Revision 1.5  2004/02/12  22:19:09  tom
c Feb 2004
c
c Revision 1.1  1994/05/24  16:42:08  ty7777
c Initial revision
c
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  Function:     parse.f
C
C  Author:       Tom Yang
C
C  Date:         23-May-94
C
C  Description:
C     This function parses a string into substrings so that each 
C     substring can be converted to a particular data type. This will
C     be useful in reading data in free format.
C
C  Arguments:
C     STRING:    string to be parsed.
C     SEPARATOR: character which is the separator between different
C                fields. The blank is usually the separator.
C     NMAXFIELD: max number of fields in the string. It should be 
C                defined before the calling of the function.
C     FIELDS:    an array containing all the sub fields.
C     LENFIELDS: length for each fields.
C     NFIELD:    the actual number of fields.
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      FUNCTION PARSE (STRING, SEPARATOR, NMAXFIELD, FIELDS, LENFIELDS, NFIELD)
C
      CHARACTER*(*)	STRING
      CHARACTER*1	SEPARATOR
      INTEGER*4		NMAXFIELD
      CHARACTER*(*)	FIELDS (NMAXFIELD)
      INTEGER*4		LENFIELDS (NMAXFIELD)
      INTEGER*4		NFIELD
C
      CHARACTER*256	RCSHEADER
      INTEGER*4		I
      INTEGER*4		J
      INTEGER*4		K
      INTEGER*4		L
      INTEGER*4		M
C
      RCSHEADER	= "$Header: /home/npggw/tom/src/libpe/RCS/parse.f,v 1.5 2004/02/12 22:19:09 tom Exp tom $"
C
C     Initialization
C
      NFIELD	= 0
      DO 10 I = 1, NMAXFIELD, 1
        FIELDS (I)	= ' '
10    CONTINUE
C
C     Process tab and end of line chracters
C
      L	= INANYR (STRING, SEPARATOR)
      IF (L .EQ. 0) RETURN
      DO 20 I = 1, L, 1
        IF (STRING (I:I) .EQ. "\t" .OR. STRING (I:I) .EQ. "\n") THEN 
	  STRING (I:I)	= " "
        ENDIF
20    CONTINUE
C
C     Construct the substrings
C
      I	= 1
30    IF (I .LE. L) THEN
        J		= INANYL (STRING (I:L), SEPARATOR)
	K		= I + (J - 1)
	M		= K
40	IF (K .LE. L .AND. STRING (K:K) .NE. SEPARATOR) THEN
	  K	= K + 1
	  GO TO 40
        END IF
	NFIELD  		= NFIELD + 1
	I			= K
	FIELDS (NFIELD)		= STRING (M:K - 1)
	LENFIELDS (NFIELD)	= K - M
	GO TO 30
      END IF
C
      RETURN
      END
@


1.5
log
@Feb 2004
@
text
@d1 1
a1 1
C$Id: parse.f,v 1.1 1994/05/24 16:42:08 ty7777 Exp tom $
d3 3
d51 1
a51 1
      RCSHEADER	= "$Header: /home/npggw/tom/src/libpe/RCS/parse.f,v 1.1 1994/05/24 16:42:08 ty7777 Exp tom $"
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
C$Id$
C$Log$
d48 1
a48 1
      RCSHEADER	= "$Header$"
@
