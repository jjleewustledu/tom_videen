head	2.3;
access;
symbols;
locks; strict;
comment	@c @;


2.3
date	2004.02.13.19.42.28;	author tom;	state Exp;
branches;
next	2.2;

2.2
date	2002.02.25.19.57.47;	author tom;	state Exp;
branches;
next	2.1;

2.1
date	99.12.10.20.02.40;	author tom;	state Exp;
branches;
next	2.0;

2.0
date	96.10.15.19.47.59;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	92.07.22.22.32.01;	author ty7777;	state Exp;
branches;
next	;


desc
@betadta Release Version 1.1.
@


2.3
log
@Feb 2004
@
text
@      PROGRAM BETACAL

C     AZS 28-JUL-90
C     CALCULATES BETA PROBE TO WELL COUNTER CONVERSION FACTOR
C     USES SUBROUTINE POLFIT(X,Y,NPTS,A,ARRAY,NTERM,CHISQR)

C     Modified 12/05/91 to read floating T(I)
C     29-Apr-93 port to SUN
C               OUTPUT LISTED ON stdout
C     31-Oct-94 final conversion factor output format F6.2 => F10.4
C     25-Feb-2002 skip first 2 points for new PC

      CHARACTER*80 FNAME
      CHARACTER*80 Q, STR, CHARSET
      CHARACTER*1 NUC
      PARAMETER (NBINMAX = 1024)
      PARAMETER (NTERM = 2)
      REAL*4	T(NBINMAX), Y(NBINMAX)
      REAL*4	A(NTERM), ARRAY(NTERM, NTERM)
      INTEGER*4 BLDCRV
      INTEGER*4 USERIN, USEROUT
      LOGICAL*1 ANS

      COMMON /USRIO/    USERIN,USEROUT

      DATA BLDCRV /8/
      DATA USERIN, USEROUT /5,6/

8000  FORMAT ('Enter beta probe calibration filename (.crt or .crv)')
8001  FORMAT ('ERROR: Cannot read ', A)
100   WRITE (USEROUT,8000)
      ACCEPT "(A80)", FNAME
      L = lnblnk(FNAME)
      IF (L.EQ.0) STOP 'No File Entered'
      OPEN (BLDCRV, FILE=FNAME, STATUS='OLD', ERR=101)
      GOTO 102
101   WRITE (USEROUT,8001) FNAME
      GOTO 100
102   Q = 'Bin width of crv file (sec/bin)'
      BINTIME = 1
      CALL GETREAL(Q,BINTIME,0.1,100.)

8010  FORMAT (I)
8080  FORMAT (A80)
      WRITE (USEROUT,8080) FNAME
      READ  (BLDCRV,*) STR
      WRITE (USEROUT,8080) STR
      READ  (BLDCRV,*) NBIN
      IF (NBIN.GT.NBINMAX) STOP 'ERROR: Too many time bins'

      WRITE (USEROUT,*) 'Skip 2 points for 961 calibration files after p5999 (25 Feb 2002)'
      Q = 'Skip first 2 points'
      CALL YESNO(Q,ANS)
      IF (ANS) THEN
         READ (BLDCRV,*) S, J
         READ (BLDCRV,*) S, J
         NBIN = NBIN-2
      ENDIF

      DO 110 I=1,NBIN
         READ (BLDCRV,*) S, J
         M = NINT(S)
         Y(I) = ALOG(FLOAT(J))
         T(I) = FLOAT(S)*BINTIME
110   CONTINUE
      CLOSE (BLDCRV)

      CALL POLFIT(T, Y, NBIN, A, ARRAY, NTERM, CHISQR)
      BETA = EXP(A(1))/BINTIME
      WRITE (USEROUT,8102) A, CHISQR
      WRITE (USEROUT,8103) BETA
      WRITE (USEROUT,8104) -ALOG(2.)/A(2)
      Q = 'Radionuclide'
      NUC = 'O'
      CHARSET = 'OCoc'
      CALL GETCHAR(Q,CH,CHARSET)
      IF (NUC.EQ.'O' .or. NUC.EQ.'o') THALF = 123.
      IF (NUC.EQ.'C' .or. NUC.EQ.'c') THALF = 1218.
      TYPE "(' Halflife set to', F10.0,' sec')", THALF
      Q = 'Well counter counting period (sec)'
      CALL GETREAL(Q,BINLEN,1.,100.)
      CALL WELLCAL(THALF, BINLEN, WELL)
      WRITE (USEROUT,8106) WELL/BETA

8102  FORMAT(' A(1), A(2), CHISQR', 3F10.4)
8103  FORMAT(' COUNTS/SEC EXTRAPOLATED TO TIME 0', F9.0)
8104  FORMAT(' CALCULATED T1/2 IN SECONDS', F8.2)
8106  FORMAT(' BETA PROBE TO WELL COUNTER CONVERSION FACTOR', F10.4)
      END

      SUBROUTINE WELLCAL(THALF, BINLEN, RATE)
C     input THALF = half life of tracer in sec
C     input BINLEN = counting period of well counter (usually 10 sec)
C     returns RATE = COUNTS/SEC*GRAM
C     READS ASCII FILE ON LU 0 WITH WELL COUNTER CALIBRATION DATA
C     dry, wet, min, sec, counts/bin
C     EACH DUPLICATE RUN MUST APPEAR ON A SEPARATE LINE
C     DATA IS READ UNTIL FILE END OR FIRST NONNUMERIC
C     WELLCAL AVERAGES OVER DUPLICATES
C     CALCULATION SUMMARY IS SENT TO LU6

      PARAMETER (NMAX = 20)
      REAL*4    DRY(NMAX), WET(NMAX), R(NMAX)
      INTEGER*4 MINUTE(NMAX), SEC(NMAX), COUNTS(NMAX)

      AKT = ALOG(2.)*BINLEN/THALF
      BINFAC = AKT/(1.-EXP(-AKT))
      BINFAC = BINFAC/BINLEN
      CALL BETAGET(NMAX, DRY, WET, MINUTE, SEC, COUNTS, N)
      S = 0.
      V = 0.
      DO 200 I=1,N
         F = 2.**(FLOAT(SEC(I)+60*MINUTE(I))/THALF)
         R(I) = BINFAC*F*COUNTS(I)/(WET(I)-DRY(I))
         S = S+R(I)
         V = V+R(I)**2
200   CONTINUE
      S = S/FLOAT(N)
      V = V-FLOAT(N)*S**2
      V = V/FLOAT(N-1)
      WRITE (USEROUT,8113) S, SQRT(V), SQRT(V)/S
      RATE = S
      WRITE (USEROUT,8114)
      DO 210 I=1,N
         WRITE (USEROUT,8115) I, DRY(I), WET(I), MINUTE(I), SEC(I), COUNTS(I), R(I)
210   CONTINUE
      WRITE (USEROUT,8113) S, SQRT(V), SQRT(V)/S
8113  FORMAT (' mean cts/(g*sec)', F10.0,'  s.d.', F10.0,'  s.d./mean', F10.4)
8114  FORMAT(' LINE     DRY   WET  MIN  SEC  COUNTS cts/(g*sec)')
8115  FORMAT(I5, F8.3, F6.3, 2I5, I8, F12.0)
      RETURN
      END

      SUBROUTINE BETAGET(NMAX, DRY, WET, MINUTE, SEC, COUNTS, N)

      REAL*4    DRY(NMAX), WET(NMAX)
      INTEGER*4 MINUTE(NMAX), SEC(NMAX), COUNTS(NMAX)
      CHARACTER*80 FNAME
      CHARACTER*80 STRING
      INTEGER*4 WELLFILE

      DATA WELLFILE /8/
      I = 0

8190  FORMAT ('Well counter data filename to read (enter return if no well data file exists)')
      WRITE (USEROUT,8190)
      ACCEPT "(A80)", FNAME
      OPEN (WELLFILE, FILE=FNAME, STATUS='OLD', ERR=300)
      GOTO 305
300   TYPE "(' FILE NOT FOUND')"
      GOTO 335

305   I = I+1
      READ (WELLFILE,*,END=310, ERR=310) DRY(I), WET(I), MINUTE(I), SEC(I), COUNTS(I)
      N = I
      IF (N.LT.NMAX) GOTO 305
310   CLOSE (WELLFILE)
320   TYPE "(' LINE     DRY   WET  MIN  SEC  COUNTS')"
      DO 330 I=1,N
         WRITE (USEROUT,8200) I, DRY(I), WET(I), MINUTE(I), SEC(I), COUNTS(I)
330   CONTINUE

335   TYPE "(' EDIT A DATA LINE OR')"
      TYPE "(' DELETE A LINE BY ENTERING THE LINE NUMBER')"
      TYPE "(' ADD DATA BY ENTERING LINE ', I2)", N+1
      TYPE "(/' ENTER line, dry, wet, minutes, seconds, counts')"
      STRING = ' '
      ACCEPT "(A80)", STRING
      L = lnblnk(STRING)
      IF (L.LE.0) GOTO 360
      DECODE(L, "(I)", STRING(1:L))I
      IF (I.GT.N+1) GOTO 320
      IF (I.EQ.N+1) N = I
      DECODE(L, 8200, STRING(1:L)) I, DRY(I), WET(I), MINUTE(I), SEC(I), COUNTS(I)
8200  FORMAT(I5, F8.3, F6.3,2I5, I8)
      IF (COUNTS(I).EQ.0) THEN
         DO 340 J = I+1,N
            DRY(J-1) = DRY(J)
            WET(J-1) = WET(J)
            MINUTE(J-1) = MINUTE(J)
            SEC(J-1) = SEC(J)
            COUNTS(J-1) = COUNTS(J)
340      CONTINUE
         N = N-1
      ENDIF
      GOTO 320

8290  FORMAT ('Well counter data filename to save')
360   WRITE (USEROUT,8290)
      ACCEPT "(A80)", FNAME
      L = lnblnk(FNAME)
      IF (L.LE.0) GOTO 380
      OPEN (8, FILE=FNAME, ERR=380)
      DO 370 I=1,N
         WRITE (8,8210) DRY(I), WET(I), MINUTE(I), SEC(I), COUNTS(I)
370   CONTINUE
8210  FORMAT(2F7.3, 2I5, I8)
      CLOSE (8, STATUS='KEEP')
      TYPE "(' Well counter data saved in ', A80)", FNAME
      GOTO 390
380   TYPE "(' ERROR Opening', A80)", FNAME
390   RETURN
      END
@


2.2
log
@skip first 2 points of crv file for new curves
@
text
@@


2.1
log
@remove comma
@
text
@d2 1
d11 1
d13 76
a88 46
      CHARACTER*20 STR
      CHARACTER*256 FILSPC
      CHARACTER*1 ASCII
      PARAMETER (NBINMAX=1024)
      PARAMETER (NTERM=2)
      REAL*4 T(NBINMAX),Y(NBINMAX)
      REAL*4 A(NTERM),ARRAY(NTERM,NTERM)
   30 TYPE
     &"(' ENTER BETA PROBE CAL FILENAME')"
      ACCEPT "(a256)",FILSPC
      L=lnblnk(FILSPC)
      IF(L.EQ.0)STOP 'END BETACAL'
      OPEN(8,FILE=FILSPC,STATUS='OLD',ERR=30)
      TYPE "(' ENTER .CRV FILE TIME PER BIN IN SEC')"
      ACCEPT *,TIMPBIN
      write(*,"(a80)")FILSPC(1:80)
      READ(8,"(a20)")STR
      write(*,"(a20)")STR
      READ(8,*)NBIN
      IF(NBIN.GT.NBINMAX) STOP 'NBIN TOO LARGE'
      DO 41 I=1,NBIN
      READ(8,*)S,J
      M=NINT(S)
      IF(M.NE.I)STOP 'BETACAL FILE READ ERROR'
      Y(I)=ALOG(FLOAT(J))
   41 T(I)=FLOAT(I)*TIMPBIN
      CLOSE(8)
      CALL POLFIT(T,Y,NBIN,A,ARRAY,NTERM,CHISQR)
  102 FORMAT(' A(1),A(2),CHISQR',3F10.4)
  103 FORMAT(' COUNTS/SEC EXTRAPOLATED TO TIME 0',F9.0)
  104 FORMAT(' CALCULATED T1/2 IN SECONDS',F8.2)
      BETA=EXP(A(1))/TIMPBIN
      write(*,102)A,CHISQR
      write(*,103)BETA
      write(*,104)-ALOG(2.)/A(2)
      TYPE "(' ENTER RADIONUCLIDE')"
      ACCEPT "(a1)",ASCII
      IF(ASCII.EQ.'O'.or.ASCII.EQ.'o')THALF=123.
      IF(ASCII.EQ.'C'.or.ASCII.EQ.'c')THALF=1218.
      TYPE "(' HALF LIFE SET TO',F10.0,' SECONDS')",THALF
      TYPE "(' ENTER WELL COUNTER COUNTING PERIOD IN SEC')"
      ACCEPT *,BINLEN
      CALL WELLCAL(THALF,BINLEN,WELL)
      write(*,106)WELL/BETA
  106 FORMAT(' BETA PROBE TO WELL COUNTER CONVERSION FACTOR',F10.4)
      STOP 'END BETACAL'
d90 2
a91 1
      SUBROUTINE WELLCAL(THALF,BINLEN,RATE)
d101 30
a130 27
      PARAMETER (NMAX=20)
      REAL*4    DRY(NMAX),WET(NMAX),R(NMAX)
      INTEGER*4 MINUTE(NMAX),SEC(NMAX),COUNTS(NMAX)
      AKT=ALOG(2.)*BINLEN/THALF
      BINFAC=AKT/(1.-EXP(-AKT))
      BINFAC=BINFAC/BINLEN
C     TYPE *,BINFAC
      CALL BETAGET(NMAX,DRY,WET,MINUTE,SEC,COUNTS,N)
      S=0.
      V=0.
      DO 2 I=1,N
      F=2.**(FLOAT(SEC(I)+60*MINUTE(I))/THALF)
      R(I)=BINFAC*F*COUNTS(I)/(WET(I)-DRY(I))
      S=S+R(I)
    2 V=V+R(I)**2
      S=S/FLOAT(N)
      V=V-FLOAT(N)*S**2
      V=V/FLOAT(N-1)
      TYPE 113,S,SQRT(V),SQRT(V)/S
  113 FORMAT (' mean cts/(g*sec)',F10.0,'  s.d.',F10.0,'  s.d./mean',F10.4)
      RATE=S
      write(*,104)
  104 FORMAT(' LINE     DRY   WET  MIN  SEC  COUNTS cts/(g*sec)')
      DO 5 I=1,N
    5 write(*,103)I,DRY(I),WET(I),MINUTE(I),SEC(I),COUNTS(I),R(I)
  103 FORMAT(I5,F8.3,F6.3,2I5,I8,F12.0)
      write(*,113)S,SQRT(V),SQRT(V)/S
d133 6
a138 4
      SUBROUTINE BETAGET(NMAX,DRY,WET,MINUTE,SEC,COUNTS,N)
      REAL*4    DRY(NMAX),WET(NMAX)
      INTEGER*4 MINUTE(NMAX),SEC(NMAX),COUNTS(NMAX)
      CHARACTER*20 FILSPC
d140 24
a163 16
      I=0
      N=0
      TYPE "(' ENTER WELL COUNTER DATA FILE NAME')"
      FILSPC=' '
      ACCEPT "(a20)",FILSPC
      OPEN(8,FILE=FILSPC,STATUS='OLD',ERR=31)
    6 I=I+1
      READ(8,*,END=7,ERR=7)
     &DRY(I),WET(I),MINUTE(I),SEC(I),COUNTS(I)
      N=I
      IF(N.LT.NMAX)GOTO 6
    7 CLOSE(8)
   36 TYPE "(' LINE     DRY   WET  MIN  SEC  COUNTS')"
      DO 33 I=1,N
   33 TYPE 103,I,DRY(I),WET(I),MINUTE(I),SEC(I),COUNTS(I)
      TYPE "(' EDIT A DATA LINE OR')"
d165 20
a184 20
      TYPE "(' ADD DATA BY ENTERING LINE ',I2)",N+1
      TYPE "(/' ENTER line,dry,wet,minutes,seconds,counts')"
      STRING=' '
      ACCEPT "(a80)",STRING
      L=lnblnk(STRING)
      IF(L.LE.0)GOTO 35
      DECODE(L,"(I)",STRING(1:L))I
      IF(I.GT.N+1)GOTO 36
      IF(I.EQ.N+1)N=I
      DECODE(L,103,STRING(1:L))
     &I,DRY(I),WET(I),MINUTE(I),SEC(I),COUNTS(I)
  103 FORMAT(I5,F8.3,F6.3,2I5,I8)
      IF(COUNTS(I).EQ.0)THEN
      DO 37 J=I+1,N
      DRY(J-1)=DRY(J)
      WET(J-1)=WET(J)
      MINUTE(J-1)=MINUTE(J)
      SEC(J-1)=SEC(J)
   37 COUNTS(J-1)=COUNTS(J)
      N=N-1
d186 17
a202 17
      GOTO 36
   31 TYPE "(' FILE NOT FOUND')"
      GOTO 36
   35 TYPE "(' ENTER WELL COUNTER DATA FILE NAME TO BE SAVED')"
      FILSPC=' '
      ACCEPT "(a20)",FILSPC
      L=lnblnk(FILSPC)
      IF(L.LE.0)GOTO 34
      OPEN(8,FILE=FILSPC,ERR=39)
      DO 32 I=1,N
   32 WRITE(8,102)DRY(I),WET(I),MINUTE(I),SEC(I),COUNTS(I)
  102 FORMAT(2F7.3,2I5,I8)
      CLOSE(8,STATUS='KEEP')
      TYPE "(' SAVE WELL COUNTER DATA FILE ',a20)",FILSPC
      GOTO 34
   39 TYPE "(' ERROR OPENING',a20)",FILSPC
   34 RETURN
@


2.0
log
@solaris
@
text
@d87 1
a87 2
  113 FORMAT(' mean cts/(g*sec)',
     &F10.0,'  s.d.',F10.0,,'  s.d./mean',F10.4)
@


1.1
log
@Initial revision
@
text
@a3 1
C     OUTPUT LISTED ON LU6
d5 1
a5 1
C     LINK7 BETACAL,POLFIT
d7 4
d12 1
a12 1
      CHARACTER*24 FILSPC
d14 1
a14 1
      PARAMETER (NBINMAX=512)
d19 3
a21 3
     &"(' ENTER BETA PROBE CAL FILENAME (WITHOUT .CRV EXTENSION)')"
      ACCEPT "(A24)",FILSPC
      L=INANYR(FILSPC,' ')
d23 1
a23 3
      FILSPC(L+1:L+4)='.CRV'
C      OPEN(8,FILE=FILSPC,STATUS='OLD',SHARE='SRO',ERR=30)
      OPEN (8, FILE=FILSPC, STATUS='OLD', ERR=30)
d26 3
a28 6
      WRITE(6,105)FILSPC
  105 FORMAT (1X, A24)
      READ(8,107)STR
      WRITE(6,117)STR
  107 FORMAT (A20)
  117 FORMAT (1X, A20)
d43 3
a45 3
      WRITE(6,102)A,CHISQR
      WRITE(6,103)BETA
      WRITE(6,104)-ALOG(2.)/A(2)
d47 3
a49 3
      ACCEPT "(A1)",ASCII
      IF(ASCII.EQ.'O')THALF=123.
      IF(ASCII.EQ.'C')THALF=1218.
d54 2
a55 2
      WRITE(6,106)WELL/BETA
  106 FORMAT(' BETA PROBE TO WELL COUNTER CONVERSION FACTOR',F6.2)
d90 1
a90 1
      WRITE(6,104)
d93 1
a93 1
    5 WRITE(6,103)I,DRY(I),WET(I),MINUTE(I),SEC(I),COUNTS(I),R(I)
d95 1
a95 1
      WRITE(6,113)S,SQRT(V),SQRT(V)/S
d107 2
a108 3
      ACCEPT "(A20)",FILSPC
C      OPEN(0,FILE=FILSPC,STATUS='OLD',SHARE='SRO',ERR=31)
      OPEN (0, FILE=FILSPC, STATUS='OLD', ERR=31)
d110 1
a110 1
      READ(0,*,END=7,ERR=7)
d114 1
a114 1
    7 CLOSE(0)
d123 2
a124 2
      ACCEPT "(A80)",STRING
      L=INANYR(STRING,' ')
d126 1
a126 2
C      DECODE (STRING(1:L), "(I)") I
      DECODE (4, "(I)", STRING(1:L)) I
d129 1
a129 2
C      DECODE(STRING(1:L),103)
      DECODE (37, 103, STRING(1:L))
d131 1
a131 1
  103 FORMAT (I5, F8.3, F6.3, 2I5, I8)
d146 2
a147 2
      ACCEPT "(A20)",FILSPC
      L=INANYR(FILSPC,' ')
d149 1
a149 3
      OPEN(0,FILE=FILSPC,STATUS='OLD',ERR=38)
      CLOSE(0,STATUS='DELETE')
   38 OPEN(0,FILE=FILSPC,STATUS='NEW',ERR=39)
d151 1
a151 1
   32 WRITE(0,102)DRY(I),WET(I),MINUTE(I),SEC(I),COUNTS(I)
d153 2
a154 2
      CLOSE(0,STATUS='KEEP')
      TYPE "(' SAVE WELL COUNTER DATA FILE ', A20)", FILSPC
d156 1
a156 1
   39 TYPE "(' ERROR OPENING', A20)", FILSPC
@
