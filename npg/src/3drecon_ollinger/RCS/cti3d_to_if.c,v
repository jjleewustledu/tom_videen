head	1.1;
access;
symbols;
locks; strict;
comment	@ * @;


1.1
date	98.04.01.14.39.42;	author tom;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/*--------------------------------------------------------------------

Program: cti3d_to_if

Purpose: Convert CTI format file to an interfile file.

Perpetrator: John Ollinger

Date: November 20. 1995

Copyright 1991-1996, Washington University.
All rights reserved. Unauthorized reproduction prohibited.

---------------------------------------------------------------------*/

#include <stdio.h>
#include <math.h>
#include <fcntl.h>
#include <imagio.h>
#include <cti_proto.h>

#define MAXNAME 120
#define TRUE 1
#define FALSE 0

static char rcsid [] = "$Header: /home/fafner/jmo/src/scatter/scat/RCS/cti3d_to_if.c,v 3.1 1998/03/24 23:43:10 jmo Exp jmo $";

void main(argc,argv)

int	argc;
char	*argv[];

{

SubHeader	*sh;
MainHeader     *mh;

FILE	*fp;

int	i,j,k,stat,length,arg,*pln,npln=1,pln_cti,
	outdim,ioff,joff,write_enable=FALSE,
	plane=1,frame=1,gate=1,data=0,bed=0,inframe=1,
	jc,ic,dim1,dim2,ijc,ring[2];

float	*image,scale,min,max,sum;

char	ans[MAXNAME],*infile,*outfil,*output_type;

if(argc < 3) {
    fprintf(stderr,"Usage: cti3d_to_if input_file output_file  -f frame\n");
    printf("Copies specified frame to output file.\n");
    exit(-1);
    }

infile  = argv[1];
outfil = argv[2];
if((mh=getmhdr(infile)) == NULL) {
    fprintf(stderr,"Could not read main header., %s\n",infile);
    exit(ERROR);
    }

for(i=1;i<argc;i++) {
    if(!strcmp(argv[i],"-f"))
	inframe = atoi(argv[i+1]);
	++i;
    }

mh->nframe = 1;
for(plane=1;plane<=mh->nplane;plane++) {
    ringnum_if(plane,ring,mh->scanner_type);
    pln_cti = plnnum_f3d(ring[0],ring[1],mh->scanner_type);
    if((image=rdimg(infile,pln_cti,inframe,gate,data,bed)) == NULL) {
        fprintf(stderr,"Error reading %s, plane %d\n",infile,pln_cti);
        exit(ERROR);
        }
    if((sh=getsbhdr(infile,pln_cti,inframe,gate,data,bed)) == NULL) {
        fprintf(stderr,"Could not read subheader., %s\n",infile);
        exit(ERROR);
        }

    for(i=0;i<sh->dim1*sh->dim2;i++)
        image[i] /= sh->deadtime_corr;

    frame = 1;
    mh->file_format = INTERFILE;
    if(mh->data_file != NULL)
	free(mh->data_file);
    mh->data_file = outfil;
    free(mh->whole_header);
    mh->whole_header = NULL;
    if((stat=wrimg(outfil,image,mh,sh,plane,1,gate,data,bed)) != OK) {
        fprintf(stderr,"Error writing %s, plane %d\n",outfil,plane);
        exit(ERROR);
        }
    free(image);
    free(sh);
    }
free(mh);

}
@
