head	1.1;
access;
symbols;
locks; strict;
comment	@ * @;


1.1
date	98.04.01.14.39.42;	author tom;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/*$Id: cube.h,v 3.1 1998/03/24 23:43:10 jmo Exp jmo $*/
/*$Log: cube.h,v $
 * Revision 3.1  1998/03/24  23:43:10  jmo
 * ..
 *
 * Revision 3.0  1997/10/29  19:26:43  jmo
 * Support Exact HR.
 *
 * Revision 2.3  1996/04/23  15:03:19  jmo
 * Version released April 23, 1996
 *
 * Revision 2.0  1996/01/27  13:46:47  jmo
 * Version installed at Neuro-imaging group, January 1996
 *
 * Revision 1.2  1996/01/18  16:11:18  jmo
 * *** empty log message ***
 *
 * Revision 1.1  1996/01/12  18:09:32  jmo
 * Initial revision
 *
 * Revision 1.3  1995/10/25  16:37:02  jmo
 *
 * Revision 1.2  1995/06/19  16:48:23  jmo
 * Change Z_INC to ZZ_INC
 *
 * Revision 1.1  95/01/19  22:40:20  ty7777
 * Initial revision
 * */

#ifndef CUBE_INCLUDED
#define CUBE_INCLUDED

static char rcsid_cube [] = "$Header: /home/fafner/jmo/src/scatter/scat/RCS/cube.h,v 3.1 1998/03/24 23:43:10 jmo Exp jmo $";

/*-------------------------------------------------------------------

Purpose: Define header written on image files.  The files consist
	 of a single 256 byte header followed by data.

Date: March 12, 1990

By: John Ollinger

Copyright 1991-1996, Washington University.
All rights reserved. Unauthorized reproduction prohibited.

-------------------------------------------------------------------*/

#define CUBE_HDR_LEN 256 /* Length of general info section.		*/
#define ZZ_INC	16	 /* Incremental number of planes allocated.	*/

extern struct cube_header *GetCubeHeader(),*MakeCubeHeader();

extern struct cube_internal_header *MakeInternalHeader();

extern float *GetCubePlane(),*GetCubePlaneZero();

FILE  *getfd();

#define BYTE  0
#define SHORT 1
#ifndef FLOAT
#define FLOAT 3
#endif

#ifndef ERROR
#define ERROR -1
#endif
#ifndef TRUE
#define TRUE 1
#endif
#ifndef FALSE
#define FALSE 0
#endif

#ifndef OK
#define OK 1
#endif

#define SHORT_MAX 65535
#define BYTE_MAX  255
#define LEN_CUBE_PLANE sizeof(struct cube_plane)
#define LEN_ID	120	/* Length of ID string.				*/

struct cube_header {
    int	xdim;		/* Horizontal dimension. 			*/
    int	ydim;		/* Vertical dimension.				*/
    int	zdim;		/* Depth dimension (Number of planes in cube.	*/
    int	  type;		/* Numerical format, FLOAT, SHORT or BYTE.	*/
    float ctr_offset;	/* Center of rotation offset 		*/
    float ang_inc; 	/* Angular increment in radians. 		*/
    float detector_ctr; /* Center of detector array. 			*/
    float duration;	/* Duration of scan in seconds.            */
    float time;
    float position;
    char  id[LEN_ID];		/* Identifier string containing arbitrary info. */
    };

struct cube_internal_header {
    int xdim;		/* Horizontal dimension. 			*/
    int ydim;		/* Vertical dimension.				*/
    int	zdim;		/* Depth dimension (Number of planes in cube.	*/
    int zmax;		/* Number of plane-entries allocated in hdr.	*/
    int	  type;		/* Numerical format, FLOAT, SHORT or BYTE.	*/
    float ctr_offset;	/* Center of rotation using "C" language index.	*/
    float ang_inc; 	/* Angular increment in radians. 		*/
    float detector_ctr; /* Center of detector array. 			*/
    float duration;	/* Duration of scan in seconds.            */
    struct cube_plane *pln; /* Information regarding specific plane.	*/
    };

struct cube_plane {
    float time;
    float position;
    float dummy[5];
    float bias;		/* Minimum value in image, result = n*scl+offset.*/
    float scl;		/* Scale factor to convert to original values.  */
    char  id[LEN_ID];	/* Identifier string containing arbitrary info. */
    };

#endif /* CUBE_INCLUDED */
@
