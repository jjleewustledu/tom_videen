head	1.1;
access;
symbols;
locks; strict;
comment	@ * @;


1.1
date	98.04.01.14.39.42;	author tom;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/*--------------------------------------------------------------------

Program: floatmath

Purpose: Perform floating point math on scalar arguments and return
	 on stdout.

Perpetrator: John Ollinger

Date: January 1, 1992

Copyright 1991-1996, Washington University.
All rights reserved. Unauthorized reproduction prohibited.

---------------------------------------------------------------------*/

#include	<stdio.h>
#include	<math.h>
#include	<fcntl.h>

#define MAXNAME 80
#define TRUE 1
#define FALSE 0

static char rcsid [] = "$Header: /home/fafner/jmo/src/scatter/scat/RCS/floatmath.c,v 3.1 1998/03/24 23:43:10 jmo Exp jmo $";

void main(argc,argv)

int	argc;
char	*argv[];

{

struct header *hdr;

int	i,j,k,stat,length,arg,lcforce;

float	x,y,z;

char    op[8];


if(argc < 4) {
    fprintf(stderr,"Usage:floatmath x op y\n");
    printf("\"op\" takes on values of +, -, *, /\n");
    printf("Output written on stdout.\n");
    exit(0);
    }

x = atof(argv[1]);
strcpy(op,argv[2]);
y = atof(argv[3]);

if(!strcmp(op,"+"))
    z = x + y;
else if(!strcmp(op,"-"))
    z = x - y;
else if(!strcmp(op,"*"))
    z = x*y;
else if(!strcmp(op,"/")) {
    if(y != 0)
        z = x/y;
    else {
	fprintf(stderr,"Invalid argument to floatmath, divide by zero.\n");
	exit(-1);
	}
    }
else {
    fprintf(stderr,"Invalid argument to floatmath, invalid op \"%s\".\n",op);
    exit(-1);
    }

fprintf(stdout,"%g\n",z);

}
@
