head	1.1;
access;
symbols;
locks; strict;
comment	@ * @;


1.1
date	98.04.01.14.39.42;	author tom;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/*--------------------------------------------------------------------

Program: cti_datcpy

Purpose: Copy data one to data zero.

Perpetrator: John Ollinger

Date: August 7, 1990

Copyright 1991-1996, Washington University.
All rights reserved. Unauthorized reproduction prohibited.

---------------------------------------------------------------------*/

#include <stdio.h>
#include <math.h>
#include <fcntl.h>
#include <imagio.h>
#include <cti_proto.h>

#define MAXNAME 120
#define TRUE 1
#define FALSE 0

static char rcsid [] = "$Header: /home/fafner/jmo/src/scatter/scat/RCS/cti_datcpy.c,v 3.1 1998/03/24 23:43:10 jmo Exp jmo $";

void main(argc,argv)

int	argc;
char	*argv[];

{

SubHeader	*sh,*shwrong;
MainHeader     *mh;

FILE	*fp;

int	i,j,k,stat,length,arg,lcforce,*pln,npln=1,
	outdim,ioff,joff,write_enable=FALSE,
	plane=1,frame=1,gate=1,data=1,datain=1,bed=0,
	jc,ic,dim1,dim2,ijc;

float	*image,scale;

char	ans[MAXNAME],*twofrmfil,*fixedfil;

if(argc < 3) {
        fprintf(stderr,"Usage: cti_datcpy two_data_file one_data_file [-f -d data_number]\n");
	printf("Copies data 1 to data 0 (or data_number to data 0)\n");
        exit(-1);
        }

twofrmfil  = argv[1];
fixedfil = argv[2];
if((mh=getmhdr(twofrmfil)) == NULL) {
    fprintf(stderr,"Could not read main header., %s\n",twofrmfil);
    exit(ERROR);
    }

lcforce = FALSE;
for(i=1;i<argc;i++) {
    if(!strcmp(argv[i],"-f"))
	lcforce = TRUE;
    if(!strcmp(argv[i],"-d") && i < argc-1) {
	datain = atoi(argv[i+1]);
	++i;
	}
    }

if((fp = fopen(fixedfil,"r")) == NULL | lcforce == TRUE) {
    /* File does not exist, write to it. */
    write_enable = TRUE;
    }
else {
    fclose(fp);
    ans[0] = NULL;
    do {
        fprintf(stderr,"Write output to %s? (y/n)\n",fixedfil);
        scanf("%s",ans);
        if(!strcmp(ans,"y")) 
    	    write_enable = TRUE;
	else if(!strcmp(ans,"n"))
	    exit(OK);
        } while(strcmp(ans,"y") && strcmp(ans,"n"));
    }

printf("Copying data %d of %s to data 0 of %s\n",datain,twofrmfil,fixedfil);
mh->nframe = 1;
    for(plane=1;plane<=mh->nplane;plane++) {
        data = datain;
        if((image=rdimg(twofrmfil,plane,frame,gate,data,bed)) == NULL) {
            fprintf(stderr,"Error reading %s, plane %d\n",twofrmfil,plane);
            exit(ERROR);
            }
        if((sh=getsbhdr(twofrmfil,plane,frame,gate,data,bed)) == NULL) {
            fprintf(stderr,"Could not read main header., %s\n",twofrmfil);
            exit(ERROR);
            }

	for(i=0;i<sh->dim1*sh->dim2;i++)
	    image[i] /= sh->deadtime_corr;

        data = 0;
        if((stat=wrimg(fixedfil,image,mh,sh,plane,frame,gate,data,bed)) != OK) {
            fprintf(stderr,"Error writing %s, plane %d\n",fixedfil,plane);
            exit(ERROR);
            }
    }

printf("Plane with data %d copied to %s\n",datain,fixedfil);

}
@
