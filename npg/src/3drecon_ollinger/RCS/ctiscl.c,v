head	1.1;
access;
symbols;
locks; strict;
comment	@ * @;


1.1
date	98.04.01.14.39.42;	author tom;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/*$Id: ctiscl.c,v 3.1 1998/03/24 23:43:10 jmo Exp jmo $*/
/*$Log: ctiscl.c,v $
 * Revision 3.1  1998/03/24  23:43:10  jmo
 * *** empty log message ***
 *
 * Revision 3.0  1997/10/29  19:26:43  jmo
 * Support Exact HR.
 *
 * Revision 2.5  1997/08/06  18:22:04  jmo
 * Last version before adding CTI rev 7 support.
 *
 * Revision 2.4  1996/06/19  11:19:37  jmo
 * *** empty log message ***
 *
 * Revision 2.3  1996/04/23  15:02:05  jmo
 * Version released April 23, 1996
 *
 * Revision 2.0  1996/01/27  13:44:11  jmo
 * Version installed at Neuro-imaging group, January 1996
 *
 * Revision 1.2  1996/01/18  16:09:50  jmo
 * Modified file formats, Interfile and Matrix Rev 7.0 support.
 *
 * Revision 1.1  1996/01/12  18:08:56  jmo
 * Initial revision
 *
 * Revision 1.4  1995/11/08  14:07:48  jmo
 * Initial tests on version 6 and 7 combined I/O.
 *
 * Revision 1.3  1995/05/04  10:36:34  jmo
 * Modified normalization files.
 *
 * Revision 1.2  95/03/18  11:55:44  jmo
 * Fix path to cti_proto.h
 * 
 * Revision 1.1  95/01/19  22:40:20  ty7777
 * Initial revision
 * */

/*--------------------------------------------------------------------

Program: ctiscl

Purpose: Scale CTI images.

Perpetrator: John Ollinger

Date: August 7, 1990

Copyright 1991-1996, Washington University.
All rights reserved. Unauthorized reproduction prohibited.

---------------------------------------------------------------------*/

#include <stdio.h>
#include <math.h>
#include <fcntl.h>
#include <imagio.h>
#include <cti_proto.h>

#define MAXNAME 120
#define TRUE 1
#define FALSE 0

static char rcsid [] = "$Header: /home/fafner/jmo/src/scatter/scat/RCS/ctiscl.c,v 3.1 1998/03/24 23:43:10 jmo Exp jmo $";

void main(argc,argv)

int	argc;
char	*argv[];

{

SubHeader	*shimg;
SubHeader	*shscn;
MainHeader     *mh;
void		*sh;

FILE	*fp;

int	i,j,k,stat,length,arg,lcforce,*pln,npln=1,ipln,
	outdim,ioff,joff,write_enable=FALSE,
	plane=1,frame=1,gate=1,data=0,bed=0,
	jc,ic,dim1,dim2,ijc,koff;

float	*imgin,*flip,*imgout,scale;

char	ans[MAXNAME],*mfilnam,*filnam,*outfil;

if(argc < 3) {
    fprintf(stderr,"Usage: ctiscl input scale_factor -f frame\n");
    fprintf(stderr,"       Scales input by scale_factor.\n");
    exit(-1);
    }

filnam  = argv[1];
scale  = atof(argv[2]);

for(i=3;i<argc;i++) {
    if(!strcmp(argv[i],"-f")) {
	++i;
	frame = atoi(argv[i]);
	}
    }

if((mh=getmhdr(filnam)) == NULL) {
    fprintf(stderr,"Could not read main header., %s\n",filnam);
    exit(ERROR);
    }

if(strstr(filnam,".v") || strstr(filnam,".S"))
    mh->nplane = 1;

for(plane=1;plane<=mh->nplane;plane++) {
    if((sh=getsbhdr(filnam,plane,frame,gate,data,bed)) == NULL) {
        fprintf(stderr,"Could not read main header., %s\n",filnam);
        exit(ERROR);
        }

    if(strstr(filnam,".scn") || strstr(filnam,".S")) {
	shscn = sh;
        shscn->scale_factor *= scale;
	}
    else if(strstr(filnam,".img") || strstr(filnam,".v")) {
	shimg = sh;
        if(shimg->scale_factor > 0)
	    shimg->scale_factor *= scale;
	else
	    shimg->scale_factor = scale;
	}

    if((putsbhdr(sh,filnam,plane,frame,gate,data,bed)) != NULL) {
        fprintf(stderr,"Could not put subheader, plane %d, %s\n",plane,filnam);
        exit(ERROR);
        }
    free(sh);

    }

}
@
