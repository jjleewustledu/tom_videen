head	1.1;
access;
symbols;
locks; strict;
comment	@c @;


1.1
date	95.01.19.22.40.20;	author ty7777;	state Exp;
branches;
next	;


desc
@initial checking in, working version.
@


1.1
log
@Initial revision
@
text
@c***************************************************************
c
c Subroutines: realft and four1
c
c Purpose: Compute real fft of one dimensional data.
c
c Source: Numerical recipes in C, Press, Flannery et al
c
c Date: August 3, 1989
c
c Copied right: John Ollinger
c
c**************************************************************

c     ********************************
      subroutine realft (data, n, isign)
c     ********************************

c Calculate the Fourier Transform of a set of 2n real-valued 
c data points.  Replaces this data (which is stored in array data() )
c by the positive frequency half of its complex Fourier Transform. 
c The real-valued first and last components of the complex transform
c are returned as elements data(1) and data(2) respectively.  n must
c be a power of 2.  This reoutine also calculates the inverse
c transform of a complex data array if it is the transform of real
c data.  The result in this case must be multiplied by 1/n.

      real*8 wr,wi,wpr,wpi,wtemp,theta
      dimension data(*)
      theta=6.28318530717959d0/2.0d0/dble(n)
      wr=1.0d0
      wi=0.0d0
      c1=0.5
      if (isign.eq.1) then
        c2=-0.5
        call four1(data,n,+1)
        data(2*n+1)=data(1)
        data(2*n+2)=data(2)
      else
        c2=0.5
        theta=-theta
        data(2*n+1)=data(2)
        data(2*n+2)=0.0
        data(2)=0.0
      endif
      wpr=-2.0d0*dsin(0.5d0*theta)**2
      wpi=dsin(theta)
      n2p3=2*n+3
      do 11 i=1,n/2+1
        i1=2*i-1
        i2=i1+1
        i3=n2p3-i2
        i4=i3+1
        wrs=sngl(wr)
        wis=sngl(wi)
        h1r=c1*(data(i1)+data(i3))
        h1i=c1*(data(i2)-data(i4))
        h2r=-c2*(data(i2)+data(i4))
        h2i=c2*(data(i1)-data(i3))
        data(i1)=h1r+wrs*h2r-wis*h2i
        data(i2)=h1i+wrs*h2i+wis*h2r
        data(i3)=h1r-wrs*h2r+wis*h2i
        data(i4)=-h1i+wrs*h2i+wis*h2r
        wtemp=wr
        wr=wr*wpr-wi*wpi+wr
        wi=wi*wpr+wtemp*wpi+wi
11    continue
      if (isign.eq.1) then
        data(2)=data(2*n+1)
      else
        call four1(data,n,-1)
      endif
      return
      end


c     *******************************
      subroutine four1(data,nn,isign)
c     *******************************

      real*8 wr,wi,wpr,wpi,wtemp,theta
      dimension data(*)
      n=2*nn
      j=1
      do 11 i=1,n,2
        if(j.gt.i)then
          tempr=data(j)
          tempi=data(j+1)
          data(j)=data(i)
          data(j+1)=data(i+1)
          data(i)=tempr
          data(i+1)=tempi
        endif
        m=n/2
1       if ((m.ge.2).and.(j.gt.m)) then
          j=j-m
          m=m/2
        go to 1
        endif
        j=j+m
11    continue
      mmax=2
2     if (n.gt.mmax) then
        istep=2*mmax
        theta=6.28318530717959d0/(isign*mmax)
        wpr=-2.d0*dsin(0.5d0*theta)**2
        wpi=dsin(theta)
        wr=1.d0
        wi=0.d0
        do 13 m=1,mmax,2
          do 12 i=m,n,istep
            j=i+mmax
            tempr=sngl(wr)*data(j)-sngl(wi)*data(j+1)
            tempi=sngl(wr)*data(j+1)+sngl(wi)*data(j)
            data(j)=data(i)-tempr
            data(j+1)=data(i+1)-tempi
            data(i)=data(i)+tempr
            data(i+1)=data(i+1)+tempi
12        continue
          wtemp=wr
          wr=wr*wpr-wi*wpi+wr
          wi=wi*wpr+wtemp*wpi+wi
13      continue
        mmax=istep
      go to 2
      endif
      return
      end
@
