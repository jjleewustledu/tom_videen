head	1.1;
access;
symbols;
locks; strict;
comment	@ * @;


1.1
date	95.01.19.22.40.20;	author ty7777;	state Exp;
branches;
next	;


desc
@Initial checking in, working version.
@


1.1
log
@Initial revision
@
text
@/*$Id$*/
/*$Log$*/

/*--------------------------------------------------------------------

Program: ctiscl

Purpose: Scale CTI images.

Perpetrator: John Ollinger

Date: August 7, 1990

---------------------------------------------------------------------*/

#include <stdio.h>
#include <math.h>
#include <fcntl.h>
#include <petutil/matrix.h>
#include "cti_proto.h"

#define MAXNAME 120
#define TRUE 1
#define FALSE 0

static char rcsid [] = "$Header$";

void main(argc,argv)

int	argc;
char	*argv[];

{

Image_subheader	*shimg;
Scan_subheader	*shscn;
Norm_subheader  *shnrm;
Main_header     *mh;
void		*sh;

FILE	*fp;

int	i,j,k,stat,length,arg,lcforce,*pln,npln=1,ipln,
	outdim,ioff,joff,write_enable=FALSE,
	plane=1,frame=1,gate=1,data=0,bed=0,
	jc,ic,xdim,ydim,ijc,koff;

float	*imgin,*flip,*imgout,scale;

char	ans[MAXNAME],*mfilnam,*filnam,*outfil;

if(argc < 3) {
    fprintf(stderr,"Usage: ctiscl input scale_factor [-f]\n");
    exit(-1);
    }

filnam  = argv[1];
scale  = atof(argv[2]);

if((mh=getmhdr(filnam)) == NULL) {
    fprintf(stderr,"Could not read main header., %s\n",filnam);
    exit(ERROR);
    }

for(plane=1;plane<=mh->num_planes;plane++) {
    if((sh=getsbhdr(filnam,plane,frame,gate,data,bed)) == NULL) {
        fprintf(stderr,"Could not read main header., %s\n",filnam);
        exit(ERROR);
        }

    if(strstr(filnam,".scn")) {
	shscn = sh;
        shscn->scale_factor *= scale;
	}
    else if(strstr(filnam,".img")) {
	shimg = sh;
        if(shimg->quant_scale > 0)
	    shimg->quant_scale *= scale;
	else
	    shimg->quant_scale = scale;
	}
    else if(strstr(filnam,".nrm")) {
	shnrm = sh;
        shnrm->scale_factor *= scale;
	}

    if((putsbhdr(sh,filnam,plane,frame,gate,data,bed)) != NULL) {
        fprintf(stderr,"Could not put subheader, plane %d, %s\n",plane,filnam);
        exit(ERROR);
        }
    free(sh);

    }

}
@
