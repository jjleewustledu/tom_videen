head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	95.02.13.15.54.31;	author ty7777;	state Exp;
branches;
next	;


desc
@Initial checkiing in, working version.
@


1.1
log
@Initial revision
@
text
@#/bin/csh

if($#argv < 5) then
    echo  Usage: scat.csh emis.scn tran.scn blank.scn norm_true.nrm norm_scat.nrm
    echo "       -tu ext_tran_up_mm -td ext_tran_dwn_mm  -iter num_iterations"
    echo "       -eu ext_emis_up_mm -ed ext_emis_dwn_mm -v -mf mult_fraction"
    echo "       -np num_psi_factor -dim imgdim_factor -correct_data -scale-tails"
    exit
endif

set EMIS  = $1
set MATCH = $EMIS
set TRAN  = $2
set BLANK = $3
set NORMTRUE = $4
set NORMSCAT = $5
set NUM_ITER = 5
set MULT_FRAC = .23
setenv QUIET -quiet
set NUM_PSI_FCTR = 1
set IMGDIM_FCTR = 1
set EXT_TRAN_UP = 0
set EXT_TRAN_DWN = 0
set EXT_EMIS_UP = 0
set EXT_EMIS_DWN = 0
set CORRECT_DATA = 
set SCALE_TAILS = 
set FRAME = 1

if($?TABLES < 2) then
    setenv TABLES /data/pethp3/img2/tables
endif
echo "Tables assumed to be located in $TABLES"

set i = 6
while ($i <= $#argv)
    switch ($argv[$i])
        case -np:
            @@ i++
            set NUM_PSI_FCTR = $argv[$i]
	breaksw
        case -dim:
            @@ i++
            set IMGDIM_FCTR = $argv[$i]
	breaksw
        case -mf:
            @@ i++
            set MULT_FRAC = $argv[$i]
	breaksw
        case -iter:
            @@ i++
            set NUM_ITER = $argv[$i]
	breaksw
        case -v:
            set QUIET =
	breaksw
        case -correct_data:
            set CORRECT_DATA = -correct_data
	breaksw
        case -scale_tails:
            set SCALE_TAILS = -scale_tails
	breaksw
        case -tu:
            @@ i++
            set EXT_TRAN_UP = $argv[$i]
	breaksw
        case -f:
            @@ i++
            set FRAME = $argv[$i]
	breaksw
        case -td:
            @@ i++
            set EXT_TRAN_DWN = $argv[$i]
        breaksw
        case -eu:
            @@ i++
            set EXT_EMIS_UP = $argv[$i]
	breaksw
	case -ed
            @@ i++
            set EXT_EMIS_DWN = $argv[$i]
        breaksw
    endsw
    @@ i++
end

setenv RINGS all
setenv ITER_TYPE ss
set EMIS_CUTOFF = .2
set TRAN_CUTOFF = .25
set THETA_STEP = 1
set ENERGY_THRESH = 380
@@ NUMANG = 48 * $IMGDIM_FCTR
@@ IMGDIM = 40 * $IMGDIM_FCTR
set NARG = 1
set NUM_PSI_ATTEN_FCTR = 4
set NUMANG_FINAL = $NUMANG
set IMGDIM_FINAL = $IMGDIM
set ID = $IMGDIM\x$IMGDIM\_$NUMANG

set ARGS = ($EMIS $TRAN $BLANK -id $ID -psi $NUM_PSI_FCTR \
    -cutoff $EMIS_CUTOFF $TRAN_CUTOFF -theta_step $THETA_STEP \
    -rings $RINGS -ethrsh $ENERGY_THRESH -frame $FRAME \
    -numang_iter $NUMANG -imgdim_iter $IMGDIM \
    -attpsi $NUM_PSI_ATTEN_FCTR -numiter $NUM_ITER $QUIET \
    -imgdim_final $IMGDIM_FINAL -numang_final $NUMANG_FINAL \
    -normtrue $NORMTRUE -normscat $NORMSCAT \
    -iter_type $ITER_TYPE -mult_frac $MULT_FRAC \
    -ext_tran_up $EXT_TRAN_UP -ext_emis_up $EXT_EMIS_UP \
    -ext_tran_dwn $EXT_TRAN_DWN -ext_emis_dwn $EXT_EMIS_DWN \
    $CORRECT_DATA $SCALE_TAILS)

echo $ARGS
echo "Calculating scatter distribution."
#x11ups $BIN/scat_cti953b_f3d -a "$ARGS "
scat_cti953b $ARGS
@
