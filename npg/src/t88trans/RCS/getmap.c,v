head	3.0;
access;
symbols;
locks; strict;
comment	@ * @;


3.0
date	2004.02.20.16.18.40;	author tom;	state Exp;
branches;
next	2.2;

2.2
date	99.12.17.16.58.46;	author tom;	state Exp;
branches;
next	2.1;

2.1
date	96.09.10.20.00.55;	author tom;	state Exp;
branches;
next	2.0;

2.0
date	96.08.14.20.13.10;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	95.10.12.21.19.02;	author tom;	state Exp;
branches;
next	;


desc
@@


3.0
log
@Feb 2004
@
text
@/*	$Id: getmap.c,v 2.2 1999/12/17 16:58:46 tom Exp tom $
	$Log: getmap.c,v $
 * Revision 2.2  1999/12/17  16:58:46  tom
 * lint cleaning
 *
 * Revision 2.1  1996/09/10  20:00:55  tom
 * *** empty log message ***
 *
 * Revision 2.0  1996/08/14  20:13:10  tom
 * new libs
 *
 * Revision 1.1  1995/10/12  21:19:02  tom
 * Initial revision
 * */
/*	===============================================================================
 *	Module:			getmap.c
 *	Date:			Oct 1995
 *	Author:			Tom Videen
 *	Description:	Read matrix transformation from a map file.
 *	===============================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/t88trans/RCS/getmap.c,v 2.2 1999/12/17 16:58:46 tom Exp tom $";
#endif

#include <stdio.h>
#include <image.h>
#include <nrutil.h>

int             getmap (filename, map)
	char           *filename;
	float         **map;

{
	FILE           *fp;
	char            line[MAXLINE];
	int				i;

	fp = fopen (filename, "r");
	if (fp == (FILE *) NULL) {
		fprintf (stderr,"Error opening matrix file %s\n", filename);
		return (ERROR);
	}
	for (i = 1; i <= 2; i++) {
		if (fgets (line, MAXLINE, fp) == NULL) {
			fprintf (stderr, "Error reading matrix file\n");
			return (ERROR);
		}
	}
	for (i = 1; i <= 4; i++) {
		if (fgets (line, MAXLINE, fp) != NULL) {
			if (sscanf (line, "%f %f %f %f", &map[i][1], &map[i][2], &map[i][3],
				    &map[i][4]) != 4) {
				fprintf (stderr, "Error reading matrix file\n");
				return (ERROR);
			}
		} else {
			fprintf (stderr, "Error reading matrix file\n");
			return (ERROR);
		}
	}
	(void) fclose (fp);
	return (OK);
}
@


2.2
log
@lint cleaning
@
text
@d1 1
a1 1
/*	$Id: getmap.c,v 2.1 1996/09/10 20:00:55 tom Exp tom $
d3 3
d17 1
a17 1
 *	Date:			12-Oct-95
d22 1
d24 1
a24 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/t88trans/RCS/getmap.c,v 2.1 1996/09/10 20:00:55 tom Exp tom $";
d63 1
a63 1
	fclose (fp);
@


2.1
log
@*** empty log message ***
@
text
@d1 1
a1 1
/*	$Id: getmap.c,v 2.0 1996/08/14 20:13:10 tom Exp tom $
d3 3
d19 4
a23 1
#include <string.h>
a24 1
#include <nr.h>
a26 4
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/t88trans/RCS/getmap.c,v 2.0 1996/08/14 20:13:10 tom Exp tom $";
#endif

d38 1
a38 1
		printf ("Error opening matrix file %s\n", filename);
@


2.0
log
@new libs
@
text
@d1 1
a1 1
/*	$Id: getmap.c,v 1.1 1995/10/12 21:19:02 tom Exp $
d3 3
d23 1
a23 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/t88trans/RCS/getmap.c,v 1.1 1995/10/12 21:19:02 tom Exp $";
d58 1
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
/*	$Id$
	$Log$ */
d15 3
a17 3
#include <petutil/petutil.h>
#include <nrecipes/kr/nr.h>
#include <nrecipes/kr/nrutil.h>
d19 3
a21 1
static char     rcsid[] = "$Header$";
d35 1
a35 1
		return FAIL;
d40 1
a40 1
			return FAIL;
d48 1
a48 1
				return FAIL;
d52 1
a52 1
			return FAIL;
d55 1
a55 1
	return SUCCEED;
@
