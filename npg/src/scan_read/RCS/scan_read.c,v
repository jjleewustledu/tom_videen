head	1.4;
access;
symbols;
locks; strict;
comment	@ * @;


1.4
date	2004.02.19.22.18.05;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	2002.11.27.17.33.32;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	98.12.18.16.13.29;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	98.12.10.18.49.15;	author tom;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Feb 2004
@
text
@/*	$Log: scan_read.c,v $
 * Revision 1.3  2002/11/27  17:33:32  tom
 * *** empty log message ***
 *
 * Revision 1.2  1998/12/18  16:13:29  tom
 * *** empty log message ***
 *
 * Revision 1.1  1998/12/10  18:49:15  tom
 * Initial revision
 * */
/* ===============================================================================
 *	Module:			scan_read.c
 *	Date:			Dec 1998
 *	Author:			Tom Videen
 *	Description:	Read scan file for IDL
 *	Notes:
 *		If error, write -1 followed by string message to stdout
 *	Otherwise write:
 *		file_format (integer)
 *		first frame	(integer)
 *		dim1, dim2, dim3 (3 integers)
 *	if (file_format eq 2)
 *		mh7		sizeof (Main_header7)
 *		s3d		sizeof (Scan3D_subheader7)
 *	then writes each plane as dim1 x dim2 shorts
 * ===============================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/scan_read/RCS/scan_read.c,v 1.3 2002/11/27 17:33:32 tom Exp tom $";
#endif

#include <stdio.h>
#include <stdlib.h>
#include <image.h>
#include <libimage.h>

main (argc, argv)
/*@@unused@@*/
	int             argc;
	char           *argv[];
{
	ImageFile      *file;
	Index           indx;
	short          *matrix;
	char           *fname;
	int             frm;
	long            pln, sizepln;
	long   			dim1, dim2, dim3;

	fname = argv[1];
	frm = atoi (argv[2]);
	indx.frm = frm;
	indx.pln = 1;
	indx.gate = 1;
	indx.data = 0;
	indx.bed = 0;
	file = make_imgfile (fname);
	if (open_imgfile (file) == ERROR) {
		fprintf (stdout, "-1  Cannot open %s\n", fname);
		return (ERROR);
	}
	if (get_mh (file) == ERROR) {
		fprintf (stdout, "-1  Cannot get MainHeader from %s\n", fname);
		return (ERROR);
	}
	if (file->mh->file_format != MATRIX_REV7) {
		fprintf (stdout, "-1  File is not type Matrix 7 %s\n", fname);
		return (ERROR);
	}
	if (existimgfrm (file, &indx) == ERROR) {
		if (indx.frm == 1) {
			indx.frm = 2;
			if (existimgfrm (file, &indx) == ERROR) {
				indx.frm = 3;
				if (existimgfrm (file, &indx) == ERROR) {
					fprintf (stdout, "-1  Cannot find %s frame 1, 2 or 3\n", fname);
					return (ERROR);
				}
			}
		} else {
			fprintf (stdout, "-1  Cannot find %s frame %d\n",
				 fname, indx.frm);
			return (ERROR);
		}
	}
	if (get_ss7 (file, &indx) == ERROR) {
		fprintf (stdout, "-1  Cannot read file subheader in %s\n", fname);
		return (ERROR);
	}
	if (use_ss7 (file, &indx) == ERROR) {
		fprintf (stdout, "-1  Cannot convert file subheader in %s\n", fname);
		return (ERROR);
	}
	dim1 = (unsigned long) file->sh->dim1;
	dim2 = (unsigned long) file->sh->dim2;
	dim3 = (unsigned long) file->sh->dim3;
	sizepln = dim1 * dim2;

	fprintf (stdout, "%d\n", file->mh->file_format);
	fprintf (stdout, "%d\n", indx.frm);
	fprintf (stdout, "%ld %ld %ld\n", dim1, dim2, dim3);

	(void) fwrite (file->m7->mh, sizeof (Main_header7), 1, stdout);
	(void) fwrite (file->m7->s3d, sizeof (Scan3D_subheader7), 1, stdout);

	for (pln = 1; pln <= dim3; pln++) {
		indx.pln = pln;
		if ((matrix = rdscan7 (file, indx)) == NULL) {
			fprintf (stdout, "-1  Cannot read frame %d plane %ld of %s\n",
				 indx.frm, pln, fname);
			return (ERROR);
		}
		(void) fwrite (matrix, sizeof (short), sizepln, stdout);
		free (matrix);
	}
	close_imgfile (file);
	free_imgfile (file);
	return (OK);
}
@


1.3
log
@*** empty log message ***
@
text
@d2 3
d13 1
a13 1
 *	Date:			Dec-98
d28 1
d30 1
a30 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/scan_read/RCS/scan_read.c,v 1.2 1998/12/18 16:13:29 tom Exp tom $";
d39 1
d49 1
a49 1
	unsigned long   dim1, dim2, dim3;
@


1.2
log
@*** empty log message ***
@
text
@d2 3
d26 1
a26 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/scan_read/RCS/scan_read.c,v 1.1 1998/12/10 18:49:15 tom Exp tom $";
a30 1
#include <math.h>
a32 1
#include <libnrimg.h>
d97 1
a97 1
	fprintf (stdout, "%d %d %d\n", dim1, dim2, dim3);
d99 2
a100 2
	fwrite (file->m7->mh, sizeof (Main_header7), 1, stdout);
	fwrite (file->m7->s3d, sizeof (Scan3D_subheader7), 1, stdout);
d105 1
a105 1
			fprintf (stdout, "-1  Cannot read frame %d plane %d of %s\n",
d109 1
a109 1
		fwrite (matrix, sizeof (short), sizepln, stdout);
@


1.1
log
@Initial revision
@
text
@d1 4
a4 1
/*	$Log$ */
d22 3
a24 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/scan_read/RCS/scan_read.c,v 1.2 1997/10/08 20:48:52 tom Exp $";
d41 1
a41 1
	int             k, frm;
@
