head	1.5;
access;
symbols;
locks; strict;
comment	@ * @;


1.5
date	2004.02.16.22.13.09;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	2000.09.15.15.59.28;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	2000.06.29.18.30.11;	author tom;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Feb 2004
@
text
@/*	$Log: metcalc_global.c,v $
 * Revision 1.2  2000/09/15  15:59:28  tom
 * *** empty log message ***
 *
 * Revision 1.1  2000/06/29  18:30:11  tom
 * Initial revision
 * */
/* ===============================================================================
 *	Module:			metcalc_global.c
 *	Date:			Sept 2000
 *	Author:			Tom Videen
 *	Description:	Compute PVC corrected CBF, CBV, OEF, CMRO2
 *	Modified to use periclot and global counts
 * ===============================================================================
 */
/*@@unused@@*/
static char     rcsid[] = "$Header: /home/npggw/tom/src/metcalc_global/RCS/metcalc_global.c,v 1.2 2000/09/15 15:59:28 tom Exp tom $";

#include <stdio.h>
#include <stdlib.h>
#include <strings.h>
#include <image.h>
#include <imgutil.h>

main (argc, argv)
	int             argc;
	char          **argv;
{
	FILE           *fp;
	HEADER_DATA     hdr;
	float           hcnt, ccnt, ocnt, tcnt;
	float           cbfcnts, cbvcnts, oefcnts, tiscnts;
	float           gcbfcnts, gcbvcnts, goefcnts, gtiscnts;
	float           cbf, cbv, oef, cmr;
	int				proc;
	int				pixels;
	long			gpixels, totpix;
	char           *rgtfile;
	char           *cbfhdr, *cbvhdr, *oefhdr;
	char            rnam[20];
	char            str[101];

/*
 * Get command line arguments.
 */
	if (argc != 10) {
		fprintf (stderr, "Usage: metcalc_global HO CO OO TIS PIX RGT HOhdr COhdr OOhdr\n");
		return (ERROR);
	}
	gcbfcnts = (float) atoi(argv[1]);
	gcbvcnts = (float) atoi(argv[2]);
	goefcnts = (float) atoi(argv[3]);
	gtiscnts = (float) atoi(argv[4]);
	gpixels = (long) atoi(argv[5]);
	rgtfile = argv[6];
	cbfhdr  = argv[7];
	cbvhdr  = argv[8];
	oefhdr  = argv[9];

	cbfcnts = 0;
	cbvcnts = 0;
	oefcnts = 0;
	tiscnts = 0;
	totpix = 0;

/*
 *	Regions with "peri" in their names are read from the data file
 *  and their counts & pixels are subtracted from the global counts & pixels
 *	before computing the global metabolic values.
 */
	fp = fopen (rgtfile, "r");
	if (fp == NULL) {
		fprintf (stderr, "ERROR [metcalc_global]: Cannot open region file %s\n", rgtfile);
		return (ERROR);
	}
	(void) fgets (str, 100, fp);
	while (fscanf (fp, "%s %d %f %f %f %f", rnam,  &pixels, &hcnt, &ccnt, &ocnt, &tcnt) == 6) {
		if (strstr (rnam, "peri") != NULL) {
			cbfcnts += hcnt * pixels;
			cbvcnts += ccnt * pixels;
			oefcnts += ocnt * pixels;
			tiscnts += tcnt * pixels;
			totpix += pixels;
		}
	}
	(void) fclose (fp);

	tiscnts = (gtiscnts*gpixels - tiscnts)*0.001;
	cbfcnts = (gcbfcnts*gpixels - cbfcnts)/tiscnts;
	cbvcnts = (gcbvcnts*gpixels - cbfcnts)/tiscnts;
	oefcnts = (goefcnts*gpixels - cbfcnts)/tiscnts;
	proc = PROC_CBF;
	cbf = procPET (cbfcnts, proc, cbfhdr, &hdr, fp);
	proc = PROC_CBV;
	cbv = procPET (cbvcnts, proc, cbvhdr, &hdr, fp);
	proc = PROC_OEF;
	oef = procOxygen (oefcnts, cbfcnts, cbvcnts, proc, oefhdr, cbfhdr, cbvhdr, &hdr, fp);
	proc = PROC_CMRO2;
	cmr = procOxygen (oefcnts, cbfcnts, cbvcnts, proc, oefhdr, cbfhdr, cbvhdr, &hdr, fp);
	
    fprintf (stdout, "------------------------------\n");
    fprintf (stdout, "%8s %8s %8s %8s\n","CBF","CBV","OEF","CMRO2");
    fprintf (stdout, "%8.3f %8.3f %8.3f %8.3f\n", cbf, cbv, oef, cmr);
	return (OK);
}
@


1.2
log
@*** empty log message ***
@
text
@d2 3
d16 2
a17 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/metcalc_global/RCS/metcalc_global.c,v 1.1 2000/06/29 18:30:11 tom Exp tom $";
@


1.1
log
@Initial revision
@
text
@d1 4
a4 1
/*	$Log$ */
d7 1
a7 1
 *	Date:			Jun 2000
d10 1
a10 1
 *	Modified to use clot, periclot and global counts
d13 1
a13 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/metcalc_global/RCS/metcalc_global.c,v 1.1 1998/05/27 16:50:55 tom Exp $";
d17 1
d25 1
a25 1
	FILE           *fp = NULL;
a27 1
	float           tmp1, tmp2, tmp3, tmp4;
d32 2
a33 1
	long			pixels, gpixels, totpix;
d36 2
a37 2
	char            rnum[16];
	char            rnam[16];
d62 5
d72 9
a80 7
	while (fscanf (fp, "%s %s %f %f %f %f %f %f %f %f %d",
		 rnum, rnam, &hcnt, &ccnt, &ocnt, &tcnt, &tmp1, &tmp2, &tmp3, &tmp4, &pixels) == 11) {
		cbfcnts += hcnt * pixels;
		cbvcnts += ccnt * pixels;
		oefcnts += ocnt * pixels;
		tiscnts += tcnt * pixels;
		totpix += pixels;
d82 2
a83 1
	fclose (fp);
d97 3
a99 3
    printf ("------------------------------\n");
    printf ("%8s %8s %8s %8s\n","CBF","CBV","OEF","CMRO2");
    printf ("%8.3f %8.3f %8.3f %8.3f\n", cbf, cbv, oef, cmr);
@
