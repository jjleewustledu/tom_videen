/*$Id: ecatRfa.h,v 1.3 1999/12/13 22:02:19 tom Exp $*/
/*$Log: ecatRfa.h,v $
 *Revision 1.3  1999/12/13 22:02:19  tom
 *partially cleaned up with lint
 *
 * Revision 1.2  1996/09/25  16:28:32  tom
 * build in Solaris 2
 *
 * Revision 1.1  1994/03/11  19:42:47  ty7777
 * Initial revision
 **/

#ifndef ECATRFA_INCLUDED
#define ECATRFA_INCLUDED

/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#include <rpc/types.h>

#define RFA_SERVER 600000040
#define RFA_SERVER_VERSION 1

#ifndef lint
static char     rcsid_ecatrfa[] = "$Header: /home/npggw/tom/src/libcti/RCS/ecatRfa.h,v 1.3 1999/12/13 22:02:19 tom Exp $";
#endif

enum RFA_FUNCTIONS {
	RFMT = 1,
	RDIR = 1 + 1,
	RREN = 1 + 2,
	RDEL = 1 + 3,
	RBUG = 1 + 4,
	RCPY = 1 + 5
};

typedef enum RFA_FUNCTIONS RFA_FUNCTIONS;

bool_t          xdr_RFA_FUNCTIONS ();

struct RREN_args {
	char           *oldName;
	char           *newName;
};

typedef struct RREN_args RREN_args;

bool_t          xdr_RREN_args ();

struct RCPY_args {
	char           *oldName;
	char           *newName;
	long            fileSize;
};

typedef struct RCPY_args RCPY_args;

bool_t          xdr_RCPY_args ();

struct RDIR_args {
	char           *dirPath;
	int             currDirNo;
};

typedef struct RDIR_args RDIR_args;

bool_t          xdr_RDIR_args ();

struct RDIR_resp {
	char           *dirEntry;
	int             nextDirNo;
	int             freeChunk;
};

typedef struct RDIR_resp RDIR_resp;

bool_t          xdr_RDIR_resp ();

#endif						 /* ECATRFA_INCLUDED */
