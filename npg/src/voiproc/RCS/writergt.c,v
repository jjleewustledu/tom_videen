head	2.0;
access;
symbols;
locks; strict;
comment	@ * @;


2.0
date	2004.02.20.16.21.19;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	2002.11.27.18.19.04;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	99.12.17.17.14.51;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	99.10.12.13.48.29;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	97.01.23.22.53.55;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	97.01.23.21.50.16;	author tom;	state Exp;
branches;
next	;


desc
@@


2.0
log
@Feb 2004
@
text
@/*	$Log: writergt.c,v $
 * Revision 1.5  2002/11/27  18:19:04  tom
 * *** empty log message ***
 *
 * Revision 1.4  1999/12/17  17:14:51  tom
 * lint cleaning
 *
 * Revision 1.3  1999/10/12  13:48:29  tom
 * *** empty log message ***
 *
 * Revision 1.2  1997/01/23  22:53:55  tom
 * ncols in output
 *
 * Revision 1.1  1997/01/23  21:50:16  tom
 * Initial revision
 * */
/* ===============================================================================
 *	Module:			writergt.c
 *	Date:			Jan 1997
 *	Author:			Tom Videen
 *	Description:	Write rgt data to a file.
 *	History:
 *		Jan 1997	Modification of writergt for voistat
 * ===============================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/voiproc/RCS/writergt.c,v 1.5 2002/11/27 18:19:04 tom Exp tom $";
#endif

#include <stdio.h>
#include <imgutil.h>
#include <voiproc.h>

static char           *proc_names[] = {
	"none",
	"cbf",
	"cbv",
	"oef",
	"cmro2",
	"decay_corrected_tissue_activity",
	"uncorrected_tissue_activity"};

int             writergt (rgtfile, prm, version, nvoi, voilist, firstfrm, nsub, rgtlist, date,
			                  uid, voifile, prmfile, nvoxels, adim)
	char           *rgtfile;		 /* output filename */
	PARAMETER_DATA  prm;			 /* parameter data structure */
	char           *version;		 /* program version number */
	int             nvoi;			 /* VOI number */
	VOIDATA        *voilist;		 /* list of VOIs */
	int             firstfrm;		 /* number of first frame (indexed from 1) */
	int             nsub;			 /* number of subjects */
	RGTDATA        *rgtlist;		 /* RGTDATA */
	char           *date;			 /* current date */
	char           *uid;			 /* user id */
	char           *voifile;		 /* region filename */
	char           *prmfile;		 /* parameter file name */
	int             nvoxels;		 /* number of voxels in VOI */
	float          *adim;			 /* voxel dimension (mm) */
{
	FILE           *rgtfp;
	FILE           *fp;
	char            line[MAXLINE];
	char            item[MAXLINE];
	int             nframes;
	int             f0;			 /* number of first frame (indexed from 0) */
	int             s, f;		 /* indices to subject#, frame#, voi# */
	int             total_frames = 0;

	if ((rgtfp = fopen (rgtfile, "w")) == NULL) {
		fprintf (stderr, "ERROR [writergt]: Cannot open file %s\n", rgtfile);
		return (ERROR);
	}
	fprintf (rgtfp, "  %3d   %s\n", VOI_FILETYPE, proc_names[prm.processing]);

/*	Determine total number of frames */

	f0 = firstfrm - 1;
	for (s = 0; s < nsub; s++) {
		nframes = rgtlist[s].nframe - f0;
		total_frames += nframes;
	}

	fprintf (rgtfp, "%4d  4", total_frames);
	fprintf (rgtfp, "%10s", "Mid_Time");
	fprintf (rgtfp, "%10s", voilist[nvoi].voiname);
	fprintf (rgtfp, "%12s%12s", "Start_Time", "Duration\n");
	for (s = 0; s < nsub; s++) {
		for (f = firstfrm; f <= rgtlist[s].nframe; f++)
			fprintf (rgtfp, "%11.2f%14.2f%12.1f%12.1f\n",
				rgtlist[s].midtime[f], rgtlist[s].mean[f][nvoi],
				rgtlist[s].time[f], rgtlist[s].duration[f]);
	}
	fprintf (rgtfp, "\n");
	fprintf (rgtfp, "%s   %s   %s   %s\n", version, date, uid, voifile);
	if (prm.voi_shape == VOI_CUBE)
		fprintf (rgtfp, "voi: cube %f %f %f in mm, ", prm.voi_xdim, prm.voi_ydim, prm.voi_zdim);
	else if (prm.voi_shape == VOI_OLD_SPHERE)
		fprintf (rgtfp, "voi: sphere %f in mm, ", prm.voi_xdim);
	fprintf (rgtfp, "%f cc, %d %s in VOI\n",
		 nvoxels * adim[0] * adim[1] * adim[2] / 1000.0,
		 nvoxels, (nvoxels > 1) ? "voxels" : "voxel");
	fprintf (rgtfp, "\n");

/*
 * Put the parameter file at the end of the data file.
 */
	fprintf (rgtfp, "prm\n");
	fp = fopen (prmfile, "r");
	if (fp == NULL)
		return (ERROR);
	while (fgets (line, MAXLINE, fp) != NULL)
		if (sscanf (line, "%s", item) == 1)
			fprintf (rgtfp, "%s", line);
	fprintf (rgtfp, "endprm\n");
	(void) fclose (rgtfp);
	(void) fclose (fp);
	return (OK);
}
@


1.5
log
@*** empty log message ***
@
text
@d2 3
d19 1
a19 1
 *	Date:			Jan-97
d23 1
a23 1
 *		Jan-97	Modification of writergt for voistat
d26 1
d28 1
a28 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/voiproc/RCS/writergt.c,v 1.4 1999/12/17 17:14:51 tom Exp tom $";
d101 1
a101 1
		 nvoxels * adim[0] * adim[1] * adim[2] / 1000,
d110 2
@


1.4
log
@lint cleaning
@
text
@d2 3
d24 1
a24 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/voiproc/RCS/writergt.c,v 1.3 1999/10/12 13:48:29 tom Exp tom $";
d87 1
a87 1
				rgtlist[s].midtime[f],rgtlist[s].mean[f][nvoi],
d110 2
a111 2
	fclose (rgtfp);
	fclose (fp);
@


1.3
log
@*** empty log message ***
@
text
@d2 3
d21 1
a21 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/voiproc/RCS/writergt.c,v 1.2 1997/01/23 22:53:55 tom Exp tom $";
d28 1
a28 1
char           *proc_names[] = {
@


1.2
log
@ncols in output
@
text
@d2 3
d18 1
a18 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/voiproc/RCS/writergt.c,v 1.1 1997/01/23 21:50:16 tom Exp tom $";
a21 2
#include <stdlib.h>
#include <string.h>
a23 2
#include <image.h>
#include <libimage.h>
d32 1
a32 1
"uncorrected_tissue_activity"};
a54 1
	char           *extension;
d57 1
a57 1
	int             s, f, v;		 /* indices to subject#, frame#, voi# */
d88 1
a88 1
	else if (prm.voi_shape == VOI_SPHERE)
d105 1
a105 1
	close (fp);
@


1.1
log
@Initial revision
@
text
@d1 4
a4 1
/*	$Log$ */
d15 1
a15 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/voistat/RCS/writergt.c,v 1.4 1996/04/26 21:10:35 tom Exp $";
d76 1
a76 1
	fprintf (rgtfp, "%4d%3d", total_frames, nvoi + 2);
@
