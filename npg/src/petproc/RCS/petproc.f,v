head	2.30;
access;
symbols;
locks; strict;
comment	@c @;


2.30
date	2010.08.05.14.13.29;	author tom;	state Exp;
branches;
next	2.29;

2.29
date	2005.10.06.17.05.07;	author tom;	state Exp;
branches;
next	2.28;

2.28
date	2005.08.08.16.29.32;	author tom;	state Exp;
branches;
next	2.25;

2.25
date	2004.11.03.14.28.30;	author tom;	state Exp;
branches;
next	2.24;

2.24
date	2004.11.02.16.40.33;	author tom;	state Exp;
branches;
next	2.22;

2.22
date	2004.11.01.20.24.27;	author tom;	state Exp;
branches;
next	2.21;

2.21
date	2004.07.08.14.39.29;	author tom;	state Exp;
branches;
next	2.20;

2.20
date	2004.02.17.15.09.00;	author tom;	state Exp;
branches;
next	2.18;

2.18
date	2002.11.27.19.48.15;	author tom;	state Exp;
branches;
next	2.17;

2.17
date	99.12.16.17.05.19;	author tom;	state Exp;
branches;
next	2.16;

2.16
date	99.12.15.22.12.52;	author tom;	state Exp;
branches;
next	2.15;

2.15
date	98.08.27.17.36.08;	author tom;	state Exp;
branches;
next	2.14;

2.14
date	97.03.27.17.55.27;	author tom;	state Exp;
branches;
next	2.13;

2.13
date	97.03.10.17.24.39;	author tom;	state Exp;
branches;
next	2.12;

2.12
date	97.03.10.16.22.56;	author tom;	state Exp;
branches;
next	2.11;

2.11
date	97.01.20.19.46.49;	author tom;	state Exp;
branches;
next	2.10;

2.10
date	97.01.20.19.31.10;	author tom;	state Exp;
branches;
next	2.9;

2.9
date	97.01.20.19.23.14;	author tom;	state Exp;
branches;
next	2.8;

2.8
date	96.10.16.16.56.41;	author tom;	state Exp;
branches;
next	2.7;

2.7
date	96.10.14.21.28.29;	author tom;	state Exp;
branches;
next	2.6;

2.6
date	96.10.14.21.18.01;	author tom;	state Exp;
branches;
next	2.5;

2.5
date	96.04.25.16.09.08;	author tom;	state Exp;
branches;
next	2.1;

2.1
date	93.11.30.23.35.51;	author tom;	state Exp;
branches;
next	2.0;

2.0
date	93.07.15.20.00.39;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	93.06.18.22.18.51;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	92.10.28.15.55.00;	author tom;	state Exp;
branches;
next	;


desc
@Original Unix release
@


2.30
log
@update to recognize 962
@
text
@c $Log: petproc.f,v $
c Revision 2.29  2005/10/06  17:05:07  tom
c use PID instead of scandate for determining PIE
c
c Revision 2.28  2005/08/08  16:29:32  tom
c add pie Aug 2005
c
c Revision 2.25  2004/11/03  14:28:30  tom
c add getpie_961
c
c Revision 2.24  2004/11/02  16:40:33  tom
c set 961 pies based on scandate, acquisition, software
c
c Revision 2.22  2004/11/01  20:24:27  tom
c select 961 pies by date, sw_version, and acquisition type
c
c Revision 2.21  2004/07/08  14:39:29  tom
c update getpie for 961
c
c Revision 2.20  2004/02/17  15:09:00  tom
c Feb 2004
c
c Revision 2.18  2002/11/27  19:48:15  tom
c *** empty log message ***
c
c Revision 2.17  1999/12/16  17:05:19  tom
c fix date
c
c Revision 2.16  1999/12/15  22:12:52  tom
c message -- should not have y2k problems with ECAT images
c
c Revision 2.15  1998/08/27  17:36:08  tom
c don't add second to each scan start time for 961 images
c
c Revision 2.14  1997/03/27  17:55:27  tom
c fix getimagetype
c
c Revision 2.13  1997/03/10  17:24:39  tom
c add firstimgfrm to getimginfo.c and getimagetype.c
c
c Revision 2.12  1997/03/10  16:22:56  tom
c read frame 1,2 or 3
c
c Revision 2.11  1997/01/20  19:46:49  tom
c restore former treatment of image extension
c
c Revision 2.10  1997/01/20  19:31:10  tom
c read up to 10 character EXTENSION
c
c Revision 2.9  1997/01/20  19:23:14  tom
c appropriate factor for JMO 3D reconstructed images
c
c Revision 2.8  1996/10/16  16:56:41  tom
c new libimage
c
c Revision 2.7  1996/10/14  21:28:29  tom
c fix date bug
c
c Revision 2.6  1996/10/14  21:18:01  tom
c solaris
c
c Revision 2.5  1996/04/25  16:09:08  tom
c release Apr-96
c
c Revision 2.1  1993/11/30  23:35:51  tom
c increased MAXTIME to 100000
c
c Revision 2.0  1993/07/15  20:00:39  tom
c Modified to read ECAT files and adjust PIE
c
c Revision 1.2  1993/06/18  22:18:51  tom
c Revised to handle ECAT images as type 3000
c
c Revision 1.1  1992/10/28  15:55:00  tom
c Initial revision
c
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  Program:      PETPROC.FTN
C  Author:       Tom O. Videen
C  Date:         15-Jun-87
C  Intent:
C     This subroutine computes the PETT count conversion factor for
C     spiperone and glucose scan files and writes these to an HDR file.
C     HDR files are documented in HDRFORM.TXT
C     This factor is necessary for SPIDERAM to display
C     tissue activity images instead of merely PET numbers.
C
C  History:
C     Revision of ACTPROC.FTN
C     Modified 13-Aug-87 by TOV to read write-protected files.
C     Modified 10-Sep-87 by TOV to search for PIE files on DT1 if
C        they are not found on the user's volume when no volume
C        name is specified for the PIE file.
C     Modified 14-Sep-87 by TOV to change decay constant of O15
C        from .005677 to .005592
C     Modified 02-Oct-87 by TOV:
C        1) PETT conversion factor is now always in units of the scan period;
C        2) Default filter name is last one entered if there is no
C           filter name in the image file.
C        3) MEANTIME represents the time at which half the counts detected
C           in the scan frame woul be detected before and after;
C     Modified 10-Oct-88 by TOV to read PIE file types 4 and 5 (as well
C        as 3) and to check for correct pie based on IMGTYPE (GETPIE).
C        The header from 1 image file must be read before reading a pie file.
C        (PETPROC).  IMGTYPE is assigned 1000 or 1020 based on this header
C        and is checked against all other image files during processing.
C        Write version date in output file (PETPROC).
C        Move check for existence of HDR file from WRITEHD1 to PETAFILE.
C     Modified 27-Mar-89 by TOV:
C        1) user has option of correcting for PETT VI efficiency changes
C           since the specified pie file:
C        2) reads NORM mean counts/bin/minute from scan file header for
C           PETT VI (NORMMEAN)
C        3) reads NORM mean counts/bin/minute and scan date from pie file
C        4) decay corrects pie NORM mean to date of current scan (PIEMEAN)
C           and multiplies all factors by the ratio PIEMEAN/NORMMEAN.
C        5) write PIESLOPE and EFACTOR to HDR file.
C        Altered: PETPROC.INC, PETPROC, READHED1, GETPIE, WRITEHD1
C        Add:  PIESCALE
C     Modified 09-Oct-89 by TOV to prevent error it PIEMEAN and PIEDATE
C        do not exist at the end of the pie file; EFACTOR set to 1.0.
C        Altered:  GETPIE, PETPROC
C     Modified 17-Dec-90 by JSP to include scan start and scan length
C        in the -TIM.DAT file.
C     Modified 24-Jun-91 by TOV to allow image type 2000.
C        Altered:  PETPROC, READHED1, PETAFILE
C        Relinked using updated GETIMAGE.
C
C	Modified 23-Oct-92 for Unix by TOV 
C      1) to incorporate libpetutil and libpe.
C      	Changes in:	Makefile, petproc.inc, petproc.f, readhed1.f
C      	Addition of Header and Log to all other modules.
C      	Eliminate STATUS=NEW from OPEN statement for TIMEFILE.
C      	Default extension for hdrfile is 'hdr' (HDREXT).
C      	Added HDREXT to call to PETAFILE.
C
C	Modified 15-Jul-93 by TOV:
C      1) added adjust_ecat_type and get_recon_type to get correct PIE
C         factor for ECAT files (in GETPIE).
C
C  Variables:
C     PEAKUSED: true--> user enters peak of Bank Pairs and
C        program estimates the mean;
C        false--> user enters mean Bank Pairs;
C     PSLOPES = pie slopes read from PIE file;
C     BNKPAIRS = bank pairs read from PIE file;
C     NPIES = number of PSLOPES/BNKPAIRS;
C     PSLOPES = pie slopes read from PIE file;
C     BNKPAIRS = bank pairs read from PIE file;
C     NEWFILE:true -->increment numbers in current FNAME;
C             false-->prompt with current FNAME;
C     TIMEFILE = logical unit assigned to disk file for mean frame times;
C     DCORPETT = decay-corrected PETTCONV;
C     TMID = 'weighted' midpoint of scan period;
C     START = start time of each scan
C     LENGTH = length of each scan
C
C  TERMINAL.LIB
C     GTSTRING
C     YESNO
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

      PROGRAM PETPROC

      INTEGER*4     NPIES,TIMEFILE,I,L,IMGTYPE,DATES(3), ERRCODE
      REAL*4        PSLOPES(10),BNKPAIRS(10),LASTSCAN,MAXTIME,
     &              MEANTIME(100),DCORPETT,TMID, EFACTOR, PIEMEAN,
     &              NORM2,START(100),LENGTH(100)
      CHARACTER*1   BELL
      CHARACTER*2   FRAMENUM,MM,DD
      CHARACTER*3   HDREXT
      CHARACTER*4   YYYY
      CHARACTER*8   PIEDATE
      CHARACTER*10  PROCDATE, DATE2
      CHARACTER*11  VERSION
      CHARACTER*80  Q,STR
      CHARACTER*256 RCDNAME, TIMENAME, BLANK
      CHARACTER*256 RCSHEADER
      LOGICAL*1     PEAKUSED,IOPTION,NEWFILE,REPROCES,A

      INCLUDE 'petproc.inc'
      DATA RCDFILE,TIMEFILE,USERIN,USEROUT,DISK /1,2,5,6,7/
      DATA VERSION  /'08-Aug-200l'/

      DATA TAUO15    /0.005592/     !	decay constant for O15 (1/sec)
      DATA TAUC11    /0.0005669/	!	decay constant for C11 (1/sec)
      DATA TAUGA68   /0.0001691/	!	decay constant for Ga68 (1/sec)
      DATA TAUF18    /0.00010529/	!	decay constant for F18 (1/sec)

C  Source for decay constants: first listed halflife for each in
C     Lederer & Shirley, Table of Isotopes, 1978 (7th edition), Wiley.
C     (same no. of significant figures as halflives in this source)

C  Initialize constants

      RCSHEADER = "$Id: petproc.f,v 2.29 2005/10/06 17:05:07 tom Exp tom $"
      BELL = CHAR(7)
      FRAME = 1
      BLANK = ' '
      SCANST = 0.
      SCANLEN = 120.
      LASTSCAN = 0.
      EFACTOR = 1.0
      MAXTIME = 100000.
      NEWFILE = .TRUE.
      REPROCES = .FALSE.
      NTYPE = 5
      IMGTYPE = 0         ! avoid compiler warning
      FILTER = ' '
      HDREXT = 'hdr'
      BPAIR = 1

8000  FORMAT(I2)
8004  FORMAT(I4)
      CALL IDATE(DATES)
      WRITE(DD,8000) DATES(1)
      WRITE(MM,8000) DATES(2)
      WRITE(YYYY,8004) DATES(3)
      PROCDATE = MM//'/'//DD//'/'//YYYY

8100  FORMAT (1X,A,A,A)
      WRITE(USEROUT,*) '>>> PETT ACTIVITY PROCESSING  (',VERSION,')'
      WRITE(USEROUT,*)

      CALL GETENV('PWD',PATH)
      CALL GETARG(1,SUBJECT)
      L = LNBLNK(SUBJECT)
      WRITE(USEROUT,8105) PATH( : LNBLNK(PATH)), SUBJECT
8105  FORMAT('Current Directory = ',A,/,'Subject ID = ',A)

C  Open TIM.DAT and RCD files

      TIMENAME = SUBJECT(1:L)//'tim.dat'
      OPEN(TIMEFILE,FILE=TIMENAME,ERR=25)
      GO TO 30
25    WRITE(USEROUT,8110) TIMENAME( : LNBLNK(TIMENAME))
      STOP
30    WRITE(USEROUT,8115) TIMENAME( : LNBLNK(TIMENAME))

8110  FORMAT('Cannot open file ',A,' as a new file.')
8115  FORMAT('Writing time curve to ',A)

      RCDNAME = SUBJECT(1:L)//'petproc.rcd'
      OPEN(RCDFILE,FILE=RCDNAME,ERR=35)
      GO TO 40
35    WRITE(USEROUT,8120) RCDNAME( : LNBLNK(RCDNAME))
      STOP
40    WRITE(USEROUT,8125) RCDNAME( : LNBLNK(RCDNAME))
8120  FORMAT('Cannot open file ',A,' as a new file.')
8125  FORMAT('Log of processing will be written to ',A)

C  Obtain initials of USER

      STR = ' '
      Q = 'Enter your initials'
      CALL GTSTRING(Q,STR)
      INITIALS = STR(1:4)

      Q = 'Default extension for HDR files (hdr or HDR)'
      STR = HDREXT( : LNBLNK(HDREXT))
      CALL GTSTRING(Q,STR)
      HDREXT = STR(1:3)

C  Reprocess existing HDR files

      WRITE(USEROUT,*)
      WRITE(USEROUT,*) 'WARNING:  If you REPROCESS HDR files, ',
     2  'you must be certain that all'
      WRITE(USEROUT,*) 'images were processed with the same ',
     2  'reconstruction stream.'
      WRITE(USEROUT,*) 'If they were not, the wrong pie factor ',
     2  'may be used.'
      WRITE(USEROUT,*)
      Q = 'Reprocess existing HDR files without reading scan files'
      CALL YESNO(Q,REPROCES)

C  Get default extension

      IF (REPROCES) THEN
        EXTENSION = HDREXT
      ELSE
        WRITE(USEROUT,*) 'Extension may be up to 10 characters but MUST '//
     &    'NOT include the period (unlike metproc)'
        Q = 'Extension for scan files (i.e., img, v, or blank)'
        STR = ' '
        CALL GTSTRING(Q,STR)
        EXTENSION = STR
      ENDIF

C  Get decay constant

49    WRITE(USEROUT,*) '1=F-18  2=C-11  3=O-15  4=Ga-68'
      Q = 'Which isotope are was used in the scan'
      I = 1
      CALL GETINT(Q,I,1,4)
      IF (I.EQ.1) THEN
        TAU = TAUF18
      ELSE IF (I.EQ.2) THEN
        TAU = TAUC11
      ELSE IF (I.EQ.3) THEN
        TAU = TAUO15
      ELSE IF (I.EQ.4) THEN
        TAU = TAUGA68
      ELSE
        GO TO 49
      ENDIF

C Read PIE file

      IOPTION = .TRUE.
      PEAKUSED = .TRUE.
      Q = 'Let the program compute the Pie Slope'
      CALL YESNO(Q,IOPTION)
      IF (IOPTION) THEN

C  Must get RCONTYPE (image type) before reading a pie file
 
50       Q = 'Enter the name of an image file you will be processing (without extension)'
         STR = ' '
         CALL GTSTRING(Q,STR)
         FNAME = STR
         IF (.NOT.REPROCES) THEN
           IF (STR(1:1).NE.'/') THEN
             IF (EXTENSION .NE. '   ') THEN
               FNAME = PATH( : LNBLNK(PATH))//'/'//STR( : LNBLNK(STR))//
     &           '.'//EXTENSION( : LNBLNK(EXTENSION))
             ELSE
               FNAME = PATH( : LNBLNK(PATH))//'/'//STR( : LNBLNK(STR))
             ENDIF
           ELSE
             IF (EXTENSION .NE. '   ') THEN
               FNAME = STR( : LNBLNK(STR))//'.'//EXTENSION( : LNBLNK(EXTENSION))
             ELSE
               FNAME = STR( : LNBLNK(STR))
             ENDIF
           ENDIF
         ENDIF
         CALL READTYPE (ERRCODE)
         IMGTYPE = RCONTYPE
         IF (ERRCODE.LT.0) THEN
            WRITE(USEROUT,*) '>>> ERROR: Cannot read ',FNAME( :LNBLNK(FNAME)),BELL
            GO TO 50
         ELSE IF (IMGTYPE.NE.1000 .AND. IMGTYPE.NE.1020
     &        .AND. IMGTYPE.NE.2000 .AND. IMGTYPE.NE.3000 .AND. IMGTYPE.NE.3070 .AND. IMGTYPE.NE.3080) THEN
            WRITE(USEROUT,*)'>>> ERROR: Unknown Image Type ',IMGTYPE,BELl
            GO TO 50
         ENDIF
 
C  For images reconstructed with new stream on PETT VI:
C  If image file does not contain NORM mean, try an attenuation image
C  (in order to get an efficiency scaler)
 
         IF ((IMGTYPE.EQ.1020 .OR. IMGTYPE.EQ.2000) .AND. NORMMEAN.LE.0.0) THEN
60          Q = 'Enter the name of an attenuation image'
            STR = ' '
            CALL GTSTRING(Q,STR)
            FNAME = STR
            IF (STR(1:1).NE.'/') THEN
               FNAME = PATH( : LNBLNK(PATH))//'/'//STR( : LNBLNK(STR))
            ENDIF
 
            CALL READTYPE (ERRCODE)
            IF (ERRCODE.LT.0) THEN
               WRITE(USEROUT,*) '>>> ERROR: Cannot read ',FNAME(:LNBLNK(FNAME)),BELL
               GO TO 60
            ELSE IF (RCONTYPE.NE.1010) THEN
               WRITE(USEROUT,*)'>>> ERROR: Image type ',RCONTYPE,' is not a new attenuation image',BELL
               GO TO 60
            ENDIF
         ENDIF

         IF (IMGTYPE.EQ.3070) THEN
            CALL GETPIE_961(PSLOPES, BNKPAIRS)
         ELSE
            CALL GETPIE(NPIES,PSLOPES,BNKPAIRS,DISK,PIENAME,FNAME,IMGTYPE,PIEMEAN, PIEDATE)
            WRITE(USEROUT,*)

C  If PIEMEAN=1, no info was available in pie file for efficiency correction

            IF (RCONTYPE .EQ. 3000) THEN
                EFACTOR = 1.0
            ELSE IF (PIEMEAN.EQ.1.0) THEN
                EFACTOR = 1.0
                WRITE(USEROUT,*) 'PETT efficiency factor set to 1.0'
            ELSE
                IF (IMGTYPE.GE.3000) THEN
                   WRITE(USEROUT,*) '>>> ERROR: Incorrect image type: ', IMGTYPE
                   WRITE(USEROUT,*) '>>>        Efactors are not used with ECAT images'
                   WRITE(USEROUT,*) '>>>        These are for PETT VI image only!'
                   GO TO 50
                ENDIF
                DATE2 = SCANDATE
                NORM2 = NORMMEAN
                CALL PIESCALE(PIEMEAN,NORM2,PIEDATE,DATE2,EFACTOR)
                IF ((IMGTYPE.NE.1020 .AND. IMGTYPE.NE.2000) .OR. EFACTOR.LT.0.1) THEN
                   EFACTOR = 1.0
                   WRITE(USEROUT,*) 'PETT efficiency factor set to 1.0'
                ELSE
                   WRITE(USEROUT,*)
                   WRITE(USEROUT,*) 'PETT efficiency of PIE relative to scan = ',EFACTOR
                   Q = 'Multiply pie factors by this efficiency'
                   A = .TRUE.
                   CALL YESNO(Q,A)
                   IF (.NOT.A) EFACTOR = 1.0
                ENDIF
             ENDIF
          ENDIF
      ENDIF

C ===================================================================
C  LOOP FOR EACH SCAN
C  Get the image file name

100   CALL PETAFILE(NEWFILE, REPROCES, HDREXT)
      IF (FNAME.EQ.BLANK) GO TO 500
      IF (REPROCES) THEN
        CALL READHDR1 (ERRCODE)
      ELSE
        CALL READTYPE (ERRCODE)
      ENDIF
      IF (ERRCODE.LT.0) THEN
        NEWFILE = .FALSE.
        WRITE(USEROUT,*) '>>> ERROR: Cannot read ',FNAME( : LNBLNK(FNAME)),BELl
        GO TO 100
      ENDIF
      IF (IOPTION .AND. RCONTYPE.NE.IMGTYPE) THEN
        WRITE(USEROUT,*) '>>> ERROR: Pie factors for type: ',IMGTYPE
        WRITE(USEROUT,*) '>>>        Image file is type:   ',RCONTYPE,BELL
        GO TO 100
      ENDIF

C  Get the frame start time and length

8002  FORMAT(I2)
      WRITE(FRAMENUM,8002) FRAME
      Q = 'Start Time of Frame #'//FRAMENUM//' (seconds)'
      IF (FRAME.GT.1) THEN
        IF (IMGTYPE.GE.3000) THEN
          SCANST = LASTSCAN
        ELSE
          SCANST = LASTSCAN + 1.0
        ENDIF
      ENDIF
      CALL GETREAL(Q,SCANST,LASTSCAN,MAXTIME)
      Q = 'Length of Frame #'//FRAMENUM//' (seconds)'
      SCANLEN = SCANTIME
      CALL GETREAL(Q,SCANLEN,1.,MAXTIME)
      SCANEND = SCANST + SCANLEN

C  Get pie slope and partition coefficient

      IF (IOPTION) THEN
        IF (IMGTYPE.EQ.3000 .OR. IMGTYPE.EQ.3070) THEN
          PIESLOPE = PSLOPES(1)
        ELSE
          CALL GETPSLP1(PIESLOPE,BPAIR,NPIES,BNKPAIRS,PSLOPES)
        ENDIF
      ELSE
        Q = 'Pie Slope'
        CALL GETREAL(Q,PIESLOPE,0.0001,10000.)
      ENDIF

C  Change Pie Slope units from min to sec;
C  Decay correct to start of scan if specified;

C  MEANTIME(FRAME) = (SCANST+SCANEND)*0.5 (changed 02-Oct-87 to the following)

      TMID = (-1.0/TAU)*ALOG(0.5*(EXP(-TAU*SCANLEN)+1.0))
      MEANTIME(FRAME) = SCANST + TMID
      START(FRAME) = SCANST
      LENGTH(FRAME) = SCANLEN
      PETTCONV(1) = EFACTOR*PIESLOPE*60./SCANLEN

C  Write Summary to user

      WRITE(USEROUT,*) 'Frame Number    = ',FRAME
      WRITE(USEROUT,*) 'File to Process = ',FNAME( : LNBLNK(FNAME))
      WRITE(USEROUT,*) 'HDR File        = ',HDRNAME( : LNBLNK(HDRNAME))
      WRITE(USEROUT,*) 'Start Time      = ',SCANST,' seconds'
      WRITE(USEROUT,*) 'Scan Length     = ',SCANLEN,' seconds'
      IF (IOPTION .AND. IMGTYPE.LT.3000) THEN
        WRITE(USEROUT,*) 'Bank Pairs      = ',BPAIR
      ENDIF
      WRITE(USEROUT,*) 'Pie Slope       = ',PIESLOPE
      WRITE(USEROUT,*)
      Q = 'Process with these values'
      A = .TRUE.
      CALL YESNO(Q,A)
      IF (.NOT.A) THEN
        NEWFILE = .FALSE.
        GO TO 100
      ELSE
        NEWFILE = .TRUE.
      ENDIF

C  Write information to .rcd file

8500  FORMAT(1X,'Processed by ',A4,' on ',A10,' with PETPROC {',A11,'}')
8505  FORMAT(1X,50(1H*),/)
8510  FORMAT(4X,'Half Life    = ',F6.1,' seconds')
8520  FORMAT(1X,'Efficiency Factor included in PETT Conversion Factor = ',F6.3)
8525  FORMAT(4X,'(not included in the Pie Slope)')
      IF (FRAME.EQ.1) THEN
        WRITE(RCDFILE,8500) INITIALS,PROCDATE,VERSION
        IF (IOPTION) THEN
          WRITE(RCDFILE,*) 'Pie File used: ',PIENAME
        ELSE
          WRITE(RCDFILE,*) 'NO PIE FILE WAS USED'
        ENDIF
        WRITE(RCDFILE,8505)
      ENDIF
      WRITE(RCDFILE,*) 'Frame Number    = ',FRAME
      WRITE(RCDFILE,*) 'File to Process = ',FNAME( : LNBLNK(FNAME))
      WRITE(RCDFILE,*) 'HDR File        = ',HDRNAME( : LNBLNK(HDRNAME))
      WRITE(RCDFILE,*) 'Start Time      = ',SCANST,' seconds'
      WRITE(RCDFILE,*) 'Scan Length     = ',SCANLEN,' seconds'
      IF (IOPTION .AND. IMGTYPE.LT.3000) THEN
        WRITE(RCDFILE,*) 'Bank Pairs      = ',BPAIR
      ENDIF
      WRITE(RCDFILE,*) 'Pie Slope       = ',PIESLOPE
      WRITE(RCDFILE,*) 'Non-Decay-corrected:'
      WRITE(RCDFILE,*) '   PETT Conversion Factor/Scan Period = ',PETTCONV(1)
      WRITE(RCDFILE,*) 'Decay-corrected to time of administration:'
      DCORPETT = PETTCONV(1)*EXP(TAU*MEANTIME(FRAME))
      WRITE(RCDFILE,*) '   PETT Conversion Factor/Scan Period = ', DCORPETT
      WRITE(RCDFILE,8510) ALOG(2.0)/TAU
      WRITE(RCDFILE,8520) EFACTOR
      IF (EFACTOR.NE.1.0) WRITE(RCDFILE,8525)
      WRITE(RCDFILE,8505)

C  Write the HDR file and loop for the next scan frame

      CALL WRITEHD1(EFACTOR)
      LASTSCAN = SCANEND
      FRAME = FRAME + 1
      IF (FRAME.LE.100) GO TO 100
C ===================================================================

500   A = .TRUE.
      Q = 'Do you want to save weighted mid-times of each frame in a file'
      CALL YESNO(Q,A)
      IF (A) THEN
        FRAME = FRAME-1
        STR = ' '
        Q = 'Header for TIM.DAT file (weighted mid-times)'
        CALL GTSTRING(Q,STR)
        WRITE(TIMEFILE,*) STR
        WRITE(TIMEFILE,*) FRAME,1
        DO 600 I=1,FRAME
          WRITE(TIMEFILE,*) MEANTIME(I),START(I),LENGTH(I)
600     CONTINUE
      ELSE
        CLOSE(TIMEFILE,STATUS='DELETE')
      ENDIF

      STOP
      END
@


2.29
log
@use PID instead of scandate for determining PIE
@
text
@d2 3
d197 1
a197 1
      RCSHEADER = "$Id: petproc.f,v 2.28 2005/08/08 16:29:32 tom Exp tom $"
d345 1
a345 1
     &        .AND. IMGTYPE.NE.2000 .AND. IMGTYPE.NE.3000 .AND. IMGTYPE.NE.3070) THEN
@


2.28
log
@add pie Aug 2005
@
text
@d2 3
d194 1
a194 1
      RCSHEADER = "$Id: petproc.f,v 2.25 2004/11/03 14:28:30 tom Exp tom $"
@


2.25
log
@add getpie_961
@
text
@d2 3
d178 1
a178 1
      DATA VERSION  /'03-Nov-2004'/
d191 1
a191 1
      RCSHEADER = "$Id: petproc.f,v 2.24 2004/11/02 16:40:33 tom Exp tom $"
@


2.24
log
@set 961 pies based on scandate, acquisition, software
@
text
@d2 3
d175 1
a175 10
      DATA VERSION  /'01-Nov-2004'/
C -------------------------------------------------------------------
      DATA PIE_2D_1996_71 /4.66/
      DATA PIE_3D_1996_71 /3.43/
      DATA PIE_2D_1996_72 /4.51/
      DATA PIE_3D_1996_72 /3.53/
      DATA PIE_2D_2004_71 /3.77/
      DATA PIE_3D_2004_71 /2.80/
      DATA PIE_2D_2004_72 /3.74/
      DATA PIE_3D_2004_72 /2.93/
d188 1
a188 1
      RCSHEADER = "$Id: petproc.f,v 2.22 2004/11/01 20:24:27 tom Exp tom $"
a363 4
C  For 961 Images (type 3070):
C    Before Jul 12, 2004  2D PIE = 4.66, 3D PIE = 3.43
C    After  Aug 24, 2004  2D PIE = 3.77, 3D PIE = 2.80

d365 1
a365 86
            WRITE(USEROUT,*) '>>> Scan Date:   ',SCANDATE
            WRITE(USEROUT,*) '>>> Acquisition: ',ATYPE
            WRITE(USEROUT,*) '>>> SW Version:',SW_VER
            IF (SCANDATE(7:10).LT.'2004') THEN
               IF (ATYPE.EQ.'3d') THEN
                  IF (SW_VER.GE.72) THEN
                     PSLOPES(1) = PIE_3D_1996_72
                  ELSE
                     PSLOPES(1) = PIE_3D_1996_71
                  ENDIF
               ELSE
                  IF (SW_VER.GE.72) THEN
                     PSLOPES(1) = PIE_2D_1996_72
                  ELSE
                     PSLOPES(1) = PIE_2D_1996_71
                  ENDIF
               ENDIF
            ELSE IF (SCANDATE(7:10).GT.'2004') THEN
               IF (ATYPE.EQ.'3d') THEN
                  IF (SW_VER.GE.72) THEN
                     PSLOPES(1) = PIE_3D_2004_72
                  ELSE
                     PSLOPES(1) = PIE_3D_2004_71
                  ENDIF
               ELSE
                  IF (SW_VER.GE.72) THEN
                     PSLOPES(1) = PIE_2D_2004_72
                  ELSE
                     PSLOPES(1) = PIE_2D_2004_71
                  ENDIF
               ENDIF
            ELSE IF (SCANDATE(1:2).LT.'07') THEN
               IF (ATYPE.EQ.'3d') THEN
                  IF (SW_VER.GE.72) THEN
                     PSLOPES(1) = PIE_3D_1996_72
                  ELSE
                     PSLOPES(1) = PIE_3D_1996_71
                  ENDIF
               ELSE
                  IF (SW_VER.GE.72) THEN
                     PSLOPES(1) = PIE_2D_1996_72
                  ELSE
                     PSLOPES(1) = PIE_2D_1996_71
                  ENDIF
               ENDIF
            ELSE IF (SCANDATE(1:2).GT.'08') THEN
               IF (ATYPE.EQ.'3d') THEN
                  IF (SW_VER.GE.72) THEN
                     PSLOPES(1) = PIE_3D_2004_72
                  ELSE
                     PSLOPES(1) = PIE_3D_2004_71
                  ENDIF
               ELSE
                  IF (SW_VER.GE.72) THEN
                     PSLOPES(1) = PIE_2D_2004_72
                  ELSE
                     PSLOPES(1) = PIE_2D_2004_71
                  ENDIF
               ENDIF
            ELSE
               IF (ATYPE.EQ.'3d') THEN
                  IF (SW_VER.GE.72) THEN
                     Q = 'Ver 7.2 3D PIE between July and August 2004: 3.43 or 2.80'
                     PTMP = PIE_3D_1996_72
                  ELSE
                     Q = '3D PIE between July and August 2004: 3.43 or 2.80'
                     PTMP = PIE_3D_1996_71
                  ENDIF
               ELSE
                  IF (SW_VER.GE.72) THEN
                     Q = 'Ver 7.2 3D PIE between July and August 2004: 3.43 or 2.80'
                     PTMP = PIE_2D_1996_72
                  ELSE
                     Q = '2D PIE between July and August 2004: 4.66 or 3.77'
                     PTMP = PIE_2D_1996_71
                  ENDIF
               ENDIF
               CALL GETREAL(Q,PTMP,0.0,4.66)
               PSLOPES(1) = PTMP
            ENDIF
            BNKPAIRS(1) = 0
            BNKPAIRS(2) = 999
            PSLOPES(2) = PSLOPES(1)
            WRITE(USEROUT,8200) PSLOPES(1)
8200        FORMAT(' >>> PIE Factor: ',F5.2)

@


2.22
log
@select 961 pies by date, sw_version, and acquisition type
@
text
@d2 3
d194 1
a194 1
      RCSHEADER = "$Id: petproc.f,v 2.21 2004/07/08 14:39:29 tom Exp $"
d455 3
d540 1
a540 1
        IF (IMGTYPE.EQ.3000) THEN
@


2.21
log
@update getpie for 961
@
text
@d2 3
d169 10
a178 1
      DATA VERSION  /'16-Dec-1999'/
d191 1
a191 1
      RCSHEADER = "$Id: petproc.f,v 2.20 2004/02/17 15:09:00 tom Exp tom $"
d367 3
a369 2
        CALL GETPIE(NPIES,PSLOPES,BNKPAIRS,DISK,PIENAME,FNAME,IMGTYPE,PIEMEAN, PIEDATE)
        WRITE(USEROUT,*)
d371 88
d461 27
a487 11
        IF (RCONTYPE .EQ. 3000) THEN
          EFACTOR = 1.0
        ELSE IF (PIEMEAN.EQ.1.0) THEN
          EFACTOR = 1.0
          WRITE(USEROUT,*) 'PETT efficiency factor set to 1.0'
        ELSE
          IF (IMGTYPE.GE.3000) THEN
            WRITE(USEROUT,*) '>>> ERROR: Incorrect image type: ', IMGTYPE
            WRITE(USEROUT,*) '>>>        Efactors are not used with ECAT images'
            WRITE(USEROUT,*) '>>>        These are for PETT VI image only!'
            GO TO 50
a488 15
          DATE2 = SCANDATE
          NORM2 = NORMMEAN
          CALL PIESCALE(PIEMEAN,NORM2,PIEDATE,DATE2,EFACTOR)
          IF ((IMGTYPE.NE.1020 .AND. IMGTYPE.NE.2000) .OR. EFACTOR.LT.0.1) THEN
            EFACTOR = 1.0
            WRITE(USEROUT,*) 'PETT efficiency factor set to 1.0'
          ELSE
            WRITE(USEROUT,*)
            WRITE(USEROUT,*) 'PETT efficiency of PIE relative to scan = ',EFACTOR
            Q = 'Multiply pie factors by this efficiency'
            A = .TRUE.
            CALL YESNO(Q,A)
            IF (.NOT.A) EFACTOR = 1.0
          ENDIF
        ENDIF
@


2.20
log
@Feb 2004
@
text
@d2 3
d179 1
a179 1
      RCSHEADER = "$Id: petproc.f,v 2.18 2002/11/27 19:48:15 tom Exp tom $"
@


2.18
log
@*** empty log message ***
@
text
@d2 3
d176 1
a176 1
      RCSHEADER = "$Id: petproc.f,v 2.17 1999/12/16 17:05:19 tom Exp tom $"
@


2.17
log
@fix date
@
text
@d2 3
d173 1
a173 1
      RCSHEADER = "$Id: petproc.f,v 2.16 1999/12/15 22:12:52 tom Exp tom $"
d474 1
a474 1
8520  FORMAT(1X,'Efficiency Factor included in PETT Conversion Factor = ',F)
@


2.16
log
@message -- should not have y2k problems with ECAT images
@
text
@d2 3
a52 1
C
a54 1
C
a134 1
C
d139 1
a139 1
      INTEGER*4     NPIES,TIMEFILE,I,L,IMGTYPE,DATES(3)
d144 1
a144 1
      CHARACTER*2   FRAMENUM,MM,DD,YY
d146 4
a149 2
      CHARACTER*8   PROCDATE, PIEDATE, DATE2
      CHARACTER*9   VERSION
d153 1
a153 1
      LOGICAL*1     PEAKUSED,IOPTION,NEWFILE,REPROCES,ERROR,A
d157 1
a157 1
      DATA VERSION  /'27-Aug-98'/
d170 1
a170 1
      RCSHEADER = "$Id: petproc.f,v 2.15 1998/08/27 17:36:08 tom Exp $"
d188 1
d192 2
a193 2
      WRITE(YY,8000) DATES(3) - ((DATES(3)/100)*100)
      PROCDATE = MM//'/'//DD//'/'//YY
d195 2
a196 8
8100  FORMAT(19X,A44)
8101  FORMAT(35X,A1,A9,A1)
      WRITE(USEROUT,8100)'********************************************'
      WRITE(USEROUT,8100)'   PETT ACTIVITY PROCESSING of SCAN FILES   '
      WRITE(USEROUT,8101)'(',VERSION,')'
      WRITE(USEROUT,8100)'                UNIX version                '
      WRITE(USEROUT,8100)'             Creates .HDR Files             '
      WRITE(USEROUT,8100)'********************************************'
d217 1
a217 1
      RCDNAME = SUBJECT(1:L)//'.rcd'
d292 1
a292 1
50       Q = 'Enter the name of an image file you will be processing'
d312 1
a312 1
         CALL READTYPE (ERROR)
d314 2
a315 2
         IF (ERROR) THEN
            WRITE(USEROUT,*) '*** Cannot read ',FNAME( :LNBLNK(FNAME)),BELL
d319 1
a319 2
            WRITE(USEROUT,*)'*** ERROR: Image Type ',IMGTYPE,
     &         ' is incompatable with this program.',BELL
d336 3
a338 3
            CALL READTYPE (ERROR)
            IF (ERROR) THEN
               WRITE(USEROUT,*) '*** Cannot read ',FNAME(:LNBLNK(FNAME)),BELL
d341 1
a341 2
               WRITE(USEROUT,*)'*** ERROR: Image Type ',RCONTYPE,
     &           ' is not a new attenuation image.',BELL
d358 3
a360 3
            WRITE(USEROUT,*) '*** Incorrect image type: ', IMGTYPE
            WRITE(USEROUT,*) '*** Efactors are not allowed for ECAT images'
            WRITE(USEROUT,*) '*** These were created for PETT VI only!'
d387 1
a387 1
        CALL READHDR1 (ERROR)
d389 1
a389 1
        CALL READTYPE (ERROR)
d391 1
a391 1
      IF (ERROR) THEN
d393 1
a393 1
        WRITE(USEROUT,*) '*** ERROR reading file',BELL
d397 2
a398 4
        WRITE(USEROUT,*) '*** ERROR:',BELL
        WRITE(USEROUT,*) '*** Pie factors were read for type ', IMGTYPE
        WRITE(USEROUT,*) '*** Image is of type ',RCONTYPE, ' and can NOT be processed.'
        WRITE(USEROUT,*)
d468 1
a468 1
8500  FORMAT(1X,'Processed by ',A4,' on ',A8,' with PETPROC {',A9,'}')
@


2.15
log
@don't add second to each scan start time for 961 images
@
text
@d2 3
d168 1
a168 1
      RCSHEADER = "$Id: petproc.f,v 2.14 1997/03/27 17:55:27 tom Exp tom $"
d362 6
@


2.14
log
@fix getimagetype
@
text
@d2 3
d152 1
a152 1
      DATA VERSION  /'27-Mar-97'/
d165 1
a165 1
      RCSHEADER = "$Id: petproc.f,v 2.13 1997/03/10 17:24:39 tom Exp tom $"
d406 1
a406 1
        IF (IMGTYPE.EQ.3000) THEN
@


2.13
log
@add firstimgfrm to getimginfo.c and getimagetype.c
@
text
@d2 3
d149 1
a149 1
      DATA VERSION  /'10-Mar-97'/
d162 1
a162 1
      RCSHEADER = "$Id: petproc.f,v 2.12 1997/03/10 16:22:56 tom Exp tom $"
@


2.12
log
@read frame 1,2 or 3
@
text
@d2 3
d146 1
a146 1
      DATA VERSION /'10-Mar-97'/
d159 1
a159 1
      RCSHEADER = "$Id: petproc.f,v 2.11 1997/01/20 19:46:49 tom Exp tom $"
@


2.11
log
@restore former treatment of image extension
@
text
@d2 3
d143 1
a143 1
      DATA VERSION /'20-Jan-97'/
d156 1
a156 1
      RCSHEADER = "$Id: petproc.f,v 2.10 1997/01/20 19:31:10 tom Exp tom $"
@


2.10
log
@read up to 10 character EXTENSION
@
text
@d2 3
d153 1
a153 1
      RCSHEADER = "$Id: petproc.f,v 2.9 1997/01/20 19:23:14 tom Exp tom $"
d245 2
a246 2
     &    'include the period if there is one'
        Q = 'Extension for scan files (i.e., .img, .v, _5b5.v, or blank)'
@


2.9
log
@appropriate factor for JMO 3D reconstructed images
@
text
@d2 3
d150 1
a150 1
      RCSHEADER = "$Id: petproc.f,v 2.8 1996/10/16 16:56:41 tom Exp tom $"
d241 3
a243 1
        Q = 'Extension for scan files (i.e., img, v)'
d246 1
a246 1
        EXTENSION = STR(1:3)
@


2.8
log
@new libimage
@
text
@d2 3
d134 1
a134 1
      DATA VERSION /'14-Oct-96'/
d147 1
a147 1
      RCSHEADER = "$Id: petproc.f,v 2.7 1996/10/14 21:28:29 tom Exp tom $"
@


2.7
log
@fix date bug
@
text
@d2 3
d144 1
a144 1
      RCSHEADER = "$Id: petproc.f,v 2.6 1996/10/14 21:18:01 tom Exp $"
@


2.6
log
@solaris
@
text
@d2 3
d141 1
a141 1
      RCSHEADER = "$Id: petproc.f,v 2.5 1996/04/25 16:09:08 tom Exp tom $"
d160 1
a160 1
      WRITE(YY,8000) DATES(1)
d162 1
a162 1
      WRITE(DD,8000) DATES(3)
@


2.5
log
@release Apr-96
@
text
@d2 3
d125 1
a125 1
      DATA VERSION /'15-Jul-93'/
d138 1
a138 1
      RCSHEADER = "$Id: petproc.f,v 2.1 1993/11/30 23:35:51 tom Exp tom $"
@


2.1
log
@increased MAXTIME to 100000
@
text
@d2 3
d69 7
a75 8
C			Modified 23-Oct-92 for Unix by TOV 
C				1) to incorporate libpetutil and libpe.
C						Changes in:	Makefile, petproc.inc, petproc.f, readhed1.f
C						Addition of Header and Log to all other modules.
C						Eliminate STATUS=NEW from OPEN statement for TIMEFILE.
C						Default extension for hdrfile is 'hdr' (HDREXT).
C						Added HDREXT to call to PETAFILE.
C						Use GETIMG from libpetutil.
d77 3
a79 3
C			Modified 15-Jul-93 by TOV:
C				1) added adjust_ecat_type and get_recon_type to get correct PIE
C				   factor for ECAT files (in GETPIE).
d103 1
a103 1
C
d105 1
a105 1
C
d108 2
a109 2
     2              MEANTIME(100),DCORPETT,TMID, EFACTOR, PIEMEAN,
     3              NORM2,START(100),LENGTH(100)
d116 2
a117 2
			CHARACTER*256 RCDNAME, TIMENAME, BLANK
			CHARACTER*256 RCSHEADER
d119 1
a119 1
C
d123 2
a124 2
C
      DATA TAUO15    /0.005592/		!	decay constant for O15 (1/sec)
d128 1
a128 1
C
d132 1
a132 1
C
d134 2
a135 2
C
			RCSHEADER = "$Id: petproc.f,v 2.0 1993/07/15 20:00:39 tom Exp tom $"
d149 3
a151 3
			HDREXT = 'hdr'
			BPAIR = 1
C
d153 1
a153 1
      CALL INTDATE(DATES)
d158 1
a158 1
C
d164 2
a165 2
      WRITE(USEROUT,*)
      WRITE(USEROUT,8100)'             Creates .hdr Files             '
d168 3
a170 5
C
C  Added for Unix
C
			CALL GETENV('PWD',PATH)
			CALL GETARG(1,SUBJECT)
d172 3
a174 3
			WRITE(USEROUT,8105) PATH( : LNBLNK(PATH)), SUBJECT
8105	FORMAT('Current Directory = ',A,/,'Subject ID = ',A)
C
d176 20
a195 20
C			
  		TIMENAME = SUBJECT(1:L)//'tim.dat'
			OPEN(TIMEFILE,FILE=TIMENAME,ERR=25)
			GO TO 30
25		WRITE(USEROUT,8110) TIMENAME( : LNBLNK(TIMENAME))
			STOP
30		WRITE(USEROUT,8115) TIMENAME( : LNBLNK(TIMENAME))
C
8110	FORMAT('Cannot open file ',A,' as a new file.')
8115	FORMAT('Writing time curve to ',A)
C
			RCDNAME = SUBJECT(1:L)//'.rcd'
			OPEN(RCDFILE,FILE=RCDNAME,ERR=35)
			GO TO 40
35		WRITE(USEROUT,8120) RCDNAME( : LNBLNK(RCDNAME))
			STOP
40		WRITE(USEROUT,8125) RCDNAME( : LNBLNK(RCDNAME))
8120	FORMAT('Cannot open file ',A,' as a new file.')
8125	FORMAT('Log of processing will be written to ',A)
C
d197 1
a197 1
C
d202 1
a202 1
C
d207 1
a207 1
C
d209 1
a209 1
C
d220 1
a220 1
C
d222 1
a222 1
C
d226 1
a226 1
        Q = 'Extension for scan files (i.e., img, IMG, c)'
d230 2
a231 2
      END IF
C
d233 2
a234 2
C
49    WRITE(USEROUT,*) '1=F18  2=C11  3=O15  4=GA68'
d246 4
a249 4
			ELSE
				GO TO 49
      END IF
C
d251 1
a251 1
C
d257 1
a257 1
C
d259 33
a291 23
C
50      Q = 'Enter the name of 1 image file you will be processing'
        STR = ' '
        CALL GTSTRING(Q,STR)
        FNAME = STR
        IF (.NOT.REPROCES) THEN
          IF (IANYL(STR,'.').EQ.0 .AND. EXTENSION(1:1) .NE. " ") THEN
            L = INANYR(STR,' ')
            FNAME = STR(1:L)//'.'//EXTENSION
          END IF
        END IF
        CALL READHED1(ERROR)
        IMGTYPE = RCONTYPE
        IF (ERROR) THEN
          WRITE(USEROUT,*) '*** Cannot read ',FNAME( : LNBLNK(FNAME)),BELL
          GO TO 50
        ELSE IF (IMGTYPE.NE.1000 .AND. IMGTYPE.NE.1020 .AND.
     &   IMGTYPE.NE.2000 .AND. IMGTYPE.NE.3000) THEN
          WRITE(USEROUT,*)'*** ERROR: Image Type ',IMGTYPE,
     2      'is incompatable with this program.',BELL
          GO TO 50
        END IF
C
d295 22
a316 20
C
        IF ((IMGTYPE.EQ.1020 .OR. IMGTYPE.EQ.2000) .AND.
     &       NORMMEAN.LE.0.0) THEN
60        Q = 'Enter the name of an attenuation image'
          STR = ' '
          CALL GTSTRING(Q,STR)
          FNAME = STR
          CALL READHED1(ERROR)
          IF (ERROR) THEN
            WRITE(USEROUT,*) '*** Cannot read ',FNAME( : LNBLNK(FNAME)),BELL
            GO TO 60
          ELSE IF (RCONTYPE.NE.1010 .and. RECONTYPE.NE.3000) THEN
            WRITE(USEROUT,*)'*** ERROR: Image Type ',RCONTYPE,
     2        ' is not a new attenuation image.',BELL
            GO TO 60
          END IF
        END IF
C
        CALL GETPIE(NPIES,PSLOPES,BNKPAIRS,DISK,PIENAME,FNAME,IMGTYPE,
     2    PIEMEAN, PIEDATE)
d318 1
a318 1
C
d320 2
a321 2
C
				IF (RCONTYPE .EQ. 3000) THEN
d330 1
a330 2
          IF ((IMGTYPE.NE.1020 .AND. IMGTYPE.NE.2000) .OR.
     &        EFACTOR.LT.0.1) THEN
d335 1
a335 2
            WRITE(USEROUT,*) 'PETT efficiency of PIE relative to ',
     2        'scan = ',EFACTOR
d340 4
a343 4
          END IF
        END IF
      END IF
C
d347 2
a348 2
C
100   CALL PETAFILE(NEWFILE,REPROCES,HDREXT)
d351 1
a351 1
        CALL READHDR1(ERROR)
d353 2
a354 2
        CALL READHED1(ERROR)
      END IF
d359 1
a359 1
      END IF
d362 2
a363 4
        WRITE(USEROUT,*) '*** Pie factors were read for type ',
     2    IMGTYPE
        WRITE(USEROUT,*) '*** Image is of type ',RCONTYPE,
     2    ' and can NOT be processed.'
d366 2
a367 2
      END IF
C
d369 1
a369 1
C
d374 6
a379 6
				IF (IMGTYPE.EQ.3000) THEN
					SCANST = LASTSCAN
				ELSE
					SCANST = LASTSCAN + 1.0
				END IF
			END IF
d385 1
a385 1
C
d387 1
a387 1
C
d389 5
a393 5
				IF (IMGTYPE.EQ.3000) THEN
					PIESLOPE = PSLOPES(1)
				ELSE
        	CALL GETPSLP1(PIESLOPE,BPAIR,NPIES,BNKPAIRS,PSLOPES)
				END IF
d397 2
a398 2
      END IF
C
d401 1
a401 1
C
d403 1
a403 1
C
d409 1
a409 1
C
d411 1
a411 1
C
d419 1
a419 1
      END IF
d430 2
a431 2
      END IF
C
d433 2
a434 3
C
8500  FORMAT(1X,'Processed by ',A4,' on ',A8,' with ',
     2  'PETPROC {',A9,'}')
d437 1
a437 2
8520  FORMAT(1X,'Efficiency Factor included in PETT Conversion ',
     &  'Factor = ',F)
d445 1
a445 1
        END IF
d447 1
a447 1
      END IF
d455 1
a455 1
      END IF
d458 1
a458 2
      WRITE(RCDFILE,*) '   PETT Conversion Factor/Scan Period = ',
     2    PETTCONV(1)
d461 1
a461 2
      WRITE(RCDFILE,*) '   PETT Conversion Factor/Scan Period = ',
     2    DCORPETT
d466 1
a466 1
C
d468 1
a468 1
C
d474 1
a474 1
C
d476 1
a476 2
      Q = 'Do you want to save weighted mid-times of each frame '//
     2    'in a file'
d490 2
a491 2
      END IF
C
@


2.0
log
@Modified to read ECAT files and adjust PIE
@
text
@d2 3
d133 1
a133 1
			RCSHEADER = "$Id$"
d141 1
a141 1
      MAXTIME = 20000.
@


1.2
log
@Revised to handle ECAT images as type 3000
@
text
@d2 3
d72 4
a92 11
C  Uses Subroutines:
C
C  Main Subroutines:
C     GETPIE   - read a PIE file;
C     GETPSLP1 - get pie slope from interpolation of PIE file values;
C     PETAFILE - get and open a scan file for processing;
C     PIESCALE - compute PETT efficiency factor (EFACTOR) of PIE rel. to scan;
C     READHDR1 - read scan parameters from an .HDR file;
C     READHED1 - read header of a scan file;
C     WRITEHD1 - create .HDR file;
C
d117 1
a117 1
      DATA VERSION /'18-Jun-93'/
d130 1
a130 1
			RCSHEADER = "$Header: /home/petsun2/tom/src/petproc/src/RCS/petproc.f,v 1.1 1992/10/28 15:55:00 tom Exp $"
d300 1
a300 1
        CALL GETPIE(NPIES,PSLOPES,BNKPAIRS,DISK,PIENAME,IMGTYPE,
d306 1
a306 1
        IF (PIEMEAN.EQ.1.0) THEN
d308 2
d371 1
d406 1
a406 1
      IF (IOPTION) THEN
d444 1
a444 1
      IF (IOPTION) THEN
@


1.1
log
@Initial revision
@
text
@d1 4
a4 1
c $Log$
d121 1
a121 1
      DATA VERSION /'23-Oct-92'/
d134 1
a134 1
			RCSHEADER = "$Header$"
d149 1
d379 5
a383 1
        CALL GETPSLP1(PIESLOPE,BPAIR,NPIES,BNKPAIRS,PSLOPES)
@
