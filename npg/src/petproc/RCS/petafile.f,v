head	2.30;
access;
symbols;
locks; strict;
comment	@c @;


2.30
date	2010.08.05.14.13.29;	author tom;	state Exp;
branches;
next	2.29;

2.29
date	2005.10.06.17.05.07;	author tom;	state Exp;
branches;
next	2.28;

2.28
date	2005.08.08.16.29.32;	author tom;	state Exp;
branches;
next	2.25;

2.25
date	2004.11.03.14.28.30;	author tom;	state Exp;
branches;
next	2.24;

2.24
date	2004.11.02.16.40.33;	author tom;	state Exp;
branches;
next	2.21;

2.21
date	2004.07.08.14.39.29;	author tom;	state Exp;
branches;
next	2.20;

2.20
date	2004.02.17.15.09.00;	author tom;	state Exp;
branches;
next	2.5;

2.5
date	96.04.25.16.09.08;	author tom;	state Exp;
branches;
next	2.0;

2.0
date	93.07.15.20.00.39;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	92.10.28.15.55.00;	author tom;	state Exp;
branches;
next	;


desc
@Original Unix release
@


2.30
log
@update to recognize 962
@
text
@c $Log: petafile.f,v $
c Revision 2.29  2005/10/06  17:05:07  tom
c use PID instead of scandate for determining PIE
c
c Revision 2.28  2005/08/08  16:29:32  tom
c add pie Aug 2005
c
c Revision 2.25  2004/11/03  14:28:30  tom
c add getpie_961
c
c Revision 2.24  2004/11/02  16:40:33  tom
c set 961 pies based on scandate, acquisition, software
c
c Revision 2.21  2004/07/08  14:39:29  tom
c update getpie for 961
c
c Revision 2.20  2004/02/17  15:09:00  tom
c Feb 2004
c
c Revision 2.5  1996/04/25  16:09:08  tom
c release Apr-96
c
c Revision 2.0  1993/07/15  20:00:39  tom
c Modified to read ECAT files and adjust PIE
c
c Revision 1.1  1992/10/28  15:55:00  tom
c Initial revision
c
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  Subroutine:   PETAFILE.FTN
C
C  Author:       Tom O. Videen
C  Date:         21-Jan-87
C  Written for:  PETPROC
C
C  Intent:
C     This subroutine gets the name of the file for processing
C     and the name of the HDR file to create or rewrite.
C     The existence of the image file is checked.
C     The ability to open the HDR file is checked.
C
C  History:
C     Modified 10-Oct-88 by TOV to move check for existence of HDF file
C        to this subroutine from WRITEHD1.
C     Modified 24-Jun-91 by TOV to eliminate a bug in default file names
C        when the extension has a numeral.
C
C			Modified for Unix 23-Oct-92 TOV
C				Changed prompt for file to process.
C				Added HDREXT for default hdr extension.
C				Changed BLANK and STAR to CH*256
C				Added RCSHEADER and Log
C
C  Variable Passed:
C     NEWFILE:  true -->increment numbers in current FNAME;
C               false-->prompt with current FNAME;
C     REPROCES: true--> reprocess an existing HDR file;
C
C  Common Block Variables:
C
C  /USRIO/
C     USEROUT - logical unit for user output;
C
C  /LUINFO/
C     DISK - logical unit assigned to disk for scan file I/O;
C
C  /SCANS/
C     FRAME - number of scan frame being processed;
C     FNAME - scan file name;
C     HDRNAME - HDR file name;
C     REPROCES: true--> reprocessing an HDR file;
C
C  Subroutines:
C
C  TERMINAL.LIB
C     GTSTRING
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE PETAFILE(NEWFILE,REPROCES,HDREXT)
C
      INCLUDE 'petproc.inc'
C
      INTEGER*4    NUM,K,L,L1
      CHARACTER*1  BELL
			CHARACTER*3  HDREXT
      CHARACTER*256 BLANK,STAR
      CHARACTER*80 Q,STR
      CHARACTER*256 RCSHEADER
      LOGICAL*1    NEWFILE,REPROCES
C
8001  FORMAT(I1)
8002  FORMAT(I2)
      RCSHEADER = "$Id: petafile.f,v 2.29 2005/10/06 17:05:07 tom Exp tom $"
      BLANK = ' '
      STAR = '*'
      BELL = CHAR(7)

C  Increment number within the name of the file to process (FNAME)

      IF (NEWFILE .AND. FRAME.GT.1) THEN
        L1= IANYL(FNAME,'.')
        IF (L1.EQ.0) L1=20
        L = IANYR(FNAME(1:L1),'1234567890')
        IF (L.NE.0) THEN
          K = IANYR(FNAME(1:L-1),'1234567890')
          IF (L-K.EQ.1) THEN
            READ(FNAME(K:L),8002) NUM
          ELSE
            READ(FNAME(L:L),8001) NUM
          END IF
          NUM = NUM+1
          IF (NUM.LT.10) THEN
            WRITE(FNAME(L:L),8001) NUM
          ELSE IF (L-K.EQ.1) THEN
            WRITE(FNAME(K:L),8002) NUM
          ELSE
            WRITE(FNAME(L:L+1),8002) NUM
            L = L+1
          END IF
        END IF
		IF (EXTENSION(1:1) .NE." ") THEN
	      FNAME = FNAME(1:L)//'.'//EXTENSION
		END IF
      END IF

C  Check the existence of the input file

200   STR = FNAME( : lnblnk(FNAME))
      Q = 'File to process (enter "*" to stop)'
      CALL GTSTRING(Q,STR)
      FNAME = STR
      IF (FNAME.EQ.BLANK .OR. FNAME.EQ.STAR) THEN
        FNAME = BLANK
        RETURN
      END IF
      IF (REPROCES) THEN
        L = IANYL(FNAME,'.')
        IF (L.NE.0) THEN                    ! must have HDR extension
          FNAME = FNAME(1:L)//EXTENSION
        ELSE
          L = INANYR(FNAME,' ')
          FNAME = FNAME(1:L)//'.'//EXTENSION
        END IF
      ELSE IF (FRAME.EQ.1) THEN
        L = IANYL(FNAME,'.')
        IF (L.NE.0) THEN                    ! add EXTENSION
          FNAME = FNAME(1:L)//EXTENSION
        ELSE IF (EXTENSION(1:1) .NE." ") THEN
          L = INANYR(FNAME,' ')
          FNAME = FNAME(1:L)//'.'//EXTENSION
        END IF
      END IF
      OPEN(DISK,FILE=FNAME,STATUS='OLD',ERR=210)
      CLOSE(DISK)
      GO TO 300
210   L = INANYR(FNAME,' ')
      WRITE(USEROUT,*)'*** ERROR: unable to find file ', FNAME(1:L),BELL
      GO TO 200

C  Open appropriate HDR file

300   IF (REPROCES) THEN
        HDRNAME = FNAME
      ELSE
        L = IANYL(FNAME,'.')
        IF (L.NE.0) THEN                    ! must have HDR extension
          HDRNAME = FNAME(1:L)//HDREXT
        ELSE
          L = INANYR(FNAME,' ')
          HDRNAME = FNAME(1:L)//'.'//HDREXT
        END IF

400     OPEN(DISK,FILE=HDRNAME,STATUS='OLD',ERR=410)
        WRITE(USEROUT,*)
        WRITE(USEROUT,*) '*** Existing HDR file has been rewritten'
        CLOSE(DISK,STATUS='DELETE')
410     OPEN(DISK,FILE=HDRNAME,STATUS='NEW',ERR=420)
        CLOSE(DISK)
        RETURN
420     WRITE(USEROUT,*)'*** ERROR: cannot open ',HDRNAME( : LNBLNK(HDRNAME)),BELL
        STR = HDRNAME( : LNBLNK(HDRNAME))
        Q = 'HDR File Name'
        CALL GTSTRING(Q,STR)
        HDRNAME = STR
        GO TO 400
      END IF

      RETURN
      END
@


2.29
log
@use PID instead of scandate for determining PIE
@
text
@d2 3
d95 1
a95 1
      RCSHEADER = "$Id: petafile.f,v 2.28 2005/08/08 16:29:32 tom Exp tom $"
@


2.28
log
@add pie Aug 2005
@
text
@d2 3
d92 1
a92 1
      RCSHEADER = "$Id: petafile.f,v 2.25 2004/11/03 14:28:30 tom Exp tom $"
@


2.25
log
@add getpie_961
@
text
@d2 3
d89 1
a89 1
      RCSHEADER = "$Id: petafile.f,v 2.24 2004/11/02 16:40:33 tom Exp tom $"
@


2.24
log
@set 961 pies based on scandate, acquisition, software
@
text
@d2 3
d86 1
a86 1
      RCSHEADER = "$Id: petafile.f,v 2.21 2004/07/08 14:39:29 tom Exp tom $"
@


2.21
log
@update getpie for 961
@
text
@d2 3
d83 1
a83 1
      RCSHEADER = "$Id: petafile.f,v 2.20 2004/02/17 15:09:00 tom Exp tom $"
@


2.20
log
@Feb 2004
@
text
@d2 3
d80 1
a80 1
      RCSHEADER = "$Id: petafile.f,v 2.5 1996/04/25 16:09:08 tom Exp tom $"
@


2.5
log
@release Apr-96
@
text
@d2 3
d77 1
a77 1
      RCSHEADER = "$Id: petafile.f,v 2.0 1993/07/15 20:00:39 tom Exp tom $"
@


2.0
log
@Modified to read ECAT files and adjust PIE
@
text
@d2 3
d74 1
a74 1
			RCSHEADER = "$Id$"
d78 1
a78 1
C
d80 1
a80 1
C
d102 3
a104 3
				IF (EXTENSION(1:1) .NE." ") THEN
	        FNAME = FNAME(1:L)//'.'//EXTENSION
				END IF
d106 1
a106 1
C
d108 1
a108 1
C
d138 1
a138 2
      WRITE(USEROUT,*)'*** ERROR: unable to find file ',
     2   FNAME(1:L),BELL
d140 1
a140 1
C
d142 1
a142 1
C
d153 1
a153 1
C
d168 1
a168 1
C
@


1.1
log
@Initial revision
@
text
@d1 4
a4 1
c $Log$
d71 1
a71 1
			RCSHEADER = "$Header$"
@
