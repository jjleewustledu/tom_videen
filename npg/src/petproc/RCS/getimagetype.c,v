head	2.30;
access;
symbols;
locks; strict;
comment	@ * @;


2.30
date	2010.08.05.14.13.29;	author tom;	state Exp;
branches;
next	2.29;

2.29
date	2005.10.06.17.05.07;	author tom;	state Exp;
branches;
next	2.28;

2.28
date	2005.08.08.16.29.32;	author tom;	state Exp;
branches;
next	2.25;

2.25
date	2004.11.03.14.28.30;	author tom;	state Exp;
branches;
next	2.24;

2.24
date	2004.11.02.16.40.33;	author tom;	state Exp;
branches;
next	2.22;

2.22
date	2004.11.01.20.24.27;	author tom;	state Exp;
branches;
next	2.21;

2.21
date	2004.07.08.14.39.29;	author tom;	state Exp;
branches;
next	2.20;

2.20
date	2004.02.17.15.09.00;	author tom;	state Exp;
branches;
next	2.12;

2.12
date	2002.11.27.17.06.58;	author tom;	state Exp;
branches;
next	2.11;

2.11
date	99.12.16.17.05.19;	author tom;	state Exp;
branches;
next	2.10;

2.10
date	99.12.15.19.24.25;	author tom;	state Exp;
branches;
next	2.9;

2.9
date	97.03.27.17.54.38;	author tom;	state Exp;
branches;
next	2.8;

2.8
date	97.03.10.17.24.25;	author tom;	state Exp;
branches;
next	2.7;

2.7
date	97.03.10.16.23.12;	author tom;	state Exp;
branches;
next	2.6;

2.6
date	96.10.14.21.18.25;	author tom;	state Exp;
branches;
next	2.5;

2.5
date	96.04.25.16.09.49;	author tom;	state Exp;
branches;
next	;


desc
@release Apr-96
@


2.30
log
@update to recognize 962
@
text
@/*	$Id: getimagetype.c,v 2.29 2005/10/06 17:05:07 tom Exp tom $
	$Log: getimagetype.c,v $
 * Revision 2.29  2005/10/06  17:05:07  tom
 * use PID instead of scandate for determining PIE
 *
 * Revision 2.28  2005/08/08  16:29:32  tom
 * add pie Aug 2005
 *
 * Revision 2.25  2004/11/03  14:28:30  tom
 * add getpie_961
 *
 * Revision 2.24  2004/11/02  16:40:33  tom
 * set 961 pies based on scandate, acquisition, software
 *
 * Revision 2.22  2004/11/01  20:24:27  tom
 * get acquisition type and sw version
 *
 * Revision 2.22  2004/11/01  20:02:27  tom
 * get acquisition type and sw version
 *
 * Revision 2.21  2004/07/08  14:41:37  tom
 * modify getpie for 961 versions
 *
 * Revision 2.20  2004/02/17  14:13:40  tom
 * Feb 2004
 *
 * Revision 2.8  2004/02/17  14:11:41  tom
 * Feb 2004
 *
 * Revision 2.7  2002/12/02  17:08:36  tom
 * modifications for gcc
 *
 * Revision 2.6  1999/12/16  15:27:47  tom
 * clean up
 *
 * Revision 2.5  1999/12/15  22:41:18  tom
 * y2k and lint clean
 *
 * Revision 2.4  1997/03/19  20:04:49  tom
 * firstimgfrm fix
 *
 * Revision 2.3  1997/03/10  17:19:16  tom
 * *** empty log message ***
 *
 * Revision 2.2  1997/03/10  16:54:07  tom
 * firstimgfrm
 *
 * Revision 2.1  1997/03/10  16:16:12  tom
 * read frame 1,2 or 3
 *
 * Revision 2.0  1996/10/14  20:55:31  tom
 * solaris
 *
 * Revision 1.3  1995/12/20  16:33:49  tom
 * 961 release
 *
 * Revision 1.2  1995/12/20  15:18:25  tom
 * *** empty log message ***
 *
 * Revision 1.1  1995/12/20  04:30:45  tom
 * Initial revision
 * */
/* ===============================================================================
 *	Module:			getimagetype.c
 *	Date:			Dec 1995
 *	Author:			Tom Videen
 *	Description:	Get image type
 * ===============================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/petproc/RCS/getimagetype.c,v 2.29 2005/10/06 17:05:07 tom Exp tom $";
#endif

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <image.h>
#include <libimage.h>
#include <pettable.h>

int             getimagetype (fname, filtype, slices, length, scandate, compound,
			                      filtername, acquisition, sw_version, normave, normtime)
	char           *fname;
	int            *filtype;
	int            *slices;
	int            *length;
	char           *scandate;
	char           *compound;
	char           *filtername;
	char           *acquisition;
	int            *sw_version;
	int            *normave;
	int            *normtime;
{
	ImageFile      *file;
	Index           indx;
	FILE           *fp;
	MainHeader     *mh;
	SubHeader      *sh;
	char           *ptr;
	int             petnum;

	ptr = strstr (fname, " ");
	*ptr = NULL;

	indx.pln = 1;
	indx.gate = 1;
	indx.data = 0;
	indx.bed = 0;

	if ((fp = fopen (fname, "r")) == NULL)
		return (-1);
	(void) fclose (fp);

	file = make_imgfile (fname);
	(void) strcpy (file->mode, "r");
	if (open_imgfile (file) == ERROR)
		return (-2);
	if (get_mh (file) == ERROR)
		return (-3);
	mh = file->mh;
	indx.frm = firstimgfrm(file);
	if (indx.frm <= 0)
		return (-4);
	if (get_sh (file, &indx) == ERROR)
		return (-5);
	sh = file->sh;

	petnum = mh->scanner_type;
	printf ("petnum = %i\n",petnum);
	*slices = mh->nplane;
	*length = sh->duration;
	(void) strncpy (scandate, mh->date_time, 11);
	(void) strncpy (compound, mh->radiopharmaceutical, 9);
	(void) strncpy (acquisition, mh->acquisition, 3);
	*sw_version = mh->sw_version;

	if (mh->pr_filter == FILTERG)
		(void) strcpy (filtername, "FILTERG");
	else if (mh->pr_filter == FILTERF)
		(void) strcpy (filtername, "FILTERF");
	else if (mh->pr_filter == GAUSS_INDEX)
		(void) strcpy (filtername, filterTable[GAUSS_INDEX]);
	else if (mh->pr_filter == BUTTERWORTH_INDEX)
		(void) strcpy (filtername, filterTable[BUTTERWORTH_INDEX]);
	else if (sh->filter_code < GAUSSIAN_FILTER_CODE - 1)
		(void) strcpy (filtername, filterTable[sh->filter_code]);
	else if (sh->filter_code < BUTTERWORTH_FILTER_CODE - 1)
		(void) strcpy (filtername, filterTable[GAUSS_INDEX]);
	else if (sh->filter_code <= BUTTERWORTH_FILTER_CODE + 1)
		(void) strcpy (filtername, filterTable[BUTTERWORTH_INDEX]);
	else
		(void) strcpy (filtername, " ");

	if (mh->scanner_type == 6) {
		*filtype = (int) file->p6->file_type;
		*normave = (int) file->p6->norm_average;
		*normtime = (int) file->p6->norm_run_time;
	} else {
		*normave = 0;
		*normtime = 0;
	}

	free_imgfile (file);
	free (file->name);
	return (petnum);
}
@


2.29
log
@use PID instead of scandate for determining PIE
@
text
@d1 1
a1 1
/*	$Id: getimagetype.c,v 2.28 2005/08/08 16:29:32 tom Exp tom $
d3 3
d72 1
a72 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/petproc/RCS/getimagetype.c,v 2.28 2005/08/08 16:29:32 tom Exp tom $";
d131 1
@


2.28
log
@add pie Aug 2005
@
text
@d1 1
a1 1
/*	$Id: getimagetype.c,v 2.25 2004/11/03 14:28:30 tom Exp tom $
d3 3
d69 1
a69 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/petproc/RCS/getimagetype.c,v 2.25 2004/11/03 14:28:30 tom Exp tom $";
@


2.25
log
@add getpie_961
@
text
@d1 1
a1 1
/*	$Id: getimagetype.c,v 2.24 2004/11/02 16:40:33 tom Exp tom $
d3 3
d66 1
a66 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/petproc/RCS/getimagetype.c,v 2.24 2004/11/02 16:40:33 tom Exp tom $";
@


2.24
log
@set 961 pies based on scandate, acquisition, software
@
text
@d1 1
a1 1
/*	$Id: getimagetype.c,v 2.22 2004/11/01 20:24:27 tom Exp tom $
d3 3
d63 1
a63 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/petproc/RCS/getimagetype.c,v 2.22 2004/11/01 20:24:27 tom Exp tom $";
@


2.22
log
@get acquisition type and sw version
@
text
@d1 1
a1 1
/*	$Id: getimagetype.c,v 2.22 2004/11/01 20:02:27 tom Exp $
d3 3
d60 1
a60 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/metproc/RCS/getimagetype.c,v 2.22 2004/11/01 20:02:27 tom Exp $";
@


2.21
log
@update getpie for 961
@
text
@d1 1
a1 1
/*	$Id: getimagetype.c,v 2.20 2004/02/17 15:09:00 tom Exp tom $
d3 7
a9 1
 * Revision 2.20  2004/02/17  15:09:00  tom
d12 2
a13 2
 * Revision 2.12  2002/11/27  17:06:58  tom
 * *** empty log message ***
d15 2
a16 2
 * Revision 2.11  1999/12/16  17:05:19  tom
 * fix date
d18 2
a19 2
 * Revision 2.10  1999/12/15  19:24:25  tom
 * lint cleaning
d21 2
a22 2
 * Revision 2.9  1997/03/27  17:54:38  tom
 * correct parameter in call to firstimgfrm
d24 7
a30 1
 * Revision 2.8  1997/03/10  17:24:25  tom
d33 1
a33 1
 * Revision 2.7  1997/03/10  16:23:12  tom
a35 3
 * Revision 2.6  1996/10/14  21:18:25  tom
 * solaris
 *
d57 1
a57 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/petproc/RCS/getimagetype.c,v 2.20 2004/02/17 15:09:00 tom Exp tom $";
d68 1
a68 1
			                      filtername, normave, normtime)
d76 2
a91 1
	indx.frm = 1;
d120 2
@


2.20
log
@Feb 2004
@
text
@d1 1
a1 1
/*	$Id: getimagetype.c,v 2.12 2002/11/27 17:06:58 tom Exp tom $
d3 3
d48 1
a48 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/petproc/RCS/getimagetype.c,v 2.12 2002/11/27 17:06:58 tom Exp tom $";
@


2.12
log
@*** empty log message ***
@
text
@d1 1
a1 1
/*	$Id: getimagetype.c,v 2.11 1999/12/16 17:05:19 tom Exp tom $
d3 3
d38 1
a38 1
 *	Date:			Dec-95
d43 1
d45 1
a45 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/petproc/RCS/getimagetype.c,v 2.11 1999/12/16 17:05:19 tom Exp tom $";
@


2.11
log
@fix date
@
text
@d1 1
a1 1
/*	$Id: getimagetype.c,v 2.10 1999/12/15 19:24:25 tom Exp tom $
d3 3
d41 1
a41 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/metproc/RCS/getimagetype.c,v 2.6 1999/12/16 15:27:47 tom Exp $";
d82 1
a82 1
	fclose (fp);
d85 1
a85 1
	strcpy (file->mode, "r");
d101 2
a102 2
	strncpy (scandate, mh->date_time, 11);
	strncpy (compound, mh->radiopharmaceutical, 9);
d105 1
a105 1
		strcpy (filtername, "FILTERG");
d107 1
a107 1
		strcpy (filtername, "FILTERF");
d109 1
a109 1
		strcpy (filtername, filterTable[GAUSS_INDEX]);
d111 1
a111 1
		strcpy (filtername, filterTable[BUTTERWORTH_INDEX]);
d113 1
a113 1
		strcpy (filtername, filterTable[sh->filter_code]);
d115 1
a115 1
		strcpy (filtername, filterTable[GAUSS_INDEX]);
d117 1
a117 1
		strcpy (filtername, filterTable[BUTTERWORTH_INDEX]);
d119 1
a119 1
		strcpy (filtername, " ");
@


2.10
log
@lint cleaning
@
text
@d1 1
a1 1
/*	$Id: getimagetype.c,v 2.9 1997/03/27 17:54:38 tom Exp tom $
d3 3
d38 1
a38 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/petproc/RCS/getimagetype.c,v 2.9 1997/03/27 17:54:38 tom Exp tom $";
d78 1
a78 1
		return (0);
d84 1
a84 1
		return (0);
d86 1
a86 1
		return (0);
d88 1
a88 1
	indx.frm = firstimgfrm (file);
d90 1
a90 1
		return (0);
d92 1
a92 1
		return (0);
d98 1
a98 1
	strncpy (scandate, mh->date_time, 9);
@


2.9
log
@correct parameter in call to firstimgfrm
@
text
@d1 1
a1 1
/*	$Id: getimagetype.c,v 2.8 1997/03/10 17:24:25 tom Exp tom $
d3 3
a33 1

d35 1
a35 2
static char     rcsid[] = "$Header: /home/npggw/tom/src/petproc/RCS/getimagetype.c,v 2.8 1997/03/10 17:24:25 tom Exp tom $";

a40 1
#include <math.h>
a42 1
#include <libnrimg.h>
@


2.8
log
@firstimgfrm
@
text
@d1 1
a1 1
/*	$Id: getimagetype.c,v 2.7 1997/03/10 16:23:12 tom Exp tom $
d3 3
d33 1
a33 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/petproc/RCS/getimagetype.c,v 2.7 1997/03/10 16:23:12 tom Exp tom $";
d86 1
a86 1
	indx.frm = firstimgfrm (fname);
@


2.7
log
@read frame 1,2 or 3
@
text
@d1 1
a1 1
/*	$Id: getimagetype.c,v 2.6 1996/10/14 21:18:25 tom Exp tom $
d3 3
d30 1
a30 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/petproc/RCS/getimagetype.c,v 2.6 1996/10/14 21:18:25 tom Exp tom $";
d83 3
a85 12
	if (existimgfrm (file, &indx) == ERROR) {
		if (indx.frm == 1) {
			indx.frm = 2;
			if (existimgfrm (file, &indx) == ERROR) {
				indx.frm = 3;
				if (existimgfrm (file, &indx) == ERROR)
					return (0);
			}
		} else {
			return (0);
		}
	}
@


2.6
log
@solaris
@
text
@d1 1
a1 1
/*	$Id: getimagetype.c,v 2.0 1996/10/14 20:55:31 tom Exp $
d3 3
d27 1
a27 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/metproc/RCS/getimagetype.c,v 2.0 1996/10/14 20:55:31 tom Exp $";
d52 5
a56 5
    ImageFile      *file;
    Index           indx;
    FILE           *fp;
    MainHeader     *mh;
    SubHeader      *sh;
d63 5
a67 5
    indx.frm = 1;
    indx.pln = 1;
    indx.gate = 1;
    indx.data = 0;
    indx.bed = 0;
d69 3
a71 23
    if ((fp = fopen (fname, "r")) == NULL)
        return (0);
    fclose (fp);
 
    file = make_imgfile (fname);
    strcpy (file->mode, "r");
    if (open_imgfile (file) == ERROR)
        return (0);
    if (get_mh (file) == ERROR)
        return (0);
    mh = file->mh;
    if (existimgfrm (file, &indx) == ERROR) {
        if (indx.frm == 1) {
            indx.frm = 2;
            if (existimgfrm (file, &indx) == ERROR) 
                return (0);
        } else {
            return (0);
        }
    }
    if (get_sh (file, &indx) == ERROR) 
        return (0);
    sh = file->sh;
d73 23
d99 2
a100 2
    strncpy (scandate, mh->date_time, 9);
    strncpy (compound, mh->radiopharmaceutical, 9);
d128 2
a129 2
    free_imgfile (file);
    free (file->name);
@


2.5
log
@release Apr-96
@
text
@d1 1
a1 1
/*	$Id: getimagetype.c,v 1.3 1995/12/20 16:33:49 tom Exp $
d3 3
d17 1
a17 1
 *	Date:			Apr-96
d22 1
d24 2
a25 1
static char     rcsid[] = "$Header: /home/petsun19/tom/src/metproc/RCS/getimagetype.c,v 1.3 1995/12/20 16:33:49 tom Exp $";
d34 1
d37 1
a37 1
int             getimagetype (fname, filetype, slices, length, scandate, compound,
d40 1
a40 1
	int            *filetype;
d49 5
a53 4
	ImageFile      *file;
	Index           indx;
	MainHeader     *mh;
	SubHeader      *sh;
a56 5
	indx.frm = 1;
	indx.pln = 1;
	indx.gate = 1;
	indx.data = 0;
	indx.bed = 0;
a58 23
	file = make_imgfile (fname);
	if (open_imgfile (file) == ERROR) {
		fprintf (stderr, "ERROR [getimagetype]: Could not open %s\n", fname);
		return (0);
	}
	if (get_mh (file) == ERROR) {
		fprintf (stderr, "ERROR [getimagetype]: Could not get MainHeader from %s\n", fname);
		return (0);
	}
	*ptr = ' ';
	if (existimgfrm (file, &indx) == ERROR) {
		indx.frm = 2;
		if (existimgfrm (file, &indx) == ERROR) {
			fprintf (stderr, "ERROR [getimagetype]: cannot find %s frame 1 or 2\n", file);
			return (ERROR);
		}
	}
	if (get_sh (file, &indx) == ERROR) {
		fprintf (stderr, "ERROR [getimagetype]: Could not read file subheader in %s\n", file);
		return (ERROR);
	}
	mh = file->mh;
	sh = file->sh;
d60 30
a90 1
	*filetype = mh->filetype;
d93 2
a94 2
	strncpy (scandate, mh->date_time, 8);
	strncpy (compound, mh->radiopharmaceutical, 10);
d114 1
d122 2
a123 2
	free (file->name);
	free_imgfile (file);
@
