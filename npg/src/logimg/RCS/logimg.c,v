head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	2004.02.16.19.54.02;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	2002.11.26.22.48.34;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	98.10.15.14.00.08;	author tom;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Feb 2004
@
text
@/* $Log: logimg.c,v $
 * Revision 1.2  2002/11/26  22:48:34  tom
 * *** empty log message ***
 *
 * Revision 1.1  1998/10/15  14:00:08  tom
 * Initial revision
 * */
/* =============================================================================
 *  Module:         logimg.c
 *  Date:           Oct 1998
 *  Author:         Tom Videen
 *  Description:    Create log(img)
 * =============================================================================
 */
/*@@unused@@*/
static char     rcsid[] = "$Header: /home/npggw/tom/src/logimg/RCS/logimg.c,v 1.2 2002/11/26 22:48:34 tom Exp tom $";

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>
#include <image.h>
#include <libimage.h>
#include <libnrimg.h>
#include <nrutil.h>

main (argc, argv)
	int             argc;
	char           *argv[];
{
	ImageFile      *file1;
	Index           indx;
	MainHeader     *mh;
	SubHeader      *sh;
	float        ***img;			 /* input tensor */
	float           scaler, val;
	char           *infile;			 /* file to read */
	char           *outfile;		 /* file to write */
	int             nx, ny, nz;		 /* array dimensions */
	int             i, j, k;

/*
 * Get command line arguments.
 */
	if (argc != 4) {
		printf ("Usage: logimg in out scaler\n");
		return (1);
	}
	infile = argv[1];
	outfile = argv[2];
	scaler = atof (argv[3]);
	if (scaler == 0)
		scaler = 1.0;

	indx.frm = 1;
	indx.pln = 1;
	indx.gate = 1;
	indx.data = 0;
	indx.bed = 0;

	file1 = make_imgfile (infile);
	(void) strcpy (file1->mode, "r");
	if (open_imgfile (file1) == ERROR) {
		fprintf (stderr, "ERROR [logimg]: Cannot open %s\n", infile);
		return (ERROR);
	}
	if (get_mh (file1) == ERROR) {
		fprintf (stderr, "ERROR [logimg]: Cannot get MainHeader from %s\n", infile);
		return (ERROR);
	}
	if (existimgfrm (file1, &indx) == ERROR) {
		fprintf (stderr, "ERROR [logimg]: cannot find %s frame 1\n", infile);
		return (ERROR);
	}
	if (get_sh (file1, &indx) == ERROR) {
		fprintf (stderr, "ERROR [logimg]: Cannot read file subheader in %s\n", infile);
		return (ERROR);
	}
	mh = file1->mh;
	sh = file1->sh;
	nx = sh->dim1;
	ny = sh->dim2;
	nz = sh->dim3;

	if ((img = readtensor (file1, &indx)) == NULL) {
		fprintf (stderr, "ERROR [logimg]: reading image data from %s\n", infile);
		return (ERROR);
	}
	for (i = 1; i <= nz; i++) {
		for (j = 1; j <= ny; j++) {
			for (k = 1; k <= nx; k++) {
				val = img[i][j][k];
				if (val > 0)
					img[i][j][k] = scaler * log (val);
				else
					img[i][j][k] = 0;
			}
		}
	}

	close_imgfile (file1);
	file1->name = outfile;
	(void) strcpy (file1->mode, "w");
	indx.frm = 1;
	if (open_imgfile (file1) == ERROR) {
		fprintf (stderr, "ERROR [logimg]: Cannot open %s\n", outfile);
		return (ERROR);
	}
	mh->nframe = indx.frm;
	if (put_mh (file1) == ERROR)
		return (ERROR);
	if (writetensor (file1, &indx, img) == ERROR)
		return (ERROR);
	printf ("Created log image %s\n", outfile);
	free_f3tensor (img, 1, nz, 1, ny, 1, nx);
	free_imgfile (file1);
	return (OK);
}
@


1.2
log
@*** empty log message ***
@
text
@d2 3
d10 1
a10 1
 *  Date:           Oct-98
d15 2
a16 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/logimg/RCS/logimg.c,v 1.1 1998/10/15 14:00:08 tom Exp tom $";
d47 1
a47 1
		exit (1);
d62 1
a62 1
	strcpy (file1->mode, "r");
d103 1
a103 1
	strcpy (file1->mode, "w");
@


1.1
log
@Initial revision
@
text
@d1 4
a4 1
/* $Log$ */
d12 1
a12 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/logimg/RCS/logimg.c,v 1.8 1998/10/14 16:19:30 tom Exp $";
a20 1
#include <nr.h>
d27 1
a27 1
	ImageFile      *file1, *file2;
@
