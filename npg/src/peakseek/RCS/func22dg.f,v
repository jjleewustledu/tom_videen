head	1.1;
access;
symbols;
locks; strict;
comment	@c @;


1.1
date	96.11.25.23.22.12;	author tom;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  Function:     FUNC22DG.FTN
C  Author:       Tom O. Videen
C  Date:         08-Sep-89
C  Written For:  Curve fitting for Impulse Response Functions
C
C  Intent:
C     Evaluate terms of a function for non-linear least-squares search
C     with form of 2 2D-gaussians plus a constant.
C
C  Variables Passed:
C     X  - array of data points for first independent variable
C     Y  - array of data points for second independent variable
C     I  - index to X data points
C     J  - index to Y data points
C     A  - array of parameters
C          A(1) - amplitude of 1st gaussian
C          A(2) - X-location of peak (both gaussians)
C          A(3) - Y-location of peak (both gaussians)
C          A(4) - sigma X of 1st gaussian
C          A(5) - sigma Y of 1st gaussian
C          A(6) - amplitude of 2nd gaussian
C          A(7) - sigma X of 2nd gaussian
C          A(8) - sigma Y of 2nd gaussian
C
C  No Subroutines.
C
C  Called by:  FCHI22DG
C
C  Compiling Instructions:
C     Check parameters NDIM and NPARM; then compile.
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

      FUNCTION FUNC22DG (X, Y, I, J, A)

      PARAMETER (NDIM=100)         ! max. number of points
      PARAMETER (NPARM=8)          ! number of parameters
      PARAMETER (P1SCALE = 10000.) ! scaling factor for amplitude

      REAL*4    X(NDIM,NDIM)
      REAL*4    Y(NDIM,NDIM)
      REAL*4    A(NPARM)
      REAL*4    MX, MY, MEXP, MFUNC  ! 1st gaussian
      REAL*4    NX, NY, NEXP, NFUNC  ! 2nd gaussian
      REAL*4    LIMIT                ! argument check on EXP
      INTEGER*4 I,J

      DATA LIMIT /180./

      MFUNC = 0.
      NFUNC = 0.

C  Potential zero-divide errors

      IF (A(4).EQ.0.0) PAUSE 'A(4) = 0'
      IF (A(5).EQ.0.0) PAUSE 'A(5) = 0'
      IF (A(7).EQ.0.0) PAUSE 'A(7) = 0'
      IF (A(8).EQ.0.0) PAUSE 'A(8) = 0'

C  Evaluate 1st gaussian

      MX = (X(I,J) - A(2))/A(4)
      MY = (Y(I,J) - A(3))/A(5)
      MEXP = (MX**2 + MY**2)/2.
      IF (MEXP.LT.LIMIT) MFUNC = A(1)*EXP(-MEXP)

C  Evaluate 2nd gaussian

      NX = (X(I,J) - A(2))/A(7)
      NY = (Y(I,J) - A(3))/A(8)
      NEXP = (NX**2 + NY**2)/2.
      IF (NEXP.LT.LIMIT) NFUNC = A(6)*EXP(-NEXP)

C  Sum gaussians + constant

      FUNC22DG = P1SCALE*(MFUNC + NFUNC)

      RETURN
      END
@
