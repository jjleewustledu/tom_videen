head	1.6;
access;
symbols;
locks; strict;
comment	@ * @;


1.6
date	2004.02.20.16.13.34;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	2004.02.16.19.35.36;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	96.11.04.21.16.20;	author tom;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Feb 2004
@
text
@/* $Log: getprms_isum.c,v $
 * Revision 1.5  2004/02/16  19:35:36  tom
 * Feb 2004
 *
 * Revision 1.1  1996/11/04  21:16:20  tom
 * Initial revision
 * */
/*	===============================================================================
 *	Module:			getprms_isum.c
 *	Date:			Nov 1996
 *	Author:			Tom Videen
 *	Description:	Read program-specific parameters from the parameter file.
 *
 *	Input:
 *		prmfile	-	name of parameter file
 *
 *	Output (parameters assigned values):
 *	Required:
 *		smg_norm
 *		smg_mode
 *	===============================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/isum/RCS/getprms_isum.c,v 1.5 2004/02/16 19:35:36 tom Exp tom $";
#endif

#include <stdio.h>
#include <string.h>
#include <math.h>
#include <imgutil.h>

int             getprms_isum (prmfile, smg_norm, smg_mode)
	char           *prmfile;
	float          *smg_norm;
	char           *smg_mode;

{
	FILE           *fp;
	char            line[MAXLINE];
	char            label[MAXLINE];
	char            parameter[MAXLINE];

	*smg_norm = 0;
	(void) strcpy (smg_mode, "NONE");

	fp = fopen (prmfile, "r");
	if (fp == (FILE *) NULL) {
		printf ("Error opening parameter file %s\n", prmfile);
		return (ERROR);
	}
/*
 *	Read each line of parameter file.
 *	If the line has 2 strings, compare the label with the list of eligible keys:
 *	and if the key is found, set the appropriate parameter.
 */

	while (fgets (line, MAXLINE, fp) != NULL) {
		if (sscanf (line, "%s %s", label, parameter) == 2) {

/*
 *	Get smg_norm
 */

			if (strcmp (label, "smg_norm:") == 0) {
				*smg_norm = atof (parameter);

/*
 *	Get smg_mode
 */

			} else if (strcmp (label, "smg_mode:") == 0) {
				if (strcmp (parameter, "single") == 0 ||
				    strcmp (parameter, "paired") == 0 ||
				    strcmp (parameter, "diff") == 0)
					(void) strcpy (smg_mode, parameter);
				else {
					printf ("Error reading smg_mode from %s\n", prmfile);
					return (ERROR);
				}

			}
		}
	}

/*
 *	Check that all required parameters have been assigned new values before exiting.
 */

	if (*smg_norm == 0) {
		printf ("Error:  smg_norm not found in %s\n", prmfile);
		return (ERROR);
	}
	if (strcmp (smg_mode, "NONE") == 0) {
		printf ("Error:  smg_mode not found in %s\n", prmfile);
		return (ERROR);
	}
	return (OK);
}
@


1.5
log
@Feb 2004
@
text
@d2 3
d25 1
a25 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/isum/RCS/getprms_isum.c,v 1.1 1996/11/04 21:16:20 tom Exp tom $";
@


1.1
log
@Initial revision
@
text
@d1 4
a4 1
/* $Log$ */
d7 1
a7 1
 *	Date:			Nov-96
d20 1
d22 1
a22 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/isum/RCS/getprms_isum.c,v 2.0 1996/04/24 23:05:51 tom Exp $";
d42 1
a42 1
	strcpy (smg_mode, "NONE");
d73 1
a73 1
					strcpy (smg_mode, parameter);
@
