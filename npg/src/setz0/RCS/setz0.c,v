head	1.5;
access;
symbols;
locks; strict;
comment	@ * @;


1.5
date	2004.02.19.22.31.49;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	2000.03.29.18.05.56;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	94.10.28.19.58.36;	author ty7777;	state Exp;
branches;
next	1.2;

1.2
date	94.10.27.16.44.11;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	94.10.27.16.03.03;	author ty7777;	state Exp;
branches;
next	;


desc
@Initial checking in, working version.
@


1.5
log
@Feb 2004
@
text
@/* $Log: setz0.c,v $
 * Revision 1.4  2000/03/29  18:05:56  tom
 * ECAT 7 images and Solaris
 * */
/*	===============================================================================
 *	Module:			setz0.c
 *	Date:			Mar 2000
 *	Author:			Tom Videen
 *	Description:	Insert z0 into image header
 *	===============================================================================
 */
/*@@unused@@*/
static char     rcsid[] = "$Header: /home/npggw/tom/src/setz0/RCS/setz0.c,v 1.4 2000/03/29 18:05:56 tom Exp tom $";

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <image.h>
#include <libimage.h>

main (argc, argv)
	int             argc;
	char           *argv[];
{
	ImageFile      *file;			 /* input image file structure */
	char           *fname;
	int             z0;

	if (argc != 3) {
		(void) fprintf (stderr, "Usage: setz0 filename z0\n");
		return (ERROR);
	}
	fname = argv[1];
	z0 = atoi (argv[2]);

	file = make_imgfile (fname);
	(void) strcpy (file->mode, "r+");
	if (open_imgfile (file) == ERROR) {
		(void) fprintf (stderr, "ERROR [setz0]: Cannot open %s for read\n", fname);
		return (ERROR);
	}
	if (get_mh (file) == ERROR) {
		(void) fprintf (stderr, "ERROR [setz0]: Cannot get MainHeader from %s\n", fname);
		return (ERROR);
	}
	file->mh->zorigin = z0;
	if (put_mh (file) == ERROR) {
		(void) fprintf (stderr, "ERROR [setz0] writing %s\n", fname);
		return (ERROR);
	}
	close_imgfile (file);
	free_imgfile (file);
	return (OK);
}
@


1.4
log
@ECAT 7 images and Solaris
@
text
@d1 4
a4 1
/* $Log$ */
d7 1
a7 1
 *	Date:			Mar-2000
d12 2
a13 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/setz0/RCS/setz0.c,v 1.1 1997/01/16 18:58:38 tom Exp $";
d49 1
a49 1
		exit (ERROR);
@


1.3
log
@Use short program name.
@
text
@d1 9
a9 8
/*$Id: setz0.c,v 1.2 1994/10/27 16:44:11 ty7777 Exp ty7777 $*/
/*$Log: setz0.c,v $
 * Revision 1.2  1994/10/27  16:44:11  ty7777
 * Check the range of zorigin.
 *
 * Revision 1.1  1994/10/27  16:03:03  ty7777
 * Initial revision
 **/
d11 5
a15 2
#include <petutil/petutil.h>
#include <petutil/matrix.h>
a16 30
static char rcsid [] = "$Header: /home/petsun4/ty7777/src/setz0/RCS/setz0.c,v 1.2 1994/10/27 16:44:11 ty7777 Exp ty7777 $";

/*___________________________________________________________________________________
File Name:	setz0.c

Main:		setz0
 
Description:	Set the z0 slice for an ECAT image.

Command line parameters:
		input image filename
		input z0 slice

Input Files:
		imgfile
		zorigin

Output File:
		imgfile	

Algorithm:
		1) read image
		2) change the z0 slice
		3) write image

Author:		Tom Yang, October 1994. 

History:	Created by Tom Yang on 10/27/1994.
___________________________________________________________________________________*/

d18 2
a19 2
	int	argc;
	char	**argv;
d21 3
a23 21
	COMMENT_INFO	comment_info_data;
	Image_subheader	**subheader_list;
	Main_header	*main_header;
	char		date [MAXLINE];
	char		hdrid [MAXLINE];
	char		*imgfile;
	char		program [MAXLINE];
	char		*program_id;
	char		version [MAXLINE];
	float		*image3d;
	float		pixel_size;
	float		plane_separation;
	int		dimension;
	int		i;
	int		num_scanned;
	int		scanner;
	int		zorigin;
	short		width;
	short		height;
	short		num_slices;
	struct Matval	matval;
d25 3
a27 22
	/*______________________________________________________
	 * Get command line arguments.
	 *______________________________________________________*/
	imgfile		= argv [1];
	zorigin		= atoi (argv [2]);
	sprintf (date, "%s %s %s %s %s %s", 
		argv [3], argv [4], argv [5], argv [6], argv [7], argv [8]);

	/*______________________________________________________
	 * Initialization for matval.
	 *______________________________________________________*/
	matval.frame	= 1;
	matval.plane	= 1;
	matval.gate	= 1;
	matval.data	= 0;
	matval.bed	= 0;

	if (getimagedim (imgfile, matval, &scanner, &width, &height, &num_slices, 
		&pixel_size, &pixel_size, &plane_separation) == FAIL) 
	{
		fprintf (stderr, "Error: image file %s cannot be found\n", imgfile);
		exit (FAIL);
d29 2
d32 5
a36 5
	if (zorigin < 0 || zorigin > num_slices)
	{
		fprintf (stderr, "Your z0 slice is outside the allowed range [1, %d].\n",
			num_slices);
		exit (FAIL);
d38 3
a40 20

	subheader_list	= (Image_subheader **) pkg_malloc (num_slices * sizeof (caddr_t), "gauss", 
						"subheader_list");

	dimension	= width * height * num_slices;
	image3d		= (float *) pkg_malloc (dimension * sizeof (float), "gauss", "image3d");
	main_header	= (Main_header *) calloc (1, sizeof (Main_header));

	if (getrealimg (imgfile, scanner, matval, width, height, num_slices, image3d, 
		main_header, subheader_list) == FAIL)
	{
		fprintf (stderr, "Error in getrealimg ().\n");
		for (i = 0; i < num_slices; i++)
		{
			free (subheader_list [i]);
		}
		free (subheader_list);
		free (main_header);
		free (image3d);
		exit (FAIL);
d42 4
a45 18

	/*
	 * Write the 3D array to filter file.
	 */
	num_scanned	= sscanf (rcsid, "%s %s %s", 
					hdrid, program, version);
	if (num_scanned != 3)
	{
		fprintf (stderr, "Error in reading hdrin, program and version.\n"); 
		for (i = 0; i < num_slices; i++)
		{
			free (subheader_list [i]);
		}
		free (subheader_list);
		free (main_header);
		free (image3d);

		exit (FAIL);
d47 3
a49 33
	program_id	= strrchr (program, '/');
	if (program_id != NULL)
	{
		strncpy (main_header->physician_name, program_id + 1, 
			sizeof (main_header->physician_name) - 1);
	}
	else
	{
		strncpy (main_header->physician_name, program,
			sizeof (main_header->physician_name) - 1);
	}
	strcat (main_header->physician_name, " ");
	strcat (main_header->physician_name, version);
	strncpy (main_header->operator_name, date, sizeof (main_header->operator_name) - 1);
	comment_info (main_header->study_description, &comment_info_data);
	comment_info_data.zorigin	= zorigin;
	info2comment (comment_info_data, main_header->study_description);

	if (writerealimg (imgfile, matval, width, height, num_slices, image3d, 
			main_header, subheader_list) == FAIL)
	{
		fprintf (stderr, "Error in writerealimg ().\n");
	}

	for (i = 0; i < num_slices; i++)
	{
		free (subheader_list [i]);
	}
	free (subheader_list);
	free (main_header);
	free (image3d);

	exit (SUCCEED);
@


1.2
log
@Check the range of zorigin.
@
text
@d1 1
a1 1
/*$Id: setz0.c,v 1.1 1994/10/27 16:03:03 ty7777 Exp ty7777 $*/
d3 3
d13 1
a13 1
static char rcsid [] = "$Header: /home/petsun4/ty7777/src/setz0/RCS/setz0.c,v 1.1 1994/10/27 16:03:03 ty7777 Exp ty7777 $";
d51 1
d53 3
d61 1
d111 6
d124 28
a151 1
	strncpy (main_header->physician_name, rcsid + 5, sizeof (main_header->physician_name) - 1);
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
/*$Id$*/
/*$Log$*/
d10 1
a10 1
static char rcsid [] = "$Header$";
d82 7
@
