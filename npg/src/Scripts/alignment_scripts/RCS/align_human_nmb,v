head	1.5;
access;
symbols;
locks; strict;
comment	@# @;


1.5
date	2003.12.17.15.08.25;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	2001.07.05.17.52.57;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	2001.05.16.19.48.12;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	2000.06.19.17.50.44;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	99.09.03.13.10.02;	author tom;	state Exp;
branches;
next	;


desc
@@


1.5
log
@*** empty log message ***
@
text
@#!/bin/csh
#	Module:	align_human_nmb
#   Date:	Jul 2001
#   Author:	Tom Videen
#	Use:	Align all frames of an NMB dynamic image (44 frames on 953B)

if ($#argv != 4) then
    echo "Usage: align_human_nmb pid first last reference"
    echo " e.g., align_human_nmb p3000 1 44 2"
    exit 1
endif

set PID   = $1
set FRM1  = $2
set FRM2  = $3
set REFRM = $4

set FRAMES = ${FRM1}to$FRM2
set DDIR   = `pwd`
set ROOT   = ${PID}mb
set BRAIN  = ${PID}mb_mask.img
set ORG    = $DDIR/${PID}mb1.img
set RORG   = r${PID}mb1.img
set SUM    = ${ROOT}1_sum20.img
set SUMG   = ${ROOT}1_sum20_g3.img
set BLUR   = 5

# Check for existence of first, last and reference frames
# -------------------------------------------------------
if (! -e $ORG) then
	echo "ERROR [align_human_nmb]: Missing NMB image $ORG"
	exit 1
endif
imghdr $ORG $FRM1 > & ! align.tmp
set CHK1 = `head -1 align.tmp | cut -c1-5`
imghdr $ORG $FRM2 > & ! align.tmp
set CHK2 = `head -1 align.tmp | cut -c1-5`
imghdr $ORG $REFRM > & ! align.tmp
set CHK3 = `head -1 align.tmp | cut -c1-5`
unalias rm
rm align.tmp
if ($CHK1 == ERROR) then
	echo "ERROR [align_human_nmb]: No frame $FRM1 in $ORG"
	exit 1
else if ($CHK2 == ERROR) then
	echo "ERROR [align_human_nmb]: No frame $FRM2 in $ORG"
	exit 1
else if ($CHK3 == ERROR) then
	echo "ERROR [align_human_nmb]: No frame $REFRM in $ORG"
	exit 1
endif

# Create alignment subdirectory
# -----------------------------
if (-e Align_pet) then
	echo "Warning [align_human_nmb]: Directory $DDIR/Align_pet already exists"
else
	mkdir Align_pet
	chmod 775 Align_pet
endif
cd Align_pet
if ($status != 0) exit 1

# Create alignment mask of brain
# -----------------------------
sumimgframes ../${ROOT}1.img $SUM 1 20
    if ($status != 0) exit 1
gauss $SUM $SUMG 0.3
    if ($status != 0) exit 1
maskpct $SUMG tmp.img 30
    if ($status != 0) exit 1
maskimg $SUMG tmp.img $BRAIN 1
    if ($status != 0) exit 1
rm ${SUM}*
rm ${SUMG}*
rm tmp.img
echo "-----------------------------------------------------"
echo "View $BRAIN with vidi and remove the nose and any other"
echo "structures or slices which might skew the alignment."
echo
echo "Save the edited image and then press return to continue."
set data = `line`

# Handle format conversion if mask was edited
if (-e $BRAIN:r.ifh) then
    if2analyze $BRAIN:r
    if ($status != 0) exit 1
    analyze2img $BRAIN:r $BRAIN:r.img
    if ($status != 0) exit 1
    rm $BRAIN:r.ifh
    rm $BRAIN:r.hdr
endif

single_frames $ORG $ROOT i $FRM1 $FRM2
	if ($status != 0) exit 1
align_dynamic $ROOT i $BRAIN ${REFRM}to${FRM2} $BLUR scale_953
	if ($status != 0) exit 1
reslicedyn $ROOT .i $FRAMES $REFRM $ORG
	if ($status != 0) exit 1
merge_dynframes r$ROOT $FRAMES .i $RORG
	if ($status != 0) exit 1
remove_dynfiles $ROOT .i $FRAMES
remove_dynfiles r$ROOT .i $FRAMES
fitlog2plt ${ROOT}_t4_p1_x3.log $REFRM

# Create composite images of early and late frames
# ------------------------------------------------
set N1 = `echo $FRM1 + 7 | bc`
set N2 = `echo $FRM2 - 5 | bc`
sumimgframes $ORG orig_f${FRM1}to${N1}.img $FRM1 $N1
sumimgframes $ORG orig_f${N2}to${FRM2}.img $N2 $FRM2
sumimgframes $RORG align_f${FRM1}to${N1}.img $FRM1 $N1
sumimgframes $RORG align_f${N2}to${FRM2}.img $N2 $FRM2

echo "-----------------------------------------------------"
echo "1) Check alignment with plot_aligndyn"
echo "      ${ROOT}_alignmsk_b${BLUR}_p1_x3.log"
echo 
echo "2) Compare early and late frames of original and aligned (vidi)"
echo "      orig_f${FRM1}to${N1}.img"
echo "      orig_f${N2}to${FRM2}.img"
echo "      align_f${FRM1}to${N1}.img"
echo "      align_f${N2}to${FRM2}.img"
echo    
echo "3) View all frames one plane (vidi)"
echo
echo "4) Move the aligned dynamic to the parent directory"
echo "      mv $RORG* .."
echo "-----------------------------------------------------"

@


1.4
log
@*** empty log message ***
@
text
@d9 1
a9 1
    echo " i.e., align_human_nmb p3000 1 44 2"
d40 2
a41 1
/usr/bin/rm align.tmp
@


1.3
log
@add parameters for first, last and reference frame numbers
check that these frames exist
created summed frames of the original and aligned images
for the first 8 frames and the last 6 frames and prompt user to compare these
used subdirectory Align_pet
@
text
@d3 1
a3 1
#   Date:	May 2001
d21 1
a21 3
set TR     = $DDIR/${PID}tr1.img
set TRG    = ${PID}tr1_2dg5.img
set MASK   = ${PID}mb_mask.img
d24 3
d28 2
a29 2
# Check existence of all images
# -----------------------------------
a32 3
else if (! -e $TR) then
	echo "ERROR [align_human_nmb]: Missing transmission image $TR"
	exit 1
a33 3

# Check for existence of first, last and reference frames
# -------------------------------------------------------
d63 30
a92 4
gauss2d $TR $TRG 0.5
	if ($status != 0) exit 1
maskobj $TRG $MASK 900 1100 64 64 16
	if ($status != 0) exit 1
d95 1
a95 1
align_dynamic $ROOT i $MASK ${REFRM}to${FRM2} 4 5 scale_953
d116 1
a116 1
echo "      ${ROOT}_t4_p1_x3.log"
@


1.2
log
@switch to align_dynamic
@
text
@d3 1
a3 1
#   Date:	Jun 2000
d7 4
a10 4
if ($#argv != 1) then
    echo "Usage: align_human_nmb pid"
    echo " i.e., align_human_nmb p3000"
    exit(1)
d13 6
a18 1
set PID    = $1
d20 2
a21 1
set NMB    = ${PID}mb
d24 2
a25 8
set REFRM  = 2
set NFRMS  = 44
set THRESH = "900 1100"
set PT     = "64 64 16"
set SLICES = 1to31
set MBI    = ${DDIR}/${PID}mb1.img
set RMBI   = r${PID}mb1.img
set TR     = ${DDIR}/${PID}tr1.img
d27 6
a32 5
if (! -e $MBI) then
	echo "ERROR [align_human_nmb]: Missing nmb image $MBI"
	exit(1)
endif
if (! -e $TR) then
d34 1
a34 1
	exit(1)
d36 25
a60 2
if (-e Align) then
	echo "Warning [align_human_fd]: Directory $DDIR/Align already exists"
d62 2
a63 2
	mkdir Align
	chmod 775 Align
d65 2
a66 1
cd Align
d69 14
a82 7
maskobj $TRG $MASK $THRESH $PT
single_frames $MBI $NMB i 1 $NFRMS
align_dynamic $NMB i $MASK ${REFRM}to${NFRMS} 4 5 scale_953
reslicedyn $NMB .i 1to$NFRMS $REFRM $MBI
merge_dynframes r$NMB 1to$NFRMS .i $RMBI
remove_dynfiles $NMB .i 1to$NFRMS
fitlog2plt ${NMB}_t4_p1_x3.log $REFRM
d84 9
d94 13
a106 6
echo "View all frames one plane with vidi."
echo "Check alignment with:"
echo "     plot_aligndyn"
echo "using:"
echo "     Alignment log filename: ${NMB}_t4_p1_x3.log"
echo "     First (reference) frame: $REFRM"
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
#   Date:	May-99
d45 2
a46 2
singlefrm_gauss $MBI 1to$NFRMS $SLICES 0.3 mb i
aligndyn $NMB i $MASK ${REFRM}to${NFRMS} 0.3 3 scale_953 iscale_953
d49 2
a50 2
remove_dynfiles $NMB _g3.i 1to$NFRMS
fitlog2plt ${NMB}_th3_g3.log $REFRM
d57 1
a57 1
echo "     Alignment log filename: ${NMB}_th3_g3.log"
@
