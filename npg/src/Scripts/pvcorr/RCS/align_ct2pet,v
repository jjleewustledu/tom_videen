head	1.5;
access;
symbols;
locks; strict;
comment	@# @;


1.5
date	99.08.05.18.30.20;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	99.07.28.19.59.52;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	99.07.27.21.31.35;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	99.07.27.20.14.16;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	99.06.10.14.31.58;	author tom;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Aug 5, 1999 version (using entire CT with more partitions)
@
text
@#!/bin/csh
#	Module:	align_ct2pet
#	Author:	Tom Videen
#	Date:	Jul-99
#	Use:	Align CT images to PET HO image.
#	Creates:
#		rp5000brain.v	- coregistered brain image
#		rp5000tis.v		- coregistered tissue image
#		rp5000ct.v		- coregistered CT
#	Uses:
#		p5000ct.img		- original CT
#		p5000brain.img	- CT segmented to brain edges
#		p5000tis.img	- segmented CT with ventricles and hemorrhage removed
#		p5000ho1_g3.v	- filtered PET

if ($#argv != 3 ) then
    echo "Usage: align_ct2pet ct_id pet_id ho"
    echo " e.g., align_ct2pet p5000 rp5000 ho1"
    exit (1)
endif

set CID = $1
set PID = $2
set CT  = ${CID}ct
set BRN = ${CID}brain
set TIS = ${CID}tis
set HO  = ${PID}${3}_g3
set AIR = ${CID}_ct2${3}
set LOGFILE = align_ct2pet.log
set INIT = air_init

set EFILES = "$CT.img $BRN.img $TIS.img $HO.v $CT.hdr $BRN.hdr $TIS.hdr"
set STATUS = 0
foreach i ($EFILES)
	if (! -e $i) then
		echo "ERROR [align_ct2pet]: $i does not exist."
		set STATUS = 1
	endif
end
if ( $STATUS != 0) exit (1)

img2analyze $HO.v a$HO
setanamin a$HO 0
setanamin $CT 0
set PRM = "-m 6 -p1 0 -p2 16384 -t2 1 -x 1 -v" 
alignlinear a$HO $CT $AIR.air $PRM >! log
tail -6 log >! $LOGFILE
set ERROR = `grep HESSIAN log`
set CHK = `echo $ERROR | wc -w`
if ($CHK > 0) then
	echo $ERROR
	echo "Alignment may require an initialization file ($INIT)"
	echo $ERROR >> $LOGFILE
	exit (1)
endif

imgreslice $CT $AIR
imgreslice $BRN $AIR
imgreslice $TIS $AIR

analyze2img r$CT r$CT.v
analyze2img r$BRN r$BRN.v
analyze2img r$TIS r$TIS.v

echo "Created coregistered, resliced images:"
if (-e r$CT.v)  echo r$CT.v
if (-e r$BRN.v) echo r$BRN.v
if (-e r$TIS.v) echo r$TIS.v

rm a$HO.img
rm a$HO.hdr
rm a$HO.ifh
rm log

@


1.4
log
@*** empty log message ***
@
text
@a11 1
#		p5000align.img	- brain with tissue=100; csf & clot=2; everything else = 0
a14 4
#	Notes on PRM
#		p2 number of partitions makes no difference
#		b2 smoothing (more than 1 1 1) doesn't work with align.img
#		t2 should be = CSF intensity in brain image
d16 3
a18 4
if ($#argv < 3 || $#argv > 4) then
    echo "Usage: align_ct2pet ct_id pet_id ho (initialization_file)"
    echo " i.e., align_ct2pet p5000 rp5000 ho1"
    echo "  or,  align_ct2pet p5000 rp5000 ho1 init"
a26 1
set ALN = ${CID}align
a28 1
set INIT = $4
d30 1
d32 1
a32 1
set EFILES = "$CT.img $BRN.img $TIS.img $ALN.img $HO.v $CT.hdr $BRN.hdr $TIS.hdr $ALN.hdr"
a42 1

d44 3
a46 8
setanamin $BRN 0
setanamin $ALN 0
if ($#argv == 4) then
	set PRM = "-m 6 -p1 0 -p2 1 -t2 10 -e2 $BRN -f $INIT -x 1 -v"
else
	set PRM = "-m 6 -p1 0 -p2 8 -t2 10 -e2 $ALN -x 1 -v"
endif
alignlinear a$HO $ALN $AIR.air $PRM >! log
d52 1
a52 1
	echo "Alignment may require an initialization file"
@


1.3
log
@set -t2 = 10
@
text
@d25 1
a25 1
    exit (-1)
d37 1
d47 1
a47 1
if ( $STATUS != 0) exit (-1)
d60 1
a60 1
tail -6 log >! align_ct2pet.log
d66 2
a67 2
	echo $ERROR >> align_ct2pet.log
	exit (-1)
@


1.2
log
@use modified tissue image
@
text
@d19 1
a19 1
#		t2 must be > 1 but < CSF intensity in brain image
d54 1
a54 1
	set PRM = "-m 6 -p1 0 -p2 1 -t2 2 -e2 $BRN -f $INIT -x 1 -v"
d56 1
a56 1
	set PRM = "-m 6 -p1 0 -p2 1 -t2 2 -e2 $BRN -x 1 -v"
@


1.1
log
@Initial revision
@
text
@d4 1
a4 1
#	Date:	Mar-99
d12 1
d16 4
d21 2
a22 2
if ($#argv != 3) then
    echo "Usage: align_ct2pet ct_id pet_id ho"
d24 1
d33 1
d36 1
d38 1
a38 1
set EFILES = "$CT.img $BRN.img $TIS.img $HO.v $CT.hdr $BRN.hdr $TIS.hdr"
d49 1
d52 7
a58 2
set PRM = "-m 6 -p1 0 -p2 256 -t2 1 -e2 $TIS -b2 5 5 5 -x 1 -v"
alignlinear a$HO $BRN $AIR.air $PRM >! log
d60 8
a83 1
rm a$HO.lkup
@
