head	1.7;
access;
symbols;
locks; strict;
comment	@# @;


1.7
date	2003.12.17.14.45.02;	author tom;	state Exp;
branches;
next	1.6;

1.6
date	99.10.22.17.16.41;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	99.06.08.19.08.38;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	99.06.08.18.22.45;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	99.06.08.17.41.52;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	99.06.08.17.21.17;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	99.05.28.22.01.37;	author tom;	state Exp;
branches;
next	;


desc
@@


1.7
log
@*** empty log message ***
@
text
@#!/bin/csh
#   Module: check_oxy2
#   Author: Tom Videen
#   Date:   Oct 1999
#   Use:    Compare alignment of PET images (OO2->OO1 and CO2->OC1) where these
#			image pairs are aligned using least squares with intensity rescaling.
#	rcsid = $Id: check_oxy2,v 1.6 1999/10/22 17:16:41 tom Exp tom $

if ($#argv != 6) then
    echo "Usage:  check_oxy2 pid oo1 oo2 oc1 oc2 mask"
	echo " i.e.,  check_oxy2 p5000 1 2 1 2 p5000mask.v"
	echo " (assumes aligned images rp5000oo1_g3.v, etc.)"
    exit 1
endif

set PID = $1
set O1  = oo$2
set O2  = oo$3
set C1  = oc$4
set C2  = oc$5
set MASK = $6

set RID = r$PID
set FIL = _g3
set OO1 = $RID$O1$FIL
set OO2 = $RID$O2$FIL
set OC1 = $RID$C1$FIL
set OC2 = $RID$C2$FIL
set OOOO = $RID${O2}_to_$O1
set OCOC = $RID${C2}_to_$C1

set ROOT   = $MASK:r
set MASK1  = ${ROOT}a.v
set AMASK1 = ${ROOT}a
set MASK2  = ${ROOT}b.v
set AMASK2 = ${ROOT}b

# Check existence of files:

set EFILES = "$MASK $OO1.v $OO2.v $OC1.v $OC2.v"
set STATUS = 0
foreach i ($EFILES)
	if (! -e $i) then
		echo "ERROR [check_oxy2]: $i does not exist."
		set STATUS = 1
	endif
end
if ( $STATUS != 0) exit 1

# Check the pixel size in PET headers:
 
set STATUS = 0
set ORGSIZE = 0
foreach i ($EFILES)
    set PIXSIZE = `imghdr $i | grep 'Pixel size' | cut -f4 -d' '`
    if ($PIXSIZE == 0.208634) echo "Note: pixel size of $i is $PIXSIZE"
    if ($ORGSIZE == 0) then
        set ORGSIZE = $PIXSIZE
        set ORGFILE = $i
    else if ($PIXSIZE != $ORGSIZE) then
        echo "ERROR [align_oxy]: different pixel sizes:"
        echo "  $ORGFILE = $ORGSIZE"
        echo "  $i = $PIXSIZE"
        set STATUS = 1
    endif
endif
if ($STATUS != 0) exit 1

# Setup log file:

set BINFILE = `which check_oxy2`
set VER = `grep rcsid $BINFILE | cut -f2- -d: | cut -f1 -dE | head -1`
set LOGFILE = ${RID}_align.log
if (-e $LOGFILE) then
	echo "" >> $LOGFILE
else
	touch $LOGFILE
endif
echo "$PID OEF check alignment:  " `whoami` `date` >> $LOGFILE
echo "Version: " $VER         >> $LOGFILE
echo ""                       >> $LOGFILE

# Convert images to Analyze format:

img2analyze $OO1.v a$OO1
img2analyze $OO2.v a$OO2
img2analyze $OC1.v a$OC1
img2analyze $OC2.v a$OC2
setanamin a$OO1 0
setanamin a$OO2 0
setanamin a$OO1 0
setanamin a$OO2 0

# Combined resliced OO's with existing mask
 
maskimg $MASK $OO1.v $MASK1 10
img2analyze $MASK1 $AMASK1
setanamin $AMASK1 0
maskimg $MASK $OO2.v $MASK2 10
img2analyze $MASK2 $AMASK2
setanamin $AMASK2 0
 
# Align OO2 to OO1
 
echo "Aligning:  $OO2 to $OO1"
maskimg $OO1.v $MASK temp.v 1
set imax = `imghdr temp.v | grep Max | cut -f3 -d ' '`
set T1 = `echo "$imax/10;quit" | bc`
maskimg $OO2.v $MASK temp.v 1
set imax = `imghdr temp.v | grep Max | cut -f3 -d ' '`
set T2 = `echo "$imax/10;quit" | bc`
set PRM = "-m 6 -p1 256 -t1 $T1 -p2 256 -t2 $T2 -e1 $AMASK1 -e2 $AMASK2 -x 1 -v"
alignlinear a$OO1 a$OO2 $OOOO.air $PRM >! log
echo ">> alignlinear $O2 to $O1" >> $LOGFILE
echo $PRM >> $LOGFILE
tail -6 log | head -3 >> $LOGFILE
tail -1 log >> $LOGFILE
if (! -e null.air) alignlinear a$OO1 a$OO1 null.air -m 6 -p1 1 -t1 100 -p2 0 -x 2
airdif1 $OOOO.air null.air $MASK >> $LOGFILE
echo " " >> $LOGFILE

# Combined resliced OC's with existing mask
 
maskimg $MASK $OC1.v $MASK1 10
img2analyze $MASK1 $AMASK1
setanamin $AMASK1 0
maskimg $MASK $OC2.v $MASK2 10
img2analyze $MASK2 $AMASK2
setanamin $AMASK2 0

# Align OC2 to OC1
 
echo "Aligning:  $OC2 to $OC1"
maskimg $OC1.v $MASK temp.v 1
set imax = `imghdr temp.v | grep Max | cut -f3 -d ' '`
set T1 = `echo "$imax/10;quit" | bc`
maskimg $OC2.v $MASK temp.v 1
set imax = `imghdr temp.v | grep Max | cut -f3 -d ' '`
set T2 = `echo "$imax/10;quit" | bc`
set PRM = "-m 6 -p1 256 -t1 $T1 -p2 256 -t2 $T2 -e1 $AMASK1 -e2 $AMASK2 -x 1 -v"
alignlinear a$OC1 a$OC2 $OCOC.air $PRM >! log
echo ">> alignlinear $C2 to $C1" >> $LOGFILE
echo $PRM >> $LOGFILE
tail -6 log | head -3 >> $LOGFILE
tail -1 log >> $LOGFILE
airdif1 $OCOC.air null.air $MASK >> $LOGFILE

/usr/bin/rm $MASK1
/usr/bin/rm $AMASK1.img
/usr/bin/rm $AMASK1.ifh
/usr/bin/rm $AMASK1.hdr
/usr/bin/rm $MASK2
/usr/bin/rm $AMASK2.img
/usr/bin/rm $AMASK2.ifh
/usr/bin/rm $AMASK2.hdr
/usr/bin/rm temp.v

echo "Complete [check_oxy2] ========================"
@


1.6
log
@revised for new Procedures
@
text
@d4 1
a4 1
#   Date:   Oct-99
d7 1
a7 1
#	rcsid = $Id: check_oxy2,v 1.5 1999/06/08 19:08:38 tom Exp $
d10 2
a11 2
    echo "Usage: check_oxy2 pid oo1 oo2 oc1 oc2 mask"
	echo " i.e., check_oxy2 p5000 1 2 1 2 p5000mask.v"
d13 1
a13 1
    exit (-1)
d48 1
a48 1
if ( $STATUS != 0) exit (-1)
d67 1
a67 1
if ($STATUS != 0) exit (-1)
@


1.5
log
@*** empty log message ***
@
text
@d4 1
a4 1
#   Date:   Jun-99
d7 1
a7 1
#	rcsid = $Id: check_oxy2,v 1.4 1999/06/08 18:22:45 tom Exp tom $
d25 6
a30 6
set OO1 = ${O1}${FIL}
set OO2 = ${O2}${FIL}
set OC1 = ${C1}${FIL}
set OC2 = ${C2}${FIL}
set OOOO = ${O2}_to_${O1}
set OCOC = ${C2}_to_${C1}
d32 2
a33 2
set ROOT = $MASK:r
set MASK1 = ${ROOT}a.v
d35 1
a35 1
set MASK2 = ${ROOT}b.v
d40 1
a40 1
set EFILES = "$MASK ${RID}${OO1}.v ${RID}${OO2}.v ${RID}${OC1}.v ${RID}${OC2}.v"
d85 8
a92 8
img2analyze ${RID}${OO1}.v a${RID}${OO1}
img2analyze ${RID}${OO2}.v a${RID}${OO2}
img2analyze ${RID}${OC1}.v a${RID}${OC1}
img2analyze ${RID}${OC2}.v a${RID}${OC2}
setanamin a${RID}${OO1} 0
setanamin a${RID}${OO2} 0
setanamin a${RID}${OO1} 0
setanamin a${RID}${OO2} 0
d96 1
a96 1
maskimg $MASK ${RID}${OO1}.v $MASK1 10
d99 1
a99 1
maskimg $MASK ${RID}${OO2}.v $MASK2 10
d105 2
a106 2
echo "Aligning:  ${RID}${OO2} to ${RID}${OO1}"
maskimg ${RID}${OO1}.v $MASK temp.v 1
d109 1
a109 1
maskimg ${RID}${OO2}.v $MASK temp.v 1
d113 1
a113 1
alignlinear a${RID}${OO1} a${RID}${OO2} ${RID}${OOOO}.air $PRM >! log
d118 2
a119 2
if (! -e null.air) alignlinear a${RID}${OO1} a${RID}${OO1} null.air -m 6 -p1 1 -t1 100 -p2 0 -x 2
airdif1 ${RID}${OOOO}.air null.air $MASK >> $LOGFILE
d124 1
a124 1
maskimg $MASK ${RID}${OC1}.v $MASK1 10
d127 1
a127 1
maskimg $MASK ${RID}${OC2}.v $MASK2 10
d133 2
a134 2
echo "Aligning:  ${RID}${OC2} to ${RID}${OC1}"
maskimg ${RID}${OC1}.v $MASK temp.v 1
d137 1
a137 1
maskimg ${RID}${OC2}.v $MASK temp.v 1
d141 1
a141 1
alignlinear a${RID}${OC1} a${RID}${OC2} ${RID}${OCOC}.air $PRM >! log
d146 1
a146 1
airdif1 ${RID}${OCOC}.air null.air $MASK >> $LOGFILE
@


1.4
log
@*** empty log message ***
@
text
@d7 1
a7 1
#	rcsid = $Id: check_oxy2,v 1.3 1999/06/08 17:41:52 tom Exp tom $
d158 1
a158 1
echo "Complete [check_oxy2] ======================="
@


1.3
log
@single log file
@
text
@d7 1
a7 1
#	rcsid = $Id: check_oxy2,v 1.2 1999/06/08 17:21:17 tom Exp tom $
d16 1
a16 1
set RID = r$1
d21 1
a21 1
set MASK = $5
d23 1
d34 1
a34 1
set AMASK1 = ${AMASK}a
d36 1
a36 1
set AMASK2 = ${AMASK}b
d106 6
a111 4
set imax = `imghdr ${RID}${OO1}.v | grep Max | cut -f3 -d ' '`
set T1 = `echo "$imax/5;quit" | bc`
set imax = `imghdr ${RID}${OO2}.v | grep Max | cut -f3 -d ' '`
set T2 = `echo "$imax/5;quit" | bc`
d115 1
d134 6
a139 4
set imax = `imghdr ${RID}${OC1}.v | grep Max | cut -f3 -d ' '`
set T1 = `echo "$imax/5;quit" | bc`
set imax = `imghdr ${RID}${OC2}.v | grep Max | cut -f3 -d ' '`
set T2 = `echo "$imax/5;quit" | bc`
d143 1
d156 1
d158 1
a158 1
echo "Complete [check_oxy2]"
@


1.2
log
@revised mask, parameters
@
text
@d7 1
a7 1
#	rcsid = $Id: check_oxy2,v 1.1 1999/05/28 22:01:37 tom Exp $
d73 6
a78 1
echo "${PID} OEF check alignment:  " `whoami` `date` >! $LOGFILE
@


1.1
log
@Initial revision
@
text
@d4 1
a4 1
#   Date:   May-99
d7 1
a7 1
#	rcsid = $Id$
d9 3
a11 3
if ($#argv != 5) then
    echo "Usage: check_oxy2 pid oo1 oo2 oc1 oc2"
	echo " i.e., check_oxy2 p5000 1 2 1 2"
d21 2
d31 6
d39 1
a39 1
set EFILES = "mask.v ${RID}${OO1}.v ${RID}${OO2}.v ${RID}${OC1}.v ${RID}${OC2}.v"
d50 15
a64 8

set PIXSIZE = `imghdr ${RID}${OO1}.v | grep 'Pixel size' | cut -f4 -d' '`
set TPIXSIZE = `imghdr ${RID}${OO2}.v | grep 'Pixel size' | cut -f4 -d' '`
if ($TPIXSIZE != $PIXSIZE) then
	echo "ERROR [check_oxy2]: different pixel sizes:"
	echo "  ${RID}${OO1}.v = $PIXSIZE"
	echo "  ${RID}${OO2}.v = $TPIXSIZE"
	exit (-1)
d66 1
a66 14
set TPIXSIZE = `imghdr ${RID}${OC1}.v | grep 'Pixel size' | cut -f4 -d' '`
if ($TPIXSIZE != $PIXSIZE) then
	echo "ERROR [check_oxy2]: different pixel sizes:"
	echo "  ${RID}${OO1}.v = $PIXSIZE"
	echo "  ${RID}${OC1}.v = $TPIXSIZE"
	exit (-1)
endif
set TPIXSIZE = `imghdr ${RID}${OC2}.v | grep 'Pixel size' | cut -f4 -d' '`
if ($TPIXSIZE != $PIXSIZE) then
	echo "ERROR [check_oxy2]: different pixel sizes:"
	echo "  ${RID}${OO1}.v = $PIXSIZE"
	echo "  ${RID}${OC2}.v = $TPIXSIZE"
	exit (-1)
endif
d73 1
a73 1
echo "${RID} OEF2 check alignment:  " `whoami` `date` >! $LOGFILE
d83 4
d88 9
d98 1
a98 1

d101 1
a101 1
set thrs = `echo "$imax/5;quit" | bc`
d103 2
a104 4
set thrr = `echo "$imax/5;quit" | bc`
set PRM = "-m 6 -p1 256 -t1 $thrs -p2 256 -t2 $thrr -x 1 -v"
setanamin a${RID}${OO1} 0
setanamin a${RID}${OO2} 0
d109 2
a110 6
imgreslice a${RID}${OO2} ${RID}${OOOO}
analyze2img ra${RID}${OO2} ${RID}${OOOO}.v
if (! -e null.air) then
	alignlinear a${RID}${OO1} a${RID}${OO1} null.air -m 6 -p1 1 -t1 100 -p2 0 -x 2
endif
airdif1 ${RID}${OOOO}.air null.air mask.v >> $LOGFILE
d113 9
d123 1
a123 1

d126 1
a126 1
set thrs = `echo "$imax/5;quit" | bc`
d128 2
a129 4
set thrr = `echo "$imax/5;quit" | bc`
set PRM = "-m 6 -p1 256 -t1 $thrs -p2 256 -t2 $thrr -x 1 -v"
setanamin a${RID}${OC1} 0
setanamin a${RID}${OC2} 0
d134 1
a134 3
imgreslice a${RID}${OC2} ${RID}${OCOC}
analyze2img ra${RID}${OC2} ${RID}${OCOC}.v
airdif1 ${RID}${OCOC}.air null.air mask.v >> $LOGFILE
d136 10
a145 1
echo "Complete [check_oxy2]: $LOGFILE"
@
