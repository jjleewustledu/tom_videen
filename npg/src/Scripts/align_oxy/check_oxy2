#!/bin/csh
#   Module: check_oxy2
#   Author: Tom Videen
#   Date:   Oct 1999
#   Use:    Compare alignment of PET images (OO2->OO1 and CO2->OC1) where these
#			image pairs are aligned using least squares with intensity rescaling.
#	rcsid = $Id: check_oxy2,v 1.7 2003/12/17 14:45:02 tom Exp $

if ($#argv != 6) then
    echo "Usage:  check_oxy2 pid oo1 oo2 oc1 oc2 mask"
	echo " i.e.,  check_oxy2 p5000 1 2 1 2 p5000mask.v"
	echo " (assumes aligned images rp5000oo1_g3.v, etc.)"
    exit 1
endif

set PID = $1
set O1  = oo$2
set O2  = oo$3
set C1  = oc$4
set C2  = oc$5
set MASK = $6

set RID = r$PID
set FIL = _g3
set OO1 = $RID$O1$FIL
set OO2 = $RID$O2$FIL
set OC1 = $RID$C1$FIL
set OC2 = $RID$C2$FIL
set OOOO = $RID${O2}_to_$O1
set OCOC = $RID${C2}_to_$C1

set ROOT   = $MASK:r
set MASK1  = ${ROOT}a.v
set AMASK1 = ${ROOT}a
set MASK2  = ${ROOT}b.v
set AMASK2 = ${ROOT}b

# Check existence of files:

set EFILES = "$MASK $OO1.v $OO2.v $OC1.v $OC2.v"
set STATUS = 0
foreach i ($EFILES)
	if (! -e $i) then
		echo "ERROR [check_oxy2]: $i does not exist."
		set STATUS = 1
	endif
end
if ( $STATUS != 0) exit 1

# Check the pixel size in PET headers:
 
set STATUS = 0
set ORGSIZE = 0
foreach i ($EFILES)
    set PIXSIZE = `imghdr $i | grep 'Pixel size' | cut -f4 -d' '`
    if ($PIXSIZE == 0.208634) echo "Note: pixel size of $i is $PIXSIZE"
    if ($ORGSIZE == 0) then
        set ORGSIZE = $PIXSIZE
        set ORGFILE = $i
    else if ($PIXSIZE != $ORGSIZE) then
        echo "ERROR [align_oxy]: different pixel sizes:"
        echo "  $ORGFILE = $ORGSIZE"
        echo "  $i = $PIXSIZE"
        set STATUS = 1
    endif
endif
if ($STATUS != 0) exit 1

# Setup log file:

set BINFILE = `which check_oxy2`
set VER = `grep rcsid $BINFILE | cut -f2- -d: | cut -f1 -dE | head -1`
set LOGFILE = ${RID}_align.log
if (-e $LOGFILE) then
	echo "" >> $LOGFILE
else
	touch $LOGFILE
endif
echo "$PID OEF check alignment:  " `whoami` `date` >> $LOGFILE
echo "Version: " $VER         >> $LOGFILE
echo ""                       >> $LOGFILE

# Convert images to Analyze format:

img2analyze $OO1.v a$OO1
img2analyze $OO2.v a$OO2
img2analyze $OC1.v a$OC1
img2analyze $OC2.v a$OC2
setanamin a$OO1 0
setanamin a$OO2 0
setanamin a$OO1 0
setanamin a$OO2 0

# Combined resliced OO's with existing mask
 
maskimg $MASK $OO1.v $MASK1 10
img2analyze $MASK1 $AMASK1
setanamin $AMASK1 0
maskimg $MASK $OO2.v $MASK2 10
img2analyze $MASK2 $AMASK2
setanamin $AMASK2 0
 
# Align OO2 to OO1
 
echo "Aligning:  $OO2 to $OO1"
maskimg $OO1.v $MASK temp.v 1
set imax = `imghdr temp.v | grep Max | cut -f3 -d ' '`
set T1 = `echo "$imax/10;quit" | bc`
maskimg $OO2.v $MASK temp.v 1
set imax = `imghdr temp.v | grep Max | cut -f3 -d ' '`
set T2 = `echo "$imax/10;quit" | bc`
set PRM = "-m 6 -p1 256 -t1 $T1 -p2 256 -t2 $T2 -e1 $AMASK1 -e2 $AMASK2 -x 1 -v"
alignlinear a$OO1 a$OO2 $OOOO.air $PRM >! log
echo ">> alignlinear $O2 to $O1" >> $LOGFILE
echo $PRM >> $LOGFILE
tail -6 log | head -3 >> $LOGFILE
tail -1 log >> $LOGFILE
if (! -e null.air) alignlinear a$OO1 a$OO1 null.air -m 6 -p1 1 -t1 100 -p2 0 -x 2
airdif1 $OOOO.air null.air $MASK >> $LOGFILE
echo " " >> $LOGFILE

# Combined resliced OC's with existing mask
 
maskimg $MASK $OC1.v $MASK1 10
img2analyze $MASK1 $AMASK1
setanamin $AMASK1 0
maskimg $MASK $OC2.v $MASK2 10
img2analyze $MASK2 $AMASK2
setanamin $AMASK2 0

# Align OC2 to OC1
 
echo "Aligning:  $OC2 to $OC1"
maskimg $OC1.v $MASK temp.v 1
set imax = `imghdr temp.v | grep Max | cut -f3 -d ' '`
set T1 = `echo "$imax/10;quit" | bc`
maskimg $OC2.v $MASK temp.v 1
set imax = `imghdr temp.v | grep Max | cut -f3 -d ' '`
set T2 = `echo "$imax/10;quit" | bc`
set PRM = "-m 6 -p1 256 -t1 $T1 -p2 256 -t2 $T2 -e1 $AMASK1 -e2 $AMASK2 -x 1 -v"
alignlinear a$OC1 a$OC2 $OCOC.air $PRM >! log
echo ">> alignlinear $C2 to $C1" >> $LOGFILE
echo $PRM >> $LOGFILE
tail -6 log | head -3 >> $LOGFILE
tail -1 log >> $LOGFILE
airdif1 $OCOC.air null.air $MASK >> $LOGFILE

/usr/bin/rm $MASK1
/usr/bin/rm $AMASK1.img
/usr/bin/rm $AMASK1.ifh
/usr/bin/rm $AMASK1.hdr
/usr/bin/rm $MASK2
/usr/bin/rm $AMASK2.img
/usr/bin/rm $AMASK2.ifh
/usr/bin/rm $AMASK2.hdr
/usr/bin/rm temp.v

echo "Complete [check_oxy2] ========================"
