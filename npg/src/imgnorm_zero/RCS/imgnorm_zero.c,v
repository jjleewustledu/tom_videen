head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	2004.02.16.19.24.22;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	2003.06.10.20.37.45;	author tom;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Feb 2004
@
text
@/* $Log: imgnorm_zero.c,v $
 * Revision 1.1  2003/06/10  20:37:45  tom
 * Initial revision
 * */
/*	=========================================================================
 *	Module:			imgnorm_zero.c
 *	Author:			Tom Videen
 *	Description:	Normalize an image to zero by subtracting a constant
 *	=========================================================================
 */
/*@@unused@@*/
static char     rcsid[] = "$Header: /home/npggw/tom/src/imgnorm_zero/RCS/imgnorm_zero.c,v 1.1 2003/06/10 20:37:45 tom Exp tom $";

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <image.h>
#include <libimage.h>
#include <libnrimg.h>
#include <nrutil.h>

main (argc, argv)
/*@@unused@@*/
	int             argc;
	char           *argv[];
{
	ImageFile      *file;
	Index           indx;
	MainHeader     *mh;
	SubHeader      *sh;
	char           *fname1;		 /* image to read */
	char           *fname2;		 /* image to write */
	float        ***img;		 /* image array */
	float           scale;
	unsigned long   dim1, dim2, dim3;	 /* array dimensions */
	long            i, j, k;

	fname1 = argv[1];
	fname2 = argv[2];
	scale = atof(argv[3]);

	indx.frm = 1;
	indx.pln = 1;
	indx.gate = 1;
	indx.data = 0;
	indx.bed = 0;

	file = make_imgfile (fname1);
	if (open_imgfile (file) == ERROR) {
		fprintf (stderr, "ERROR [imgnorm_zero]: Could not open %s\n", fname1);
		return (ERROR);
	}
	if (get_mh (file) == ERROR) {
		fprintf (stderr, "ERROR [imgnorm_zero]: Could not get MainHeader from %s\n", fname1);
		return (ERROR);
	}
	if (existimgfrm (file, &indx) == ERROR) {
		indx.frm = 2;
		if (existimgfrm (file, &indx) == ERROR) {
			fprintf (stderr, "ERROR [imgnorm_zero]: cannot find %s frame 1 or 2\n", fname1);
			return (ERROR);
		}
	}
	if (get_sh (file, &indx) == ERROR) {
		fprintf (stderr, "ERROR [imgnorm_zero]: Could not read file subheader in %s\n", fname1);
		return (ERROR);
	}
	mh = file->mh;
	sh = file->sh;

	dim1 = (unsigned long) sh->dim1;
	dim2 = (unsigned long) sh->dim2;
	dim3 = (unsigned long) sh->dim3;

	if ((img = readtensor (file, &indx)) == NULL)
		return (ERROR);

	for (i = 1; i <= dim3; i++)
		for (j = 1; j <= dim2; j++)
			for (k = 1; k <= dim1; k++)
				img[i][j][k] = img[i][j][k] - scale;

	fprintf (stdout, "Writing %s, frame %d\n", fname2, indx.frm);
	close_imgfile (file);
	(void) strcpy (file->name, fname2);
	(void) strcpy (file->mode, "w");
	if (open_imgfile (file) == ERROR) {
		fprintf (stderr, "ERROR [imgnorm_zero]: Could not open %s\n", fname2);
		return (ERROR);
	}
	mh->nframe = indx.frm;
	if (put_mh (file) == ERROR)
		return (ERROR);
	if (writetensor (file, &indx, img) == ERROR)
		return (ERROR);
	free_f3tensor (img, 1, dim3, 1, dim2, 1, dim1);
	close_imgfile (file);
	free_imgfile (file);
	return (OK);
}
@


1.1
log
@Initial revision
@
text
@d1 4
a4 1
/* $Log$ */
d11 2
a12 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/imgnorm_zero/RCS/imgnorm_zero.c,v 1.3 2002/11/26 22:33:49 tom Exp $";
d23 1
@
