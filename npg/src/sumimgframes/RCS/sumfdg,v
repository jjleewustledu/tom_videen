head	2.5;
access;
symbols;
locks; strict;
comment	@# @;


2.5
date	2008.08.22.13.38.13;	author tom;	state Exp;
branches;
next	2.4;

2.4
date	2008.08.07.19.27.33;	author tom;	state Exp;
branches;
next	2.3;

2.3
date	2008.07.29.21.25.11;	author tom;	state Exp;
branches;
next	2.2;

2.2
date	2008.05.19.15.12.01;	author tom;	state Exp;
branches;
next	2.1;

2.1
date	2008.05.15.15.27.25;	author tom;	state Exp;
branches;
next	2.0;

2.0
date	2004.02.20.14.56.37;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	2003.12.17.16.38.54;	author tom;	state Exp;
branches;
next	;


desc
@@


2.5
log
@sum without decay (no isotope)
@
text
@#! /bin/csh
#	Name:	sumfdg
#	Date:	May 1996
#	Author:	Tom Videen
#	Use:	Add 9 frames into a single image file.
#	        Creates a composite FDG image

if (! $?NPG) setenv NPG /usr/local/npg

if ($#argv != 1) then
	echo "Usage:  sumfdg infile"
	echo " e.g.,  sumfdg p2000fdg1.img"
	echo " creates -->  p2000fdg0.img"
	exit 1
endif
 
set in = $1
if ( ! -e ${in}) then
	echo "ERROR: cannot find $in"
	exit 1
endif

set sum = `ls ${in} | sed 's/fdg1/fdg0/'`
if ( -e ${sum}) then
	echo "ERROR: ${sum} already exists"
	exit 1
endif

set last = `imghdr ${in} | grep frames | cut -d" " -f5`
if (${last} < 9) then
	echo "${in} has only ${last} frames"
	echo "sumfdg requires at least 9 frames"
	exit 1
endif
set first = `expr ${last} - 9 + 1`

echo "Creating 36-min FDG composite image: ${sum}"
${NPG}/bin/sumimgframes ${in} ${sum} ${first} ${last}
${NPG}/bin/scaleimage ${sum} 0.1
@


2.4
log
@correct handling of decay-correction
@
text
@@


2.3
log
@fixed major bug
sh->decay_corr = 1.0
@
text
@@


2.2
log
@give warning if dynamic image has no frame 2
@
text
@@


2.1
log
@*** empty log message ***
@
text
@@


2.0
log
@Feb 2004
@
text
@@


1.1
log
@Initial revision
@
text
@@
