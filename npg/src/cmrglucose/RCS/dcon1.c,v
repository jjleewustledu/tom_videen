head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	2004.02.13.21.19.33;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	2002.03.07.21.39.54;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	98.04.29.14.48.10;	author tom;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Feb 2004
@
text
@/*	===============================================================================
 *	Module:			dcon1.c
 *	Author:			RE Carson
 *	Modified:		Tom Videen
 *	Date:		   	Apr 1998
 *  Description:
 *	Compute the integral of convolution of a straight line with an exponential:
 * 		straight line counts (x1,y1) with (x2,y2) (call it g(x)=b+mx).
 * 		k is the exponential rate constant;
 * 		t is the time parameter of the convolution integral;
 * 		a is updated with the results of the convolution;
 *
 *  integral from x1 to x2 [g(x) exp(-k*(t-x)) dx]
 *       = integral [(b+mx) exp(k(x-t))] dx
 *       = [b/k + m(kx-1)/k**2] * exp(k(x-t))
 *       = [(b + mx)/k -m/k**2] * exp(k(x-t))
 *
 *	if e1 = exp(k(x1-t))
 *	   e2 = exp(k(x2-t))
 *	then:
 *	     = [e2*(b+m*x2)/k -e2*m/k**2] - [e1*(b+m*x1)/k - e1*m/k**2]
 *	     = [e2*(b+m*x2)- e1*(b+m*x1)]/k + (e1-e2)*m/k**2
 *	Compute this, add to a, and return a.
 *	===============================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/cmrglucose/RCS/dcon1.c,v 1.2 2002/03/07 21:39:54 tom Exp tom $";
#endif

#include <math.h>

double          dcon1 (x1, y1, x2, y2, k, t, a)
	double          x1, y1;
	double          x2, y2;
	double          k, t, a;
{
	double          dx, dy, dex, da, kdx;
	double          x0, y0;
	double          b, d1, d2, e1, e2, m;

	if (x1 >= x2)
		return (a);

	dx = x2 - x1;
	kdx = k * dx;

	if (fabs (kdx) > 0.0001) {
		m = (y2 - y1) / (x2 - x1);
		b = y1 - m * x1;
		d1 = k * (x1 - t);
		if (d1 > 38.)
			d1 = 38.;
		e1 = exp (d1);
		d2 = k * (x2 - t);
		if (d2 > 38.)
			d2 = 38.;
		e2 = exp (d2);
		a += (e2 * (b + m * x2) - e1 * (b + m * x1)) / k + (e1 - e2) * m / pow (k, 2.);
		return (a);
	} else {				 /* small exponent--> use Taylor expansion */
		x0 = (x1 + x2) / 2.;
		y0 = (y1 + y2) / 2.;
		dy = y2 - y1;
		dex = exp (-k * (t - x0));
		da = dex * dx * (y0 + kdx * dy / 12. + pow (kdx, 2.) * y0 / 24. + pow (kdx, 3.) * dy / 480.);
		a = a + da;
		return (a);
	}
}
@


1.2
log
@clean lint
@
text
@d5 1
a5 1
 *	Date:		   	Apr-98
d26 1
a26 1

d28 1
a28 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/cmrglucose/RCS/dcon1.c,v 1.1 1998/04/29 14:48:10 tom Exp tom $";
@


1.1
log
@Initial revision
@
text
@d28 1
a28 1
static char     rcsid[] = "$Header$";
a30 2
#include <stdio.h>
#include <stdlib.h>
@
