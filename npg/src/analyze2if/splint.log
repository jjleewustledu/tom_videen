analyze2if.c: (in function main)
analyze2if.c:65:55: Right operand of << may be negative (long int):
                       1 << (8 * (long int)sizeof(short int)) - 1
  The right operand to a shift operator may be negative (behavior undefined).
  (Use -shiftnegative to inhibit warning)
analyze2if.c:66:54: Right operand of << may be negative (long int):
                       1 << (8 * (long int)sizeof(short int)) - 1
analyze2if.c:92:16: Possibly null storage ptr passed as non-null param:
                       strstr (ptr, ...)
  A possibly null pointer is passed as a parameter corresponding to a formal
  parameter with no /*@null@*/ annotation.  If NULL may be used for this
  parameter, add a /*@null@*/ annotation to the function parameter declaration.
  (Use -nullpass to inhibit warning)
   analyze2if.c:87:8: Storage ptr may become null
analyze2if.c:163:40: Right operand of << may be negative (long int):
                        1 << (8 * (long int)sizeof(short int)) - 1
analyze2if.c:164:39: Right operand of << may be negative (long int):
                        1 << (8 * (long int)sizeof(short int)) - 1
analyze2if.c:199:40: Right operand of << may be negative (long int):
                        1 << (8 * (long int)sizeof(short int)) - 1
analyze2if.c:200:39: Right operand of << may be negative (long int):
                        1 << (8 * (long int)sizeof(short int)) - 1

