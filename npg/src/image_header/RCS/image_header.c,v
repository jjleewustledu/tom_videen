head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	2004.02.16.16.36.43;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	97.09.11.19.08.53;	author tom;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Feb 2004
@
text
@/*	$Log: image_header.c,v $
 * Revision 1.1  1997/09/11  19:08:53  tom
 * Initial revision
 * */
/* ===============================================================================
 *	Module:			image_header.c
 *	Date:			Sep 1997
 *	Author:			Tom Videen
 *	Description:	Read image file header for IDL
 *	Write output as:
 *	If error: write -1 followed by string message to stdout
 *	Otherwise write:
 *		file_format (integer)
 *		first frame	(integer)
 *		dim1, dim2, dim3 (3 integers)
 *		mh 		sizeof(MainHeader)
 *		sh		sizeof (SubHeader)
 *	if (file_format eq 1)
 *		mh6		sizeof (Main_header)
 *		sh6		sizeof (Image_subheader)
 *	if (file_format eq 2)
 *		mh7		sizeof (Main_header7)
 *		sh7		sizeof (Image_subheader7)
 * ===============================================================================
 */
/*@@unused@@*/
static char     rcsid[] = "$Header: /home/npggw/tom/src/image_header/RCS/image_header.c,v 1.1 1997/09/11 19:08:53 tom Exp tom $";

#include <stdio.h>
#include <stdlib.h>
#include <image.h>
#include <libimage.h>
#include <pettable.h>

main (argc, argv)
/*@@unused@@*/
	int             argc;
	char           *argv[];
{
	ImageFile      *file;
	Index           indx;
	char           *fname;
	int             frm;

	fname = argv[1];
	frm = atoi (argv[2]);
	if (frm == 0)
		indx.frm = 1;
	else
		indx.frm = frm;
	indx.pln = 1;
	indx.gate = 1;
	indx.data = 0;
	indx.bed = 0;
	file = make_imgfile (fname);
	if (open_imgfile (file) == ERROR) {
		fprintf (stdout, "-1  Cannot open %s\n", fname);
		return (ERROR);
	}
	if (get_mh (file) == ERROR) {
		fprintf (stdout, "-1  Cannot get mainheader from %s\n", fname);
		return (ERROR);
	}
	if (existimgfrm (file, &indx) == ERROR) {
		if (indx.frm == 1) {
			indx.frm = 2;
			if (existimgfrm (file, &indx) == ERROR) {
				indx.frm = 3;
				if (existimgfrm (file, &indx) == ERROR) {
					fprintf (stdout, "-1  Cannot find %s frame 1, 2 or 3\n", fname);
					return (ERROR);
				}
			}
		} else {
			fprintf (stdout, "-1  Cannot find %s frame %d\n",
				 fname, indx.frm);
			return (ERROR);
		}
	}
	if (get_sh (file, &indx) == ERROR) {
		fprintf (stdout, "-1  Cannot read file subheader in %s\n", fname);
		return (ERROR);
	}
	fprintf (stdout, "%d\n", file->mh->file_format);
	fprintf (stdout, "%d\n", indx.frm);
	fprintf (stdout, "%d %d %d\n", file->sh->dim1, file->sh->dim2, file->sh->dim3);
	(void) fwrite (file->mh, sizeof(MainHeader), 1, stdout);
	(void) fwrite (file->sh, sizeof(SubHeader), 1, stdout);
	if (file->mh->file_format == MATRIX_REV6) {
		(void) fwrite (file->m6->mh, sizeof(Main_header), 1, stdout);
		(void) fwrite (file->m6->sh, sizeof(Image_subheader), 1, stdout);
	} else if (file->mh->file_format == MATRIX_REV7) {
		(void) fwrite (file->m7->mh, sizeof(Main_header7), 1, stdout);
		(void) fwrite (file->m7->sh, sizeof(Image_subheader7), 1, stdout);
	} else if (file->mh->file_format == PETT6) {
		(void) fwrite (file->p6, sizeof(PETT6HDR), 1, stdout);
	}
	close_imgfile (file);
	free_imgfile (file);
	return (OK);
}
@


1.1
log
@Initial revision
@
text
@d1 4
a4 1
/*	$Log$ */
d7 1
a7 1
 *	Date:			Sep-97
d26 2
a27 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/image_header/RCS/read_image.c,v 2.14 1997/03/10 15:47:34 tom Exp $";
d36 1
d87 2
a88 2
	fwrite (file->mh, sizeof(MainHeader), 1, stdout);
	fwrite (file->sh, sizeof(SubHeader), 1, stdout);
d90 2
a91 2
		fwrite (file->m6->mh, sizeof(Main_header), 1, stdout);
		fwrite (file->m6->sh, sizeof(Image_subheader), 1, stdout);
d93 2
a94 2
		fwrite (file->m7->mh, sizeof(Main_header7), 1, stdout);
		fwrite (file->m7->sh, sizeof(Image_subheader7), 1, stdout);
d96 1
a96 1
		fwrite (file->p6, sizeof(PETT6HDR), 1, stdout);
@
