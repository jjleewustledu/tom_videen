head	1.11;
access;
symbols;
locks; strict;
comment	@# @;


1.11
date	99.03.22.15.21.17;	author tom;	state Exp;
branches;
next	1.10;

1.10
date	99.03.02.16.11.38;	author tom;	state Exp;
branches;
next	1.9;

1.9
date	99.03.02.15.23.47;	author tom;	state Exp;
branches;
next	1.8;

1.8
date	99.01.05.18.19.30;	author tom;	state Exp;
branches;
next	1.7;

1.7
date	98.12.28.21.23.25;	author tom;	state Exp;
branches;
next	1.6;

1.6
date	98.12.28.15.04.23;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	98.12.24.20.44.24;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	98.12.24.19.20.35;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	98.12.24.18.12.08;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	98.12.21.20.28.15;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	98.12.04.21.09.26;	author tom;	state Exp;
branches;
next	;


desc
@@


1.11
log
@*** empty log message ***
@
text
@#!/bin/csh
#   Module: clean_oxygen
#   Author: Tom Videen
#   Date:   Mar-99
#   Use:    Clean up directory after alignment of OEF images
#	rcsid = $Id: clean_oxygen,v 1.9 1999/03/02 15:23:47 tom Exp $

if ($#argv != 1) then
	echo "Usage: clean_oxygen pid"
	echo " i.e., clean_oxygen p5000"
	exit (-1)
endif

set PID = $1

# Save processing log files, masks, air files, realigned and OEF images:

mkdir PET_alignment_processing
mv ${PID}*.log PET_alignment_processing
mv *prm PET_alignment_processing
mv *lst PET_alignment_processing
mv brainmsk.v PET_alignment_processing
mv rbrainmsk.v PET_alignment_processing
mv maskoef?.v PET_alignment_processing
mv maskoef?u.v PET_alignment_processing
mv vas?.v PET_alignment_processing
mv ${PID}*.air PET_alignment_processing
mv ${PID}oo?00-ho?.v PET_alignment_processing
mv ${PID}oef?_g3.* PET_alignment_processing
mv r${PID}oef?_g3.* PET_alignment_processing
cp r${PID}ho?_g3.v PET_alignment_processing
cp r${PID}oo?_g3.v PET_alignment_processing
cp r${PID}oc?_g3.v PET_alignment_processing

# Remove processing files no longer needed

rm abrainmsk.*
rm avas0.*
rm a${PID}ho*
rm ar${PID}ho*
rm ra${PID}ho*
rm a${PID}oc*
rm a${PID}oo*
rm ra${PID}oc*
rm ra${PID}oo*
rm maskcbf.v
rm masktr.v
rm nonvas?.v
rm null.air
rm ${PID}*

@


1.10
log
@*** empty log message ***
@
text
@d4 1
a4 1
#   Date:   Dec-98
d6 1
a6 1
#	rcsid = $Id: clean_oxygen,v 1.9 1999/03/02 15:23:47 tom Exp tom $
d28 1
a28 1
mv ${PID}oo?00-ho?_g3.v PET_alignment_processing
d40 2
@


1.9
log
@*** empty log message ***
@
text
@d6 1
a6 1
#	rcsid = $Id: clean_oxygen,v 1.8 1999/01/05 18:19:30 tom Exp tom $
d25 1
@


1.8
log
@*** empty log message ***
@
text
@d6 1
a6 1
#	rcsid = $Id: clean_oxygen,v 1.7 1998/12/28 21:23:25 tom Exp tom $
d19 1
a19 1
mv ${PID}_align.log PET_alignment_processing
d26 1
a26 1
mv ${PID}o?2ho.air PET_alignment_processing
d47 2
a48 2
rm ${PID}ho?00_g3.v*
rm ${PID}oo?00-ho?_g3.v.rec
@


1.7
log
@*** empty log message ***
@
text
@d6 1
a6 1
#	rcsid = $Id: clean_oxygen,v 1.6 1998/12/28 15:04:23 tom Exp tom $
d23 1
a28 1
mv ${PID}oef?_msk.* PET_alignment_processing
a29 1
mv r${PID}oef?_msk.* PET_alignment_processing
a35 1
rm log
@


1.6
log
@generalize to any tr, ho, oc, oo
@
text
@d6 1
a6 1
#	rcsid = $Id: clean_oxygen,v 1.5 1998/12/24 20:44:24 tom Exp tom $
d26 1
a26 1
mv ${PID}oo?1-ho?_g3.v PET_alignment_processing
d49 2
a50 2
rm ${PID}ho?1_g3.v*
rm ${PID}oo?1-ho?_g3.v.rec
@


1.5
log
@*** empty log message ***
@
text
@d6 1
a6 1
#	rcsid = $Id: clean_oxygen,v 1.4 1998/12/24 19:20:35 tom Exp tom $
d13 1
d26 8
a33 8
mv ${PID}oo11-ho1_g3.v PET_alignment_processing
mv ${PID}oef1_g3.* PET_alignment_processing
mv ${PID}oef1_msk.* PET_alignment_processing
mv r${PID}oef1_g3.* PET_alignment_processing
mv r${PID}oef1_msk.* PET_alignment_processing
cp r${PID}ho1_g3.v PET_alignment_processing
cp r${PID}oo1_g3.v PET_alignment_processing
cp r${PID}oc1_g3.v PET_alignment_processing
d49 2
a50 2
rm ${PID}ho11_g3.v*
rm ${PID}oo11-ho1_g3.v.rec
@


1.4
log
@*** empty log message ***
@
text
@d6 1
a6 1
#	rcsid = $Id: clean_oxygen,v 1.3 1998/12/24 18:12:08 tom Exp tom $
d13 1
a13 1
set PID = p5156
@


1.3
log
@*** empty log message ***
@
text
@d6 1
a6 1
#	rcsid = $Id: clean_oxygen,v 1.2 1998/12/21 20:28:15 tom Exp $
d8 1
a8 1
if (#$argc != 1) then
d13 1
d30 1
a30 1
cp ${PID}ho1_g3.v PET_alignment_processing
a48 1
rm r${PID}ho1_g3.v*
@


1.2
log
@*** empty log message ***
@
text
@d6 1
a6 1
#	rcsid = $Id: clean_oxygen,v 1.1 1998/12/04 21:09:26 tom Exp tom $
a7 2
# Check that all environmental variables are set:

d14 1
a14 1
# Save processing notes, masks, air files, realigned and OEF images:
d20 1
a20 1
mv brain.v PET_alignment_processing
a34 2
rm *ifh
rm *lkup
d36 7
a42 7
rm abrain*
rm avas*
rm *org.dat
rm *align.dat
rm null.air
rm a${PID}*
rm ra${PID}*
d46 1
@


1.1
log
@Initial revision
@
text
@d6 1
a6 1
#	rcsid = $Id$
d10 3
a12 2
if ($PID == '') then
	echo "ERROR (align_oxygen): PID is not defined."
@
