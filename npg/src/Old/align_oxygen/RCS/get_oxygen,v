head	1.11;
access;
symbols;
locks; strict;
comment	@# @;


1.11
date	99.03.22.15.24.50;	author tom;	state Exp;
branches;
next	1.10;

1.10
date	99.01.05.19.16.55;	author tom;	state Exp;
branches;
next	1.9;

1.9
date	99.01.05.18.19.30;	author tom;	state Exp;
branches;
next	1.8;

1.8
date	99.01.04.19.33.25;	author tom;	state Exp;
branches;
next	1.7;

1.7
date	99.01.04.19.16.24;	author tom;	state Exp;
branches;
next	1.6;

1.6
date	98.12.28.20.02.17;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	98.12.28.15.04.23;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	98.12.24.19.20.35;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	98.12.24.18.12.08;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	98.12.21.20.28.15;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	98.12.08.13.45.47;	author tom;	state Exp;
branches;
next	;


desc
@@


1.11
log
@*** empty log message ***
@
text
@#!/bin/csh
#   Module: get_oxygen
#   Author: Tom Videen
#   Date:   Mar-98
#   Use:    Get and filter PET images (HO, OO, CO) to create OEF image.

if ($#argv < 2 || ($#argv > 2 && $#argv != 6)) then
	echo "Usage: get_oxygen pid datapath [tr ho oc oo]"
	echo " i.e., get_oxygen p5000 /data/wjp/data0/np1"
	echo "  or , get_oxygen p5000 /data/wjp/data0/np1 1 1 1 1"
	exit (-1)
endif

set PID = $1
set DATADIR = $2/${PID}
set FIL = _g3

if ($#argv != 6) then
	set TR = tr1
	set HO = ho1
	set OC = oc1
	set OO = oo1
else
	set TR = tr$3
	set HO = ho$4
	set OC = oc$5
	set OO = oo$6
endif

set PARMDIR = /usr/local/npg/lib/prm
if (! -e $DATADIR) then
	echo "ERROR [get_oxygen]: Data path $DATADIR cannot be found."
	exit (-1)
endif
if (! -e $PARMDIR) then
	echo "ERROR [get_oxygen]: Parameter file path $PARMDIR cannot be found."
	exit (-1)
endif

if (! -e oef.prm) cp $PARMDIR/oef.prm .
if (! -e oo-ho.prm) cp $PARMDIR/oo-ho.prm .
if (! -e oo-ho2.prm) cp $PARMDIR/oo-ho2.prm .
if (! -e ua_oef.prm) cp $PARMDIR/ua_oef.prm .
if (! -e ${PID}${TR}.v) cp $DATADIR/${PID}${TR}.v .
if (! -e ${PID}${HO}.v) cp $DATADIR/${PID}${HO}.v .
if (! -e ${PID}${OC}.v) cp $DATADIR/${PID}${OC}.v .
if (! -e ${PID}${OO}.v) cp $DATADIR/${PID}${OO}.v .
if (! -e ${PID}${HO}${FIL}.hdr) cp $DATADIR/${PID}${HO}${FIL}.hdr .
if (! -e ${PID}${OC}${FIL}.hdr) cp $DATADIR/${PID}${OC}${FIL}.hdr .
if (! -e ${PID}${OO}${FIL}.hdr) cp $DATADIR/${PID}${OO}${FIL}.hdr .

# Correct the pixel size in PET headers:
 
set PIXSIZE = `imghdr ${PID}${HO}.v | grep 'Pixel size' | cut -f4 -d' '`
if ($PIXSIZE == 0.208634) then
	echo "Correcting pixel size of ${PID}${HO}.v"
	setpixsize ${PID}${HO}.v 0.2144
else
	echo "Pixel size of ${PID}${HO}.v is $PIXSIZE"
endif

set PIXSIZE = `imghdr ${PID}${OC}.v | grep 'Pixel size' | cut -f4 -d' '`
if ($PIXSIZE == 0.208634) then
	echo "Correcting pixel size of ${PID}${OC}.v"
	setpixsize ${PID}${OC}.v 0.2144
else
	echo "Pixel size of ${PID}${OC}.v is $PIXSIZE"
endif

set PIXSIZE = `imghdr ${PID}${OO}.v | grep 'Pixel size' | cut -f4 -d' '`
if ($PIXSIZE == 0.208634) then
	echo "Correcting pixel size of ${PID}${OO}.v"
	setpixsize ${PID}${OO}.v 0.2144
else
	echo "Pixel size of ${PID}${OO}.v is $PIXSIZE"
endif

set PIXSIZE = `imghdr ${PID}${TR}.v | grep 'Pixel size' | cut -f4 -d' '`
if ($PIXSIZE == 0.208634) then
	echo "Correcting pixel size of ${PID}${TR}.v"
	setpixsize ${PID}${TR}.v 0.2144
else
	echo "Pixel size of ${PID}${TR}.v is $PIXSIZE"
endif
 
# Filter:
 
if (! -e ${PID}${TR}_2dg5.v) gauss2d ${PID}${TR}.v ${PID}${TR}_2dg5.v 0.5
if (! -e ${PID}${HO}${FIL}.v) gauss ${PID}${HO}.v ${PID}${HO}${FIL}.v 0.3
if (! -e ${PID}${OC}${FIL}.v) gauss ${PID}${OC}.v ${PID}${OC}${FIL}.v 0.3
if (! -e ${PID}${OO}${FIL}.v) gauss ${PID}${OO}.v ${PID}${OO}${FIL}.v 0.3

echo "----------------------------------------------------"
echo ${PID}${TR}_2dg5.v
echo ${PID}${HO}${FIL}.v
echo ${PID}${OC}${FIL}.v
echo ${PID}${OO}${FIL}.v
@


1.10
log
@remove filter option
@
text
@d4 1
a4 1
#   Date:   Jan-98
d42 1
d93 1
d96 1
a97 1
echo ${PID}${OC}${FIL}.v
@


1.9
log
@*** empty log message ***
@
text
@d7 4
a10 4
if ($#argv < 3 || ($#argv > 3 && $#argv != 7)) then
	echo "Usage: get_oxygen pid datapath filter [tr ho oc oo]"
	echo " i.e., get_oxygen p5000 /data/wjp/data2/np67 0.3"
	echo "  or , get_oxygen p5000 /data/wjp/data2/np67 0.3 1 1 1 1"
d16 1
a16 9
set F0 = $3
set filterid = `echo "scale=0;${F0} * 10" | bc`
set whole = `echo ${filterid} | awk -F. '{print $1}'`
set fraction = `echo ${filterid} | awk -F. '{print $2}'`
if (${fraction} == 0 || ${fraction} == 00 || ${fraction} == 000) then
    set FIL = _g${whole}
else
	set FIL = _g${whole}.${fraction}
endif
d18 1
a18 1
if ($#argv != 7) then
d24 4
a27 4
	set TR = tr$4
	set HO = ho$5
	set OC = oc$6
	set OO = oo$7
d88 3
a90 3
if (! -e ${PID}${HO}${FIL}.v) gauss ${PID}${HO}.v ${PID}${HO}${FIL}.v $F0
if (! -e ${PID}${OC}${FIL}.v) gauss ${PID}${OC}.v ${PID}${OC}${FIL}.v $F0
if (! -e ${PID}${OO}${FIL}.v) gauss ${PID}${OO}.v ${PID}${OO}${FIL}.v $F0
a92 1
echo ${PID}${OC}${FIL}.v
d95 1
@


1.8
log
@check pixel size of each image
@
text
@d7 4
a10 4
if ($#argv < 1 || ($#argv > 2 && $#argv != 6)) then
	echo "Usage: get_oxygen pid [datapath] [tr ho oc oo]"
	echo " i.e., get_oxygen p5000 /data/wjp/data2/np67"
	echo "  or , get_oxygen p5000 /data/wjp/data2/np67 1 1 1 1"
d15 7
a21 2
if ($#argv == 1) then
	set DATADIR = /data/wjp/data2/np67/${PID}
d23 1
a23 1
	set DATADIR = $2/${PID}
d26 1
a26 1
if ($#argv != 6) then
d32 4
a35 4
	set TR = tr$3
	set HO = ho$4
	set OC = oc$5
	set OO = oo$6
d55 3
a57 3
if (! -e ${PID}${HO}_g3.hdr) cp $DATADIR/${PID}${HO}_g3.hdr .
if (! -e ${PID}${OC}_g3.hdr) cp $DATADIR/${PID}${OC}_g3.hdr .
if (! -e ${PID}${OO}_g3.hdr) cp $DATADIR/${PID}${OO}_g3.hdr .
d96 3
a98 3
if (! -e ${PID}${HO}_g3.v) gauss ${PID}${HO}.v ${PID}${HO}_g3.v 0.3
if (! -e ${PID}${OC}_g3.v) gauss ${PID}${OC}.v ${PID}${OC}_g3.v 0.3
if (! -e ${PID}${OO}_g3.v) gauss ${PID}${OO}.v ${PID}${OO}_g3.v 0.3
d101 3
a103 3
echo ${PID}${OC}_g3.v
echo ${PID}${HO}_g3.v
echo ${PID}${OO}_g3.v
@


1.7
log
@append pid to datapath
@
text
@d4 1
a4 1
#   Date:   Dec-98
d58 1
a58 2
	echo "Correcting pixel size"
	setpixsize ${PID}${TR}.v 0.2144
d60 7
d68 7
d76 2
d79 8
@


1.6
log
@*** empty log message ***
@
text
@d7 1
a7 1
if ($#argv < 1 || ($#argv > 1 && $#argv != 6)) then
d9 2
a10 2
	echo " i.e., get_oxygen p5000 /data/wjp/data2/np67/p5000"
	echo "  or , get_oxygen p5000 /data/wjp/data2/np67/p5000 1 1 1 1"
d18 1
a18 1
	set DATADIR = $2
d73 1
a74 1
echo ${PID}${OC}_g3.v
@


1.5
log
@generalize to any tr, ho, oc, oo
@
text
@d15 1
a15 1
if ($#argv != 2) then
d20 1
@


1.4
log
@*** empty log message ***
@
text
@d7 2
a8 2
if ($#argv < 1) then
	echo "Usage: get_oxygen pid [datapath]"
d10 1
d20 12
d45 7
a51 7
if (! -e ${PID}tr1.v) cp $DATADIR/${PID}tr1.v .
if (! -e ${PID}ho1.v) cp $DATADIR/${PID}ho1.v .
if (! -e ${PID}oc1.v) cp $DATADIR/${PID}oc1.v .
if (! -e ${PID}oo1.v) cp $DATADIR/${PID}oo1.v .
if (! -e ${PID}ho1_g3.hdr) cp $DATADIR/${PID}ho1_g3.hdr .
if (! -e ${PID}oc1_g3.hdr) cp $DATADIR/${PID}oc1_g3.hdr .
if (! -e ${PID}oo1_g3.hdr) cp $DATADIR/${PID}oo1_g3.hdr .
d55 1
a55 1
set PIXSIZE = `imghdr ${PID}ho1.v | grep 'Pixel size' | cut -f4 -d' '`
d58 4
a61 4
	setpixsize ${PID}tr1.v 0.2144
	setpixsize ${PID}ho1.v 0.2144
	setpixsize ${PID}oc1.v 0.2144
	setpixsize ${PID}oo1.v 0.2144
d66 4
a69 4
if (! -e ${PID}tr1_2dg5.v) gauss2d ${PID}tr1.v ${PID}tr1_2dg5.v 0.5
if (! -e ${PID}ho1_g3.v) gauss ${PID}ho1.v ${PID}ho1_g3.v 0.3
if (! -e ${PID}oc1_g3.v) gauss ${PID}oc1.v ${PID}oc1_g3.v 0.3
if (! -e ${PID}oo1_g3.v) gauss ${PID}oo1.v ${PID}oo1_g3.v 0.3
d71 4
a74 4
echo ${PID}tr1_2dg5.v
echo ${PID}ho1_g3.v
echo ${PID}oc1_g3.v
echo ${PID}oo1_g3.v
@


1.3
log
@*** empty log message ***
@
text
@d44 1
a44 1
	echo "Correcting pixel size'
@


1.2
log
@*** empty log message ***
@
text
@d20 8
d42 8
a49 4
setpixsize ${PID}tr1.v 0.2144
setpixsize ${PID}ho1.v 0.2144
setpixsize ${PID}oc1.v 0.2144
setpixsize ${PID}oo1.v 0.2144
@


1.1
log
@Initial revision
@
text
@d7 4
a10 5
if (! $?PID ) then
    echo "ERROR [get_oxygen]: PID is not defined."
    exit (-1)
else
	echo "Retrieving and filtering $PID"
d12 3
a14 1
if (! $?DATADIR ) then
d16 2
@
