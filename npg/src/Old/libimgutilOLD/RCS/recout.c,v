head	2.1;
access;
symbols;
locks
	tom:2.1; strict;
comment	@ * @;


2.1
date	99.12.13.17.04.17;	author tom;	state Exp;
branches;
next	2.0;

2.0
date	96.04.24.23.07.41;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	96.03.12.23.00.34;	author tom;	state Exp;
branches;
next	;


desc
@@


2.1
log
@tov revision
@
text
@/* $Log: recout.c,v $
 * Revision 2.0  1996/04/24  23:07:41  tom
 * new library release
 *
 * Revision 1.1  1996/03/12  23:00:34  tom
 * Initial revision
 *
 * Revision 1.11  1995/11/10  18:48:16  tom
 * remove petutil parent directory from include statements
 *
 * Revision 1.10  1994/10/03  16:17:13  tom
 * standard format with indent
 *
 * Revision 1.9  1994/05/18  15:53:30  tom
 * changed $Id: recout.c,v 2.0 1996/04/24 23:07:41 tom Exp tom $ to $Header: /home/npggw/tom/src/libimgutil/RCS/recout.c,v 2.0 1996/04/24 23:07:41 tom Exp tom $
 * */
/*	========================================================================
 *	Module:			recout.c
 *	Date:			19-Aug-93
 *	Author:			Tom Videen
 *	Description:	Copy an input image's recfile to the output recfile
 *	
 *	Input:
 *		recfp   -   pointer to a new rec file
 *		filename -  name of the image file associated with an old rec file
 *	 
 *	Output:
 *		contents of old rec file copied to recfp
 *	 
 *	Algorithm:
 *	1)  Create the old rec file name.
 *	2)  Open the old rec file. 
 *	3)  If no old rec file, write "not found" to the new rec file.
 *		Otherwise, copy the contents of the old rec file to the new one.
 *	
 *	========================================================================
 */
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimgutil/RCS/recout.c,v 2.0 1996/04/24 23:07:41 tom Exp tom $";
#endif

#include <stdio.h>
#include <string.h>
#include <myvalues.h>	/* MAXLINE */

/*	-----------------------
 *	Function recout
 *	-----------------------
 */
void	recout (recfp, filename)
	FILE           *recfp;
	char           *filename;
{
	FILE           *fp;
	char            recfile[MAXPATH];
	char            line[MAXLINE];

	strcpy (recfile, filename);
	strcat (recfile, ".rec");
	fp = fopen (recfile, "r");
	if (fp == (FILE *) NULL)
		fprintf (recfp, "%s not found\n", recfile);
	else {
		while (fgets (line, MAXLINE, fp) != NULL)
			fprintf (recfp, "%s", line);
		fclose (fp);
	}
}
@


2.0
log
@new library release
@
text
@d2 3
d15 1
a15 1
 * changed $Id: recout.c,v 1.1 1996/03/12 23:00:34 tom Exp tom $ to $Header: /home/petsun19/tom/src/libimgutil/RCS/recout.c,v 1.1 1996/03/12 23:00:34 tom Exp tom $
d39 1
a39 1
static char     rcsid[] = "$Header: /home/petsun19/tom/src/libimgutil/RCS/recout.c,v 1.1 1996/03/12 23:00:34 tom Exp tom $";
a42 1
#include <stdlib.h>
@


1.1
log
@Initial revision
@
text
@d2 3
d12 1
a12 1
 * changed $Id: recout.c,v 1.11 1995/11/10 18:48:16 tom Exp tom $ to $Header: /home/npggw/tom/src/t88mean/RCS/recout.c,v 1.11 1995/11/10 18:48:16 tom Exp tom $
d35 4
d40 1
a43 4
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/t88mean/RCS/recout.c,v 1.11 1995/11/10 18:48:16 tom Exp tom $";
#endif

d48 1
a48 2
void 
recout (recfp, filename)
@
