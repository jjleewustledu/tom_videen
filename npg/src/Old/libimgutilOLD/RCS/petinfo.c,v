head	1.4;
access;
symbols;
locks; strict;
comment	@ * @;


1.4
date	99.12.13.17.04.17;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	97.03.06.20.42.37;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	96.06.04.22.49.19;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	96.05.23.15.26.31;	author tom;	state Exp;
branches;
next	;


desc
@@


1.4
log
@tov revision
@
text
@/*	$Log: petinfo.c,v $
 * Revision 1.3  1997/03/06  20:42:37  tom
 * look for frames1-3
 *
 * Revision 1.2  1996/06/04  22:49:19  tom
 * add length of string parameter
 *
 * Revision 1.1  1996/05/23  15:26:31  tom
 * Initial revision
 * */
/*	===============================================================================
 *	Module:			petinfo.c
 *	Date:			May-96
 *	Author:			Tom Videen
 *	Description:	Get scan info from headers of PET image files
 *	===============================================================================
 */
#ifndef lint
static char     rcsid[] = "$Id: petinfo.c,v 1.3 1997/03/06 20:42:37 tom Exp tom $";
#endif

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <image.h>
#include <libimage.h>

int             petinfo (fname, scanner, acq, recon, fltr, len)
	char           *fname;
	char           *scanner;
	char           *acq;
	char           *recon;
	char           *fltr;
	int             len;

{
	ImageFile      *file;
	Index           indx;

	indx.frm = 1;
	indx.pln = 1;
	indx.gate = 1;
	indx.data = 0;
	indx.bed = 0;

	file = make_imgfile (fname);
	if (open_imgfile (file) == ERROR) {
		fprintf (stderr, "ERROR [petinfo]: Could not open %s\n", fname);
		return (ERROR);
	}
	if (get_mh (file) == ERROR) {
		fprintf (stderr, "ERROR [petinfo]: Could not get MainHeader from %s\n", fname);
		return (ERROR);
	}
	if (existimgfrm (file, &indx) == ERROR) {
		indx.frm = 2;
		if (existimgfrm (file, &indx) == ERROR) {
			indx.frm = 3;
			if (existimgfrm (file, &indx) == ERROR) {
				fprintf (stderr, "ERROR [petinfo]: cannot find %s frame 1, 2 or 3\n", fname);
				return (ERROR);
			}
		}
	}
	if (get_sh (file, &indx) == ERROR) {
		fprintf (stderr, "ERROR [petinfo]: Could not read file subheader in %s\n", fname);
		return (ERROR);
	}
	(void) strncpy (scanner, file->mh->scanner, len - 1);
	(void) strncpy (acq, file->mh->acquisition, len - 1);
	(void) strncpy (recon, file->mh->reconstruction, len - 1);
	(void) strncpy (fltr, file->mh->filtername, len - 1);
	free (file->name);
	free_imgfile (file);
	return (OK);
}
@


1.3
log
@look for frames1-3
@
text
@d2 3
d19 1
a19 1
static char     rcsid[] = "$Id: petinfo.c,v 1.2 1996/06/04 22:49:19 tom Exp tom $";
d24 1
d60 1
a60 1
				fprintf (stderr, "ERROR [petinfo]: cannot find %s frame 1, 2 or 3\n", file);
d66 1
a66 1
		fprintf (stderr, "ERROR [petinfo]: Could not read file subheader in %s\n", file);
d69 4
a72 4
	strncpy (scanner, file->mh->scanner, len - 1);
	strncpy (acq, file->mh->acquisition, len - 1);
	strncpy (recon, file->mh->reconstruction, len - 1);
	strncpy (fltr, file->mh->filtername, len - 1);
@


1.2
log
@add length of string parameter
@
text
@d2 3
d16 1
a16 1
static char     rcsid[] = "$Id: petinfo.c,v 1.1 1996/05/23 15:26:31 tom Exp tom $";
d30 1
a30 1
	int			    len;
d54 5
a58 2
			fprintf (stderr, "ERROR [petinfo]: cannot find %s frame 1 or 2\n", file);
			return (ERROR);
d65 4
a68 4
	strncpy (scanner, file->mh->scanner, len-1);
	strncpy (acq, file->mh->acquisition, len-1);
	strncpy (recon, file->mh->reconstruction, len-1);
	strncpy (fltr, file->mh->filtername, len-1);
@


1.1
log
@Initial revision
@
text
@d1 4
a4 1
/*	$Log$ */
d13 1
a13 1
static char     rcsid[] = "$Id: petinfo.c,v 2.2 1996/05/22 20:45:54 tom Exp $";
d21 1
a21 1
int             petinfo (fname, scanner, acq, recon, fltr)
d27 1
d59 4
a62 4
	strcpy (scanner, file->mh->scanner);
	strcpy (acq, file->mh->acquisition);
	strcpy (recon, file->mh->reconstruction);
	strcpy (fltr, file->mh->filtername);
@
