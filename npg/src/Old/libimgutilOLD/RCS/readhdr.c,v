head	2.2;
access;
symbols;
locks
	tom:2.2; strict;
comment	@ * @;


2.2
date	2000.07.18.15.57.37;	author tom;	state Exp;
branches;
next	2.1;

2.1
date	96.05.16.19.44.00;	author tom;	state Exp;
branches;
next	2.0;

2.0
date	96.04.24.23.07.41;	author tom;	state Exp;
branches;
next	;


desc
@new library release
@


2.2
log
@remove error message
@
text
@/*	$Id: readhdr.c,v 2.1 1996/05/16 19:44:00 tom Exp tom $
	$Log: readhdr.c,v $
 * Revision 2.1  1996/05/16  19:44:00  tom
 * check existence of recfp before writing
 *
 * Revision 2.0  1996/04/24  23:07:41  tom
 * new library release
 *
 */
/* ===============================================================================
 *	Module:			readhdr.c
 *	Date:			Apr-96
 *	Author:			Tom Videen
 *	Description:	Read an 'hdr' file into HEADER_DATA.
 * ===============================================================================
 */
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimgutil/RCS/readhdr.c,v 2.1 1996/05/16 19:44:00 tom Exp tom $";
#endif

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <imgutil.h>

int             readhdr (filename, hdr, recfp)
	char           *filename;		 /* image file name */
	HEADER_DATA    *hdr;			 /* hdr structure */
	FILE           *recfp;			 /* rec file pointer */
{
	char           *hdrname;		 /* hdr filename */
	char           *local_hdrname;	 /* local hdr filename */
	char           *c;

	hdrname = (char *) calloc (MAXPATH, sizeof (char));
	local_hdrname = (char *) calloc (MAXPATH, sizeof (char));
	strcpy (hdrname, filename);
	c = strrchr (hdrname, '.');
	if (c == NULL)
		c = strrchr (hdrname, '\0');
	strcpy (c, ".hdr");

	c = strrchr (hdrname, '/');
	if (c == NULL)
		strcpy (local_hdrname, hdrname);
	else
		strcpy (local_hdrname, c + 1);

	if (gethdr (local_hdrname, hdr) == 0) {
		printf ("HDR = %s\n", local_hdrname);
		if (recfp != NULL)
			fprintf (recfp, "%s\n", local_hdrname);
	} else if (gethdr (hdrname, hdr) == 0) {
		printf ("HDR = %s\n", hdrname);
		if (recfp != NULL)
			fprintf (recfp, "%s\n", hdrname);
	} else {
		/* printf ("ERROR [readhdr]:  hdrfile not found as %s or %s\n", local_hdrname, hdrname); */
		free (hdrname);
		free (local_hdrname);
		return (ERROR);
	}
	free (hdrname);
	free (local_hdrname);
	return (OK);
}
@


2.1
log
@check existence of recfp before writing
@
text
@d1 1
a1 1
/*	$Id: readhdr.c,v 2.0 1996/04/24 23:07:41 tom Exp tom $
d3 3
d18 1
a18 1
static char     rcsid[] = "$Header: /home/petsun19/tom/src/libimgutil/RCS/readhdr.c,v 2.0 1996/04/24 23:07:41 tom Exp tom $";
d58 1
a58 2
		printf ("ERROR [readhdr]:  hdrfile not found\n as %s\n or %s\n", local_hdrname,
			hdrname);
@


2.0
log
@new library release
@
text
@d1 5
a5 2
/*	$Id$
	$Log$
d15 1
a15 1
static char     rcsid[] = "$Header: /home/petsun19/tom/src/libimgutil/RCS/readhdr.c,v 1.1 1996/03/12 23:00:34 tom Exp tom $";
d48 2
a49 1
		fprintf (recfp, "%s\n", local_hdrname);
d52 2
a53 1
		fprintf (recfp, "%s\n", hdrname);
@
