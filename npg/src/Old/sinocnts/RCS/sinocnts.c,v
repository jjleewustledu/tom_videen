head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	2002.11.27.17.42.35;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	95.04.14.16.19.52;	author tom;	state Exp;
branches;
next	;


desc
@@


1.2
log
@*** empty log message ***
@
text
@/*
$Id: sinocnts.c,v 1.1 1995/04/14 16:19:52 tom Exp tom $
$Log: sinocnts.c,v $
 * Revision 1.1  1995/04/14  16:19:52  tom
 * Initial revision
 *
===============================================================================
 *  Module:         sinocnts.c
 *  Date:           14-Apr-95
 *  Author:         Tom Videen
 *  Description:    Read a sinogram and total prompts, delayed, net trues
===============================================================================
 */

#include <stdio.h>
#include <stdlib.h>
#include "matrix.h"
#include "cti_proto.h"

static char     rcsid[] = "$Header: /home/npggw/tom/src/sinocnts/RCS/sinocnts.c,v 1.1 1995/04/14 16:19:52 tom Exp tom $";
char            Usage[] = "Usage: sinocnts inputfile.scn\n";

main (argc, argv)
	int             argc;
	char          **argv;
{
	Scan_subheader *shpr;
	Main_header    *mhpr;
	char           *fname;
	int             frm, pln, data = 0, gate = 1, bed = 0;
	int             nplanes;
	int             nframes;
	float           prompts, delayed, trues;

	if (argc != 2) {
		fprintf (stderr, Usage);
		exit (-1);
	} else {
		fname = argv[1];
	}

	if ((mhpr = getmhdr (fname)) == NULL) {
		fprintf (stderr, "Could not read main header %s\n", fname);
		exit (ERROR);
	}
	if (mhpr->file_type != RAW_DATA) {
		fprintf (stderr,
			 "sinocnts: matrix main header file_type of %d is not a scan file\n",
			 mhpr->file_type);
		exit (-1);
	}
	nframes = mhpr->num_frames;
	nplanes = mhpr->num_planes;
	printf ("%d frames %d planes\n", nframes, nplanes);

/* Read the subheader */

	prompts = 0;
	delayed = 0;
	trues = 0;

	for (frm = 1; frm <= nframes; frm++) {
		for (pln = 1; pln <= nplanes; pln++) {
			if ((shpr = getsbhdr (fname, pln, frm, gate, data, bed)) == NULL) {
				fprintf (stderr, "Could not read subheader %s %d,%d,%d,%d,%d\n",
					fname, frm, pln, gate, data, bed);
				exit (ERROR);
			}
			prompts += (float) shpr->prompts;
			delayed += (float) shpr->delayed;
			trues += (float) shpr->net_trues;
		}
	}

	printf ("Prompts = %8.1f million\n", prompts / 1000000.);
	printf ("Delayed = %8.1f million\n", delayed / 1000000.);
	printf ("Trues   = %8.1f million\n", trues / 1000000.);
	return;
}
@


1.1
log
@Initial revision
@
text
@d2 5
a6 2
$Id$
$Log$
a16 1
#include <string.h>
d20 1
a20 1
static char     rcsid[] = "$Header$";
d78 1
@
