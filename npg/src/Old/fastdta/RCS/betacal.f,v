head	1.1;
access;
symbols;
locks; strict;
comment	@c @;


1.1
date	92.07.22.22.43.23;	author ty7777;	state Exp;
branches;
next	;


desc
@fastdta First Release.
@


1.1
log
@fastdta First Release
@
text
@      PROGRAM BETACAL
C     AZS 28-JUL-90
C     CALCULATES BETA PROBE TO WELL COUNTER CONVERSION FACTOR
C     OUTPUT LISTED ON LU6
C     USES SUBROUTINE POLFIT(X,Y,NPTS,A,ARRAY,NTERM,CHISQR)
C     LINK7 BETACAL,POLFIT
C     Modified 12/05/91 to read floating T(I)
      CHARACTER*20 STR
      CHARACTER*24 FILSPC
      CHARACTER*1 ASCII
      PARAMETER (NBINMAX=512)
      PARAMETER (NTERM=2)
      REAL*4 T(NBINMAX),Y(NBINMAX)
      REAL*4 A(NTERM),ARRAY(NTERM,NTERM)
   30 TYPE
     &"(' ENTER BETA PROBE CAL FILENAME (WITHOUT .CRV EXTENSION)')"
      ACCEPT "(A24)",FILSPC
      L=INANYR(FILSPC,' ')
      IF(L.EQ.0)STOP 'END BETACAL'
      FILSPC(L+1:L+4)='.CRV'
C      OPEN(8,FILE=FILSPC,STATUS='OLD',SHARE='SRO',ERR=30)
      OPEN (8, FILE=FILSPC, STATUS='OLD', ERR=30)
      TYPE "(' ENTER .CRV FILE TIME PER BIN IN SEC')"
      ACCEPT *,TIMPBIN
      WRITE(6,105)FILSPC
  105 FORMAT (1X, A24)
      READ(8,107)STR
      WRITE(6,117)STR
  107 FORMAT (A20)
  117 FORMAT (1X, A20)
      READ(8,*)NBIN
      IF(NBIN.GT.NBINMAX) STOP 'NBIN TOO LARGE'
      DO 41 I=1,NBIN
      READ(8,*)S,J
      M=NINT(S)
      IF(M.NE.I)STOP 'BETACAL FILE READ ERROR'
      Y(I)=ALOG(FLOAT(J))
   41 T(I)=FLOAT(I)*TIMPBIN
      CLOSE(8)
      CALL POLFIT(T,Y,NBIN,A,ARRAY,NTERM,CHISQR)
  102 FORMAT(' A(1),A(2),CHISQR',3F10.4)
  103 FORMAT(' COUNTS/SEC EXTRAPOLATED TO TIME 0',F9.0)
  104 FORMAT(' CALCULATED T1/2 IN SECONDS',F8.2)
      BETA=EXP(A(1))/TIMPBIN
      WRITE(6,102)A,CHISQR
      WRITE(6,103)BETA
      WRITE(6,104)-ALOG(2.)/A(2)
      TYPE "(' ENTER RADIONUCLIDE')"
      ACCEPT "(A1)",ASCII
      IF(ASCII.EQ.'O')THALF=123.
      IF(ASCII.EQ.'C')THALF=1218.
      TYPE "(' HALF LIFE SET TO',F10.0,' SECONDS')",THALF
      TYPE "(' ENTER WELL COUNTER COUNTING PERIOD IN SEC')"
      ACCEPT *,BINLEN
      CALL WELLCAL(THALF,BINLEN,WELL)
      WRITE(6,106)WELL/BETA
  106 FORMAT(' BETA PROBE TO WELL COUNTER CONVERSION FACTOR',F6.2)
      STOP 'END BETACAL'
      END
      SUBROUTINE WELLCAL(THALF,BINLEN,RATE)
C     input THALF = half life of tracer in sec
C     input BINLEN = counting period of well counter (usually 10 sec)
C     returns RATE = COUNTS/SEC*GRAM
C     READS ASCII FILE ON LU 0 WITH WELL COUNTER CALIBRATION DATA
C     dry, wet, min, sec, counts/bin
C     EACH DUPLICATE RUN MUST APPEAR ON A SEPARATE LINE
C     DATA IS READ UNTIL FILE END OR FIRST NONNUMERIC
C     WELLCAL AVERAGES OVER DUPLICATES
C     CALCULATION SUMMARY IS SENT TO LU6
      PARAMETER (NMAX=20)
      REAL*4    DRY(NMAX),WET(NMAX),R(NMAX)
      INTEGER*4 MINUTE(NMAX),SEC(NMAX),COUNTS(NMAX)
      AKT=ALOG(2.)*BINLEN/THALF
      BINFAC=AKT/(1.-EXP(-AKT))
      BINFAC=BINFAC/BINLEN
C     TYPE *,BINFAC
      CALL BETAGET(NMAX,DRY,WET,MINUTE,SEC,COUNTS,N)
      S=0.
      V=0.
      DO 2 I=1,N
      F=2.**(FLOAT(SEC(I)+60*MINUTE(I))/THALF)
      R(I)=BINFAC*F*COUNTS(I)/(WET(I)-DRY(I))
      S=S+R(I)
    2 V=V+R(I)**2
      S=S/FLOAT(N)
      V=V-FLOAT(N)*S**2
      V=V/FLOAT(N-1)
      TYPE 113,S,SQRT(V),SQRT(V)/S
  113 FORMAT(' mean cts/(g*sec)',
     &F10.0,'  s.d.',F10.0,,'  s.d./mean',F10.4)
      RATE=S
      WRITE(6,104)
  104 FORMAT(' LINE     DRY   WET  MIN  SEC  COUNTS cts/(g*sec)')
      DO 5 I=1,N
    5 WRITE(6,103)I,DRY(I),WET(I),MINUTE(I),SEC(I),COUNTS(I),R(I)
  103 FORMAT(I5,F8.3,F6.3,2I5,I8,F12.0)
      WRITE(6,113)S,SQRT(V),SQRT(V)/S
      RETURN
      END
      SUBROUTINE BETAGET(NMAX,DRY,WET,MINUTE,SEC,COUNTS,N)
      REAL*4    DRY(NMAX),WET(NMAX)
      INTEGER*4 MINUTE(NMAX),SEC(NMAX),COUNTS(NMAX)
      CHARACTER*20 FILSPC
      CHARACTER*80 STRING
      I=0
      N=0
      TYPE "(' ENTER WELL COUNTER DATA FILE NAME')"
      FILSPC=' '
      ACCEPT "(A20)",FILSPC
C      OPEN(0,FILE=FILSPC,STATUS='OLD',SHARE='SRO',ERR=31)
      OPEN (0, FILE=FILSPC, STATUS='OLD', ERR=31)
    6 I=I+1
      READ(0,*,END=7,ERR=7)
     &DRY(I),WET(I),MINUTE(I),SEC(I),COUNTS(I)
      N=I
      IF(N.LT.NMAX)GOTO 6
    7 CLOSE(0)
   36 TYPE "(' LINE     DRY   WET  MIN  SEC  COUNTS')"
      DO 33 I=1,N
   33 TYPE 103,I,DRY(I),WET(I),MINUTE(I),SEC(I),COUNTS(I)
      TYPE "(' EDIT A DATA LINE OR')"
      TYPE "(' DELETE A LINE BY ENTERING THE LINE NUMBER')"
      TYPE "(' ADD DATA BY ENTERING LINE ',I2)",N+1
      TYPE "(/' ENTER line,dry,wet,minutes,seconds,counts')"
      STRING=' '
      ACCEPT "(A80)",STRING
      L=INANYR(STRING,' ')
      IF(L.LE.0)GOTO 35
C      DECODE (STRING(1:L), "(I)") I
      DECODE (4, "(I)", STRING(1:L)) I
      IF(I.GT.N+1)GOTO 36
      IF(I.EQ.N+1)N=I
C      DECODE(STRING(1:L),103)
      DECODE (37, 103, STRING(1:L))
     &I,DRY(I),WET(I),MINUTE(I),SEC(I),COUNTS(I)
  103 FORMAT (I5, F8.3, F6.3, 2I5, I8)
      IF(COUNTS(I).EQ.0)THEN
      DO 37 J=I+1,N
      DRY(J-1)=DRY(J)
      WET(J-1)=WET(J)
      MINUTE(J-1)=MINUTE(J)
      SEC(J-1)=SEC(J)
   37 COUNTS(J-1)=COUNTS(J)
      N=N-1
      ENDIF
      GOTO 36
   31 TYPE "(' FILE NOT FOUND')"
      GOTO 36
   35 TYPE "(' ENTER WELL COUNTER DATA FILE NAME TO BE SAVED')"
      FILSPC=' '
      ACCEPT "(A20)",FILSPC
      L=INANYR(FILSPC,' ')
      IF(L.LE.0)GOTO 34
      OPEN(0,FILE=FILSPC,STATUS='OLD',ERR=38)
      CLOSE(0,STATUS='DELETE')
   38 OPEN(0,FILE=FILSPC,STATUS='NEW',ERR=39)
      DO 32 I=1,N
   32 WRITE(0,102)DRY(I),WET(I),MINUTE(I),SEC(I),COUNTS(I)
  102 FORMAT(2F7.3,2I5,I8)
      CLOSE(0,STATUS='KEEP')
      TYPE "(' SAVE WELL COUNTER DATA FILE ', A20)", FILSPC
      GOTO 34
   39 TYPE "(' ERROR OPENING', A20)", FILSPC
   34 RETURN
      END
@
