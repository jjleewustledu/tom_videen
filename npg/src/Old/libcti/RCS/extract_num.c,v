head	1.6;
access;
symbols;
locks; strict;
comment	@ * @;


1.6
date	99.12.13.22.02.19;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	96.09.25.16.28.32;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	95.10.30.16.54.44;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	94.03.03.17.25.56;	author ty7777;	state Exp;
branches;
next	1.2;

1.2
date	93.09.13.19.40.24;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	93.03.04.19.41.53;	author ty7777;	state Exp;
branches;
next	;


desc
@Working version of extract_num.c, modified by Tom Yang to get rid of sunview related libraries.
@


1.6
log
@partially cleaned up with lint
@
text
@/*$Id: extract_num.c,v 1.5 1996/09/25 16:28:32 tom Exp tom $*/
/*$Log: extract_num.c,v $
 * Revision 1.5  1996/09/25  16:28:32  tom
 * build in Solaris 2
 *
 * Revision 1.4  1995/10/30  16:54:44  tom
 * changed petutil/matrix.h to matrix.h
 *
 * Revision 1.3  1994/03/03  17:25:56  ty7777
 * Change from id to header.
 **/

/*     @@(#)extract_num.c	2.1   2/24/92     */

#ifndef lint
static char     sccsid[] = "@@(#)extract_num.c	2.1   2/24/92  Copyright 1989-1991 CTI PET Systems, Inc.";
static char     rcsid[] = "$Header: /home/npggw/tom/src/libcti/RCS/extract_num.c,v 1.5 1996/09/25 16:28:32 tom Exp tom $";
#endif

#include <stdlib.h>
#include <string.h>
#include <ctype.h>

/*_________________________________________________________________________
	description	extract_num() takes the string pointed to
			by p and extracts the first integer found in
			the string, sets add to the number of digits
	                in the integer and returns thevalue of the
			integer found.
			
	input		p is a pointer to a string that begins with a
			decimal digit.
	
	output		On exit, extract_num() returns the value of the
			leading integer in the string pointed to by p and
		        sets add to point to the number of the digits in
			the integer.
	
	called by	parse_matnum()
	
	written by	Will Tribbey	3/5/91

	modification history :

	WHO		DATE		CHANGE
_________________________________________________________________________*/

int             extract_num (p, add)
	char           *p;

	int            *add;
{
	int             i = 0;

	char           *q, numbuff[16];

	/*
	 * Initialize q and numbuff
	 */
	q = p;
	strcpy (numbuff, "");

	/*
	 * Find the digits of the leading integer
	 */
	while (isdigit (*q)) {
		numbuff[i] = *q;
		i++;
		q++;
	}
	numbuff[i] = '\0';

	/*
	 * Set add to the number of digits found and return the integer
	 */
	*add = i;
	return (atoi (numbuff));
}
@


1.5
log
@build in Solaris 2
@
text
@d1 1
a1 1
/*$Id: extract_num.c,v 1.4 1995/10/30 16:54:44 tom Exp tom $*/
d3 3
d17 1
a17 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libcti/RCS/extract_num.c,v 1.4 1995/10/30 16:54:44 tom Exp tom $";
d20 3
a22 1
#include <matrix.h>
@


1.4
log
@changed petutil/matrix.h to matrix.h
@
text
@d1 1
a1 1
/*$Id: extract_num.c,v 1.3 1994/03/03 17:25:56 ty7777 Exp tom $*/
d3 3
d13 2
a14 1
static char sccsid[]="@@(#)extract_num.c	2.1   2/24/92  Copyright 1989-1991 CTI PET Systems, Inc.";
a15 1
static char rcsid [] = "$Header: /home/npggw/tom/src/libcti/RCS/extract_num.c,v 1.3 1994/03/03 17:25:56 ty7777 Exp tom $";
d20 1
a20 1
	description	extract_num() takes the string pointed to 
d33 1
a33 1
	  
d43 4
a46 3
int extract_num (p, add) 
	char	*p;
	int	*add;
d48 1
a48 2
	int	i = 0;
	char	*q, numbuff [16];
d50 4
a53 2
	/*   
	 * Initialize q and numbuff   
d55 1
a55 1
	q	= p;
d58 2
a59 2
	/*   
	 * Find the digits of the leading integer   
d61 2
a62 3
	while (isdigit (*q)) 
	{
		numbuff [i]	= *q;
d66 1
a66 1
	numbuff[i] = '\0' ;
d68 2
a69 2
	/*   
	 * Set add to the number of digits found and return the integer   
d71 1
a71 1
	*add	= i;
@


1.3
log
@Change from id to header.
@
text
@d1 5
a5 2
/*$Id$*/
/*$Log$*/
d12 1
a12 1
static char rcsid [] = "$Header$";
d14 1
a14 1
#include <petutil/matrix.h>
@


1.2
log
@Introduce rcsid.
@
text
@d1 3
d9 1
a9 1
static char rcsid [] = "$Id$";
@


1.1
log
@Initial revision
@
text
@d6 1
d8 1
a8 1
#include "petutil/matrix.h"
@
