head	1.3;
access;
symbols;
locks; strict;
comment	@c @;


1.3
date	93.04.29.22.37.28;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	93.02.26.22.09.51;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	92.11.03.18.59.32;	author tom;	state Exp;
branches;
next	;


desc
@Original version for Unix.
This version gives nearly identical output to HD6MEAN on Medusa
when compared to the original Concurrent version (which replicated
SARP).  Differences in single pixel values are +/- 1, which is
attributed to differences in rounding.
@


1.3
log
@Revised to handle 31-slice input images and sxr NTYPE = 20
@
text
@c $Log: hd6proc.f,v $
c Revision 1.2  1993/02/26  22:09:51  tom
c *** empty log message ***
c
c Revision 1.1  1992/11/03  18:59:32  tom
c Initial revision
c
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  Subroutine:   HD6PROC.FTN
C
C  Author:       Tom O. Videen
C  Date:         05-Aug-91
C  Written For:  HD6MEAN
C
C  Intent:
C     This routine processes an image for CBF, CBV, or counts and
C     scales the result.
C
C  History:
C     Modified version of D2PROCESS.FTN.
C     Modified 19-Feb-93 TOV to fix typo in 'CBF'.
C
C  Note:  PROCESS should be checked for type of processing before
C     this routine is called.
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE HD6PROC(PET,NZ,SCALER,PROCESS,FNAME,HDRVOL,OUT,ERR)
C
      PARAMETER (nxi = 128) ! x-dimension of PET-array
      PARAMETER (nyi = 128) ! y-dimension of PET-array
      PARAMETER (nzi =  31) ! z-dimension of PET-array! no. of slices
C
      INTEGER*2     PET(nxi,nyi,nzi)! PET input image
      INTEGER*2     HDR(128)        ! HDR record
      INTEGER*2     OUT(128)        ! HDR record to pass back
      INTEGER*2     NTYPE           ! type of HDR file
C
			INTEGER*4     NZ							! number of slices in PET
      INTEGER*4     HDRLU           ! lu for reading HDR
      INTEGER*4     PB(6)           ! parameter block
      INTEGER*4     IOREAD          ! read binary
C
      REAL*4        AFLOW,BFLOW     ! factors for computing CBF
      REAL*4        BVFACTOR        ! factor for CBV
      REAL*4        SCALER          ! normalization factor
      REAL*4        SX              ! combined scaler
C
      CHARACTER*4   HDRVOL          ! HDR volume name
      CHARACTER*10  PROCESS         ! type of processing
      CHARACTER*20  FNAME           ! image filename
      CHARACTER*20  HDRNAME         ! HDR filename
      CHARACTER*256 RCSHEADER
C
      LOGICAL*1     ERR             ! error
C
      EQUIVALENCE (HDR(37),NTYPE)
      EQUIVALENCE (HDR(57),AFLOW)
      EQUIVALENCE (HDR(59),BFLOW)
      EQUIVALENCE (HDR(61),BVFACTOR)
C
      DATA HDRLU  /7/
      DATA IOREAD /88/
C
			RCSHEADER = "$Header: /usr/local/src/hd6mean/RCS/hd6proc.f,v 1.2 1993/02/26 22:09:51 tom Exp tom $"
      PB(6) = 0
      ERR = .FALSE.
C
C  Counts
C
      IF (PROCESS.EQ.'NONE      '.OR.PROCESS.EQ.'          ') THEN
        DO 130 K=1,NZ
          DO 120 J=1,nyi
            DO 110 I=1,nxi
              PET(I,J,K) = INT(NINT(SCALER*FLOAT(PET(I,J,K))))
110         CONTINUE
120       CONTINUE
130     CONTINUE
        RETURN
      END IF
C
C  Read HDR file
C
      L1 = INANYR(HDRVOL,' ')
      L2 = IANYL(FNAME,':') + 1
      L3 = IANYL(FNAME,'.') - 1
      IF (L3.LE.0) L3 = INANYR(FNAME,' ')
      HDRNAME = ' '
      HDRNAME = HDRVOL(1:L1)//':'//FNAME(L2:L3)//'.HDR'
      OPEN(HDRLU,FILE=HDRNAME,STATUS='OLD',ERR=500)
      CALL SYSIO(PB,IOREAD,HDRLU,HDR,256,0)
C
C  Cerebral Blood Volume
C
      IF (PROCESS.EQ.'CBV       '.AND.NTYPE.EQ.3) THEN
        SX = SCALER*100.*BVFACTOR
        DO 230 K=1,NZ
          DO 220 J=1,nyi
            DO 210 I=1,nxi
              PET(I,J,K) = INT(NINT(SX*FLOAT(PET(I,J,K))))
210        CONTINUE
220       CONTINUE
230     CONTINUE
C
C  Cerebral Blood Flow
C
      ELSE IF ((PROCESS.EQ.'CBF      ') .AND.
     &         (NTYPE.EQ.2 .OR. NTYPE.EQ.4)) THEN
        SX = SCALER*50.
        DO 330 K=1,NZ
          DO 320 J=1,nyi
            DO 310 I=1,nxi
              X = FLOAT(PET(I,J,K))
              PET(I,J,K) = INT(NINT(SX*X*(AFLOW*X + BFLOW)))
310        CONTINUE
320       CONTINUE
330     CONTINUE
C
C  Other
C
      ELSE
500     ERR = .TRUE.
        RETURN
      END IF
C
      DO 600 I=1,128
        OUT(I) = HDR(I)
600   CONTINUE
C
      RETURN
      END
@


1.2
log
@*** empty log message ***
@
text
@d2 3
d29 1
a29 1
      SUBROUTINE HD6PROC(PET,SCALER,PROCESS,FNAME,HDRVOL,OUT,ERR)
d33 1
a33 1
      PARAMETER (nzi =   7) ! z-dimension of PET-array! no. of slices
d40 1
d66 1
a66 1
			RCSHEADER = "$Header: /home/petsun2/tom/src/hd6mean/src/RCS/hd6proc.f,v 1.1 1992/11/03 18:59:32 tom Exp tom $"
d73 1
a73 1
        DO 130 K=1,nzi
d98 1
a98 1
        DO 230 K=1,nzi
d111 1
a111 1
        DO 330 K=1,nzi
@


1.1
log
@Initial revision
@
text
@d1 4
a4 1
c $Log$
d19 1
d62 1
a62 1
			RCSHEADER = "$Header$"
d104 1
a104 1
      ELSE IF ((PROCESS.EQ.'CBV      ') .AND.
@
