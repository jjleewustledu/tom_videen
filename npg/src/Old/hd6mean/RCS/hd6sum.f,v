head	1.3;
access;
symbols;
locks; strict;
comment	@c @;


1.3
date	93.03.04.15.20.42;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	93.02.26.22.11.19;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	92.11.03.18.59.32;	author tom;	state Exp;
branches;
next	;


desc
@Original version for Unix.
This version gives nearly identical output to HD6MEAN on Medusa
when compared to the original Concurrent version (which replicated
SARP).  Differences in single pixel values are +/- 1, which is
attributed to differences in rounding.
@


1.3
log
@unchanged
@
text
@c $Log: hd6sum.f,v $
c Revision 1.2  1993/02/26  22:11:19  tom
c No change
c
c Revision 1.1  1992/11/03  18:59:32  tom
c Initial revision
c
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  Subroutine:   HD6SUM.FTN
C
C  Author:       Tom O. Videen
C  Date:         12-Jun-91
C  Written For:  HD6MEAN
C
C  History:
C     Modified 05-Aug-91 by TOV to set PB(6) = 0.
C
C  Intent:
C     Update a disk file storing the sum of the ATL images.
C
C  Uses Subroutines:
C     SYSIO
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE HD6SUM(SUM,FIRST)

      PARAMETER (nxa = 100)   ! x-dimension of atlas-array
      PARAMETER (nya = 100)   ! y-dimension of atlas-array
      PARAMETER (nza =  49)   ! z-dimension of atlas-array! no. of slices
C
      INTEGER*4  SUM          ! lu for disk file
      LOGICAL*1  FIRST        ! if true, initialize TOT
C
      INTEGER*4  PB(6)        ! parameter block
      INTEGER*4  IOREAD       ! read binary, random
      INTEGER*4  IOWRITE      ! write binary, random
      INTEGER*4  NBYTES       ! image bytes
      INTEGER*4  BLOCK        ! block size per slice (records)
      INTEGER*4  REC          ! record location
      INTEGER*4  I,J,K        ! indices to arrays
      INTEGER*4  TOT(nxa,nya) ! sum of atlas images
C
      INTEGER*2  ATL(nxa,nya,nza)! atlas output image (HD6 brain)
C
			CHARACTER*256 RCSHEADER
C
      COMMON /IMAGES/ ATL
C
      DATA IOREAD   /92/      ! random I/O wait read binary
      DATA IOWRITE  /60/      ! random I/O wait write binary
      DATA NBYTES   /40000/   ! 100 x 100 x 4
      DATA BLOCK    /157/     ! NBYTES/256
C
			RCSHEADER = "$Header: /home/petsun2/tom/src/hd6mean/src/RCS/hd6sum.f,v 1.2 1993/02/26 22:11:19 tom Exp tom $"
      PB(6) = 0
C
C  Initial component images
C
      IF (FIRST) THEN
        DO 300 K=1,nza
          REC = (K-1)*BLOCK
          DO 200 J=1,nya
            DO 100 I=1,nxa
              TOT(I,J) = ATL(I,J,K)
100         CONTINUE
200       CONTINUE
          CALL SYSIO (PB,IOWRITE,SUM,TOT,NBYTES,REC)
300     CONTINUE
C
C  Additional component images
C
      ELSE
        DO 600 K=1,nza
          REC = (K-1)*BLOCK
          CALL SYSIO (PB,IOREAD,SUM,TOT,NBYTES,REC)
          DO 500 J=1,nya
            DO 400 I=1,nxa
              TOT(I,J) = TOT(I,J) + ATL(I,J,K)
400         CONTINUE
500       CONTINUE
          CALL SYSIO (PB,IOWRITE,SUM,TOT,NBYTES,REC)
600     CONTINUE
      END IF
C
      RETURN
      END
@


1.2
log
@No change
@
text
@d2 3
d56 1
a56 1
			RCSHEADER = "$Header: /home/petsun2/tom/src/hd6mean/src/RCS/hd6sum.f,v 1.1 1992/11/03 18:59:32 tom Exp $"
@


1.1
log
@Initial revision
@
text
@d1 4
a4 1
c $Log$
d53 1
a53 1
			RCSHEADER = "$Header$"
@
