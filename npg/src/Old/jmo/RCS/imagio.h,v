head	1.1;
access;
symbols;
locks; strict;
comment	@ * @;


1.1
date	2000.02.14.14.41.03;	author tom;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@#define IMAGIO_INCLUDED
#define MATRIX_REV6 1
#define MATRIX_REV7 2
#define INTERFILE   3
#define PETT6   4

#define LEN_MAINHEADER 256
#define LEN_SUBHEADER  256

#ifndef ERROR
#define ERROR   -1
#define OK 0
#endif

/* Number types. */
#define BYTE_DATA   1
#define SHORT_DATA  2
#define FLOAT_DATA  3

typedef struct pet_mhdr {
	char           *data_file;
	int             file_format;		 /* File format, MATRIX_REV6, MATRIX_REV7 eg. */
	int             number_format;		 /* Data type */
	int             version;		 /* Matrix software version number. */
	int             filtyp;
	int             nplane;			 /* Number of slices per frame. 	 */
	int             nframe;			 /* Number of frames collected. 	 */
	int             ngate;			 /* Number of frames collected. 	 */
	int             nbed;			 /* Number of bed positions. 	 */
	int             scanner_type;
	char            date_time[20];
	int             start_time;
	char            patnum[16];
	float           bed_elevation;
	float           init_bed_pos;
	float           bed_off[16];
	float           slcthk;
	float           calibration_factor;
	char           *sw_revision;
	char           *gen_data;
	void           *whole_header;
}               MainHeader;

typedef struct subheader {
	int             number_format;		 /* Data type */
	int             file_format;
	int             ndim;
	int             dim1;			 /* X dimension */
	int             dim2;			 /* Y dimension */
	int             dim3;			 /* Z dimension */
	int             ring_diff;
	int             span;
	int             total;
	int             delayeds;
	int             multiples;
	int             trues;
	int             count_rate;
	float           scale_factor;
	float           calibration_factor;
	int             min;
	int             max;
	float           deadtime_corr;
	float           sample_size_1;
	float           sample_size_2;
	float           sample_size_3;
	int             start_time;
	int             duration;
	char           *comment;		 /* User defined comment. */
	int             storage_order;
	void           *whole_header;
}               SubHeader;
@
