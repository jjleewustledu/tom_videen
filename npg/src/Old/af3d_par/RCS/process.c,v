head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	95.05.08.20.16.50;	author ty7777;	state Exp;
branches;
next	1.2;

1.2
date	95.04.14.15.56.20;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	95.03.29.20.16.32;	author ty7777;	state Exp;
branches;
next	;


desc
@Initial checking in, working version with debugging messages.
@


1.3
log
@Read data as real array.
@
text
@/*$Id: process.c,v 1.2 1995/04/14 15:56:20 ty7777 Exp ty7777 $*/
/*$Log: process.c,v $
 * Revision 1.2  1995/04/14  15:56:20  ty7777
 * Final release version.
 *
 * Revision 1.1  1995/03/29  20:16:32  ty7777
 * Initial revision
 **/

/*___________________________________________________________________________
File:		process.c

Function:	void process (HEADER_DATA *header_data, int width, int height, 
			int num_slices, float *image3d)

Arguments:	header_data,	header file data.
		width,		width of slices.
		height,		height of slices.
		num_slices,	number of slices for image.
		image3d,	3D image data.

Description:	This function convert the Pett counts to blood flow, blood 
		volume by using the information stored in header file.

Author:		Tom Yang

History:	Created by Tom Yang on 03/29/95. 
___________________________________________________________________________*/

#include "af3d_par.h"

#define	BLOOD_FLOW_WATER	2
#define	BLOOD_VOLUME		3
#define	BLOOD_FLOW_BUTANOL	4

static char rcsid [] = "$Header: /data/petsun4/src/af3d_par/RCS/process.c,v 1.2 1995/04/14 15:56:20 ty7777 Exp ty7777 $";

PUBLIC void process (header_file, width, height, num_slices, image3d)
	char	*header_file;
	int	width;
	int	height;
	int	num_slices;
	float	*image3d;
{
	FILE		*hdrfp;
	HEADER_DATA	*header_data;
	float		aflow;
	float		bflow;
	float		bvfactor;
	float		pixel;
	float		scaler;
	float		sx;
	long		i;
	long		dim3d;
	short		ntype;

	/*
	 * Read header data.
	 */
	if ((hdrfp = fopen (header_file, "rb")) == (FILE *) NULL) 
	{
		printf (" Error: cannot open header file %s.\n", header_file);
		return;
	}

	header_data	= (HEADER_DATA *) malloc (sizeof (HEADER_DATA));

	fread (header_data, sizeof (HEADER_DATA), 1, hdrfp); 

	fclose (hdrfp);

	ntype		= header_data->ntype;
	aflow		= pe2ieee (header_data->aflow1);
	bflow		= pe2ieee (header_data->bflow1);
	bvfactor	= pe2ieee (header_data->bvfactor1);
	dim3d		= ((long) width) * height * num_slices;

	free (header_data);

	switch (ntype)
	{
		case	BLOOD_FLOW_WATER:
		case	BLOOD_FLOW_BUTANOL:
			/* 
			 * Cerebral blood flow, Unit in ml/min/100g.
			 */
			scaler	= 0.02;
			sx	= 1.0 / scaler;

			for (i = 0; i < dim3d; i++)
			{
				pixel		= image3d [i];
				image3d [i]	= (pixel * (aflow * pixel + bflow)) * sx; 
			}

			break;
		case	BLOOD_VOLUME:
			/* 
			 * Cerebral blood volume, Unit in ml/100g.
			 */
			scaler	= 0.01;
			sx	= 1.0 / scaler;

			for (i = 0; i < dim3d; i++)
			{
				pixel		= image3d [i];
				image3d [i]	= (bvfactor * pixel) * sx; 
			}

			break;
		default:
			break;
	}
}

@


1.2
log
@Final release version.
@
text
@d1 1
a1 1
/*$Id: process.c,v 1.1 1995/03/29 20:16:32 ty7777 Exp ty7777 $*/
d3 3
d14 1
a14 1
			int num_slices, short *image3d)
d36 1
a36 1
static char rcsid [] = "$Header: /data/petsun4/src/af3d_par/RCS/process.c,v 1.1 1995/03/29 20:16:32 ty7777 Exp ty7777 $";
d43 1
a43 1
	short	*image3d;
d50 1
a52 1
	int		pixel;
d93 1
a93 1
				image3d [i]	= ROUND ((pixel * (aflow * pixel + bflow)) * sx); 
d107 1
a107 1
				image3d [i]	= ROUND ((bvfactor * pixel) * sx); 
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
/*$Id$*/
/*$Log$*/
d8 1
a8 1
  File:		process.c
d10 1
a10 1
  Function:	void process (HEADER_DATA *header_data, int width, int height, 
d13 1
a13 1
  Arguments:	header_data,	header file data.
d19 1
a19 1
  Description:	This function convert the Pett counts to blood flow, blood 
d22 3
a24 1
  History:	 Created by Tom Yang on 09/29/92. 
d33 1
a33 1
static char rcsid [] = "$Header$";
@
