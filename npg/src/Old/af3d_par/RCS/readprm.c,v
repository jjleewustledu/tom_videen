head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	95.05.09.16.22.37;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	95.04.25.21.51.45;	author ty7777;	state Exp;
branches;
next	;


desc
@Initial checking in, working version.
@


1.2
log
@Added checking for maksfile.
@
text
@/*$Id: readprm.c,v 1.1 1995/04/25 21:51:45 ty7777 Exp ty7777 $*/
/*$Log: readprm.c,v $
 * Revision 1.1  1995/04/25  21:51:45  ty7777
 * Initial revision
 **/

/*___________________________________________________________________________
  File:		readprm.c

  Function:	int readprm (char *parameter_file, PRM_DATA *parameter_data)

  Arguments:	parameter_file,	file containing image parameters, passed in.
		parameter_data,	a structure defined in af3d_par.h, returned.

  Description:	This function reads the af3d_par parameter file and puts the information
		it contains in a structure.

  Return:	SUCCEED for successful; FAIL for error.

  Reminder:	Every real number should contain at least a decimal point. 

  Creator:	Tom Yang
  History:	Created by Tom Yang on 04/24/95. 
___________________________________________________________________________*/

#include <stdio.h>
#include "af3d_par.h"

#define DEFAULT_FILTER_RAD	0.0
#define DEFAULT_ADJPEAK_RAD	6.0
#define DEFAULT_CENTERMASS_RAD	3.0
#define DEFAULT_MAG_RAD		3.0
#define DEFAULT_SPHERE_CENTER	0
#define DEFAULT_CUTOFF		0.0
#define DEFAULT_MASK		"/usr/local/lib/af3d_par/pett6_n99.t88.msk"

static char rcsid [] = "$Header: /data/petsun4/src/af3d_par/RCS/readprm.c,v 1.1 1995/04/25 21:51:45 ty7777 Exp ty7777 $";

PRIVATE void error_message ();

PRIVATE void error_message (keyword, parameter, file)
	char	*keyword;
	char	*parameter;
	char	*file;
{
	fprintf (stderr, 
	"Error: wrong parameter (%s) for keyword (%s) in parameter file (%s).\n",
	parameter, keyword, file);
}

PUBLIC int readprm (parameter_file, parameter_data) 
	char		*parameter_file;
	PRM_DATA	*parameter_data;
{
	FILE	*fp;
	FILE	*maskfp;
	char	label [MAXLINE];
	char	line [MAXLINE];
	char	original_parameter [MAXLINE];
	char	parameter [MAXLINE];
	float	fbuffer;
	int	ibuffer;

	fp	= fopen (parameter_file, "r");
	if (fp == (FILE *) NULL)
	{
		fprintf (stderr, "Error in opening parameter file %s\n", parameter_file);
		return FAIL;
	}

	/*
	 * Initialization
	 */
	memset (parameter_data, 0, sizeof (PRM_DATA)); 

	parameter_data->af3d_filter_rad		= DEFAULT_FILTER_RAD;
	parameter_data->af3d_adjpeak_rad	= DEFAULT_ADJPEAK_RAD;
	parameter_data->af3d_centermass_rad	= DEFAULT_CENTERMASS_RAD;
	parameter_data->af3d_mag_rad		= DEFAULT_MAG_RAD;
	parameter_data->af3d_sphere_center	= DEFAULT_SPHERE_CENTER;
	parameter_data->af3d_cutoff		= DEFAULT_CUTOFF;
	strcpy (parameter_data->af3d_mask, DEFAULT_MASK);

	while (fgets (line, MAXLINE, fp) != NULL)
	{
		if (sscanf (line, "%s %s", label, parameter) == 2)
		{
			if (strncmp (label, "#", 1) == 0)
				continue;

			strcpy (original_parameter, parameter);
			Lowered (label, strlen (label));
			Lowered (parameter, strlen (parameter));

			if (strncmp (label, "af3d_filter_rad:", 16) == 0)
			{
				fbuffer	= atof (parameter);
				if (fbuffer >= 0.0)
					parameter_data->af3d_filter_rad	= fbuffer;

				continue;
			}

			if (strncmp (label, "af3d_adjpeak_rad:", 17) == 0)
			{
				fbuffer	= atof (parameter);
				if (fbuffer >= 0.0)
					parameter_data->af3d_adjpeak_rad	= fbuffer;

				continue;
			}

			if (strncmp (label, "af3d_centermass_rad:", 20) == 0)
			{
				fbuffer	= atof (parameter);
				if (fbuffer >= 0.0)
					parameter_data->af3d_centermass_rad	= fbuffer;

				continue;
			}

			if (strncmp (label, "af3d_mag_rad:", 13) == 0)
			{
				fbuffer	= atof (parameter);
				if (fbuffer >= 0.0)
					parameter_data->af3d_mag_rad	= fbuffer;

				continue;
			}

			if (strncmp (label, "af3d_sphere_center:", 19) == 0)
			{
				if (DetermineType (parameter) == DATA_TYPE_INTEGER)
					parameter_data->af3d_sphere_center	= atoi (parameter);
				else
				{
					fprintf (stderr, 
					"Error: wrong value for parameter af3d_sphere_center.\n");
					return FAIL;
				}

				continue;
			}

			if (strncmp (label, "af3d_mask:", 10) == 0 && strlen (original_parameter) > 0)
			{
				strcpy (parameter_data->af3d_mask, original_parameter);

				maskfp	= fopen (parameter_data->af3d_mask, "r");
				if (maskfp == (FILE *) NULL)
				{
					fprintf (stderr, 
						"Error: the mask file %s does not exist\n", 
						parameter_data->af3d_mask);
					return FAIL;
				}
				fclose (maskfp);

				continue;
			}
		}
	}

	fclose (fp);

	return SUCCEED;
}
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
/*$Id$*/
/*$Log$*/
d37 1
a37 1
static char rcsid [] = "$Header$";
d56 1
d148 10
@
