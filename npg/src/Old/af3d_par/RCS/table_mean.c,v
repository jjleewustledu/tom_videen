head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	95.05.08.20.17.10;	author ty7777;	state Exp;
branches;
next	1.2;

1.2
date	95.04.14.16.09.36;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	95.04.11.20.00.17;	author ty7777;	state Exp;
branches;
next	;


desc
@sphere_center = 0 means centerd on pixel.
@


1.3
log
@Read data as real array.
@
text
@/*$Id: table_mean.c,v 1.2 1995/04/14 16:09:36 ty7777 Exp ty7777 $*/
/*$Log: table_mean.c,v $
 * Revision 1.2  1995/04/14  16:09:36  ty7777
 * Final release.
 *
 * Revision 1.1  1995/04/11  20:00:17  ty7777
 * Initial revision
 **/

/*___________________________________________________________________________
File:		table_mean.c

Function:	void table_mean (int x0, int y0, int z0, POINT3D *region_location, 
		int num_locations, float input_image [][][], int width, int height, 
		int num_slices, int sign, float *mean) 

Arguments:	x0,			x coordinate for the center of sphere.	
  		y0,			y coordinate for the center of sphere.	
  		z0,			z coordinate for the center of sphere.	
		radius,			radius of the sphere.
		region_location,	coordinates of points in sphere from table.	
		num_locations,		number of points in sphere from table.
		input_image,		3D input image array.	
		width,			width of the input image.
		height,			height of the input image.
		num_slices,		number of slices of the input image.
		sign,			1: positive peaks; -1: negative peaks.
		mean,			mean value fo the sphere, returned.

Description:	This function compute the average of a sphere by using a predefined table.

Authors:	Tom Yang, Gordon Shulman, April 1995.

History:	Created by Tom Yang and Gordon Shulman on 04/11/95. 
___________________________________________________________________________*/

#include "af3d_par.h"

static char rcsid [] = "$Header: /data/petsun4/src/af3d_par/RCS/table_mean.c,v 1.2 1995/04/14 16:09:36 ty7777 Exp ty7777 $";

PUBLIC void table_mean (x0, y0, z0, region_location, num_locations, input_image, width, 
	height, num_slices, sign, mean)
	int		x0;
	int		y0;
	int		z0;
	POINT3D		*region_location;
	int		num_locations;
	float		input_image [][ENCODED_SLICE_HEIGHT][ENCODED_SLICE_WIDTH];
	int		width;
	int		height;
	int		num_slices;
	int		sign;
	float		*mean;
{
	int	actual_num_locations;
	int	i;
	int	x;
	int	y;
	int	z;
	float	sum;

	sum			= 0.0;
	actual_num_locations	= 0;

	for (i = 0; i < num_locations; i++)
	{
		x	= region_location [i].x + x0;
		y	= region_location [i].y + y0;
		z	= region_location [i].z + z0;

		if (z >= 0 && z < num_slices 
		&& y >= 0 && y < height 
		&& x >= 0 && x < width) 
		{
			sum	+= input_image [z][y][x]; 
			actual_num_locations++;
		}
	}

	if (actual_num_locations != 0)
		*mean	= (sum * sign) / actual_num_locations;
	else
		*mean	= 0.0;
}
@


1.2
log
@Final release.
@
text
@d1 1
a1 1
/*$Id: table_mean.c,v 1.1 1995/04/11 20:00:17 ty7777 Exp ty7777 $*/
d3 3
d14 1
a14 1
		int num_locations, short input_image [][][], int width, int height, 
d23 6
a28 6
		input_image,	3D input image array.	
		width,		width of the input image.
		height,		height of the input image.
		num_slices,	number of slices of the input image.
		sign,		1: positive peaks; -1: negative peaks.
		mean,		mean value fo the sphere, returned.
d39 1
a39 1
static char rcsid [] = "$Header: /data/petsun4/src/af3d_par/RCS/table_mean.c,v 1.1 1995/04/11 20:00:17 ty7777 Exp ty7777 $";
d48 1
a48 1
	short		input_image [][ENCODED_SLICE_HEIGHT][ENCODED_SLICE_WIDTH];
d75 1
a75 1
			sum	+= (float) (input_image [z][y][x]); 
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
/*$Id$*/
/*$Log$*/
d8 1
a8 1
  File:		table_mean.c
d10 1
a10 1
  Function:	void table_mean (int x0, int y0, int z0, POINT3D *region_location, 
d14 1
a14 1
  Arguments:	x0,			x coordinate for the center of sphere.	
d27 1
a27 1
  Description:	This function compute the average of a sphere by using a predefined table.
d29 1
a29 1
  Author:	Tom Yang
d31 1
a31 1
  History:	Created by Tom Yang on 04/07/95. 
d36 1
a36 1
static char rcsid [] = "$Header$";
@
