head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	95.05.08.20.17.00;	author ty7777;	state Exp;
branches;
next	1.2;

1.2
date	95.04.14.16.08.01;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	95.04.07.14.46.30;	author ty7777;	state Exp;
branches;
next	;


desc
@Use real radii.
@


1.3
log
@Read data as real array.
@
text
@/*$Id: sphere_mean.c,v 1.2 1995/04/14 16:08:01 ty7777 Exp ty7777 $*/
/*$Log: sphere_mean.c,v $
 * Revision 1.2  1995/04/14  16:08:01  ty7777
 * Final release.
 *
 * Revision 1.1  1995/04/07  14:46:30  ty7777
 * Initial revision
 **/

/*___________________________________________________________________________
File:		sphere_mean.c

Function:	void sphere_mean (float x0, float y0, float z0, float radius,
		float input_image [][][], int width, int height, int num_slices, 
		int sign, float *mean) 

Arguments:	x0,		x coordinate for the center of sphere.	
  		y0,		y coordinate for the center of sphere.	
  		z0,		z coordinate for the center of sphere.	
		radius,		radius of the sphere.
		input_image,	3D input image array.	
		width,		width of the input image.
		height,		height of the input image.
		num_slices,	number of slices of the input image.
		sign,		1: positive peaks; -1: negative peaks.
		mean,		mean value fo the sphere, returned.

Description:	This function compute the average of a sphere.

Author:		Tom Yang, April 1995.

History:	Created by Tom Yang on 04/07/95. 
___________________________________________________________________________*/

#include "af3d_par.h"

static char rcsid [] = "$Header: /data/petsun4/src/af3d_par/RCS/sphere_mean.c,v 1.2 1995/04/14 16:08:01 ty7777 Exp ty7777 $";

PUBLIC void sphere_mean (x0, y0, z0, radius, input_image, width, height, num_slices, sign, mean)
	float	x0;
	float	y0;
	float	z0;
	float	radius;
	float	input_image [][ENCODED_SLICE_HEIGHT][ENCODED_SLICE_WIDTH];
	int	width;
	int	height;
	int	num_slices;
	int	sign;
	float	*mean;
{
	int	actual_num_locations;
	int	i;
	int	j;
	int	k;
	float	d2;
	float	r2;
	float	sum;
	float	x;
	float	y;
	float	z;

	r2	= radius * radius;
	sum	= 0.0;
	actual_num_locations	= 0;

	for (x = x0 - radius; x <= x0 + radius + ERROR_BOUND; x++)
	{
		for (y = y0 - radius; y <= y0 + radius + ERROR_BOUND; y++)
		{
			for (z = z0 - radius; z <= z0 + radius + ERROR_BOUND; z++)
			{
				i	= ROUND (x);
				j	= ROUND (y);
				k	= ROUND (z);
				d2	= (i - x0) * (i - x0) 
					+ (j - y0) * (j - y0) 
					+ (k - z0) * (k - z0); 
				if (k >= 0 && k < num_slices 
				&& j >= 0 && j < ENCODED_SLICE_HEIGHT 
				&& i >= 0 && i < ENCODED_SLICE_WIDTH
				&& d2 <= r2 + ERROR_BOUND)
				{
					sum	+= input_image [k][j][i]; 
					actual_num_locations++;
				}
			}
		}
	}

	if (actual_num_locations > 0)
		*mean	= (sign * sum) / actual_num_locations;
	else
		*mean	= 0.0;
}
@


1.2
log
@Final release.
@
text
@d1 1
a1 1
/*$Id: sphere_mean.c,v 1.1 1995/04/07 14:46:30 ty7777 Exp ty7777 $*/
d3 3
d14 1
a14 1
		short input_image [][][], int width, int height, int num_slices, 
d37 1
a37 1
static char rcsid [] = "$Header: /data/petsun4/src/af3d_par/RCS/sphere_mean.c,v 1.1 1995/04/07 14:46:30 ty7777 Exp ty7777 $";
d44 1
a44 1
	short	input_image [][ENCODED_SLICE_HEIGHT][ENCODED_SLICE_WIDTH];
d83 1
a83 1
					sum	+= (float) (input_image [k][j][i]); 
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
/*$Id$*/
/*$Log$*/
d8 1
a8 1
  File:		sphere_mean.c
d10 1
a10 1
  Function:	void sphere_mean (float x0, float y0, float z0, float radius,
d14 1
a14 1
  Arguments:	x0,		x coordinate for the center of sphere.	
d25 1
a25 1
  Description:	This function compute the average of a sphere.
d27 3
a29 1
  History:	 Created by Tom Yang on 03/31/95. 
d34 1
a34 1
static char rcsid [] = "$Header$";
@
