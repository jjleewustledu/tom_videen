head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	95.05.08.20.17.37;	author ty7777;	state Exp;
branches;
next	1.2;

1.2
date	95.04.14.15.58.24;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	95.04.11.19.58.53;	author ty7777;	state Exp;
branches;
next	;


desc
@sphere_center = 0 means centerd on pixel.
@


1.3
log
@Read data as real array.
@
text
@/*$Id: rcmass.c,v 1.2 1995/04/14 15:58:24 ty7777 Exp ty7777 $*/
/*$Log: rcmass.c,v $
 * Revision 1.2  1995/04/14  15:58:24  ty7777
 * Final release.
 *
 * Revision 1.1  1995/04/11  19:58:53  ty7777
 * Initial revision
 **/

/*___________________________________________________________________________
File:		rcmass.c

Function:	void rcmass (float input_image [75][128][128], short num_slices, 
		POINT3D *list, int list_size, float radius, int sign, 
		FLOAT_POINT3D *center_list).

Arguments:	input_image,		input image array.
		num_slices,		number of slices in image.
		list,			3d list array.
		list_size,		list array size.
		radius,			radius of for the center of mass.
		sign,			sign, 1, positive; -1, negative.
		center_list,		center of mass list.

Description:	This function find the center of mass for each point in the list.

Authors:	Tom Yang, Gordon Shulman, April, 1995

History:	Created by Tom Yang and Gordon Shulman on 04/11/95. 
___________________________________________________________________________*/

#include "af3d_par.h"

static char recid [] = "$Header: /data/petsun4/src/af3d_par/RCS/rcmass.c,v 1.2 1995/04/14 15:58:24 ty7777 Exp ty7777 $";

PUBLIC void rcmass (input_image, num_slices, list, list_size, radius, sign, center_list)
	float		input_image [][ENCODED_SLICE_HEIGHT][ENCODED_SLICE_WIDTH];
	short		num_slices;
	POINT3D		*list;
	int		list_size;
	float		radius;
	int		sign;
	FLOAT_POINT3D	*center_list;
{
	int	i;
	int	j;
	int	k;
	int	l;
	int	m;
	float	d2;
	float	r2;
	float	xsum;
	float	ysum;
	float	zsum;
	float	weight;
	float	x;
	float	x0;
	float	y;
	float	y0;
	float	z;
	float	z0;
	float	pixel_value;
	float	ref_value;

	r2	= radius * radius;
	for (l = 0; l < list_size; l++)
	{
		x0	= list [l].x;
		y0	= list [l].y;
		z0	= list [l].z;

		xsum	= 0.0;
		ysum	= 0.0;
		zsum	= 0.0;
		weight	= 0.0;

		for (x = x0 - radius; x <= x0 + radius + ERROR_BOUND; x++)
		{
			for (y = y0 - radius; y <= y0 + radius + ERROR_BOUND; y++)
			{
				for (z = z0 - radius; z <= z0 + radius + ERROR_BOUND; z++)
				{
					i	= ROUND (x);
					j	= ROUND (y);
					k	= ROUND (z);
					d2	= (i - x0) * (i - x0) 
						+ (j - y0) * (j - y0) 
						+ (k - z0) * (k - z0); 
					if (k >= 0 && k < num_slices 
					&& j >= 0 && j < ENCODED_SLICE_HEIGHT 
					&& i >= 0 && i < ENCODED_SLICE_WIDTH
					&& d2 <= r2 + ERROR_BOUND
					&& (pixel_value = sign * input_image [k][j][i]) > 0)
					{
						ref_value	= pixel_value;
						xsum		+= i * ref_value; 	
						ysum		+= j * ref_value; 	
						zsum		+= k * ref_value; 	
						weight		+= ref_value;
					}
				}
			}
		}

		if (weight != 0.0)
		{
			center_list [l].x	= xsum / weight;
			center_list [l].y	= ysum / weight;
			center_list [l].z	= zsum / weight;
		}
		else 
		{
			center_list [l].x	= (float) x0;
			center_list [l].y	= (float) y0;
			center_list [l].z	= (float) z0;
		}
	}
}
@


1.2
log
@Final release.
@
text
@d1 1
a1 1
/*$Id: rcmass.c,v 1.1 1995/04/11 19:58:53 ty7777 Exp ty7777 $*/
d3 3
d13 1
a13 1
Function:	void rcmass (input_image [75][128][128], short num_slices, 
d34 1
a34 1
static char recid [] = "$Header: /data/petsun4/src/af3d_par/RCS/rcmass.c,v 1.1 1995/04/11 19:58:53 ty7777 Exp ty7777 $";
d37 1
a37 1
	short		input_image [][ENCODED_SLICE_HEIGHT][ENCODED_SLICE_WIDTH];
d62 1
a62 1
	int	pixel_value;
d95 1
a95 1
						ref_value	= (float) pixel_value;
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
/*$Id$*/
/*$Log$*/
d8 1
a8 1
  File:		rcmass.c
d10 1
a10 1
  Function:	void rcmass (input_image [75][128][128], short num_slices, 
d14 1
a14 1
  Arguments:	input_image,		input image array.
d22 1
a22 1
  Description:	This function find the center of mass for each point in the list.
d24 3
a26 1
  History:	Created by Tom Yang on 08/27/92. 
d31 1
a31 1
static char recid [] = "$Header$";
@
