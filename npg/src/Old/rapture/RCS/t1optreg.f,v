head	1.7;
access;
symbols;
locks; strict;
comment	@c @;


1.7
date	97.04.24.16.46.09;	author tom;	state Exp;
branches;
next	1.6;

1.6
date	95.05.24.21.18.33;	author ty7777;	state Exp;
branches;
next	1.5;

1.5
date	94.05.04.20.53.13;	author ty7777;	state Exp;
branches;
next	1.4;

1.4
date	94.05.03.19.12.51;	author ty7777;	state Exp;
branches;
next	1.3;

1.3
date	94.04.22.21.17.14;	author ty7777;	state Exp;
branches;
next	1.2;

1.2
date	93.11.26.22.46.40;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	93.11.17.17.35.06;	author ty7777;	state Exp;
branches;
next	;


desc
@X window version, first release.
@


1.7
log
@eliminate slice number check
@
text
@C$Id: t1optreg.f,v 1.6 1995/05/24 21:18:33 ty7777 Exp tom $
C$Log: t1optreg.f,v $
c Revision 1.6  1995/05/24  21:18:33  ty7777
c Use the user defined ZORIGIN.
c
c Revision 1.5  1994/05/04  20:53:13  ty7777
c Added getimage_type ().
c
c Revision 1.4  1994/05/03  19:12:51  ty7777
c Added processing for getting zorigin.
c
c Revision 1.3  1994/04/22  21:17:14  ty7777
c Process 75-slice images.
c
c Revision 1.2  1993/11/26  22:46:40  ty7777
c Before adding the midlines.
c
c Revision 1.1  1993/11/17  17:35:06  ty7777
c Initial revision
c
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  Subroutine:   T1OPTREG.FTN
C
C  Author:       Tom O. Videen
C  Date:         02-Oct-90
C  Written For:  RAPTURE
C
C  History:
C     Modified 19-Oct-90 fixed bug in display of first point.
C     Modified 27-Nov-90 by TOV:
C        1) use OUTPUT as parameter to T1PAIRED and T1UNPAIR;
C        2) repeat region definition loop to fill odd pockets;
C     Modified 04-Dec-90:
C        1) eliminate initialization of DISPLAY;
C        2) 'proceed' prompt added;
C     Modified 10-Dec-90 to remove output comment when reading mask.
C     Modified 05-Nov-91:
C        1) Option to compute weighted ROIs (WEIGHTVOI);
C     Modified 22-Dec-93 to port to UNIX and X-Windows environment.
C     Modified 22-Apr-94 to process 75-slice images.
C     Modified 03-May-94 to get the zorigin slice.
C     Modified 23-May-95 to use the user defined ZORIGIN.
C     Modified Apr-97 TOV to eliminate 49,75 slice requirement.
C
C  Intent:
C     Determine optimal region size for maximal t.
C
C  Calls:
C     T1DISP1
C     T1NEXT
C     T1PAIRED
C     T1POINT
C     T1SUMSLC
C     T1THRESH
C     T1UNPAIR
C
C  libpetutil.a
C     GETIMG
C
C  libpe.a
C     GETINT
C     GTSTRING
C     RAMRST
C     GETCNW    - requires CALL GETCNW(0) to initiate and CALL GETCNW(1)
C                 before any routine which might write to the terminal.
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE T1OPTREG
C
      INCLUDE 'rapture.inc'
C
      REAL*4     T           ! t-value
C
      INTEGER*4  PSLICE      ! previous slice
      INTEGER*4  NUMSLCS     ! number of slices
      INTEGER*4  NUMPETT     ! PETT number
      INTEGER*4  SLC         ! local for SLICE
      INTEGER*4  NEXTSLC     ! next slice
      INTEGER*4  DPLANE      ! plane to display point in
      INTEGER*4  LASTSIZE    ! last size of region (#pixels)
      INTEGER*4  I,J,N       ! local
C
      INTEGER*2  HDR(128)    ! slice header
C
      INTEGER*4    getimage_type 
      INTEGER*4    fd 
      INTEGER*4    PETTNUM 
      INTEGER*4    getfd 
      INTEGER*2    NUMSLICES	 ! number of slices obtained by calling getiamge_type
      LOGICAL*1    ENCODED
      external     getimage_type !$pragma C (getimage_type)
C
      CHARACTER*1   CH       ! character
      CHARACTER*20  NULL     ! null string
      CHARACTER*80  Q        ! query
      CHARACTER*80  STR      ! string
      CHARACTER*256 RCSHEADER
C
      LOGICAL*1  OUTPUT      ! T--> write user messages
      LOGICAL*1  DISPLAY     ! true--> display while processing
      LOGICAL*1  HDRONLY     ! read header only
      LOGICAL*1  ERROR       ! error reading image
      LOGICAL*1  A           ! answer
C
      RCSHEADER = '$Header: /home/npggw/tom/src/rapture/RCS/t1optreg.f,v 1.6 1995/05/24 21:18:33 ty7777 Exp tom $'
      HDRONLY = .FALSE.
      ERROR   = .FALSE.
      OUTPUT  = .TRUE.
      A       = .TRUE.
      NULL = ' '
      DPLANE = PLANE
C
C  Define region
C
      Q = 'File to determine region'
      STR = SFNAME
      CALL GTSTRING(Q,STR)
      SFNAME = STR(1:20)
C
      Q = 'Weight pixel values by magnitude'
      CALL YESNO(Q,WEIGHTVOI)
C
      Q = 'ZSEED'
      CALL GETINT (Q, ZSEED, 1, 75)
C
      Q = 'XSEED'
      CALL GETINT(Q,XSEED,1,128)
C
      Q = 'YSEED'
      CALL GETINT(Q,YSEED,1,128)
C
      Q = 'Boundary threshold'
      CALL GETINT(Q,THRESH,-32767,32767)
C
      IF (THRESH.GE.0) THEN
        SIGN = 1
      ELSE
        SIGN = -1
      END IF
100   Q = 'Direction of Values (-1 or +1)'
      CALL GETINT(Q,SIGN,-1,1)
      IF (SIGN.EQ.0) GO TO 100
C
      Q = 'Display while processing'
      CALL YESNO(Q,DISPLAY)
      IF (DISPLAY) CALL RAMRST(RMD)
C
      Q = 'Proceed'
      CALL YESNO(Q,A)
      IF (.NOT.A) RETURN
C
C  Clear old region parameters
C
      IF (RPIXELS.GT.0) THEN
        DO 150 SLC=ZMIN,ZMAX
          DO 140 N=1,RN(SLC)
            RWT(N,SLC) = 0.
            DO 130 I=1,2
              RC(I,N,SLC) = 0
130         CONTINUE
140       CONTINUE
          RN(SLC) = 0
150     CONTINUE
      END IF
      RPIXELS = 0
      LASTSIZE = 0
      DO 170 J=1,128
        DO 160 I=1,128
          SETA(I,J) = .FALSE.
160     CONTINUE
170   CONTINUE
C
C  Read mask for this slice
C
      SLICE = ZSEED
      IF (MASKNAME .NE. NULL) THEN
        CALL GETIMG (SETM, HDR, MASKNAME, SLICE, NUMSLCS,
     &    NUMPETT, MASK, USEROUT, HDRONLY, ERROR)
        IF (ERROR) THEN
          WRITE (USEROUT, 8001) MASKNAME (1:20), CHAR (7)
        END IF
        IF (SETM (XSEED, YSEED) .EQ. 0) THEN
          WRITE (USEROUT, 8003) XSEED, YSEED, ZSEED, MASKNAME (1:20), CHAR (7)
          RETURN
        END IF
      END IF
8001  FORMAT(1X,'*** Error reading ',A,A1)
8003  FORMAT(1X,'*** ',2I,' is not defined on slice ',I,' of ',A,A1)
C
C  Define region on seed slice
C
      CFNAME = SFNAME
      CALL GETIMG (IMAGE, HDR, CFNAME, SLICE, NUMSLCS, NUMPETT,
     &  DISK, USEROUT, HDRONLY, ERROR)
      IF (ERROR) RETURN

C
C  get the zorigin
C
      OPEN (DISK, FILE = CFNAME, STATUS = 'OLD', ERR = 55)
      GO TO 77
55    WRITE (USEROUT, *) '*** Error: opening image file ', CFNAME (1:20), ' ***'
      RETURN
77    fd = getfd (DISK)		! get the file descriptor
      PETTNUM = getimage_type (%VAL(fd), CFNAME, ENCODED, NUMSLICES)
      IF (PETTNUM .EQ. -1) THEN
        WRITE (STDOUT, *) 'Wrong image type for ', CFNAME
        RETURN
      ENDIF
      CLOSE (DISK) 
C
      XMIN = XSEED
      XMAX = XSEED
      YMIN = YSEED
      YMAX = YSEED
      SETA(XSEED,YSEED) = .TRUE.
      IF (DISPLAY) THEN
        CALL T1DISP1
        CALL T1POINT(XSEED,YSEED,DPLANE)
      END IF
      CALL T1THRESH(DISPLAY)
      CALL T1PIXELS
C
C  Expand region to lower slices
C
200   IF (RN(SLICE).GT.0) THEN
        PSLICE = SLICE
        SLICE = SLICE + 1
        IF (SLICE .LE. 75) THEN
C         WRITE(USEROUT,*) 'Slice = ',SLICE
          CALL T1NEXT(PSLICE,SLICE,DISPLAY)
          GO TO 200
        END IF
      END IF
C
C  Expand region to upper slices
C
      SLICE = ZSEED
300   IF (RN(SLICE).GT.0) THEN
        PSLICE = SLICE
        SLICE = SLICE - 1
        IF (SLICE.GE.1) THEN
C         WRITE(USEROUT,*) 'Slice = ',SLICE
          CALL T1NEXT(PSLICE,SLICE,DISPLAY)
          GO TO 300
        END IF
      END IF
C
C  Get total pixels, slices
C
400   CALL T1SUMSLC
C     WRITE(USEROUT,*) 'Pixels: ',RPIXELS,'   (',LASTSIZE,')'
C
C  Expand region in both directions until no more pixels added
C
      IF (RPIXELS.GT.LASTSIZE) THEN
        LASTSIZE = RPIXELS
        DO 500 SLC=ZMIN,ZMAX
C          CALL GETCNW(0)
C          CALL GETCNW(CH)
C          CALL GETCNW(1)
          IF (CH.EQ.'S' .or. CH.EQ.'s') RETURN
          IF (RN (SLC) .GT. 0 .AND. SLC .LT. 75) THEN
            NEXTSLC = SLC + 1
C           WRITE(USEROUT,*) 'Slice = ',NEXTSLC
            CALL T1NEXT(SLC,NEXTSLC,DISPLAY)
          END IF
500     CONTINUE
        DO 600 SLC=ZMAX,ZMIN,-1
C          CALL GETCNW(0)
C          CALL GETCNW(CH)
C          CALL GETCNW(1)
          IF (CH.EQ.'S' .or. CH.EQ.'s') RETURN
          IF (RN(SLC).GT.0 .AND. SLC.GT.1) THEN
            NEXTSLC = SLC - 1
C           WRITE(USEROUT,*) 'Slice = ',NEXTSLC
            CALL T1NEXT(SLC,NEXTSLC,DISPLAY)
          END IF
600     CONTINUE
        GO TO 400
      END IF
C
C  Write Region Summary to output log
C
      WRITE(USEROUT,8000) SFNAME,XSEED,YSEED,ZSEED,THRESH
      WRITE(LOGOUT,8000)  SFNAME,XSEED,YSEED,ZSEED,THRESH
      WRITE(USEROUT,8100) RSLICES, RPIXELS
      WRITE(LOGOUT,8100)  RSLICES, RPIXELS
C
8000  FORMAT(1X,A20,'Seed X,Y,Z: ',I2,',',I2,',',I2,'   Thresh = ',I)
8100  FORMAT(1X,'Slices:',I3,'   Pixels:',I5)
C
C  Alpha=0 --> no power analysis
C
      ALPHA = 0.0
      IF (UNPAIRED) THEN
        CALL T1UNPAIR(T,OUTPUT)
      ELSE
        CALL T1PAIRED(T,OUTPUT)
      END IF
C
      IF (SIGN*T.GT.SIGN*MAXT) THEN
        MAXT = T
        THRESHMAXT = THRESH
      END IF
      WRITE(USEROUT,8200) MAXT, THRESHMAXT
      WRITE(LOGOUT,8200)  MAXT, THRESHMAXT
      WRITE(LOGOUT,*)
8200  FORMAT(1X,'Max T =',F8.3,'  Thresh = ',I)
C
      RETURN
      END
@


1.6
log
@Use the user defined ZORIGIN.
@
text
@d1 1
a1 1
C$Id: t1optreg.f,v 1.5 1994/05/04 20:53:13 ty7777 Exp ty7777 $
d3 3
d45 1
d108 1
a108 1
      RCSHEADER = '$Header: /data/petsun4/src/rapture/RCS/t1optreg.f,v 1.5 1994/05/04 20:53:13 ty7777 Exp ty7777 $'
a183 2
        ELSE IF (NUMSLCS .NE. 49 .AND. NUMSLCS .NE. 75) THEN
          WRITE (USEROUT, 8002) MASKNAME (1:20), CHAR (7)
a190 1
8002  FORMAT(1X,'*** ',A,' is not 49-slice or 75-slice image.',A1)
@


1.5
log
@Added getimage_type ().
@
text
@d1 1
a1 1
C$Id: t1optreg.f,v 1.4 1994/05/03 19:12:51 ty7777 Exp ty7777 $
d3 3
d41 1
a89 2
      LOGICAL*1    ERR1           ! error from get_zorigin
      external     get_zorigin   !$pragma C (get_zorigin)
d104 1
a104 1
      RCSHEADER = '$Header: /home/petsun4/ty7777/src/rapture/RCS/t1optreg.f,v 1.4 1994/05/03 19:12:51 ty7777 Exp ty7777 $'
a212 13
C
C     Update the ZORIGIN if it is necessary
C
      ZORIGIN = 31
      IF (PETTNUM .EQ. 10) THEN
        OPEN (DISK, FILE = CFNAME, STATUS = 'OLD', ERR = 55)
        fd = getfd (DISK)		! get the file descriptor
        CALL get_zorigin (CFNAME, %VAL(fd), I, ERR1)
	IF (ERR1 .NE. .TRUE.) THEN
          ZORIGIN = I
        ENDIF
        CLOSE (DISK) 
      ENDIF
@


1.4
log
@Added processing for getting zorigin.
@
text
@d1 1
a1 1
C$Id: t1optreg.f,v 1.3 1994/04/22 21:17:14 ty7777 Exp ty7777 $
d3 3
d80 1
d82 1
d84 2
d88 1
d102 1
a102 1
      RCSHEADER = '$Header$'
d198 14
d217 1
a217 4
        GO TO 77
55      WRITE (USEROUT, *) '*** Error: opening image file ', CFNAME (1:20), ' ***'
        RETURN
77      fd = getfd (DISK)		! get the file descriptor
d219 1
a219 1
        IF (ERR1 .NE. .TRUE.) THEN
@


1.3
log
@Process 75-slice images.
@
text
@d1 1
a1 1
C$Id: t1optreg.f,v 1.2 1993/11/26 22:46:40 ty7777 Exp ty7777 $
d3 3
d34 1
a63 1
      REAL*4     MEAN, SD    ! mean, SD of seed image
a65 2
      INTEGER*4  IMIN, IMAX  ! min and max pixel values of seed image
      INTEGER*4  MAXSLICE    ! slice where max value is found in seed image
d77 5
d94 1
a94 1
      RCSHEADER = '$Id: t1optreg.f,v 1.2 1993/11/26 22:46:40 ty7777 Exp ty7777 $'
d185 2
a186 3
C     WRITE(USEROUT,*) 'Slice = ',SLICE
      CALL GETIMG(IMAGE,HDR,CFNAME,SLICE,NUMSLCS,NUMPETT,
     &  DISK,USEROUT,HDRONLY,ERROR)
d188 18
@


1.2
log
@Before adding the midlines.
@
text
@d1 1
a1 1
C$Id: t1optreg.f,v 1.1 1993/11/17 17:35:06 ty7777 Exp ty7777 $
d3 3
d29 2
d88 1
a88 1
      RCSHEADER = '$Id: t1optreg.f,v 1.1 1993/11/17 17:35:06 ty7777 Exp ty7777 $'
d107 1
a107 1
      CALL GETINT(Q,ZSEED,1,49)
d164 1
a164 1
        ELSE IF (NUMSLCS .NE. 49) THEN
d173 1
a173 1
8002  FORMAT(1X,'*** ',A,' is not 49-slice image.',A1)
d200 1
a200 1
        IF (SLICE.LE.49) THEN
d234 1
a234 1
          IF (RN(SLC).GT.0 .AND. SLC.LT.49) THEN
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
C$Id$
C$Log$
d83 1
a83 1
      RCSHEADER = '$Id$'
d154 3
a156 3
      IF (MASKNAME.NE.NULL) THEN
        CALL GETIMG(SETM,HDR,MASKNAME,SLICE,NUMSLCS,
     &    NUMPETT,MASK,USEROUT,HDRONLY,ERROR)
d158 3
a160 3
          WRITE(USEROUT,8001) MASKNAME,CHAR(7)
        ELSE IF (NUMSLCS.NE.49) THEN
          WRITE(USEROUT,8002) MASKNAME,CHAR(7)
d162 2
a163 2
        IF (SETM(XSEED,YSEED).EQ.0) THEN
          WRITE(USEROUT,8003) XSEED,YSEED,ZSEED,MASKNAME,CHAR(7)
d225 3
a227 3
          CALL GETCNW(0)
          CALL GETCNW(CH)
          CALL GETCNW(1)
d236 3
a238 3
          CALL GETCNW(0)
          CALL GETCNW(CH)
          CALL GETCNW(1)
@
