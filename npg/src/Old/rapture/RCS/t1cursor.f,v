head	1.3;
access;
symbols;
locks; strict;
comment	@c @;


1.3
date	94.05.04.15.51.04;	author ty7777;	state Exp;
branches;
next	1.2;

1.2
date	93.11.17.16.46.16;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	93.11.15.22.44.15;	author ty7777;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Delected the variable Q.
@
text
@C$Id: t1cursor.f,v 1.2 1993/11/17 16:46:16 ty7777 Exp ty7777 $
C$Log: t1cursor.f,v $
c Revision 1.2  1993/11/17  16:46:16  ty7777
c X window version, first release.
c
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  Subroutine:   T1CURSOR.FTN
C
C  Author:       Tom O. Videen
C  Date:         11-Jul-90
C  Written For:  RAPTURE
C
C  History:
C     Modified 30-Nov-90 to use ZOOMFACTOR with IMGINDEX.
C     Modified 17-Nov-93 by Tom Yang to use mouse to define points.
C
C  Intent:
C     Get cursor position for a point within a region.
C
C  Calls:
C     IMGINDEX - returns array index for a Ramtek coordinate
C     RAMLOC   - returns Ramtek coordinate for an array index
C     GETPAD   - get trackball values
C     SETCUR   - set cursor position and flags
C
C  Called by:
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE T1CURSOR (X, Y)
C
      INCLUDE 'rapture.inc'
C
      INTEGER*4  X, Y        ! location of point
C
      INTEGER*4  X1, Y1      ! location of Ramtek cursor
      INTEGER*4  RAMLOC      ! location of Ramtek cursor (FUNCTION)
      INTEGER*4  IMGINDEX    ! index to IMAGE array      (FUNCTION)
C
      LOGICAL*1  FLAG(4)     ! trackball buttons
      LOGICAL*1  VISIBLE     ! visible on
      LOGICAL*1  ENTER       ! enter on
C
      CHARACTER*256 RCSHEADER
C
      EQUIVALENCE (ENTER,   FLAG (1))
      EQUIVALENCE (VISIBLE, FLAG (4))
C
      RCSHEADER = '$Header$'
C
      X1 = RAMLOC (X, XFIRST, XST, MAG * ZOOMFACTOR)
      Y1 = RAMLOC (Y, YFIRST, YST, MAG * ZOOMFACTOR)
      CALL SETCUR (X1, Y1, 0, 1, RMD)
C
C  Position cursor within region
C
      WRITE (USEROUT, *) 'Make sure the Caps Lock is OFF!'
      WRITE (USEROUT, *)
      WRITE (USEROUT, *) 'Move the cursor to a point inside a region and'
      WRITE (USEROUT, *) 'press and release the left mouse button.'
      WRITE (USEROUT, *)
C
100   CALL GETPAD (X1, Y1, FLAG, RMD)
      IF (.NOT. ENTER) GO TO 100
      CALL SETCUR (X1, Y1, 0, 0, RMD)
C
      X = IMGINDEX (X1, XFIRST, XST, MAG * ZOOMFACTOR)
      Y = IMGINDEX (Y1, YFIRST, YST, MAG * ZOOMFACTOR)
C
      RETURN
      END
@


1.2
log
@X window version, first release.
@
text
@d1 5
a5 2
C$Id$
C$Log$
a45 1
      CHARACTER*80  Q         ! query to user
d51 1
a51 1
      RCSHEADER = '$Id$'
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
d14 1
d19 1
a19 1
C  Uses:
d25 3
a27 3
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE T1CURSOR(X,Y)
d29 2
d44 1
d46 2
a47 2
      EQUIVALENCE (ENTER,   FLAG(1))
      EQUIVALENCE (VISIBLE, FLAG(4))
d49 1
a49 5
      X1 = RAMLOC(X,XFIRST,XST,MAG)
      Y1 = RAMLOC(Y,YFIRST,YST,MAG)
      CALL SETCUR(X1,Y1,0,1,RMD)
      WRITE (*, *) XFIRST, XLAST, XST, X1
      WRITE (*, *) YFIRST, YLAST, YST, Y1
d51 4
d57 5
a61 3
      WRITE(USEROUT,*) 'Position cursor inside region and ',
     &                 'press ENTER on Trackball'
      WRITE(USEROUT,*)
d63 3
a65 4
100   CALL GETPAD(X1,Y1,FLAG,RMD)
      IF (.NOT.ENTER) GO TO 100
      WRITE (*, *) 'AFTER GETPAD'
      CALL SETCUR(X1,Y1,0,0,RMD)
d67 2
a68 3
      X = IMGINDEX(X1,XFIRST,XST,MAG*ZOOMFACTOR)
      Y = IMGINDEX(Y1,YFIRST,YST,MAG*ZOOMFACTOR)
      WRITE (*, *) 'EXIT t1cursor'
@
