head	1.8;
access;
symbols;
locks; strict;
comment	@c @;


1.8
date	95.05.24.21.36.49;	author ty7777;	state Exp;
branches;
next	1.7;

1.7
date	95.05.24.21.26.59;	author ty7777;	state Exp;
branches;
next	1.6;

1.6
date	95.05.24.21.15.34;	author ty7777;	state Exp;
branches;
next	1.5;

1.5
date	94.06.10.15.47.51;	author ty7777;	state Exp;
branches;
next	1.4;

1.4
date	94.05.04.20.45.31;	author ty7777;	state Exp;
branches;
next	1.3;

1.3
date	94.05.03.21.51.08;	author ty7777;	state Exp;
branches;
next	1.2;

1.2
date	94.05.03.18.43.36;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	93.11.26.22.43.40;	author ty7777;	state Exp;
branches;
next	;


desc
@Working version, initial release.
@


1.8
log
@Get rid of ERR1.
@
text
@C$Id: t1disp20.f,v 1.7 1995/05/24 21:26:59 ty7777 Exp ty7777 $
C$Log: t1disp20.f,v $
c Revision 1.7  1995/05/24  21:26:59  ty7777
c Added ENDIF.
c
c Revision 1.5  1994/06/10  15:47:51  ty7777
c Use the PCFLAG.
c
c Revision 1.4  1994/05/04  20:45:31  ty7777
c Added getimage_type ().
c
c Revision 1.3  1994/05/03  21:51:08  ty7777
c Use the ZORIGIN.
c
c Revision 1.2  1994/05/03  18:43:36  ty7777
c Added processing for getting zorigin.
c
c Revision 1.1  1993/11/26  22:43:40  ty7777
c Initial revision
c
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  Subroutine:   t1disp20.f
C
C  Author:       Tom Yang
C  Date:         26-Nov-93
C  Written For:  rapture
C
C  History:
C     Create by Tom Yang on Nov. 26, 1993.
C     Modified by Tom Yang on May 3, 1994 to get the zorigin slice.
C     Modified by Tom Yang on May 3, 1994 to use the ZORIGIN.
C     Modified by Tom Yang on Jun 10, 1994 to add PCFLAG to ramimg ().
C
C  Description
C     Display up to 20 slices on screen, 100 x 100 fractional array
C     with MAG = 1 and zoom x 2.
C
C  Uses:
C     t1dspreg
C
C  libpe.a
C     RAMIMG
C     RAMRST
C     RAMWRITE
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE T1DISP20
C
      external zoom !$pragma C (zoom)
C
      INTEGER*4  XLOC (20)     ! XST Ramtek coords for 20 image frames
      INTEGER*4  YLOC (20)     ! YST Ramtek coords for 20 image frames
      INTEGER*4  XDIM, YDIM    ! dimensions displayed
      INTEGER*4  XDIMZOOM, YDIMZOOM  ! dimensions displayed
      INTEGER*4  SCAN          ! scan direction for RAMIMG
      INTEGER*4  TYPE          ! type for RAMIMG
      INTEGER*4  PLANES        ! mask for RAMIMG
      INTEGER*4  ZFIRST, ZLAST ! first and last slices to display
      INTEGER*4  ZNUM          ! slice as stereotaxic coordinate
      INTEGER*4  TSIZE         ! text size
      INTEGER*4  INUM          ! number of image display (1-30)
      INTEGER*4  NUMSLCS       ! number of slices
      INTEGER*4  NUMPETT       ! PETT number
      INTEGER*4  I, J          ! local
C
      INTEGER*4    getimage_type 
      INTEGER*4    fd 
      INTEGER*4    PETTNUM 
      INTEGER*4    getfd 
      INTEGER*2    NUMSLICES	 ! number of slices obtained by calling getiamge_type
      LOGICAL*1    ENCODED
      external     get_zorigin   !$pragma C (get_zorigin)
      external     getimage_type !$pragma C (getimage_type)
C
      REAL*4     XTEMP         ! local
      REAL*4     ZFACTOR       ! real zoom factor
C
      INTEGER*2  LINE (100, 100) ! pixels written to Ramtek
      INTEGER*2  LINEZOOM (200, 200) ! pixels written to Ramtek
      INTEGER*2  HDR (128)       ! slice header
C
      CHARACTER*1    TEXT (100)
      CHARACTER*100  STR
      CHARACTER*256  RCSHEADER
C
      LOGICAL*1  HDRONLY     ! read header only
      LOGICAL*1  ERROR       ! error reading image
      LOGICAL*1  ABSSCALE    ! absolute scale used for RAMIMG.
C
      EQUIVALENCE (STR, TEXT)
C
      INCLUDE 'rapture.inc'
      DATA SCAN, TYPE, PLANES, TSIZE /0, 0, 4095, 1/
      DATA HDRONLY /.FALSE./
C
      DATA XLOC /  0, 210, 420, 630, 840,
     &             0, 210, 420, 630, 840,
     &             0, 210, 420, 630, 840,
     &             0, 210, 420, 630, 840/
C
      DATA YLOC /  0,   0,   0,   0,   0,
     &           220, 220, 220, 220, 220, 
     &           440, 440, 440, 440, 440,
     &           660, 660, 660, 660, 660/
C
C  Initializations
C
      RCSHEADER = '$Header: /data/petsun4/src/rapture/RCS/t1disp20.f,v 1.7 1995/05/24 21:26:59 ty7777 Exp ty7777 $'
C
      ERROR      = .FALSE.
      SIZE       = 100
      XDIM       = 100
      YDIM       = 100
      MAG        = 1
      XFIRST     = 15
      XLAST      = 114
      YFIRST     = 15
      YLAST      = 114
      ZFIRST     = ZMIN
      ZOOMFACTOR = 2
      ZFACTOR    = FLOAT (ZOOMFACTOR)
      XDIMZOOM   = XDIM * ZOOMFACTOR
      YDIMZOOM   = YDIM * ZOOMFACTOR
      ABSSCALE   = .TRUE.
C
      CALL RAMRST (RMD)
C
100   ZLAST = ZFIRST + 19
      IF (ZMAX .LT. ZLAST) ZLAST = ZMAX
      INUM = 0
C
      DO 500 SLICE = ZFIRST, ZLAST
C
C  Read 1 slice of image
C
        CALL GETIMG (IMAGE, HDR, CFNAME, SLICE, NUMSLCS,
     &    NUMPETT, DISK, USEROUT, HDRONLY, ERROR)
        IF (ERROR) THEN
          WRITE (USEROUT, 8050) CFNAME, CHAR (7)
          PAUSE
          RETURN
        END IF
8050    FORMAT(1X, '*** Error reading ', A, A1)
C
C  get the zorigin
C
	IF (SLICE .EQ. ZFIRST) THEN
C
C  get the zorigin
C
          OPEN (DISK, FILE = CFNAME, STATUS = 'OLD', ERR = 55)
          GO TO 77
55        WRITE (USEROUT, *) '*** Error: opening image file ', CFNAME (1:20), ' ***'
          RETURN
77        fd = getfd (DISK)		! get the file descriptor
          PETTNUM = getimage_type (%VAL(fd), CFNAME, ENCODED, NUMSLICES)
          IF (PETTNUM .EQ. -1) THEN
	    WRITE (STDOUT, *) 'Wrong image type for ', CFNAME
	    RETURN
          ENDIF
          CLOSE (DISK) 
        ENDIF
C
        INUM = INUM + 1
        XST  = XLOC (INUM)
        YST  = YLOC (INUM)
C
C  Scale relevant portion of image
C
        DO 300 J = 1, 100
          DO 200 I = 1, 100
            XTEMP = SCALER * FLOAT (IMAGE (I + 13, J + 13))
            IF (XTEMP .GT. 0.0) THEN
              LINE (J, I) = INT (NINT (XTEMP))
            ELSE
              LINE (J, I) = 0
            END IF
200       CONTINUE
300     CONTINUE
C
C  Write image to Ramtek
C
        CALL zoom (LINE, %VAL (XDIM), %VAL (YDIM), %VAL (ZFACTOR), 
     &	%VAL (ZFACTOR), %VAL (XDIMZOOM), %VAL (XDIMZOOM), LINEZOOM)
        CALL RAMIMG (LINEZOOM, XDIMZOOM, YDIMZOOM, XST, YST, SCAN, TYPE, PCFLAG, ABSSCALE, RMD) 
C
C  Display region on current slice
C
        CALL T1DSPREG
C
C  Write slice no. and corresponding Z
C
8100    FORMAT (I3)
8120    FORMAT (I2)
        ZNUM = (ZORIGIN - SLICE) * 2
        STR (1: 9) = '    (  )~'
        WRITE (STR (1:3), 8100) ZNUM
        WRITE (STR (6:7), 8120) SLICE
        CALL RAMWRITE (XST + XDIMZOOM / 2 - 12 * 4, YST + 195, TSIZE, TSIZE, SCAN, PLANES, RMD, TEXT, FONT1C)
500   CONTINUE
C
C  More slices
C
      IF (ZMAX .GT. ZLAST) THEN
        ZFIRST = ZLAST + 1
        GO TO 100
      END IF
C
C  Write threshold
C
8200  FORMAT (I5)
      ZNUM = (ZORIGIN - SLICE) * 2
      STR (1:17) = 'THRESHOLD =     ~'
      WRITE (STR (12:16), 8200) THRESH
      CALL RAMWRITE (0, 0, TSIZE + 1, TSIZE + 1, SCAN, PLANES, RMD, TEXT, FONT1C)
C
      RETURN
      END
@


1.7
log
@Added ENDIF.
@
text
@d1 1
a1 1
C$Id: t1disp20.f,v 1.5 1994/06/10 15:47:51 ty7777 Exp $
d3 3
a74 1
      LOGICAL*1    ERR1           ! error from get_zorigin
d111 1
a111 1
      RCSHEADER = '$Header: /usr/local/src/rapture/RCS/t1disp20.f,v 1.5 1994/06/10 15:47:51 ty7777 Exp $'
@


1.6
log
@Use the user defined ZORIGIN.
@
text
@d1 1
a1 1
C$Id: t1disp20.f,v 1.5 1994/06/10 15:47:51 ty7777 Exp ty7777 $
d72 2
d109 1
a109 1
      RCSHEADER = '$Header: /data/petsun4/src/rapture/RCS/t1disp20.f,v 1.5 1994/06/10 15:47:51 ty7777 Exp ty7777 $'
d152 11
a162 9
        OPEN (DISK, FILE = CFNAME, STATUS = 'OLD', ERR = 55)
        GO TO 77
55      WRITE (USEROUT, *) '*** Error: opening image file ', CFNAME (1:20), ' ***'
        RETURN
77      fd = getfd (DISK)		! get the file descriptor
        PETTNUM = getimage_type (%VAL(fd), CFNAME, ENCODED, NUMSLICES)
        IF (PETTNUM .EQ. -1) THEN
	  WRITE (STDOUT, *) 'Wrong image type for ', CFNAME
	  RETURN
a163 1
        CLOSE (DISK) 
@


1.5
log
@Use the PCFLAG.
@
text
@d1 1
a1 1
C$Id: t1disp20.f,v 1.4 1994/05/04 20:45:31 ty7777 Exp ty7777 $
d3 3
a71 2
      LOGICAL*1    ERR1           ! error from get_zorigin
      external     get_zorigin   !$pragma C (get_zorigin)
d107 1
a107 1
      RCSHEADER = '$Header: /home/petsun4/ty7777/src/rapture/RCS/t1disp20.f,v 1.4 1994/05/04 20:45:31 ty7777 Exp ty7777 $'
a160 14
C
C     Update the ZORIGIN if it is necessary
C
        ZORIGIN = 31
        IF (PETTNUM .EQ. 10) THEN
          OPEN (DISK, FILE = CFNAME, STATUS = 'OLD', ERR = 55)
          fd = getfd (DISK)		! get the file descriptor
	  CALL get_zorigin (CFNAME, %VAL(fd), I, ERR1)
	  IF (ERR1 .NE. .TRUE.) THEN
            ZORIGIN = I
	  ENDIF
          CLOSE (DISK) 
        ENDIF
        ENDIF
@


1.4
log
@Added getimage_type ().
@
text
@d1 1
a1 1
C$Id: t1disp20.f,v 1.3 1994/05/03 21:51:08 ty7777 Exp ty7777 $
d3 3
d26 3
a28 2
C     Modified by Tom Yang on May. 3, 1994 to get the zorigin slice.
C     Modified by Tom Yang on May. 3, 1994 to use the ZORIGIN.
d106 1
a106 1
      RCSHEADER = '$Header: /home/petsun4/ty7777/src/rapture/RCS/t1disp20.f,v 1.3 1994/05/03 21:51:08 ty7777 Exp ty7777 $'
d196 1
a196 1
        CALL RAMIMG (LINEZOOM, XDIMZOOM, YDIMZOOM, XST, YST, SCAN, TYPE, RMD, ABSSCALE) 
@


1.3
log
@Use the ZORIGIN.
@
text
@d1 1
a1 1
C$Id: t1disp20.f,v 1.2 1994/05/03 18:43:36 ty7777 Exp ty7777 $
d3 3
d59 9
a67 4
      INTEGER*4  fd 
      INTEGER*4  getfd 
      LOGICAL*1  ERR1           ! error from get_zorigin
      external   get_zorigin   !$pragma C (get_zorigin)
d102 1
a102 1
      RCSHEADER = '$Header: /home/petsun4/ty7777/src/rapture/RCS/t1disp20.f,v 1.2 1994/05/03 18:43:36 ty7777 Exp ty7777 $'
d143 14
d159 10
a168 13
          ZORIGIN = 31
          IF (NUMPETT .EQ. 10) THEN
            OPEN (DISK, FILE = CFNAME, STATUS = 'OLD', ERR = 55)
            GO TO 77
55          WRITE (USEROUT, *) '*** Error: opening image file ', CFNAME (1:20), ' ***'
            RETURN
77          fd = getfd (DISK)		! get the file descriptor
	    CALL get_zorigin (CFNAME, %VAL(fd), I, ERR1)
	    IF (ERR1 .NE. .TRUE.) THEN
              ZORIGIN = I
	    ENDIF
            CLOSE (DISK) 
          ENDIF
@


1.2
log
@Added processing for getting zorigin.
@
text
@d1 1
a1 1
C$Id: t1disp20.f,v 1.1 1993/11/26 22:43:40 ty7777 Exp ty7777 $
d3 3
d21 1
a55 1
      INTEGER*4  getimage_type 
a56 1
      INTEGER*4  PETTNUM 
a57 2
      INTEGER*2  NUMSLICES	 ! number of slices obtained by calling getiamge_type
      LOGICAL*1  ENCODED
a59 1
      external   getimage_type !$pragma C (getimage_type)
d94 1
a94 1
      RCSHEADER = '$Header$'
a133 11
          OPEN (DISK, FILE = CFNAME, STATUS = 'OLD', ERR = 55)
          GO TO 77
55        WRITE (USEROUT, *) '*** Error: opening image file ', CFNAME (1:20), ' ***'
          RETURN
77        fd = getfd (DISK)		! get the file descriptor
          PETTNUM = getimage_type (%VAL(fd), CFNAME, ENCODED, NUMSLICES)
          IF (PETTNUM .EQ. -1) THEN
	    WRITE (STDOUT, *) 'Wrong image type for ', CFNAME
	    RETURN
          ENDIF
          CLOSE (DISK) 
d138 1
a138 1
          IF (PETTNUM .EQ. 10) THEN
d140 4
a143 1
            fd = getfd (DISK)		! get the file descriptor
d183 1
a183 1
        ZNUM = (31 - SLICE) * 2
d200 1
a200 1
      ZNUM = (31 - SLICE) * 2
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
C$Id$
C$Log$
d17 1
d52 10
d95 1
a95 1
      RCSHEADER = '$Id$'
d131 29
@
