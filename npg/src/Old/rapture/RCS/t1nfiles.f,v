head	1.8;
access;
symbols;
locks; strict;
comment	@c @;


1.8
date	97.06.04.19.16.56;	author tom;	state Exp;
branches;
next	1.7;

1.7
date	95.05.25.20.17.08;	author ty7777;	state Exp;
branches;
next	1.6;

1.6
date	94.06.10.16.02.21;	author ty7777;	state Exp;
branches;
next	1.5;

1.5
date	94.02.09.21.34.19;	author ty7777;	state Exp;
branches;
next	1.4;

1.4
date	93.12.22.16.58.10;	author ty7777;	state Exp;
branches;
next	1.3;

1.3
date	93.11.26.22.44.49;	author ty7777;	state Exp;
branches;
next	1.2;

1.2
date	93.11.23.20.56.32;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	93.11.17.17.32.40;	author ty7777;	state Exp;
branches;
next	;


desc
@X window version, first release.
@


1.8
log
@close file if error
@
text
@C$Id: t1nfiles.f,v 1.7 1995/05/25 20:17:08 ty7777 Exp tom $
C$Log: t1nfiles.f,v $
c Revision 1.7  1995/05/25  20:17:08  ty7777
c Same as the last version.
c
c Revision 1.6  1994/06/10  16:02:21  ty7777
c Deleted the CH variable.
c
c Revision 1.5  1994/02/09  21:34:19  ty7777
c Same as the last version.
c
c Revision 1.4  1993/12/22  16:58:10  ty7777
c Moved output from LOGOUT2 to LOGOUT.
c
c Revision 1.3  1993/11/26  22:44:49  ty7777
c Same as before but check in before adding the midlines.
c
c Revision 1.2  1993/11/23  20:56:32  ty7777
c Allowed bothe upper and lower case letters.
c
c Revision 1.1  1993/11/17  17:32:40  ty7777
c Initial revision
c
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  Subroutine:   T1NFILES.FTN
C
C  Author:       Tom O. Videen
C  Date:         28-Sep-90
C  Written For:  RAPTURE
C
C  History:
C     Modified 19-Oct-90 to read same input files as used by
C        UTIMAGE, PTIMAGE, or DTIMAGE and identify the type DIFF.
C     Modified 24-Jan-91 to allow a single list of UNPAIRED data to be entered
C        with N2=0 so as to compute mean regional values but not t-values.
C     Modified 05-Nov-91 to write LISTNAME to log file.
C     Modified 09-Dec-91 to read UNPAIRED DIFFERENCE image lists.
C     Modified 17-Nov-93 by Tom Yang to port to UNIX machines.
C     Modified 17-Nov-93 by Tom Yang:
C        1) Allow both upper and lower case keywords.
C        2) Spaces between files names is not important.
C     Modified 22-Dec-93 by Tom Yang to change LOGOUT2 to LOGOUT.
C
C  Intent:
C     Get the list of files for processing as either paired or
C        unpaired data.
C     If lists are not entered completely, N1 is set to 0.
C     If list is paired data, N2 is set to 0.
C     If paired input images are read, DIFF is set to .TRUE.
C
C  Uses:
C     GTSTRING
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE T1NFILES
C
      INCLUDE 'rapture.inc'
C
      CHARACTER*4   PAIRTYPE  ! file type (DIFF or SING)
      CHARACTER*8   FILETYPE  ! file type (PAIRED or UNPAIRED)
      CHARACTER*9   STR1      ! string
      CHARACTER*63  STR2      ! string
      CHARACTER*20  OLDNAME   ! previous list file name
      CHARACTER*80  Q         ! query to user
      CHARACTER*80  STR       ! string
      CHARACTER*256 RCSHEADER
C
C  Name of file list
C
      RCSHEADER = '$Header: /home/npggw/tom/src/rapture/RCS/t1nfiles.f,v 1.7 1995/05/25 20:17:08 ty7777 Exp tom $'
C
      Q = 'File name of image files'
      STR = LISTNAME
      CALL GTSTRING (Q, STR)
      LISTNAME = STR (1:20)
C
C  If same as previous list, return and continue processing
C
      IF (LISTNAME .EQ. OLDNAME .AND. N1 .GT. 0) THEN
        RETURN
      ELSE
        OLDNAME  = LISTNAME
        UNPAIRED = .FALSE.
        N1 = 0
        N2 = 0
      END IF
C
C  Otherwise read the new list and check for existence of files
C
      OPEN (FILELIST, FILE = LISTNAME, STATUS = 'OLD', ERR = 110)
      GO TO 120
110   WRITE (USEROUT, *) '*** ERROR opening ', LISTNAME
      RETURN
C
C  Is data Paired or Unpaired or Paired-Differences
C
120   WRITE (LOGOUT, 8300) LISTNAME
      READ (FILELIST, 8100) STR1, FILETYPE, STR2
      WRITE (USEROUT, 8110) STR1, FILETYPE, STR2
      IF (FILETYPE .EQ. 'UNPAIRED' .OR. FILETYPE .EQ. 'unpaired') THEN
        UNPAIRED = .TRUE.
        WRITE (LOGOUT, *) 'Unpaired Data Analysis'
      ELSE IF (FILETYPE (1:6) .EQ. 'PAIRED' .OR. FILETYPE (1:6) .EQ. 'paired') THEN
        UNPAIRED = .FALSE.
        WRITE (LOGOUT, *) 'Paired Data Analysis'
      ELSE
        WRITE (USEROUT, *) 'ERROR: list is neither Paired or Unpaired'
        CLOSE (FILELIST)
        RETURN
      END IF
C
C  Read N for first set
C
      READ (FILELIST, 8200) N1, PAIRTYPE
      WRITE (LOGOUT, *) N1, '  ', PAIRTYPE
      IF (PAIRTYPE .EQ. 'SING' .OR. PAIRTYPE .EQ. 'sing') THEN
        DIFF = .FALSE.
      ELSE IF (PAIRTYPE .EQ. 'DIFF' .OR. PAIRTYPE .EQ. 'diff') THEN
        DIFF = .TRUE.
      ELSE IF (FILETYPE .EQ. 'UNPAIRED' .OR. FILETYPE .EQ. 'unpaired') THEN
        DIFF = .FALSE.
      ELSE
        WRITE (USEROUT, *) '*** ERROR: list not SINGLE or DIFFERENCE!', PAIRTYPE
        CLOSE (FILELIST)
        N1 = 0
        N2 = 0
        RETURN
      END IF
C
C  UNPAIRED control set or DIFFERENCE data set
C  -------------------------------------------
C
      IF (UNPAIRED .OR. DIFF) THEN
        IF (N1 .GT. 100) THEN
          WRITE (USEROUT, *) '*** ERROR: N1 = ', N1, ' too large!'
          CLOSE (FILELIST)
          N1 = 0
          N2 = 0
          RETURN
        END IF
        DO 250 FNUM = 1, N1
C          READ (FILELIST, 8300) FNAME (FNUM)
          READ (FILELIST, *) FNAME (FNUM)
          OPEN (DISK, FILE = FNAME (FNUM), STATUS = 'OLD', ERR = 210)
          GO TO 220
210         WRITE (USEROUT, 8000) FNAME (FNUM), CHAR (7)
            WRITE (USEROUT, 8001)
            N1 = 0
            RETURN
220       WRITE (LOGOUT, *) FNAME (FNUM)
250     CONTINUE
C
C  PAIRED data set
C  ---------------
C
      ELSE
        IF (N1 .GT. 50) THEN
          WRITE (USEROUT, *) '*** ERROR: N1 = ', N1, ' too large!'
          CLOSE (FILELIST)
          N1 = 0
          N2 = 0
          RETURN
        END IF
        DO 350 FNUM = 1, N1
C         READ (FILELIST, 8300) FNAME (FNUM), FNAME (FNUM + N1)
         READ (FILELIST, *) FNAME (FNUM), FNAME (FNUM + N1)
         OPEN (DISK, FILE = FNAME (FNUM), STATUS = 'OLD', ERR = 310)
         GO TO 320
310        WRITE (USEROUT, 8000) FNAME (FNUM), CHAR(7)
           WRITE (USEROUT, 8001)
           N1 = 0
           RETURN
320      OPEN (DISK, FILE = FNAME (FNUM + N1), STATUS = 'OLD', ERR = 330)
         GO TO 340
330        WRITE (USEROUT, 8000) FNAME (FNUM + N1), CHAR (7)
           WRITE (USEROUT, 8001)
           N1 = 0
           RETURN
340      WRITE (LOGOUT, 8301) FNAME (FNUM), FNAME (FNUM + N1)
350     CONTINUE
      END IF
C
C  UNPAIRED Test Data Set
C  ----------------------
C
      IF (UNPAIRED) THEN
        READ (FILELIST, 8200) N2
        WRITE (LOGOUT, *) N2
        IF (N2 .EQ. 0) THEN
          GO TO 500
        ELSE IF (N1 + N2 .GT. 100) THEN
          WRITE (USEROUT, *) '*** ERROR: N1 + N2 = ', N1 + N2,' too large!'
          CLOSE (FILELIST)
          N1 = 0
          N2 = 0
          RETURN
        END IF
C
        DO 450 FNUM = N1 + 1, N1 + N2
C          READ (FILELIST, 8300) FNAME (FNUM)
          READ (FILELIST, *) FNAME (FNUM)
          OPEN (DISK, FILE = FNAME (FNUM), STATUS = 'OLD', ERR = 410)
          GO TO 420
410         WRITE (USEROUT, 8000) FNAME (FNUM), CHAR (7)
            WRITE (USEROUT, 8001)
            N1 = 0
            N2 = 0
            RETURN
420       WRITE (LOGOUT, *) FNAME (FNUM)
450     CONTINUE
      END IF
C
500   WRITE (LOGOUT, *) '---------------------'
      CLOSE (FILELIST)
      CLOSE (DISK)
      WRITE (USEROUT, 8400) N1, N2
      IF (UNPAIRED) THEN
        WRITE (LOGOUT, 8500) LISTNAME, N1, N2
      ELSE
        WRITE (LOGOUT, 8510) LISTNAME, N1
      END IF
C
8000  FORMAT (1X, '*** Error reading ', A, A1)
8001  FORMAT (1X, '*** Enter CANCEL to cancel.')
8100  FORMAT (A9, A8, A63)
8110  FORMAT (1X, A9, A8, A63)
8200  FORMAT (I3, 6X, A4)
8300  FORMAT (A20, A20)
8301  FORMAT (1X, A20, A20)
8400  FORMAT (1X, I3, ' control files!   ', I3, ' test files')
8500  FORMAT (1X, A, 'unpaired:  ' I3, 'control files! ', I3, 'test files')
8510  FORMAT (1X, A, 'paired!  ' I, 'files')
C
      RETURN
      END
@


1.7
log
@Same as the last version.
@
text
@d1 1
a1 1
C$Id: t1nfiles.f,v 1.6 1994/06/10 16:02:21 ty7777 Exp ty7777 $
d3 3
d73 1
a73 1
      RCSHEADER = '$Header: /data/petsun4/src/rapture/RCS/t1nfiles.f,v 1.6 1994/06/10 16:02:21 ty7777 Exp ty7777 $'
d111 1
d127 1
d139 1
d162 1
d196 1
@


1.6
log
@Deleted the CH variable.
@
text
@d1 1
a1 1
C$Id: t1nfiles.f,v 1.5 1994/02/09 21:34:19 ty7777 Exp ty7777 $
d3 3
d70 1
a70 1
      RCSHEADER = '$Header$'
@


1.5
log
@Same as the last version.
@
text
@d1 1
a1 1
C$Id: t1nfiles.f,v 1.4 1993/12/22 16:58:10 ty7777 Exp ty7777 $
d3 3
a55 1
      CHARACTER*1   CH        ! input character
d67 1
a67 1
      RCSHEADER = '$Id: t1nfiles.f,v 1.4 1993/12/22 16:58:10 ty7777 Exp ty7777 $'
@


1.4
log
@Moved output from LOGOUT2 to LOGOUT.
@
text
@d1 1
a1 1
C$Id: t1nfiles.f,v 1.3 1993/11/26 22:44:49 ty7777 Exp ty7777 $
d3 3
d65 1
a65 1
      RCSHEADER = '$Id: t1nfiles.f,v 1.3 1993/11/26 22:44:49 ty7777 Exp ty7777 $'
d117 1
a117 1
        WRITE (USEROUT, *) '*** ERROR: list not SINGLE or DIFFERENCE!'
@


1.3
log
@Same as before but check in before adding the midlines.
@
text
@d1 1
a1 1
C$Id: t1nfiles.f,v 1.2 1993/11/23 20:56:32 ty7777 Exp ty7777 $
d3 3
d32 1
d62 1
a62 1
      RCSHEADER = '$Id: t1nfiles.f,v 1.2 1993/11/23 20:56:32 ty7777 Exp ty7777 $'
d205 1
a205 1
        WRITE (LOGOUT2, 8500) LISTNAME, N1, N2
d207 1
a207 1
        WRITE (LOGOUT2, 8510) LISTNAME, N1
@


1.2
log
@Allowed bothe upper and lower case letters.
@
text
@d1 1
a1 1
C$Id: t1nfiles.f,v 1.1 1993/11/17 17:32:40 ty7777 Exp ty7777 $
d3 3
d58 1
a58 1
      RCSHEADER = '$Id: t1nfiles.f,v 1.1 1993/11/17 17:32:40 ty7777 Exp ty7777 $'
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
C$Id$
C$Log$
d23 3
d55 2
a56 1
      RCSHEADER = '$Id$'
d59 2
a60 2
      CALL GTSTRING(Q,STR)
      LISTNAME = STR(1:20)
d64 1
a64 1
      IF (LISTNAME.EQ.OLDNAME .AND. N1.GT.0) THEN
d67 1
a67 1
        OLDNAME = LISTNAME
d75 1
a75 1
      OPEN (FILELIST,FILE=LISTNAME,STATUS='OLD',ERR=110)
d77 1
a77 1
110   WRITE(USEROUT,*) '*** ERROR opening ',LISTNAME
d82 4
a85 4
120   WRITE(LOGOUT,8300) LISTNAME
      READ(FILELIST,8100) STR1,FILETYPE,STR2
      WRITE(USEROUT,8110) STR1,FILETYPE,STR2
      IF (FILETYPE.EQ.'UNPAIRED') THEN
d87 2
a88 2
        WRITE(LOGOUT,*) 'Unpaired Data Analysis'
      ELSE IF (FILETYPE.EQ.'PAIRED  ') THEN
d90 1
a90 1
        WRITE(LOGOUT,*) 'Paired Data Analysis'
d92 1
a92 1
        WRITE(USEROUT,*) 'ERROR: list is neither Paired or Unpaired'
d98 3
a100 3
      READ(FILELIST,8200) N1,PAIRTYPE
      WRITE(LOGOUT,*) N1,'  ',PAIRTYPE
      IF (PAIRTYPE.EQ.'SING') THEN
d102 1
a102 1
      ELSE IF (PAIRTYPE.EQ.'DIFF') THEN
d104 1
a104 1
      ELSE IF (FILETYPE.EQ.'UNPAIRED') THEN
d107 1
a107 1
        WRITE(USEROUT,*) '*** ERROR: list not SINGLE or DIFFERENCE!'
d117 2
a118 2
        IF (N1.GT.100) THEN
          WRITE(USEROUT,*) '*** ERROR: N1 = ',N1,' too large!'
d123 4
a126 3
        DO 250 FNUM=1,N1
          READ(FILELIST,8300) FNAME(FNUM)
          OPEN(DISK,FILE=FNAME(FNUM),STATUS='OLD',ERR=210)
d128 2
a129 2
210         WRITE(USEROUT,8000) FNAME(FNUM),CHAR(7)
            WRITE(USEROUT,8001)
d132 1
a132 1
220       WRITE(LOGOUT,*) FNAME(FNUM)
d139 2
a140 2
        IF (N1.GT.50) THEN
          WRITE(USEROUT,*) '*** ERROR: N1 = ',N1,' too large!'
d145 4
a148 3
        DO 350 FNUM=1,N1
         READ(FILELIST,8300) FNAME(FNUM), FNAME(FNUM+N1)
         OPEN(DISK,FILE=FNAME(FNUM),STATUS='OLD',ERR=310)
d150 2
a151 2
310        WRITE(USEROUT,8000) FNAME(FNUM),CHAR(7)
           WRITE(USEROUT,8001)
d154 1
a154 1
320      OPEN(DISK,FILE=FNAME(FNUM+N1),STATUS='OLD',ERR=330)
d156 2
a157 2
330        WRITE(USEROUT,8000) FNAME(FNUM+N1),CHAR(7)
           WRITE(USEROUT,8001)
d160 1
a160 1
340      WRITE(LOGOUT,8301) FNAME(FNUM), FNAME(FNUM+N1)
d168 3
a170 3
        READ(FILELIST,8200) N2
        WRITE(LOGOUT,*) N2
        IF (N2.EQ.0) THEN
d172 2
a173 2
        ELSE IF (N1+N2.GT.100) THEN
          WRITE(USEROUT,*) '*** ERROR: N1+N2 = ',N1+N2,' too large!'
d179 4
a182 3
        DO 450 FNUM=N1+1,N1+N2
          READ(FILELIST,8300) FNAME(FNUM)
          OPEN(DISK,FILE=FNAME(FNUM),STATUS='OLD',ERR=410)
d184 2
a185 2
410         WRITE(USEROUT,8000) FNAME(FNUM),CHAR(7)
            WRITE(USEROUT,8001)
d189 1
a189 1
420       WRITE(LOGOUT,*) FNAME(FNUM)
d193 4
a196 4
500   WRITE(LOGOUT,*) '---------------------'
      CLOSE(FILELIST)
      CLOSE(DISK)
      WRITE(USEROUT,8400) N1, N2
d198 1
a198 1
        WRITE(LOGOUT2,8500) LISTNAME,N1,N2
d200 1
a200 1
        WRITE(LOGOUT2,8510) LISTNAME,N1
d203 10
a212 10
8000  FORMAT(1X,'*** Error reading ',A,A1)
8001  FORMAT(1X,'*** Enter CANCEL to cancel.')
8100  FORMAT(A9,A8,A63)
8110  FORMAT(1X,A9,A8,A63)
8200  FORMAT(I3,6X,A4)
8300  FORMAT(A20,A20)
8301  FORMAT(1X,A20,A20)
8400  FORMAT(1X,I,'control files!   ',I,'test files')
8500  FORMAT(1X,A,'unpaired:  'I,'control files! ',I,'test files')
8510  FORMAT(1X,A,'paired!  'I,'files')
@
