head	1.1;
access;
symbols;
locks; strict;
comment	@c @;


1.1
date	93.12.28.16.32.04;	author ty7777;	state Exp;
branches;
next	;


desc
@First checking in, working version.
@


1.1
log
@Initial revision
@
text
@C$Id$
C$Log$
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  Subroutine:   t1spheri.f
C
C  Author:       Tom Yang
C  Date:         23-Dec-93
C  Written For:  Rapture
C
C  History:
C     Created by Tom Yang on Dec. 27, 1993.
C
C  Intent:
C     Generate a region from a point in the region and a radius.
C
C  Uses:
C     T1POINT.
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE T1SPHERI (XC, YC, CURSLICE, FIRST, RAD, DISPLAY)
C
      INCLUDE 'rapture.inc'
C
      INTEGER*4    getfd 
      external proj2d !$pragma C (proj2d)
C
      INTEGER*4  XC, YC      ! center of sphere
      INTEGER*4  CURSLICE    ! current slice
      LOGICAL*1  FIRST       ! first time.
      INTEGER*4  RAD         ! radius of sphere
      LOGICAL*1  DISPLAY     ! true--> display while processing
C
      INTEGER*4  X, Y         ! local point to be checked for inclusion
      INTEGER*4  K           ! index
      INTEGER*4  DPLANE      ! plane to display point in
      INTEGER*4  fd
      INTEGER*4  X2D (400)
      INTEGER*4  Y2D (400)
      INTEGER*4  Z
      INTEGER*4  NPIXELS
C
      CHARACTER*256 RCSHEADER
C
      RCSHEADER = '$Id$'
C
      fd = getfd (RGNDISK)		! get the HPUX file descriptor
      IF (FIRST .EQ. .TRUE.) THEN
	Z = 0
      ELSE
	Z = CURSLICE - ZSEED
      ENDIF
      Call proj2d (%VAL(fd), X2D, Y2D, %VAL(Z), %VAL(RAD), NPIXELS)
C      WRITE (*, *) RAD, NPIXELS
C      WRITE (*, 8100) (X2D (K), Y2D (K), K=1,NPIXELS)
C8100  FORMAT (30((24I3)/))
C
      DPLANE = PLANE
C
      DO 240 K = 1, NPIXELS
        X = XC + X2D (K)  
        Y = YC + Y2D (K)  
        IF (.NOT. SETA (X, Y) .AND. .NOT. SETC (X, Y) .AND. SETM (X, Y) .GT. 0) THEN
          SETA (X, Y) = .TRUE.

          IF (X .GT. XMAX) THEN
              XMAX = X
          ELSE IF (X .LT. XMIN) THEN
              XMIN = X
          END IF

          IF (Y .GT. YMAX) THEN
              YMAX = Y
          ELSE IF (Y .LT. YMIN) THEN
              YMIN = Y
          END IF

          IF (DISPLAY) CALL T1POINT (X, Y, DPLANE)
        END IF
240   CONTINUE
C
      RETURN
      END
@
