head	1.6;
access;
symbols;
locks; strict;
comment	@c @;


1.6
date	94.06.10.15.49.56;	author ty7777;	state Exp;
branches;
next	1.5;

1.5
date	94.05.04.20.47.07;	author ty7777;	state Exp;
branches;
next	1.4;

1.4
date	94.05.03.21.56.20;	author ty7777;	state Exp;
branches;
next	1.3;

1.3
date	94.05.03.18.49.26;	author ty7777;	state Exp;
branches;
next	1.2;

1.2
date	93.11.26.22.44.02;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	93.11.17.17.12.27;	author ty7777;	state Exp;
branches;
next	;


desc
@X window version, first release.
@


1.6
log
@Added PCFLAG toramimg ().
@
text
@C$Id: t1disp30.f,v 1.5 1994/05/04 20:47:07 ty7777 Exp ty7777 $
C$Log: t1disp30.f,v $
c Revision 1.5  1994/05/04  20:47:07  ty7777
c Added getimage_type ().
c
c Revision 1.4  1994/05/03  21:56:20  ty7777
c Use the ZORIGIN.
c
c Revision 1.3  1994/05/03  18:49:26  ty7777
c Added processing for getting zorigin.
c
c Revision 1.2  1993/11/26  22:44:02  ty7777
c Before adding the midlines.
c
c Revision 1.1  1993/11/17  17:12:27  ty7777
c Initial revision
c
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  Subroutine:   T1DISP30.FTN
C
C  Author:       Tom O. Videen
C  Date:         03-Dec-90
C  Written For:  RAPTURE
C
C  History:
C     Ported to X window and UNIX by Tom Yang on 17-Nov-93.
C     Modified by Tom Yang on 26-Nov-93 to zoom each image by 1.5
C       and makes the XLOC, YLOC arrays right.
C     Modified by Tom Yang on 03-May-94 to get and use the zorigin of
C       ECAT images.
C     Modified by Tom Yang on 10-Jun-94 to add PCFLAG in ramimg ().
C
C  Intent:
C     Display up to 30 slices on screen, 100x100 fractional array
C     with MAG=1.
C
C  Uses:
C     T1DSPREG
C
C  libpe.a
C     RAMIMG
C     RAMRST
C     RAMWRITE
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE T1DISP30
C
C
      INTEGER*4  XLOC (30)     ! XST Ramtek coords for 30 image frames
      INTEGER*4  YLOC (30)     ! YST Ramtek coords for 30 image frames
      INTEGER*4  XDIM, YDIM    ! dimensions displayed
      INTEGER*4  SCAN          ! scan direction for RAMIMG
      INTEGER*4  TYPE          ! type for RAMIMG
      INTEGER*4  PLANES        ! mask for RAMIMG
      INTEGER*4  ZFIRST, ZLAST ! first and last slices to display
      INTEGER*4  ZNUM          ! slice as stereotaxic coordinate
      INTEGER*4  TSIZE         ! text size
      INTEGER*4  INUM          ! number of image display (1-30)
      INTEGER*4  NUMSLCS       ! number of slices
      INTEGER*4  NUMPETT       ! PETT number
      INTEGER*4  I, J          ! local
C
      INTEGER*4    getimage_type 
      INTEGER*4    fd 
      INTEGER*4    PETTNUM 
      INTEGER*4    getfd 
      INTEGER*2    NUMSLICES	 ! number of slices obtained by calling getiamge_type
      LOGICAL*1    ENCODED
      LOGICAL*1    ERR1           ! error from get_zorigin
      external     get_zorigin   !$pragma C (get_zorigin)
      external     getimage_type !$pragma C (getimage_type)
C
      REAL*4     XTEMP         ! local
C
      INTEGER*2  LINE (100, 100) ! pixels written to Ramtek
      INTEGER*2  HDR (128)       ! slice header
C
      CHARACTER*1    TEXT (100)
      CHARACTER*100  STR
      CHARACTER*256  RCSHEADER
C
      LOGICAL*1  HDRONLY     ! read header only
      LOGICAL*1  ERROR       ! error reading image
      LOGICAL*1  ABSSCALE    ! absolute scale used for RAMIMG.
C
      EQUIVALENCE (STR, TEXT)
C
      INCLUDE 'rapture.inc'
      DATA SCAN, TYPE, PLANES, TSIZE /0, 0, 4095, 1/
      DATA HDRONLY /.FALSE./
C
      DATA XLOC /  0, 105, 210, 315, 420, 525,
     &             0, 105, 210, 315, 420, 525,
     &             0, 105, 210, 315, 420, 525,
     &             0, 105, 210, 315, 420, 525,
     &             0, 105, 210, 315, 420, 525/
C
      DATA YLOC /  0,   0,   0,   0,   0,   0,
     &           103, 103, 103, 103, 103, 103,
     &           206, 206, 206, 206, 206, 206,
     &           309, 309, 309, 309, 309, 309,
     &           412, 412, 412, 412, 412, 412/
C
C  Initializations
C
      RCSHEADER = '$Header: /home/petsun4/ty7777/src/rapture/RCS/t1disp30.f,v 1.5 1994/05/04 20:47:07 ty7777 Exp ty7777 $'
C
      ERROR      = .FALSE.
      SIZE       = 100
      XDIM       = 100
      YDIM       = 100
      MAG        = 1
      XFIRST     = 15
      XLAST      = 114
      YFIRST     = 15
      YLAST      = 114
      ZFIRST     = ZMIN
      ZOOMFACTOR = 1
      ABSSCALE   = .TRUE.
C
      CALL RAMRST (RMD)
C
100   ZLAST = ZFIRST + 29
      IF (ZMAX .LT. ZLAST) ZLAST = ZMAX
      INUM = 0
C
      DO 500 SLICE = ZFIRST, ZLAST
C
C  Read 1 slice of image
C
        CALL GETIMG (IMAGE, HDR, CFNAME, SLICE, NUMSLCS,
     &    NUMPETT, DISK, USEROUT, HDRONLY, ERROR)
        IF (ERROR) THEN
          WRITE (USEROUT, 8050) CFNAME, CHAR (7)
          PAUSE
          RETURN
        END IF
8050    FORMAT(1X, '*** Error reading ', A, A1)

C
C  get the zorigin
C
	IF (SLICE .EQ. ZFIRST) THEN
C
C  get the zorigin
C
        OPEN (DISK, FILE = CFNAME, STATUS = 'OLD', ERR = 55)
        GO TO 77
55      WRITE (USEROUT, *) '*** Error: opening image file ', CFNAME (1:20), ' ***'
        RETURN
77      fd = getfd (DISK)		! get the file descriptor
        PETTNUM = getimage_type (%VAL(fd), CFNAME, ENCODED, NUMSLICES)
        IF (PETTNUM .EQ. -1) THEN
	  WRITE (STDOUT, *) 'Wrong image type for ', CFNAME
	  RETURN
        ENDIF
        CLOSE (DISK) 
C
C     Update the ZORIGIN if it is necessary
C
        ZORIGIN = 31
        IF (PETTNUM .EQ. 10) THEN
          OPEN (DISK, FILE = CFNAME, STATUS = 'OLD', ERR = 55)
          fd = getfd (DISK)		! get the file descriptor
	  CALL get_zorigin (CFNAME, %VAL(fd), I, ERR1)
	  IF (ERR1 .NE. .TRUE.) THEN
            ZORIGIN = I
	  ENDIF
          CLOSE (DISK) 
        ENDIF
        ENDIF
C
        INUM = INUM + 1
        XST  = XLOC (INUM)
        YST  = YLOC (INUM)
C
C  Scale relevant portion of image
C
        DO 300 J = 1, 100
          DO 200 I = 1, 100
            XTEMP = SCALER * FLOAT (IMAGE (I + 13, J + 13))
            IF (XTEMP .GT. 0.0) THEN
              LINE (I, J) = INT (NINT (XTEMP))
            ELSE
              LINE (I, J) = 0
            END IF
200       CONTINUE
300     CONTINUE
C
C  Write image to Ramtek
C
        CALL RAMIMG (LINE, XDIM, YDIM, XST, YST, SCAN, TYPE, PCFLAG, ABSSCALE, RMD)
C
C  Display region on current slice
C
        CALL T1DSPREG
C
C  Write slice no. and corresponding Z
C
8100    FORMAT (I3)
8120    FORMAT (I2)
        ZNUM = (ZORIGIN - SLICE) * 2
        STR (1: 9) = '    (  )~'
        WRITE (STR (1:3), 8100) ZNUM
        WRITE (STR (6:7), 8120) SLICE
        CALL RAMWRITE (XST, YST + 95, TSIZE, TSIZE, SCAN, PLANES, RMD, TEXT, FONT1C)
500   CONTINUE
C
C  More slices
C
      IF (ZMAX .GT. ZLAST) THEN
        ZFIRST = ZLAST + 1
        GO TO 100
      END IF
C
C  Write threshold
C
8200  FORMAT (I5)
      ZNUM = (ZORIGIN - SLICE) * 2
      STR (1:17) = 'THRESHOLD =     ~'
      WRITE (STR (12:16), 8200) THRESH
      CALL RAMWRITE (0, 0, TSIZE + 1, TSIZE + 1, SCAN, PLANES, RMD, TEXT, FONT1C)
C
      RETURN
      END
@


1.5
log
@Added getimage_type ().
@
text
@d1 1
a1 1
C$Id: t1disp30.f,v 1.4 1994/05/03 21:56:20 ty7777 Exp ty7777 $
d3 3
d33 1
d109 1
a109 1
      RCSHEADER = '$Header: /home/petsun4/ty7777/src/rapture/RCS/t1disp30.f,v 1.4 1994/05/03 21:56:20 ty7777 Exp ty7777 $'
d195 1
a195 1
        CALL RAMIMG (LINE, XDIM, YDIM, XST, YST, SCAN, TYPE, RMD, ABSSCALE)
@


1.4
log
@Use the ZORIGIN.
@
text
@d1 1
a1 1
C$Id: t1disp30.f,v 1.3 1994/05/03 18:49:26 ty7777 Exp ty7777 $
d3 3
d62 9
a70 4
      INTEGER*4  fd 
      INTEGER*4  getfd 
      LOGICAL*1  ERR1           ! error from get_zorigin
      external   get_zorigin   !$pragma C (get_zorigin)
d105 1
a105 1
      RCSHEADER = '$Header: /home/petsun4/ty7777/src/rapture/RCS/t1disp30.f,v 1.3 1994/05/03 18:49:26 ty7777 Exp ty7777 $'
d144 14
d160 10
a169 13
          ZORIGIN = 31
          IF (NUMPETT .EQ. 10) THEN
            OPEN (DISK, FILE = CFNAME, STATUS = 'OLD', ERR = 55)
            GO TO 77
55          WRITE (USEROUT, *) '*** Error: opening image file ', CFNAME (1:20), ' ***'
            RETURN
77          fd = getfd (DISK)		! get the file descriptor
	    CALL get_zorigin (CFNAME, %VAL(fd), I, ERR1)
	    IF (ERR1 .NE. .TRUE.) THEN
              ZORIGIN = I
	    ENDIF
            CLOSE (DISK) 
          ENDIF
@


1.3
log
@Added processing for getting zorigin.
@
text
@d1 1
a1 1
C$Id: t1disp30.f,v 1.2 1993/11/26 22:44:02 ty7777 Exp ty7777 $
d3 3
d25 1
a25 1
C     Modified by Tom Yang on 03-May-94 to get the zorigin of
a58 1
      INTEGER*4  getimage_type 
a59 1
      INTEGER*4  PETTNUM 
a60 2
      INTEGER*2  NUMSLICES	 ! number of slices obtained by calling getiamge_type
      LOGICAL*1  ENCODED
a62 1
      external   getimage_type !$pragma C (getimage_type)
d97 1
a97 1
      RCSHEADER = '$Header$'
a134 11
          OPEN (DISK, FILE = CFNAME, STATUS = 'OLD', ERR = 55)
          GO TO 77
55        WRITE (USEROUT, *) '*** Error: opening image file ', CFNAME (1:20), ' ***'
          RETURN
77        fd = getfd (DISK)		! get the file descriptor
          PETTNUM = getimage_type (%VAL(fd), CFNAME, ENCODED, NUMSLICES)
          IF (PETTNUM .EQ. -1) THEN
	    WRITE (STDOUT, *) 'Wrong image type for ', CFNAME
	    RETURN
          ENDIF
          CLOSE (DISK) 
d139 1
a139 1
          IF (PETTNUM .EQ. 10) THEN
d141 4
a144 1
            fd = getfd (DISK)		! get the file descriptor
d182 1
a182 1
        ZNUM = (31 - SLICE) * 2
d199 1
a199 1
      ZNUM = (31 - SLICE) * 2
@


1.2
log
@Before adding the midlines.
@
text
@d1 1
a1 1
C$Id: t1disp30.f,v 1.1 1993/11/17 17:12:27 ty7777 Exp ty7777 $
d3 3
d21 3
a23 1
C     and makes the XLOC, YLOC arrays right.
d56 10
d99 1
a99 1
      RCSHEADER = '$Id: t1disp30.f,v 1.1 1993/11/17 17:12:27 ty7777 Exp ty7777 $'
d132 30
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
C$Id$
C$Log$
d17 2
d37 13
a49 13
      INTEGER*4  XLOC(30)    ! XST Ramtek coords for 30 image frames
      INTEGER*4  YLOC(30)    ! YST Ramtek coords for 30 image frames
      INTEGER*4  XDIM, YDIM  ! dimensions displayed
      INTEGER*4  SCAN        ! scan direction for RAMIMG
      INTEGER*4  TYPE        ! type for RAMIMG
      INTEGER*4  PLANES      ! mask for RAMIMG
      INTEGER*4  ZFIRST,ZLAST! first and last slices to display
      INTEGER*4  ZNUM        ! slice as stereotaxic coordinate
      INTEGER*4  TSIZE       ! text size
      INTEGER*4  INUM        ! number of image display (1-30)
      INTEGER*4  NUMSLCS     ! number of slices
      INTEGER*4  NUMPETT     ! PETT number
      INTEGER*4  I,J         ! local
d51 1
a51 1
      REAL*4     XTEMP       ! local
d53 2
a54 2
      INTEGER*2  LINE(100,100)! pixels written to Ramtek
      INTEGER*2  HDR(128)     ! slice header
d56 1
a56 1
      CHARACTER*1    TEXT(100)
d64 1
a64 1
      EQUIVALENCE (STR,TEXT)
d67 1
a67 1
      DATA SCAN, TYPE, PLANES, TSIZE /0,0,4095,1/
d84 12
a95 11
      RCSHEADER = '$Id$'
      ERROR  = .FALSE.
      SIZE   = 100
      XDIM   = 100
      YDIM   = 100
      MAG    = 1
      XFIRST = 15
      XLAST  = 114
      YFIRST = 15
      YLAST  = 114
      ZFIRST = ZMIN
d97 1
a97 1
      ABSSCALE = .TRUE.
d99 1
a99 1
      CALL RAMRST(RMD)
d102 1
a102 1
      IF (ZMAX.LT.ZLAST) ZLAST=ZMAX
d105 1
a105 1
      DO 500 SLICE=ZFIRST,ZLAST
d109 2
a110 2
        CALL GETIMG(IMAGE,HDR,CFNAME,SLICE,NUMSLCS,
     &    NUMPETT,DISK,USEROUT,HDRONLY,ERROR)
d112 1
a112 1
          WRITE(USEROUT,8050) CFNAME,CHAR(7)
d116 1
a116 1
8050    FORMAT(1X,'*** Error reading ',A,A1)
d118 3
a120 3
        INUM = INUM+1
        XST = XLOC(INUM)
        YST = YLOC(INUM)
d124 5
a128 5
        DO 300 J=1,100
          DO 200 I=1,100
            XTEMP = SCALER*FLOAT(IMAGE(I+13,J+13))
            IF (XTEMP.GT.0.) THEN
              LINE(I,J) = INT(NINT(XTEMP))
d130 1
a130 1
              LINE(I,J) = 0
d145 7
a151 7
8100    FORMAT(I3)
8120    FORMAT(I2)
        ZNUM = (31-SLICE)*2
        STR(1:9) = '    (  )~'
        WRITE(STR(1:3),8100) ZNUM
        WRITE(STR(6:7),8120) SLICE
        CALL RAMWRITE(XST,YST+95,TSIZE,TSIZE,SCAN,PLANES,RMD,TEXT,FONT1C)
d156 2
a157 2
      IF (ZMAX.GT.ZLAST) THEN
        ZFIRST = ZLAST+1
d163 5
a167 5
8200    FORMAT(I5)
        ZNUM = (31-SLICE)*2
        STR(1:17) = 'THRESHOLD =     ~'
        WRITE(STR(12:16),8200) THRESH
        CALL RAMWRITE(0,0,TSIZE+1,TSIZE+1,SCAN,PLANES,RMD,TEXT,FONT1C)
@
