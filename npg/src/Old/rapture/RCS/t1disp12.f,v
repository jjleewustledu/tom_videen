head	1.15;
access;
symbols;
locks; strict;
comment	@c @;


1.15
date	97.07.28.20.12.28;	author tom;	state Exp;
branches;
next	1.14;

1.14
date	97.06.05.22.01.08;	author tom;	state Exp;
branches;
next	1.13;

1.13
date	95.05.24.21.35.06;	author ty7777;	state Exp;
branches;
next	1.12;

1.12
date	95.05.24.21.15.04;	author ty7777;	state Exp;
branches;
next	1.11;

1.11
date	94.06.10.15.41.27;	author ty7777;	state Exp;
branches;
next	1.10;

1.10
date	94.06.06.17.58.37;	author ty7777;	state Exp;
branches;
next	1.9;

1.9
date	94.05.04.20.43.17;	author ty7777;	state Exp;
branches;
next	1.8;

1.8
date	94.05.04.15.52.49;	author ty7777;	state Exp;
branches;
next	1.7;

1.7
date	94.05.03.21.53.48;	author ty7777;	state Exp;
branches;
next	1.6;

1.6
date	94.05.03.18.36.45;	author ty7777;	state Exp;
branches;
next	1.5;

1.5
date	94.05.03.18.35.13;	author ty7777;	state Exp;
branches;
next	1.4;

1.4
date	93.12.28.17.05.34;	author ty7777;	state Exp;
branches;
next	1.3;

1.3
date	93.12.22.18.59.28;	author ty7777;	state Exp;
branches;
next	1.2;

1.2
date	93.11.23.15.34.00;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	93.11.17.16.55.07;	author ty7777;	state Exp;
branches;
next	;


desc
@X window version, first release.
@


1.15
log
@option to skip midlines
@
text
@C$Id: t1disp12.f,v 1.14 1997/06/05 22:01:08 tom Exp tom $
C$Log: t1disp12.f,v $
c Revision 1.14  1997/06/05  22:01:08  tom
c add custom min-max scaling
c
c Revision 1.13  1995/05/24  21:35:06  ty7777
c Deleted fd.
c
c Revision 1.12  1995/05/24  21:15:04  ty7777
c Use the user defined ZORIGIN.
c
c Revision 1.11  1994/06/10  15:41:27  ty7777
c Use PCFLAG.
c
c Revision 1.10  1994/06/06  17:58:37  ty7777
c The ramini () is changed.
c
c Revision 1.9  1994/05/04  20:43:17  ty7777
c Added getimage_type ().
c
c Revision 1.8  1994/05/04  15:52:49  ty7777
c Delected unused variables.
c
c Revision 1.7  1994/05/03  21:53:48  ty7777
c Use the ZORIGIN.
c
c Revision 1.6  1994/05/03  18:36:45  ty7777
c Added documentation.
c
c Revision 1.5  1994/05/03  18:35:13  ty7777
c Added processing for zorigin.
c
c Revision 1.4  1993/12/28  17:05:34  ty7777
c Comment out the processing for outlined region.
c
c Revision 1.3  1993/12/22  18:59:28  ty7777
c Added midlines.
c
c Revision 1.2  1993/11/23  15:34:00  ty7777
c Changed ZOOMFACTOR.
c
c Revision 1.1  1993/11/17  16:55:07  ty7777
c Initial revision
c
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  Subroutine:   T1DISP12.FTN
C
C  Author:       Tom O. Videen
C  Date:         11-Jul-90
C  Written For:  RAPTURE
C
C  History:
C     Modified 28-Nov-90 by TOV to use RAMZOOM.
C     Modified 29-Nov-90 by TOV to change display locations.
C     Modified 30-Nov-90 to use ZOOMFACTOR.
C     Modified 17-Nov-93 by Tom Yang to port to UNIX environment.
C     Modified 23-Nov-93 by Tom Yang to transpose the matrix of line
C        and use zoom () to zoom in image. The ZOOMFACTOR is changed 
C        from 3 to 5.
C     Modified 28-Dec-93 by Tom Yang to comment out the processing for 
C        outlined regions.
C     Modified 03-May-94 by Tom Yang to get and use the zorigin.
C     Modified 10-Jun-94 by Tom Yang to add PCFLAG to ramimg ().
C     Modified 23-May-95 by Tom Yang to use user defined ZORIGIN.
C
C  Intent:
C     Display up to 12 slices on screen, 50x50 fractional array
C     with MAG = 1, zoomed x 5.
C
C  Uses:
C     T1DSPREG
C     T1TRACE
C     YESNO
C     RAMERS
C     RAMIMG
C     RAMWRITE
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE T1DISP12
C
      external zoom !$pragma C (zoom)
C
      INTEGER*4  XDIM, YDIM    ! dimensions displayed
      INTEGER*4  XDIMZOOM, YDIMZOOM  ! dimensions displayed
      INTEGER*4  SCAN          ! scan direction for RAMIMG
      INTEGER*4  TYPE          ! type for RAMIMG
      INTEGER*4  PLANES        ! mask for RAMIMG
      INTEGER*4  ZFIRST, ZLAST ! first and last slices to display
      INTEGER*4  ZNUM          ! slice as stereotaxic coordinate
      INTEGER*4  TSIZE         ! text size
      INTEGER*4  INUM          ! number of image display (1-12)
      INTEGER*4  XLOC (12)     ! XST Ramtek coords for 12 image frames
      INTEGER*4  YLOC (12)     ! YST Ramtek coords for 12 image frames
      INTEGER*4  NUMSLCS       ! number of slices
      INTEGER*4  NUMPETT       ! PETT number
      INTEGER*4  I, J, N       ! local
      INTEGER*4  XCD           ! x coordinate in the display space.
      INTEGER*4  YCD           ! y coordinate in the display space.
C
      REAL*4     XTEMP       ! temporary for IMAGE()
      REAL*4     ZFACTOR     ! real zoom factor
      REAL*4     XC          ! x coordinate of center in image space.
      REAL*4     YC          ! y coordinate of center in image space.
      REAL*4     CSCALER
      INTEGER*4  CMAX, CMIN
C
      INTEGER*2  LINE (50, 50) ! pixels written to Ramtek
      INTEGER*2  LINEZOOM (250, 250) ! pixels written to Ramtek
      INTEGER*2  HDR (128)    ! slice header
C
      CHARACTER*1    TEXT (100)
      CHARACTER*1    BELL
      CHARACTER*80   Q       ! query to user
      CHARACTER*100  STR
      CHARACTER*256  RCSHEADER
C
      LOGICAL*1  A           ! answer to T/F query
      LOGICAL*1  CUSTOM
      LOGICAL*1  DRAWMIDL
      LOGICAL*1  OUTLINE     ! true --> outline instead of fill regions
      LOGICAL*1  HDRONLY     ! read header only
      LOGICAL*1  ERROR       ! error reading image
      LOGICAL*1  ABSSCALE    ! absolute scale used for RAMIMG.
C
      EQUIVALENCE (STR,TEXT)
C
      INCLUDE 'rapture.inc'
      DATA SCAN, TYPE, PLANES, TSIZE /0, 0, 4095, 1/
      DATA HDRONLY /.FALSE./
C
C      DATA XLOC /  0,  53 * 3, 106 * 3, 159 * 3,
C     &             0,  53 * 3, 106 * 3, 159 * 3,
C     &             0,  53 * 3, 106 * 3, 159 * 3/
C
C      DATA YLOC /  0,   0,   0,   0,
C     &            56 * 3,  56 * 3,  56 * 3,  56 * 3,
C     &           112 * 3, 112 * 3, 112 * 3, 112 * 3/
C
      DATA XLOC /  0,  265, 530, 795,
     &             0,  265, 530, 795,
     &             0,  265, 530, 795/

      DATA YLOC /  0,   0,   0,   0,
     &             280, 280, 280, 280,
     &             560, 560, 560, 560/
C  Initializations
C
      RCSHEADER = '$Header: /home/npggw/tom/src/rapture/RCS/t1disp12.f,v 1.14 1997/06/05 22:01:08 tom Exp tom $'
C
      ERROR      = .FALSE.
      BELL       = CHAR (7)
      MAG        = 1
      ZOOMFACTOR = 5
      ZFACTOR    = FLOAT (ZOOMFACTOR)
      SIZE       = 50
      XDIM       = SIZE
      YDIM       = SIZE
      XDIMZOOM   = XDIM * ZOOMFACTOR
      YDIMZOOM   = YDIM * ZOOMFACTOR
      ABSSCALE   = .TRUE.
C
C
C  Check that entire region will fit in 50x50 array on all slices
C
      N = XMAX - XMIN + 1
      IF (N .GT. SIZE) THEN
        WRITE (USEROUT, 8000) BELL
        RETURN
      ELSE
        XFIRST = XMIN - (SIZE - N) / 2
        XLAST  = XFIRST + SIZE - 1
      END IF
C
      N = YMAX - YMIN + 1
      IF (N .GT. SIZE) THEN
        WRITE (USEROUT, 8000) BELL
        RETURN
      ELSE
        YFIRST = YMIN - (SIZE - N) / 2
        YLAST  = YFIRST + SIZE - 1
      END IF
8000  FORMAT(1X,'*** Region too large for this display mode',A1)
C
      Q = 'Outline the regions (instead of solid fill)'
      CALL YESNO (Q, OUTLINE)
      Q = 'Use custom scaling range'
      CALL YESNO (Q, CUSTOM)
      IF (CUSTOM) THEN
        Q = 'Maximum'
        CALL GETINT (Q, CMAX, -32767, 32767)
        Q = 'Minimum'
        CALL GETINT (Q, CMIN, -32767, 32767)
		CSCALER = 240./(CMAX-CMIN)
      ENDIF

      Q = 'Draw midlines'
      CALL YESNO (Q, DRAWMIDL)
C
      CALL RAMRST (RMD)
C      CALL RAMZOOM (ZOOMFACTOR, RMD)   Tom Yang
C
      ZFIRST = ZMIN
      ZLAST  = ZFIRST + 11
      IF (ZLAST .GT. ZMAX) ZLAST = ZMAX
      INUM = 0
C
100   DO 500 SLICE = ZFIRST, ZLAST
C
C  Read 1 slice of image
C
        CALL GETIMG (IMAGE, HDR, CFNAME, SLICE, NUMSLCS,
     &    NUMPETT, DISK, USEROUT, HDRONLY, ERROR)
        IF (ERROR) THEN
          WRITE (USEROUT, 8050) CFNAME, CHAR (7)
          PAUSE
          RETURN
        END IF
8050    FORMAT (1X, '*** Error reading ', A, A1)

C
C
        INUM = INUM + 1
        XST  = XLOC (INUM)
        YST  = YLOC (INUM)
        DO 300 J = 1, SIZE
          DO 200 I = 1, SIZE
            IF (CUSTOM) THEN
              XTEMP = CSCALER * FLOAT (IMAGE (XFIRST + I - 1, YFIRST + J - 1) - CMIN)
            ELSE
              XTEMP = SCALER * FLOAT (IMAGE (XFIRST + I - 1, YFIRST + J - 1))
            ENDIF
            IF (XTEMP .GT. 0.0) THEN
              LINE (J, I) = INT (NINT (XTEMP))
            ELSE
              LINE (J, I) = 0
            END IF
200       CONTINUE
300     CONTINUE
C
        CALL zoom (LINE, %VAL (XDIM), %VAL (YDIM), %VAL (ZFACTOR), 
     &	%VAL (ZFACTOR), %VAL (XDIMZOOM), %VAL (XDIMZOOM), LINEZOOM)

        CALL RAMIMG (LINEZOOM, XDIMZOOM, YDIMZOOM, XST, YST, SCAN, TYPE, PCFLAG, ABSSCALE, RMD) 
C
C  Display region on current slice
C
        CALL T1DSPREG
        IF (OUTLINE) THEN
C          CALL T1TRACE
C          CALL RAMERS (XST, YST, XDIM, XDIM, PLANE, RMD)
        END IF
C
C  Draw the midlines.
C
        IF (DRAWMIDL) THEN
          XC = 64.5
          YC = 64.5
	      XCD = INT (NINT (XST + (XC - XFIRST) * ZFACTOR))
	      YCD = INT (NINT (YST + (YC - YFIRST) * ZFACTOR))
          CALL RAMLIN (XCD, YST, XCD, YST + YDIMZOOM, PLANES, RMD)
          CALL RAMLIN (XST, YCD, XST + XDIMZOOM, YCD, PLANES, RMD)
        ENDIF
C
C  Write slice no. and corresponding Z
C
8100    FORMAT (I3)
8120    FORMAT (I2)
        STR (1:8) = '   (  )~'
        ZNUM      = (ZORIGIN - SLICE) * 2
        WRITE (STR (1:3), 8100) ZNUM
        WRITE (STR (5:6), 8120) SLICE
C        CALL RAMWRITE (XST, YST + 48, TSIZE, TSIZE, SCAN, PLANES, RMD, TEXT, FONT1C)
        CALL RAMWRITE (XST + XDIMZOOM / 2 - 36, YST + YDIMZOOM, TSIZE, TSIZE, 
     &	SCAN, PLANES, RMD, TEXT, FONT1C)
500   CONTINUE
C
C  More slices
C
      IF (ZMAX .GT. ZLAST) THEN
        Q = 'Display more slices'
        A = .TRUE.
        CALL YESNO (Q, A)
        IF (A) THEN
          ZFIRST = ZLAST + 1
          ZLAST  = ZFIRST + 11
          IF (ZMAX .LT. ZLAST) ZLAST = ZMAX
          INUM = 0
          GO TO 100
        END IF
      END IF
C
      RETURN
      END
@


1.14
log
@add custom min-max scaling
@
text
@d1 1
a1 1
C$Id: t1disp12.f,v 1.13 1995/05/24 21:35:06 ty7777 Exp tom $
d3 3
d122 1
d151 1
a151 1
      RCSHEADER = '$Header: /home/npggw/tom/src/rapture/RCS/t1disp12.f,v 1.13 1995/05/24 21:35:06 ty7777 Exp tom $'
d198 3
d258 8
a265 6
        XC = 64.5
        YC = 64.5
	XCD = INT (NINT (XST + (XC - XFIRST) * ZFACTOR))
	YCD = INT (NINT (YST + (YC - YFIRST) * ZFACTOR))
        CALL RAMLIN (XCD, YST, XCD, YST + YDIMZOOM, PLANES, RMD)
        CALL RAMLIN (XST, YCD, XST + XDIMZOOM, YCD, PLANES, RMD)
@


1.13
log
@Deleted fd.
@
text
@d1 1
a1 1
C$Id: t1disp12.f,v 1.12 1995/05/24 21:15:04 ty7777 Exp ty7777 $
d3 3
a71 1

a72 1
C
d104 2
d118 1
d147 1
a147 1
      RCSHEADER = '$Header: /data/petsun4/src/rapture/RCS/t1disp12.f,v 1.12 1995/05/24 21:15:04 ty7777 Exp ty7777 $'
d185 9
d223 5
a227 1
            XTEMP = SCALER * FLOAT (IMAGE (XFIRST + I - 1, YFIRST + J - 1))
@


1.12
log
@Use the user defined ZORIGIN.
@
text
@d1 1
a1 1
C$Id: t1disp12.f,v 1.11 1994/06/10 15:41:27 ty7777 Exp ty7777 $
d3 3
a98 3
      INTEGER*4    fd 
      INTEGER*4    getfd 
C
d143 1
a143 1
      RCSHEADER = '$Header: /data/petsun4/src/rapture/RCS/t1disp12.f,v 1.11 1994/06/10 15:41:27 ty7777 Exp ty7777 $'
@


1.11
log
@Use PCFLAG.
@
text
@d1 1
a1 1
C$Id: t1disp12.f,v 1.10 1994/06/06 17:58:37 ty7777 Exp ty7777 $
d3 3
d57 1
a97 2
      LOGICAL*1    ERR1           ! error from get_zorigin
      external     get_zorigin   !$pragma C (get_zorigin)
d143 1
a143 1
      RCSHEADER = '$Header: /home/petsun4/ty7777/src/rapture/RCS/t1disp12.f,v 1.10 1994/06/06 17:58:37 ty7777 Exp ty7777 $'
a203 20
C  get the zorigin
C
	IF (SLICE .EQ. ZFIRST) THEN
C
C     Update the ZORIGIN if it is necessary
C
          ZORIGIN = 31
          IF (NUMPETT .EQ. 10) THEN
            OPEN (DISK, FILE = CFNAME, STATUS = 'OLD', ERR = 55)
            GO TO 77
55          WRITE (USEROUT, *) '*** Error: opening image file ', CFNAME (1:20), ' ***'
            RETURN
77          fd = getfd (DISK)		! get the file descriptor
	    CALL get_zorigin (CFNAME, %VAL(fd), I, ERR1)
	    IF (ERR1 .NE. .TRUE.) THEN
              ZORIGIN = I
	    ENDIF
            CLOSE (DISK) 
          ENDIF
        ENDIF
@


1.10
log
@The ramini () is changed.
@
text
@d1 1
a1 1
C$Id: t1disp12.f,v 1.9 1994/05/04 20:43:17 ty7777 Exp ty7777 $
d3 3
d53 1
d141 1
a141 1
      RCSHEADER = '$Header: /home/petsun4/ty7777/src/rapture/RCS/t1disp12.f,v 1.9 1994/05/04 20:43:17 ty7777 Exp ty7777 $'
d240 1
a240 2
C      CALL RAMIMG (LINE, XDIM, YDIM, XST, YST, SCAN, TYPE, RMD, ABSSCALE)
        CALL RAMIMG (LINEZOOM, XDIMZOOM, YDIMZOOM, XST, YST, SCAN, TYPE, RMD, ABSSCALE) 
@


1.9
log
@Added getimage_type ().
@
text
@d1 1
a1 1
C$Id: t1disp12.f,v 1.8 1994/05/04 15:52:49 ty7777 Exp ty7777 $
d3 3
a87 1
      INTEGER*4    getimage_type 
a88 1
      INTEGER*4    PETTNUM 
a89 2
      INTEGER*2    NUMSLICES	 ! number of slices obtained by calling getiamge_type
      LOGICAL*1    ENCODED
a91 1
      external     getimage_type !$pragma C (getimage_type)
d137 1
a137 1
      RCSHEADER = '$Header: /home/petsun4/ty7777/src/rapture/RCS/t1disp12.f,v 1.8 1994/05/04 15:52:49 ty7777 Exp ty7777 $'
a201 14
C  get the zorigin
C
        OPEN (DISK, FILE = CFNAME, STATUS = 'OLD', ERR = 55)
        GO TO 77
55      WRITE (USEROUT, *) '*** Error: opening image file ', CFNAME (1:20), ' ***'
        RETURN
77      fd = getfd (DISK)		! get the file descriptor
        PETTNUM = getimage_type (%VAL(fd), CFNAME, ENCODED, NUMSLICES)
        IF (PETTNUM .EQ. -1) THEN
	  WRITE (STDOUT, *) 'Wrong image type for ', CFNAME
	  RETURN
        ENDIF
        CLOSE (DISK) 
C
d204 13
a216 10
        ZORIGIN = 31
        IF (PETTNUM .EQ. 10) THEN
          OPEN (DISK, FILE = CFNAME, STATUS = 'OLD', ERR = 55)
          fd = getfd (DISK)		! get the file descriptor
	  CALL get_zorigin (CFNAME, %VAL(fd), I, ERR1)
	  IF (ERR1 .NE. .TRUE.) THEN
            ZORIGIN = I
	  ENDIF
          CLOSE (DISK) 
        ENDIF
@


1.8
log
@Delected unused variables.
@
text
@d1 1
a1 1
C$Id: t1disp12.f,v 1.7 1994/05/03 21:53:48 ty7777 Exp ty7777 $
d3 3
d85 9
a93 4
      INTEGER*4  fd 
      INTEGER*4  getfd 
      LOGICAL*1  ERR1           ! error from get_zorigin
      external   get_zorigin   !$pragma C (get_zorigin)
d139 1
a139 1
      RCSHEADER = '$Header: /amd/home/petsun4/ty7777/src/rapture/RCS/t1disp12.f,v 1.7 1994/05/03 21:53:48 ty7777 Exp ty7777 $'
d204 14
d220 10
a229 13
          ZORIGIN = 31
          IF (NUMPETT .EQ. 10) THEN
            OPEN (DISK, FILE = CFNAME, STATUS = 'OLD', ERR = 55)
            GO TO 77
55          WRITE (USEROUT, *) '*** Error: opening image file ', CFNAME (1:20), ' ***'
            RETURN
77          fd = getfd (DISK)		! get the file descriptor
	    CALL get_zorigin (CFNAME, %VAL(fd), I, ERR1)
	    IF (ERR1 .NE. .TRUE.) THEN
              ZORIGIN = I
	    ENDIF
            CLOSE (DISK) 
          ENDIF
@


1.7
log
@Use the ZORIGIN.
@
text
@d1 1
a1 1
C$Id: t1disp12.f,v 1.6 1994/05/03 18:36:45 ty7777 Exp ty7777 $
d3 3
a81 1
      INTEGER*4  getimage_type 
a82 1
      INTEGER*4  PETTNUM 
a83 2
      INTEGER*2  NUMSLICES	 ! number of slices obtained by calling getiamge_type
      LOGICAL*1  ENCODED
a85 1
      external   getimage_type !$pragma C (getimage_type)
d131 1
a131 1
      RCSHEADER = '$Header: /home/petsun4/ty7777/src/rapture/RCS/t1disp12.f,v 1.6 1994/05/03 18:36:45 ty7777 Exp ty7777 $'
@


1.6
log
@Added documentation.
@
text
@d1 1
a1 1
C$Id: t1disp12.f,v 1.5 1994/05/03 18:35:13 ty7777 Exp ty7777 $
d3 3
d40 1
a40 1
C     Modified 03-May-94 by Tom Yang to get the zorigin.
d133 1
a133 1
      RCSHEADER = '$Header: /home/petsun4/ty7777/src/rapture/RCS/t1disp12.f,v 1.5 1994/05/03 18:35:13 ty7777 Exp ty7777 $'
a196 11
          OPEN (DISK, FILE = CFNAME, STATUS = 'OLD', ERR = 55)
          GO TO 77
55        WRITE (USEROUT, *) '*** Error: opening image file ', CFNAME (1:20), ' ***'
          RETURN
77        fd = getfd (DISK)		! get the file descriptor
          PETTNUM = getimage_type (%VAL(fd), CFNAME, ENCODED, NUMSLICES)
          IF (PETTNUM .EQ. -1) THEN
	    WRITE (STDOUT, *) 'Wrong image type for ', CFNAME
	    RETURN
          ENDIF
          CLOSE (DISK) 
d201 1
a201 1
          IF (PETTNUM .EQ. 10) THEN
d203 4
a206 1
            fd = getfd (DISK)		! get the file descriptor
d257 1
a257 1
        ZNUM      = (31 - SLICE) * 2
@


1.5
log
@Added processing for zorigin.
@
text
@d1 1
a1 1
C$Id: t1disp12.f,v 1.4 1993/12/28 17:05:34 ty7777 Exp ty7777 $
d3 3
d33 2
a34 2
C     and use zoom () to zoom in image. The ZOOMFACTOR is changed from
C        3 to 5.
d37 1
d130 1
a130 1
      RCSHEADER = '$Header$'
@


1.4
log
@Comment out the processing for outlined region.
@
text
@d1 1
a1 1
C$Id: t1disp12.f,v 1.3 1993/12/22 18:59:28 ty7777 Exp ty7777 $
d3 3
d72 10
d126 1
a126 1
      RCSHEADER = '$Id: t1disp12.f,v 1.3 1993/12/22 18:59:28 ty7777 Exp ty7777 $'
d185 30
@


1.3
log
@Added midlines.
@
text
@d1 1
a1 1
C$Id: t1disp12.f,v 1.2 1993/11/23 15:34:00 ty7777 Exp ty7777 $
d3 3
d27 4
a30 2
C     and use zoom () to zoom in image. The ZOOMFACTOR is changed to
C     5 from 3.
d34 1
a34 1
C     with MAG=1, zoomed x 3.
d113 1
a113 1
      RCSHEADER = '$Id: t1disp12.f,v 1.2 1993/11/23 15:34:00 ty7777 Exp ty7777 $'
d197 2
a198 2
          CALL T1TRACE
          CALL RAMERS (XST, YST, XDIM, XDIM, PLANE, RMD)
@


1.2
log
@Changed ZOOMFACTOR.
@
text
@d1 1
a1 1
C$Id: t1disp12.f,v 1.1 1993/11/17 16:55:07 ty7777 Exp ty7777 $
d3 3
d61 2
d66 2
d108 1
a108 1
      RCSHEADER = '$Id: t1disp12.f,v 1.1 1993/11/17 16:55:07 ty7777 Exp ty7777 $'
d195 9
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
C$Id$
C$Log$
d20 3
d31 2
a33 1
C     YESNO
a36 1
C     RAMZOOM
d42 1
d44 14
a58 14
      INTEGER*4  XDIM, YDIM  ! dimensions displayed
      INTEGER*4  SCAN        ! scan direction for RAMIMG
      INTEGER*4  TYPE        ! type for RAMIMG
      INTEGER*4  PLANES      ! mask for RAMIMG
      INTEGER*4  ZFIRST,ZLAST! first and last slices to display
      INTEGER*4  ZNUM        ! slice as stereotaxic coordinate
      INTEGER*4  TSIZE       ! text size
      INTEGER*4  INUM        ! number of image display (1-12)
      INTEGER*4  XLOC(12)    ! XST Ramtek coords for 12 image frames
      INTEGER*4  YLOC(12)    ! YST Ramtek coords for 12 image frames
      INTEGER*4  NUMSLCS     ! number of slices
      INTEGER*4  NUMPETT     ! PETT number
      INTEGER*4  I,J,N       ! local
C
d60 1
d62 3
a64 2
      INTEGER*2  LINE(50,50) ! pixels written to Ramtek
      INTEGER*2  HDR(128)    ! slice header
d66 1
a66 1
      CHARACTER*1    TEXT(100)
d81 1
a81 1
      DATA SCAN, TYPE, PLANES, TSIZE /0,0,4095,1/
d84 3
a86 3
      DATA XLOC /  0,  53, 106, 159,
     &             0,  53, 106, 159,
     &             0,  53, 106, 159/
d88 8
d97 2
a98 3
     &            56,  56,  56,  56,
     &           112, 112, 112, 112/
C
d101 1
a101 9
      RCSHEADER = '$Id$'
      ERROR   = .FALSE.
      BELL = CHAR(7)
      MAG = 1
      ZOOMFACTOR = 3
      SIZE = 50
      XDIM = SIZE
      YDIM = SIZE
      ABSSCALE = .TRUE.
d103 11
d115 1
d118 3
a120 3
      N = XMAX-XMIN+1
      IF (N.GT.SIZE) THEN
        WRITE(USEROUT,8000) BELL
d123 2
a124 2
        XFIRST = XMIN - (SIZE-N)/2
        XLAST = XFIRST + SIZE - 1
d127 3
a129 3
      N = YMAX-YMIN+1
      IF (N.GT.SIZE) THEN
        WRITE(USEROUT,8000) BELL
d132 2
a133 2
        YFIRST = YMIN - (SIZE-N)/2
        YLAST = YFIRST + SIZE - 1
d138 1
a138 1
      CALL YESNO(Q,OUTLINE)
d140 2
a141 2
      CALL RAMRST(RMD)
C      CALL RAMZOOM(ZOOMFACTOR,RMD)   Tom Yang
d144 2
a145 2
      ZLAST = ZFIRST+11
      IF (ZLAST.GT.ZMAX) ZLAST=ZMAX
d148 1
a148 1
100   DO 500 SLICE=ZFIRST,ZLAST
d152 2
a153 2
        CALL GETIMG(IMAGE,HDR,CFNAME,SLICE,NUMSLCS,
     &    NUMPETT,DISK,USEROUT,HDRONLY,ERROR)
d155 1
a155 1
          WRITE(USEROUT,8050) CFNAME,CHAR(7)
d159 1
a159 1
8050    FORMAT(1X,'*** Error reading ',A,A1)
d161 8
a168 8
        INUM = INUM+1
        XST = XLOC(INUM)
        YST = YLOC(INUM)
        DO 300 J=1,SIZE
          DO 200 I=1,SIZE
            XTEMP = SCALER*FLOAT(IMAGE(XFIRST+I-1,YFIRST+J-1))
            IF (XTEMP.GT.0.) THEN
              LINE(I,J) = INT(NINT(XTEMP))
d170 1
a170 1
              LINE(I,J) = 0
d175 5
a179 1
      CALL RAMIMG (LINE, XDIM, YDIM, XST, YST, SCAN, TYPE, RMD, ABSSCALE)
d186 1
a186 1
          CALL RAMERS(XST,YST,XDIM,XDIM,PLANE,RMD)
d191 9
a199 7
8100    FORMAT(I3)
8120    FORMAT(I2)
        STR(1:8) = '   (  )~'
        ZNUM = (31-SLICE)*2
        WRITE(STR(1:3),8100) ZNUM
        WRITE(STR(5:6),8120) SLICE
        CALL RAMWRITE(XST,YST+48,TSIZE,TSIZE,SCAN,PLANES,RMD,TEXT,FONT1C)
d204 1
a204 1
      IF (ZMAX.GT.ZLAST) THEN
d207 1
a207 1
        CALL YESNO(Q,A)
d209 3
a211 3
          ZFIRST = ZLAST+1
          ZLAST = ZFIRST+11
          IF (ZMAX.LT.ZLAST) ZLAST=ZMAX
@
