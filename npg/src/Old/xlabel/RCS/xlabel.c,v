head	1.10;
access;
symbols;
locks; strict;
comment	@ * @;


1.10
date	99.02.15.14.26.34;	author tom;	state Exp;
branches;
next	1.9;

1.9
date	95.01.05.16.30.44;	author ty7777;	state Exp;
branches;
next	1.8;

1.8
date	94.12.30.20.51.58;	author ty7777;	state Exp;
branches;
next	1.7;

1.7
date	94.12.07.17.28.38;	author ty7777;	state Exp;
branches;
next	1.6;

1.6
date	94.10.25.18.46.29;	author ty7777;	state Exp;
branches;
next	1.5;

1.5
date	94.08.25.18.11.06;	author ty7777;	state Exp;
branches;
next	1.4;

1.4
date	94.02.18.20.36.42;	author ty7777;	state Exp;
branches;
next	1.3;

1.3
date	93.12.13.19.51.02;	author ty7777;	state Exp;
branches;
next	1.2;

1.2
date	93.03.31.16.35.18;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	93.03.08.22.48.05;	author ty7777;	state Exp;
branches;
next	;


desc
@xlabel initial checking in.
@


1.10
log
@start to update & port
@
text
@/*$Id: xlabel.c,v 1.9 1995/01/05 16:30:44 ty7777 Exp tom $*/
/*$Log: xlabel.c,v $
 * Revision 1.9  1995/01/05  16:30:44  ty7777
 * Deleted widget_width and widget_height.
 *
 * Revision 1.8  1994/12/30  20:51:58  ty7777
 * Added processing for big fonts.
 *
 * Revision 1.7  1994/12/07  17:28:38  ty7777
 * Added the local_path.
 *
 * Revision 1.6  1994/10/25  18:46:29  ty7777
 * Use SELECT instead of COORD_SELECT.
 *
 * Revision 1.5  1994/08/25  18:11:06  ty7777
 * Before porting to X11R5.
 *
 * Revision 1.4  1994/02/18  20:36:42  ty7777
 * Try to add logofile.
 *
 * Revision 1.3  1993/12/13  19:51:02  ty7777
 * Same as the lase one.
 *
 * Revision 1.2  1993/03/31  16:35:18  ty7777
 * Add message box.
 *
 * Revision 1.1  1993/03/08  22:48:05  ty7777
 * Initial revision
 **/
/*__________________________________________________________________________________________
	Function:
		main
	Arguments:
		argc:	number of command line arguments
		argv:	vector of command line arguments
			argv[0] : name of input file for gammaz data sets
	Description:
		Labeling program main. This program reads in an image file
		and do image editing on it.
__________________________________________________________________________________________*/
#include "app.h"
#include "xlabel.h"
#include <winutil.h>

#define MAX_STRINGS  64
#define MAX_ARGS     64

#include "xlabel.widgets"
#include "xlabel.callbacks"

char           *fontTable[] = {"courier",
	"helvetica",
	"new century schoolbook",
	"symbol",
"times"};

char           *fontSizeTable[] = {"8",
	"10",
	"12",
	"14",
	"18",
	"24",
	"32",
	"36",
	"48",
	"60",
	"72",
	"100",
	"150",
	"200",
"300"};

char           *nonImageColorList[] = {"Black",
	"Blue",
	"Cyan",
	"Green",
	"Yellow",
	"Magenta",
	"Red",
"White"};

char           *alignmentList[] = {"Left",
	"Center",
"Right"};

char           *slantList[] = {"Roman",
	"Italic",
"Oblique"};

char           *weightList[] = {"Medium",
"Bold"};

char           *orientList[] = {"Horizontal",
"Vertical"};

static unsigned char rect_bitmap[32] = {
	0xff, 0xff, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01,
	0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01,
	0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01,
0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0xff, 0xff};

static unsigned char filled_rect_bitmap[32] = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff};

static unsigned char circle_bitmap[32] = {
	0x07, 0xc0, 0x18, 0x30, 0x20, 0x10, 0x40, 0x08,
	0x40, 0x08, 0x80, 0x04, 0x80, 0x04, 0x80, 0x04,
	0x80, 0x04, 0x80, 0x04, 0x40, 0x08, 0x40, 0x08,
0x20, 0x10, 0x18, 0x30, 0x07, 0xc0, 0x00, 0x00};

static unsigned char filled_circle_bitmap[32] = {
	0x07, 0xc0, 0x1f, 0xf0, 0x3f, 0xf8, 0x7f, 0xfc,
	0x7f, 0xfc, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe,
	0xff, 0xfe, 0xff, 0xfe, 0x7f, 0xfc, 0x7f, 0xfc,
0x3f, 0xf8, 0x1f, 0xf0, 0x07, 0xc0, 0x00, 0x00};

static unsigned char diamond_bitmap[32] = {
	0x01, 0x80, 0x02, 0x40, 0x04, 0x20, 0x08, 0x10,
	0x10, 0x08, 0x20, 0x04, 0x40, 0x02, 0x80, 0x01,
	0x80, 0x01, 0x40, 0x02, 0x20, 0x04, 0x10, 0x08,
0x08, 0x10, 0x04, 0x20, 0x02, 0x40, 0x01, 0x80};

static unsigned char filled_diamond_bitmap[32] = {
	0x01, 0x80, 0x03, 0xc0, 0x07, 0xe0, 0x0f, 0xf0,
	0x1f, 0xf8, 0x3f, 0xfc, 0x7f, 0xfe, 0xff, 0xff,
	0xff, 0xff, 0x7f, 0xfe, 0x3f, 0xfc, 0x1f, 0xf8,
0x0f, 0xf0, 0x07, 0xe0, 0x03, 0xc0, 0x01, 0x80};

static unsigned char up_triangle_bitmap[32] = {
	0x01, 0x80, 0x02, 0x40, 0x02, 0x40, 0x04, 0x20,
	0x04, 0x20, 0x08, 0x10, 0x08, 0x10, 0x10, 0x08,
	0x10, 0x08, 0x20, 0x04, 0x20, 0x04, 0x20, 0x04,
0x40, 0x02, 0x40, 0x02, 0x80, 0x01, 0xff, 0xff};

static unsigned char filled_up_triangle_bitmap[32] = {
	0x01, 0x80, 0x01, 0x80, 0x03, 0xc0, 0x03, 0xc0,
	0x07, 0xe0, 0x07, 0xe0, 0x0f, 0xf0, 0x0f, 0xf0,
	0x1f, 0xf8, 0x1f, 0xf8, 0x3f, 0xfc, 0x3f, 0xfc,
0x7f, 0xfe, 0x7f, 0xfe, 0xff, 0xff, 0xff, 0xff};

static unsigned char down_triangle_bitmap[32] = {
	0xff, 0xff, 0x80, 0x01, 0x40, 0x02, 0x40, 0x02,
	0x20, 0x04, 0x20, 0x04, 0x20, 0x04, 0x10, 0x08,
	0x10, 0x08, 0x08, 0x10, 0x08, 0x10, 0x04, 0x20,
0x04, 0x20, 0x02, 0x40, 0x02, 0x40, 0x01, 0x80};

static unsigned char filled_down_triangle_bitmap[32] = {
	0xff, 0xff, 0xff, 0xff, 0x7f, 0xfe, 0x7f, 0xfe,
	0x3f, 0xfc, 0x3f, 0xfc, 0x1f, 0xf8, 0x1f, 0xf8,
	0x0f, 0xf0, 0x0f, 0xf0, 0x07, 0xe0, 0x07, 0xe0,
0x03, 0xc0, 0x03, 0xc0, 0x01, 0x80, 0x01, 0x80};

static unsigned char left_triangle_bitmap[32] = {
	0x00, 0x03, 0x00, 0x0c, 0x00, 0x31, 0x00, 0xc1,
	0x03, 0x01, 0x0c, 0x01, 0x30, 0x01, 0xc0, 0x01,
	0xc0, 0x01, 0x30, 0x01, 0x0c, 0x01, 0x03, 0x01,
0x00, 0xc1, 0x00, 0x31, 0x00, 0x0c, 0x00, 0x03};

static unsigned char filled_left_triangle_bitmap[32] = {
	0x00, 0x03, 0x00, 0x0f, 0x00, 0x3f, 0x00, 0xff,
	0x03, 0xff, 0x0f, 0xff, 0x3f, 0xff, 0xff, 0xff,
	0xff, 0xff, 0x3f, 0xff, 0x0f, 0xff, 0x03, 0xff,
0x00, 0xff, 0x00, 0x3f, 0x00, 0x0f, 0x00, 0x03};

static unsigned char right_triangle_bitmap[32] = {
	0xc0, 0x00, 0xb0, 0x00, 0x8c, 0x00, 0x83, 0x00,
	0x80, 0xc0, 0x80, 0x30, 0x80, 0x0c, 0x80, 0x03,
	0x80, 0x03, 0x80, 0x0c, 0x80, 0x30, 0x80, 0xc0,
0x83, 0x00, 0x8c, 0x00, 0xb0, 0x00, 0xc0, 0x00};

static unsigned char filled_right_triangle_bitmap[32] = {
	0xc0, 0x00, 0xf0, 0x00, 0xfc, 0x00, 0xff, 0x00,
	0xff, 0xc0, 0xff, 0xf0, 0xff, 0xfc, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xfc, 0xff, 0xf0, 0xff, 0xc0,
0xff, 0x00, 0xfc, 0x00, 0xf0, 0x00, 0xc0, 0x00};

void     SetColorParameters (display, window, screen, default_parameters)
	Display        *display;
	Window          window;
	int             screen;
	PARAMETERS_DATA *default_parameters;
{
	int             n;
	Arg             arglist[2];
	Pixel           selected_color_pixel;
	XColor          color;
	Colormap        dcmap;

	n = 0;
	XtSetArg (arglist[n], XtNbackground, &pixelTextColor);
	n++;
	XtGetValues (GetActiveWidget (default_parameters->font_color_set,
				      MAX_NONIMAGE_COLOR), arglist, n);

	n = 0;
	XtSetArg (arglist[n], XtNbackground, &pixelLineColor);
	n++;
	XtGetValues (GetActiveWidget (default_parameters->line_color_set,
				      MAX_NONIMAGE_COLOR), arglist, n);

	n = 0;
	XtSetArg (arglist[n], XtNbackground, &selected_color_pixel);
	n++;
	XtGetValues (GetActiveWidget (default_parameters->back_color_set,
				      MAX_NONIMAGE_COLOR), arglist, n);
	color.pixel = selected_color_pixel;
	dcmap = XDefaultColormap (display, screen);
	XQueryColor (display, dcmap, &color);
	rgbBackground.red = color.red;
	rgbBackground.green = color.green;
	rgbBackground.blue = color.blue;
	AppColormap (display, window);
}

Widget          createDialogShell (name)
	char           *name;
{
	Widget          shell;
	char           *s;

	s = XtMalloc (strlen (name) + 4);
	strcpy (s, name);
	strcat (s, "_ds");
	shell = XmCreateDialogShell (appShell, s, NULL, 0);
	XtFree (s);
	return (shell);
}

main (argc, argv)
	int             argc;
	char          **argv;
{
	Arg             arglist[MAX_ARGS];
	ARROW_OPTIONS_DATA cancelArrowOptionsData;
	ARROW_OPTIONS_DATA selectArrowOptionsData;
	DATA_FILE_SELECTION DefaultsFileData;
	DATA_FILE_SELECTION selectFileData;
	Display        *display;		 /* X display */
	DRAW_DATA       draw_data;
	FILE_SELECTION_DATA getDefaultsSelectionData;
	FILE_SELECTION_DATA openWinDumpSelectionData;
	FILE_SELECTION_DATA saveDefaultsSelectionData;
	FILE_SELECTION_DATA saveWinDumpSelectionData;
	FONT_DATA       cancelFontData;
	FONT_DATA       selectFontData;
	GC              gcCanvas;		 /* gc for canvas */
	GC              xorgc;			 /* gc for inverting */
	GRAPHICS_DATA   graphics_data;
	LABEL_CHANGE_DATA areaSavedLabel;
	LABEL_CHANGE_DATA fileFormatLabel;
	LINE_ATTRIB_DATA cancelLineAttribData;
	LINE_ATTRIB_DATA selectLineAttribData;
	NONIMAGE_COLOR_DATA backColorData;
	PARAMETERS_DATA default_parameters;
	Pixel           background;
	Pixel           foreground;
	Pixel           selected_color_pixel;
	Pixmap          AF3DSymbols[MAX_SYMBOL_NUM];
	SAVE_IMAGE_DATA cancelSaveImageData;
	SAVE_IMAGE_DATA selectSaveImageData;
	SYMBOL_DATA     cancelSymbolData;
	SYMBOL_DATA     selectSymbolData;
	SYMBOL_MENU     symbol_menu;
	TEXT_EDIT_DATA  mouseTextEditData;
	TEXT_EDIT_DATA  coordTextEditData;
	TEXT_EDIT_DATA  cancelTextEditData;
	Widget          backColorSet[MAX_NONIMAGE_COLOR];
	Widget          fontColorSet[MAX_NONIMAGE_COLOR];
	Widget          lineColorSet[MAX_NONIMAGE_COLOR];
	Window          root_window;		 /* window to display in */
	Widget          textAlignment[ALIGNMENT_NUM];
	Widget          textOrient[ORIENT_NUM];
	Widget          textSlant[SLANT_NUM];
	Widget          textWeight[WEIGHT_NUM];
	Widget          widget_buffer;
	Window          window;			 /* window to display in */
	XColor          color;
	XmString        stringTable[MAX_STRINGS];
	XmString        xm_cancel;
	XmString        xmfont_table[5];
	XmString        xm_select;
	XmString        xmsize_table[15];
	XmString        xmstr[7];
	XSetWindowAttributes wattr;		 /* window attribute buffer */
	char           *local_path;
	char           *logofile;
	char           *parameter_file;
	char          **symbol_names = symbolNames;
	char            szBuffer[MAXLINE];
	int             i, j;			 /* counters */
	int             n;
	int             screen;			 /* X screen */
	int            *symbol_size = &nSymbolSize;

	local_path = argv[1];
	parameter_file = argv[2];

	/*
	 * logofile	= argv [1];
	 */

	for (i = 0; i < XtNumber (fontTable); i++) {
		xmfont_table[i] = XmStringCreate (fontTable[i], XmSTRING_DEFAULT_CHARSET);
	}

	for (i = 0; i < XtNumber (fontSizeTable); i++) {
		xmsize_table[i] = XmStringCreate (fontSizeTable[i], XmSTRING_DEFAULT_CHARSET);
	}

	appShell = XtInitialize ("topLevel", "XLabel", NULL, 0, &argc, argv);

	/*
	 * Get the current display and screen
	 */
	display = XtDisplay (appShell);
	screen = DefaultScreen (display);
	IMAGE_DATA_TYPE = XInternAtom (display, "Image Data Type", 0);
	IMAGE_COLOR_TYPE = XInternAtom (display, "Image Color Type", 0);
	IMAGE_NCOLOR = XInternAtom (display, "Image Color Number", 0);

	xm_select = XmStringCreate ("Select", XmSTRING_DEFAULT_CHARSET);
	xm_cancel = XmStringCreate ("Cancel", XmSTRING_DEFAULT_CHARSET);

#include "xlabel.code"

	XtFree (xm_select);
	XtFree (xm_cancel);

	backColorSet[0] = toggleBackBlack;
	backColorSet[1] = toggleBackBlue;
	backColorSet[2] = toggleBackCyan;
	backColorSet[3] = toggleBackGreen;
	backColorSet[4] = toggleBackYellow;
	backColorSet[5] = toggleBackMagenta;
	backColorSet[6] = toggleBackRed;
	backColorSet[7] = toggleBackWhite;

	fontColorSet[0] = toggleTextBlack;
	fontColorSet[1] = toggleTextBlue;
	fontColorSet[2] = toggleTextCyan;
	fontColorSet[3] = toggleTextGreen;
	fontColorSet[4] = toggleTextYellow;
	fontColorSet[5] = toggleTextMagenta;
	fontColorSet[6] = toggleTextRed;
	fontColorSet[7] = toggleTextWhite;

	textAlignment[0] = toggleLeft;
	textAlignment[1] = toggleCenter;
	textAlignment[2] = toggleRight;

	textSlant[0] = toggleRoman;
	textSlant[1] = toggleItalic;
	textSlant[2] = toggleOblique;

	textWeight[0] = toggleMedium;
	textWeight[1] = toggleBold;

	textOrient[0] = toggleHori;
	textOrient[1] = toggleVert;

	lineColorSet[0] = toggleLineBlack;
	lineColorSet[1] = toggleLineBlue;
	lineColorSet[2] = toggleLineCyan;
	lineColorSet[3] = toggleLineGreen;
	lineColorSet[4] = toggleLineYellow;
	lineColorSet[5] = toggleLineMagenta;
	lineColorSet[6] = toggleLineRed;
	lineColorSet[7] = toggleLineWhite;

	symbol_menu.toggle_color_set = toggleSymbolColor;
	symbol_menu.toggle_symbol_set = toggleAF3DSymbol;
	symbol_menu.size_scale = &scaleSymbolSize;
	symbol_menu.filled = &toggleFilledSymbol;

	default_parameters.back_color_set = backColorSet;
	default_parameters.font_color_set = fontColorSet;
	default_parameters.font_list = &textFontList;
	default_parameters.size_list = &textSizeList;
	default_parameters.font_name = &textSelectedFontName;
	default_parameters.font_size = &textSelectedSizeName;
	default_parameters.line_space = &scaleLineSpace;
	default_parameters.text_alignment = textAlignment;
	default_parameters.text_slant = textSlant;
	default_parameters.text_weight = textWeight;
	default_parameters.text_orient = textOrient;
	default_parameters.line_color_set = lineColorSet;
	default_parameters.line_width = &scaleLineWidth;
	default_parameters.arrow_width = &scaleArrowWidth;
	default_parameters.arrow_length = &scaleArrowLength;
	default_parameters.save_format = &toggleFileFormat;
	default_parameters.save_area = &toggleAreaSaved;
	default_parameters.symbol_menu = &symbol_menu;


	XtRealizeWidget (appShell);

	/*
	 * Get the drawing area window.
	 */
	root_window = XtWindow (appShell);
	window = XtWindow (mainWindow_ww);

	/*
	 * Set backing store on window
	 */
	wattr.backing_store = WhenMapped;
	wattr.background_pixel = BACKGROUND_CELL;
	XChangeWindowAttributes (display, window, CWBackingStore | CWBackPixel, &wattr);

	/*
	 * Set the graphics context
	 */
	gcCanvas = XCreateGC (display, window, 0, 0);
	xorgc = CreateXorGC (mainWindow_ww);

	GetDefaultParameters (display, root_window, gcCanvas,
			      parameter_file, &default_parameters);

	draw_data.display = display;
	draw_data.window = window;
	draw_data.gc = gcCanvas;

	/*
	 * LoadXwd (display, window, gcCanvas, logofile, 0, 0, TRUE);
	 */

	XtAddCallback (quitButton, XmNactivateCallback, QuitCallback, NULL);
	XtAddCallback (clearScreen, XmNactivateCallback, ClearWindowCallback, &draw_data);

	XtAddCallback (XmFileSelectionBoxGetChild (winDumpFileSelection,
						   XmDIALOG_HELP_BUTTON), XmNactivateCallback,
		       CancelCallback, winDumpFileSelection);

	selectFileData.draw_data = &draw_data;
	selectFileData.root_window = root_window;
	selectFileData.dialog = winDumpFileSelection;
	selectFileData.information = frameSaveOptions;
	XtAddCallback (XmFileSelectionBoxGetChild (winDumpFileSelection,
						   XmDIALOG_CANCEL_BUTTON), XmNactivateCallback,
		       DefaultsParCallback, &selectFileData);

	XtAddCallback (XmMessageBoxGetChild (winMoveInfo,
					     XmDIALOG_OK_BUTTON), XmNactivateCallback,
		       SaveWinDumpCallback, &draw_data);

	XtAddCallback (XmFileSelectionBoxGetChild (defaultsFileSelection,
						   XmDIALOG_HELP_BUTTON), XmNactivateCallback,
		       CancelCallback, defaultsFileSelection);

	DefaultsFileData.draw_data = &draw_data;
	DefaultsFileData.root_window = root_window;
	DefaultsFileData.dialog = defaultsFileSelection;
	DefaultsFileData.default_parameters = &default_parameters;
	XtAddCallback (XmFileSelectionBoxGetChild (defaultsFileSelection,
						   XmDIALOG_CANCEL_BUTTON), XmNactivateCallback,
		       DefaultsParCallback, &DefaultsFileData);

	/*
	 * Background Color Callback
	 */
	backColorData.display = display;
	backColorData.root_window = root_window;
	backColorData.rgb_value = &rgbBackground;
	backColorData.back_color_set = backColorSet;
	backColorData.dialog = &frameBackColor;
	XtAddCallback (selectBackColor, XmNactivateCallback,
		       NonImageColorCallback, &backColorData);

	selectFontData.draw_data = &draw_data;
	selectFontData.node_flag = SELECT;
	selectFontData.frame = frameTextOptions;
	selectFontData.font_color_set = fontColorSet;
	selectFontData.font_list = &textFontList;
	selectFontData.font_name = &textSelectedFontName;
	selectFontData.weight_set = textWeight;
	selectFontData.orient_set = textOrient;
	selectFontData.slant_set = textSlant;
	selectFontData.size_list = &textSizeList;
	selectFontData.size_name = &textSelectedSizeName;
	selectFontData.alignment_set = textAlignment;
	selectFontData.line_spacing = scaleLineSpace;
	XtAddCallback (selectTextOptions, XmNactivateCallback,
		       SetTextFontCallback, &selectFontData);

	cancelFontData.draw_data = &draw_data;
	cancelFontData.node_flag = CANCEL;
	cancelFontData.frame = frameTextOptions;
	cancelFontData.font_color_set = fontColorSet;
	cancelFontData.font_list = &textFontList;
	cancelFontData.font_name = &textSelectedFontName;
	cancelFontData.slant_set = textSlant;
	cancelFontData.weight_set = textWeight;
	cancelFontData.orient_set = textOrient;
	cancelFontData.size_list = &textSizeList;
	cancelFontData.size_name = &textSelectedSizeName;
	cancelFontData.alignment_set = textAlignment;
	cancelFontData.line_spacing = scaleLineSpace;
	XtAddCallback (cancelTextOptions, XmNactivateCallback,
		       SetTextFontCallback, &cancelFontData);

	mouseTextEditData.node_flag = MOUSE_SELECT;
	mouseTextEditData.draw_data = &draw_data;
	mouseTextEditData.dialog = frameTextEdit;
	mouseTextEditData.text = textTextEdit;
	mouseTextEditData.xstart = xTextEditCoordText;
	mouseTextEditData.ystart = yTextEditCoordText;
	XtAddCallback (mouseTextEdit, XmNactivateCallback,
		       TextEditCallback, &mouseTextEditData);

	coordTextEditData.node_flag = SELECT;
	coordTextEditData.draw_data = &draw_data;
	coordTextEditData.dialog = frameTextEdit;
	coordTextEditData.text = textTextEdit;
	coordTextEditData.xstart = xTextEditCoordText;
	coordTextEditData.ystart = yTextEditCoordText;
	XtAddCallback (coordTextEdit, XmNactivateCallback,
		       TextEditCallback, &coordTextEditData);

	cancelTextEditData.node_flag = CANCEL;
	cancelTextEditData.draw_data = &draw_data;
	cancelTextEditData.dialog = frameTextEdit;
	cancelTextEditData.text = textTextEdit;
	cancelTextEditData.xstart = xTextEditCoordText;
	cancelTextEditData.ystart = yTextEditCoordText;
	XtAddCallback (cancelTextEdit, XmNactivateCallback,
		       TextEditCallback, &cancelTextEditData);

	selectLineAttribData.node_flag = SELECT;
	selectLineAttribData.frame = frameLineAttrib;
	selectLineAttribData.line_color_set = lineColorSet;
	selectLineAttribData.line_width = scaleLineWidth;
	XtAddCallback (selectLineAttrib, XmNactivateCallback,
		       SetLineAttribCallback, &selectLineAttribData);

	cancelLineAttribData.node_flag = CANCEL;
	cancelLineAttribData.frame = frameLineAttrib;
	cancelLineAttribData.line_color_set = lineColorSet;
	cancelLineAttribData.line_width = scaleLineWidth;
	XtAddCallback (cancelLineAttrib, XmNactivateCallback,
		       SetLineAttribCallback, &cancelLineAttribData);

	selectArrowOptionsData.node_flag = SELECT;
	selectArrowOptionsData.frame = frameArrowOptions;
	selectArrowOptionsData.arrow_width = scaleArrowWidth;
	selectArrowOptionsData.arrow_length = scaleArrowLength;
	XtAddCallback (selectArrowOptions, XmNactivateCallback,
		       SetArrowOptionsCallback, &selectArrowOptionsData);

	cancelArrowOptionsData.node_flag = CANCEL;
	cancelArrowOptionsData.frame = frameArrowOptions;
	cancelArrowOptionsData.arrow_width = scaleArrowWidth;
	cancelArrowOptionsData.arrow_length = scaleArrowLength;
	XtAddCallback (cancelArrowOptions, XmNactivateCallback,
		       SetArrowOptionsCallback, &cancelArrowOptionsData);

	selectSaveImageData.node_flag = SELECT;
	selectSaveImageData.dialog = frameSaveOptions;
	selectSaveImageData.information = winMoveInfo;
	selectSaveImageData.file_format = toggleFileFormat;
	selectSaveImageData.area_saved = toggleAreaSaved;
	XtAddCallback (selectSaveOptions, XmNactivateCallback,
		       SaveOptionsCallback, &selectSaveImageData);

	cancelSaveImageData.node_flag = CANCEL;
	cancelSaveImageData.dialog = frameSaveOptions;
	cancelSaveImageData.information = winMoveInfo;
	cancelSaveImageData.file_format = toggleFileFormat;
	cancelSaveImageData.area_saved = toggleAreaSaved;
	XtAddCallback (cancelSaveOptions, XmNactivateCallback,
		       SaveOptionsCallback, &cancelSaveImageData);

	selectSymbolData.node_flag = SELECT;
	selectSymbolData.dialog = frameAF3DSymbol;
	selectSymbolData.symbol_menu = &symbol_menu;
	XtAddCallback (selectAF3DSymbol, XmNactivateCallback,
		       AF3DSymbolCallback, &selectSymbolData);

	cancelSymbolData.node_flag = CANCEL;
	cancelSymbolData.dialog = frameAF3DSymbol;
	cancelSymbolData.symbol_menu = &symbol_menu;
	XtAddCallback (cancelAF3DSymbol, XmNactivateCallback,
		       AF3DSymbolCallback, &cancelSymbolData);

	/*
	 * Add Event Handlers for Mouse Button Events
	 */
	graphics_data.draw_data = &draw_data;
	graphics_data.root_window = root_window;
	graphics_data.xorgc = xorgc;
	graphics_data.point_num = 0;
	graphics_data.xtext_edit_coord = xTextEditCoordText;
	graphics_data.ytext_edit_coord = yTextEditCoordText;

	XtAddCallback (cutButton, XmNactivateCallback, LinePathCallback, &graphics_data);
	XtAddCallback (copyButton, XmNactivateCallback, LinePathCallback, &graphics_data);
	XtAddCallback (pasteButton, XmNactivateCallback, LinePathCallback, &graphics_data);
	XtAddCallback (labelPush, XmNactivateCallback, LinePathCallback, &graphics_data);
	XtAddCallback (freeHandPush, XmNactivateCallback, LinePathCallback, &graphics_data);
	XtAddCallback (lineSegPush, XmNactivateCallback, LinePathCallback, &graphics_data);
	XtAddCallback (horiLinePush, XmNactivateCallback, LinePathCallback, &graphics_data);
	XtAddCallback (vertLinePush, XmNactivateCallback, LinePathCallback, &graphics_data);
	XtAddCallback (arrowPush, XmNactivateCallback, LinePathCallback, &graphics_data);
	XtAddCallback (rectPush, XmNactivateCallback, LinePathCallback, &graphics_data);
	XtAddCallback (ellipsePush, XmNactivateCallback, LinePathCallback, &graphics_data);
	XtAddCallback (circlePush, XmNactivateCallback, LinePathCallback, &graphics_data);
	XtAddCallback (polylinePush, XmNactivateCallback, LinePathCallback, &graphics_data);
	XtAddCallback (filledRectPush, XmNactivateCallback, LinePathCallback, &graphics_data);
	XtAddCallback (filledEllipsePush, XmNactivateCallback, LinePathCallback, &graphics_data);
	XtAddCallback (filledCirclePush, XmNactivateCallback, LinePathCallback, &graphics_data);
	XtAddCallback (polygonPush, XmNactivateCallback, LinePathCallback, &graphics_data);

	XtAddCallback (mainWindow_ww, XmNexposeCallback, RefreshCallback, &graphics_data);

	XtAddEventHandler (mainWindow_ww, ButtonPressMask, FALSE,
			   ButtonDownEventHandler, &graphics_data);
	XtAddEventHandler (mainWindow_ww, ButtonMotionMask, FALSE,
			   ButtonMoveEventHandler, &graphics_data);
	XtAddEventHandler (mainWindow_ww, ButtonReleaseMask, FALSE,
			   ButtonReleaseEventHandler, &graphics_data);

	/*
	 * Grab the mouse pointer on mouse events in drawing screen
	 */
	XGrabButton (XtDisplay (mainWindow_ww), AnyButton, AnyModifier, window, TRUE,
		     ButtonPressMask | ButtonMotionMask | ButtonReleaseMask, GrabModeAsync,
		  GrabModeAsync, window, XCreateFontCursor (XtDisplay (mainWindow_ww), XC_fleur));

	XtMainLoop ();
}
@


1.9
log
@Deleted widget_width and widget_height.
@
text
@d1 1
a1 1
/*$Id: xlabel.c,v 1.8 1994/12/30 20:51:58 ty7777 Exp ty7777 $*/
d3 3
d30 1
a30 11

#include "app.h"
#include "xlabel.h"

#define MAX_STRINGS  64
#define MAX_ARGS     64

#include "xlabel.widgets"
#include "xlabel.callbacks"

/*__________________________________________________________________________________________	
d32 1
a32 1
		main	
d41 3
d45 2
a46 5
char	*fontTable []		= {"courier", 
				   "helvetica", 
				   "new century schoolbook", 
				   "symbol", 
				   "times"};
d48 2
a49 15
char	*fontSizeTable []	= {"8", 
				   "10", 
				   "12", 
				   "14", 
				   "18", 
				   "24", 
				   "32", 
				   "36", 
				   "48", 
				   "60", 
				   "72", 
				   "100", 
				   "150", 
				   "200", 
				   "300"};
d51 5
a55 8
char	*nonImageColorList []	= {"Black", 
				   "Blue", 
				   "Cyan", 
				   "Green", 
				   "Yellow", 
				   "Magenta", 
				   "Red", 
				   "White"};
d57 15
a71 3
char	*alignmentList []	= {"Left", 
				   "Center", 
				   "Right"};
d73 8
a80 3
char	*slantList []		= {"Roman", 
				   "Italic", 
				   "Oblique"};
d82 3
a84 2
char	*weightList []		= {"Medium", 
				   "Bold"};
d86 3
a88 2
char	*orientList []		= {"Horizontal", 
				   "Vertical"};
d90 2
a91 5
static unsigned char rect_bitmap [32] = {
	0xff, 0xff, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 
	0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 
	0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 
	0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0xff, 0xff};
d93 10
a102 3
static unsigned char filled_rect_bitmap [32] = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
d104 3
a106 1
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff};
d108 1
a108 1
static unsigned char circle_bitmap [32] = {   
d112 1
a112 1
	0x20, 0x10, 0x18, 0x30, 0x07, 0xc0, 0x00, 0x00};
d114 3
a116 3
static unsigned char filled_circle_bitmap [32] = {
	0x07, 0xc0, 0x1f, 0xf0, 0x3f, 0xf8, 0x7f, 0xfc, 
	0x7f, 0xfc, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
d118 1
a118 1
	0x3f, 0xf8, 0x1f, 0xf0, 0x07, 0xc0, 0x00, 0x00};
d120 3
a122 3
static unsigned char diamond_bitmap [32] = {
	0x01, 0x80, 0x02, 0x40, 0x04, 0x20, 0x08, 0x10, 
	0x10, 0x08, 0x20, 0x04, 0x40, 0x02, 0x80, 0x01, 
d124 1
a124 1
	0x08, 0x10, 0x04, 0x20, 0x02, 0x40, 0x01, 0x80};
d126 5
a130 5
static unsigned char filled_diamond_bitmap [32] = {
	0x01, 0x80, 0x03, 0xc0, 0x07, 0xe0, 0x0f, 0xf0, 
	0x1f, 0xf8, 0x3f, 0xfc, 0x7f, 0xfe, 0xff, 0xff, 
	0xff, 0xff, 0x7f, 0xfe, 0x3f, 0xfc, 0x1f, 0xf8, 
	0x0f, 0xf0, 0x07, 0xe0, 0x03, 0xc0, 0x01, 0x80};
d132 3
a134 3
static unsigned char up_triangle_bitmap [32] = {
	0x01, 0x80, 0x02, 0x40, 0x02, 0x40, 0x04, 0x20, 
	0x04, 0x20, 0x08, 0x10, 0x08, 0x10, 0x10, 0x08, 
d136 1
a136 1
	0x40, 0x02, 0x40, 0x02, 0x80, 0x01, 0xff, 0xff};
d138 5
a142 5
static unsigned char filled_up_triangle_bitmap [32] = {
	0x01, 0x80, 0x01, 0x80, 0x03, 0xc0, 0x03, 0xc0, 
	0x07, 0xe0, 0x07, 0xe0, 0x0f, 0xf0, 0x0f, 0xf0, 
	0x1f, 0xf8, 0x1f, 0xf8, 0x3f, 0xfc, 0x3f, 0xfc, 
	0x7f, 0xfe, 0x7f, 0xfe, 0xff, 0xff, 0xff, 0xff};
d144 3
a146 3
static unsigned char down_triangle_bitmap [32] = {
	0xff, 0xff, 0x80, 0x01, 0x40, 0x02, 0x40, 0x02, 
	0x20, 0x04, 0x20, 0x04, 0x20, 0x04, 0x10, 0x08, 
d148 1
a148 1
	0x04, 0x20, 0x02, 0x40, 0x02, 0x40, 0x01, 0x80};
d150 5
a154 5
static unsigned char filled_down_triangle_bitmap [32] = {
	0xff, 0xff, 0xff, 0xff, 0x7f, 0xfe, 0x7f, 0xfe, 
	0x3f, 0xfc, 0x3f, 0xfc, 0x1f, 0xf8, 0x1f, 0xf8, 
	0x0f, 0xf0, 0x0f, 0xf0, 0x07, 0xe0, 0x07, 0xe0, 
	0x03, 0xc0, 0x03, 0xc0, 0x01, 0x80, 0x01, 0x80};
d156 5
a160 5
static unsigned char left_triangle_bitmap [32] = {
	0x00, 0x03, 0x00, 0x0c, 0x00, 0x31, 0x00, 0xc1, 
	0x03, 0x01, 0x0c, 0x01, 0x30, 0x01, 0xc0, 0x01, 
	0xc0, 0x01, 0x30, 0x01, 0x0c, 0x01, 0x03, 0x01, 
	0x00, 0xc1, 0x00, 0x31, 0x00, 0x0c, 0x00, 0x03};
d162 3
a164 3
static unsigned char filled_left_triangle_bitmap [32] = {
	0x00, 0x03, 0x00, 0x0f, 0x00, 0x3f, 0x00, 0xff, 
	0x03, 0xff, 0x0f, 0xff, 0x3f, 0xff, 0xff, 0xff, 
d166 1
a166 1
	0x00, 0xff, 0x00, 0x3f, 0x00, 0x0f, 0x00, 0x03};
d168 3
a170 3
static unsigned char right_triangle_bitmap [32] = {
	0xc0, 0x00, 0xb0, 0x00, 0x8c, 0x00, 0x83, 0x00, 
	0x80, 0xc0, 0x80, 0x30, 0x80, 0x0c, 0x80, 0x03, 
d172 1
a172 1
	0x83, 0x00, 0x8c, 0x00, 0xb0, 0x00, 0xc0, 0x00};
d174 3
a176 3
static unsigned char filled_right_triangle_bitmap [32] = {
	0xc0, 0x00, 0xf0, 0x00, 0xfc, 0x00, 0xff, 0x00, 
	0xff, 0xc0, 0xff, 0xf0, 0xff, 0xfc, 0xff, 0xff, 
d178 1
a178 1
	0xff, 0x00, 0xfc, 0x00, 0xf0, 0x00, 0xc0, 0x00};
d180 5
a184 5
PUBLIC void SetColorParameters (display, window, screen, default_parameters)
	Display		*display;
	Window		window;
	int		screen;
	PARAMETERS_DATA	*default_parameters;
d186 5
a190 5
	int			n;
	Arg			arglist[2];
	Pixel			selected_color_pixel;
	XColor			color;
	Colormap		dcmap;
d192 5
a196 4
	n	= 0;
	XtSetArg (arglist[n], XtNbackground, &pixelTextColor); n++;
	XtGetValues (GetActiveWidget (default_parameters->font_color_set, 
					MAX_NONIMAGE_COLOR), arglist, n);
d198 17
a214 15
	n	= 0;
	XtSetArg (arglist[n], XtNbackground, &pixelLineColor); n++;
	XtGetValues (GetActiveWidget (default_parameters->line_color_set, 
					MAX_NONIMAGE_COLOR), arglist, n);
	
	n	= 0;
	XtSetArg (arglist [n], XtNbackground, &selected_color_pixel); n++;
	XtGetValues (GetActiveWidget (default_parameters->back_color_set, 
						MAX_NONIMAGE_COLOR), arglist, n);
	color.pixel	= selected_color_pixel;
	dcmap		= XDefaultColormap (display, screen);
	XQueryColor (display, dcmap, &color); 
	rgbBackground.red	= color.red;
	rgbBackground.green	= color.green;
	rgbBackground.blue	= color.blue;
d218 2
a219 2
Widget createDialogShell (name)
	char	*name;
d221 2
a222 2
	Widget	shell;
	char	*s;
d233 2
a234 2
	int	argc;
	char	**argv;
d236 61
a296 52
	Arg			arglist [MAX_ARGS];
	ARROW_OPTIONS_DATA	cancelArrowOptionsData;
	ARROW_OPTIONS_DATA	selectArrowOptionsData;
	DATA_FILE_SELECTION	DefaultsFileData;
	DATA_FILE_SELECTION	selectFileData;
	Display			*display;	/* X display */
	DRAW_DATA		draw_data;
	FILE_SELECTION_DATA	getDefaultsSelectionData;
	FILE_SELECTION_DATA	openWinDumpSelectionData;
	FILE_SELECTION_DATA	saveDefaultsSelectionData;
	FILE_SELECTION_DATA	saveWinDumpSelectionData;
	FONT_DATA		cancelFontData;
	FONT_DATA		selectFontData;
	GC			gcCanvas;       /* gc for canvas */
	GC			xorgc;      	/* gc for inverting */
	GRAPHICS_DATA		graphics_data;
	LABEL_CHANGE_DATA	areaSavedLabel;
	LABEL_CHANGE_DATA	fileFormatLabel;
	LINE_ATTRIB_DATA	cancelLineAttribData;
	LINE_ATTRIB_DATA	selectLineAttribData;
	NONIMAGE_COLOR_DATA	backColorData;
	PARAMETERS_DATA		default_parameters;
	Pixel			background;
	Pixel			foreground;
	Pixel			selected_color_pixel;
	Pixmap			AF3DSymbols [MAX_SYMBOL_NUM];
	SAVE_IMAGE_DATA		cancelSaveImageData;
	SAVE_IMAGE_DATA		selectSaveImageData;
	SYMBOL_DATA		cancelSymbolData;
	SYMBOL_DATA		selectSymbolData;
	SYMBOL_MENU		symbol_menu;
	TEXT_EDIT_DATA		mouseTextEditData;
	TEXT_EDIT_DATA		coordTextEditData;
	TEXT_EDIT_DATA		cancelTextEditData;
	Widget			backColorSet [MAX_NONIMAGE_COLOR];
	Widget			fontColorSet [MAX_NONIMAGE_COLOR];
	Widget			lineColorSet [MAX_NONIMAGE_COLOR];
	Window			root_window;         /* window to display in */
	Widget			textAlignment [ALIGNMENT_NUM];
	Widget			textOrient [ORIENT_NUM];
	Widget			textSlant [SLANT_NUM];
	Widget			textWeight [WEIGHT_NUM];
	Widget			widget_buffer;
	Window			window;         /* window to display in */
	XColor			color;
	XmString		stringTable [MAX_STRINGS];
	XmString		xm_cancel;
	XmString		xmfont_table [5];
	XmString		xm_select;
	XmString		xmsize_table [15];
	XmString		xmstr [7];
	XSetWindowAttributes	wattr;		/* window attribute buffer */
d298 2
a299 9
	char			*local_path;
	char			*logofile;
	char			*parameter_file;
	char			**symbol_names		= symbolNames;
	char			szBuffer [MAXLINE];
	int			i, j;		/* counters */
	int			n;
	int			screen;		/* X screen */
	int			*symbol_size		= &nSymbolSize;
a300 2
	local_path	= argv [1];
	parameter_file	= argv [2];
d302 2
a303 2
	logofile	= argv [1];
	*/
d305 2
a306 3
	for (i = 0; i < XtNumber (fontTable); i++)
	{
		xmfont_table [i] = XmStringCreate (fontTable[i], XmSTRING_DEFAULT_CHARSET);	
d309 2
a310 3
	for (i = 0; i < XtNumber (fontSizeTable); i++)
	{
		xmsize_table [i] = XmStringCreate (fontSizeTable[i], XmSTRING_DEFAULT_CHARSET);	
d313 1
a313 1
	appShell		= XtInitialize ("topLevel", "XLabel", NULL, 0, &argc, argv);
d315 2
a316 2
	/* 
	 * Get the current display and screen 
d318 5
a322 5
	display	= XtDisplay (appShell);
	screen	= DefaultScreen (display);
	IMAGE_DATA_TYPE		= XInternAtom (display, "Image Data Type", 0);
	IMAGE_COLOR_TYPE	= XInternAtom (display, "Image Color Type", 0);
	IMAGE_NCOLOR		= XInternAtom (display, "Image Color Number", 0);
d324 2
a325 2
	xm_select	= XmStringCreate ("Select", XmSTRING_DEFAULT_CHARSET);	
	xm_cancel	= XmStringCreate ("Cancel", XmSTRING_DEFAULT_CHARSET);	
d332 8
a339 8
	backColorSet[0]	= toggleBackBlack;
	backColorSet[1]	= toggleBackBlue;
	backColorSet[2]	= toggleBackCyan;
	backColorSet[3]	= toggleBackGreen;
	backColorSet[4]	= toggleBackYellow;
	backColorSet[5]	= toggleBackMagenta;
	backColorSet[6]	= toggleBackRed;
	backColorSet[7]	= toggleBackWhite;
d341 8
a348 8
	fontColorSet[0]	= toggleTextBlack;	
	fontColorSet[1]	= toggleTextBlue;	
	fontColorSet[2]	= toggleTextCyan;	
	fontColorSet[3]	= toggleTextGreen;	
	fontColorSet[4]	= toggleTextYellow;	
	fontColorSet[5]	= toggleTextMagenta;	
	fontColorSet[6]	= toggleTextRed;	
	fontColorSet[7]	= toggleTextWhite;	
d350 3
a352 3
	textAlignment[0]	= toggleLeft;	
	textAlignment[1]	= toggleCenter;	
	textAlignment[2]	= toggleRight;	
d354 3
a356 3
	textSlant[0]	= toggleRoman;	
	textSlant[1]	= toggleItalic;	
	textSlant[2]	= toggleOblique;	
d358 2
a359 2
	textWeight[0]	= toggleMedium;	
	textWeight[1]	= toggleBold;	
d361 2
a362 2
	textOrient[0]	= toggleHori;	
	textOrient[1]	= toggleVert;	
d364 8
a371 8
	lineColorSet[0]	= toggleLineBlack;
	lineColorSet[1]	= toggleLineBlue;
	lineColorSet[2]	= toggleLineCyan;
	lineColorSet[3]	= toggleLineGreen;
	lineColorSet[4]	= toggleLineYellow;
	lineColorSet[5]	= toggleLineMagenta;
	lineColorSet[6]	= toggleLineRed;
	lineColorSet[7]	= toggleLineWhite;
d373 4
a376 4
	symbol_menu.toggle_color_set	= toggleSymbolColor;
	symbol_menu.toggle_symbol_set	= toggleAF3DSymbol;
	symbol_menu.size_scale		= &scaleSymbolSize;
	symbol_menu.filled		= &toggleFilledSymbol;
d378 18
a395 18
	default_parameters.back_color_set	= backColorSet;
	default_parameters.font_color_set	= fontColorSet;
	default_parameters.font_list		= &textFontList;
	default_parameters.size_list		= &textSizeList;
	default_parameters.font_name		= &textSelectedFontName;
	default_parameters.font_size		= &textSelectedSizeName;
	default_parameters.line_space		= &scaleLineSpace;
	default_parameters.text_alignment	= textAlignment;
	default_parameters.text_slant		= textSlant;
	default_parameters.text_weight		= textWeight;
	default_parameters.text_orient		= textOrient;
	default_parameters.line_color_set	= lineColorSet;
	default_parameters.line_width		= &scaleLineWidth;
	default_parameters.arrow_width		= &scaleArrowWidth;
	default_parameters.arrow_length		= &scaleArrowLength;
	default_parameters.save_format		= &toggleFileFormat;
	default_parameters.save_area		= &toggleAreaSaved;
	default_parameters.symbol_menu		= &symbol_menu;
d400 2
a401 2
        /* 
	 * Get the drawing area window. 
d403 2
a404 2
	root_window	= XtWindow (appShell);
	window		= XtWindow (mainWindow_ww);
d406 2
a407 2
	/* 
	 * Set backing store on window 
d409 2
a410 2
	wattr.backing_store	= WhenMapped;
	wattr.background_pixel	= BACKGROUND_CELL;
d413 2
a414 2
	/* 
	 * Set the graphics context 
d416 2
a417 2
	gcCanvas	= XCreateGC (display, window, 0, 0);
	xorgc		= CreateXorGC (mainWindow_ww);
d420 1
a420 1
		parameter_file, &default_parameters);
d422 3
a424 3
	draw_data.display	= display;
	draw_data.window	= window;
	draw_data.gc		= gcCanvas;
d427 2
a428 2
	LoadXwd (display, window, gcCanvas, logofile, 0, 0, TRUE);
	*/
d433 3
a435 3
	XtAddCallback (XmFileSelectionBoxGetChild (winDumpFileSelection, 
			XmDIALOG_HELP_BUTTON), XmNactivateCallback, 
			CancelCallback, winDumpFileSelection);
d437 7
a443 7
	selectFileData.draw_data	= &draw_data;
	selectFileData.root_window	= root_window;
	selectFileData.dialog		= winDumpFileSelection;
	selectFileData.information	= frameSaveOptions;
	XtAddCallback (XmFileSelectionBoxGetChild (winDumpFileSelection, 
			XmDIALOG_CANCEL_BUTTON), XmNactivateCallback, 
			DefaultsParCallback, &selectFileData);
d445 3
a447 3
	XtAddCallback (XmMessageBoxGetChild (winMoveInfo, 
			XmDIALOG_OK_BUTTON), XmNactivateCallback, 
			SaveWinDumpCallback, &draw_data);
d449 3
a451 3
	XtAddCallback (XmFileSelectionBoxGetChild (defaultsFileSelection, 
			XmDIALOG_HELP_BUTTON), XmNactivateCallback, 
			CancelCallback, defaultsFileSelection);
d453 7
a459 7
	DefaultsFileData.draw_data		= &draw_data;
	DefaultsFileData.root_window		= root_window;
	DefaultsFileData.dialog			= defaultsFileSelection;
	DefaultsFileData.default_parameters	= &default_parameters;
	XtAddCallback (XmFileSelectionBoxGetChild (defaultsFileSelection, 
			XmDIALOG_CANCEL_BUTTON), XmNactivateCallback, 
			DefaultsParCallback, &DefaultsFileData);
d461 2
a462 2
	/* 
	 * Background Color Callback 
d464 7
a470 7
	backColorData.display		= display;	
	backColorData.root_window	= root_window;	
	backColorData.rgb_value		= &rgbBackground;	
	backColorData.back_color_set	= backColorSet;	
	backColorData.dialog		= &frameBackColor;
	XtAddCallback (selectBackColor, XmNactivateCallback, 
			NonImageColorCallback, &backColorData);
d472 15
a486 15
	selectFontData.draw_data	= &draw_data;
	selectFontData.node_flag	= SELECT;
	selectFontData.frame		= frameTextOptions;
	selectFontData.font_color_set	= fontColorSet;
	selectFontData.font_list	= &textFontList;
	selectFontData.font_name	= &textSelectedFontName;
	selectFontData.weight_set	= textWeight;
	selectFontData.orient_set	= textOrient;
	selectFontData.slant_set	= textSlant;
	selectFontData.size_list	= &textSizeList;
	selectFontData.size_name	= &textSelectedSizeName;
	selectFontData.alignment_set	= textAlignment;
	selectFontData.line_spacing	= scaleLineSpace;
	XtAddCallback (selectTextOptions, XmNactivateCallback, 
			SetTextFontCallback, &selectFontData);
d488 15
a502 15
	cancelFontData.draw_data	= &draw_data;
	cancelFontData.node_flag	= CANCEL;
	cancelFontData.frame		= frameTextOptions;
	cancelFontData.font_color_set	= fontColorSet;
	cancelFontData.font_list	= &textFontList;
	cancelFontData.font_name	= &textSelectedFontName;
	cancelFontData.slant_set	= textSlant;
	cancelFontData.weight_set	= textWeight;
	cancelFontData.orient_set	= textOrient;
	cancelFontData.size_list	= &textSizeList;
	cancelFontData.size_name	= &textSelectedSizeName;
	cancelFontData.alignment_set	= textAlignment;
	cancelFontData.line_spacing	= scaleLineSpace;
	XtAddCallback (cancelTextOptions, XmNactivateCallback, 
			SetTextFontCallback, &cancelFontData);
d504 8
a511 8
	mouseTextEditData.node_flag	= MOUSE_SELECT;
	mouseTextEditData.draw_data	= &draw_data;
	mouseTextEditData.dialog	= frameTextEdit;
	mouseTextEditData.text		= textTextEdit;
	mouseTextEditData.xstart	= xTextEditCoordText;
	mouseTextEditData.ystart	= yTextEditCoordText;
	XtAddCallback (mouseTextEdit, XmNactivateCallback, 
		TextEditCallback, &mouseTextEditData);
d513 8
a520 8
	coordTextEditData.node_flag	= SELECT;
	coordTextEditData.draw_data	= &draw_data;
	coordTextEditData.dialog	= frameTextEdit;
	coordTextEditData.text		= textTextEdit;
	coordTextEditData.xstart	= xTextEditCoordText;
	coordTextEditData.ystart	= yTextEditCoordText;
	XtAddCallback (coordTextEdit, XmNactivateCallback, 
		TextEditCallback, &coordTextEditData);
d522 8
a529 8
	cancelTextEditData.node_flag	= CANCEL;
	cancelTextEditData.draw_data	= &draw_data;
	cancelTextEditData.dialog	= frameTextEdit;
	cancelTextEditData.text		= textTextEdit;
	cancelTextEditData.xstart	= xTextEditCoordText;
	cancelTextEditData.ystart	= yTextEditCoordText;
	XtAddCallback (cancelTextEdit, XmNactivateCallback, 
		TextEditCallback, &cancelTextEditData);
d531 6
a536 6
	selectLineAttribData.node_flag		= SELECT;
	selectLineAttribData.frame		= frameLineAttrib;
	selectLineAttribData.line_color_set	= lineColorSet;
	selectLineAttribData.line_width		= scaleLineWidth;
	XtAddCallback (selectLineAttrib, XmNactivateCallback, 
			SetLineAttribCallback, &selectLineAttribData);
d538 6
a543 6
	cancelLineAttribData.node_flag		= CANCEL;
	cancelLineAttribData.frame		= frameLineAttrib;
	cancelLineAttribData.line_color_set	= lineColorSet;
	cancelLineAttribData.line_width		= scaleLineWidth;
	XtAddCallback (cancelLineAttrib, XmNactivateCallback, 
			SetLineAttribCallback, &cancelLineAttribData);
d545 6
a550 6
	selectArrowOptionsData.node_flag	= SELECT;
	selectArrowOptionsData.frame		= frameArrowOptions;
	selectArrowOptionsData.arrow_width	= scaleArrowWidth;
	selectArrowOptionsData.arrow_length	= scaleArrowLength;
	XtAddCallback (selectArrowOptions, XmNactivateCallback, 
			SetArrowOptionsCallback, &selectArrowOptionsData);
d552 6
a557 6
	cancelArrowOptionsData.node_flag	= CANCEL;
	cancelArrowOptionsData.frame		= frameArrowOptions;
	cancelArrowOptionsData.arrow_width	= scaleArrowWidth;
	cancelArrowOptionsData.arrow_length	= scaleArrowLength;
	XtAddCallback (cancelArrowOptions, XmNactivateCallback, 
			SetArrowOptionsCallback, &cancelArrowOptionsData);
d559 7
a565 7
	selectSaveImageData.node_flag	= SELECT;
	selectSaveImageData.dialog	= frameSaveOptions;
	selectSaveImageData.information	= winMoveInfo;
	selectSaveImageData.file_format	= toggleFileFormat;
	selectSaveImageData.area_saved	= toggleAreaSaved;
	XtAddCallback (selectSaveOptions, XmNactivateCallback, 
			SaveOptionsCallback, &selectSaveImageData);
d567 7
a573 7
	cancelSaveImageData.node_flag	= CANCEL;
	cancelSaveImageData.dialog	= frameSaveOptions;
	cancelSaveImageData.information	= winMoveInfo;
	cancelSaveImageData.file_format	= toggleFileFormat;
	cancelSaveImageData.area_saved	= toggleAreaSaved;
	XtAddCallback (cancelSaveOptions, XmNactivateCallback, 
			SaveOptionsCallback, &cancelSaveImageData);
d575 5
a579 5
	selectSymbolData.node_flag	= SELECT;
	selectSymbolData.dialog		= frameAF3DSymbol;
	selectSymbolData.symbol_menu	= &symbol_menu;
	XtAddCallback (selectAF3DSymbol, XmNactivateCallback, 
			AF3DSymbolCallback, &selectSymbolData);
d581 5
a585 5
	cancelSymbolData.node_flag	= CANCEL;
	cancelSymbolData.dialog		= frameAF3DSymbol;
	cancelSymbolData.symbol_menu	= &symbol_menu;
	XtAddCallback (cancelAF3DSymbol, XmNactivateCallback, 
				AF3DSymbolCallback, &cancelSymbolData);
d587 2
a588 2
	/* 
	 * Add Event Handlers for Mouse Button Events 
d590 6
a595 6
	graphics_data.draw_data		= &draw_data;
	graphics_data.root_window	= root_window;
	graphics_data.xorgc		= xorgc;
	graphics_data.point_num		= 0;
	graphics_data.xtext_edit_coord	= xTextEditCoordText;
	graphics_data.ytext_edit_coord	= yTextEditCoordText;
d617 6
a622 6
	XtAddEventHandler (mainWindow_ww, ButtonPressMask, FALSE, 
			ButtonDownEventHandler, &graphics_data);
	XtAddEventHandler (mainWindow_ww, ButtonMotionMask, FALSE, 
			ButtonMoveEventHandler, &graphics_data);
	XtAddEventHandler (mainWindow_ww, ButtonReleaseMask, FALSE, 
			ButtonReleaseEventHandler, &graphics_data);
d624 2
a625 2
	/* 
	 * Grab the mouse pointer on mouse events in drawing screen 
d628 2
a629 2
		ButtonPressMask | ButtonMotionMask | ButtonReleaseMask, GrabModeAsync, 
		GrabModeAsync, window, XCreateFontCursor (XtDisplay (mainWindow_ww), XC_fleur));
a632 1

@


1.8
log
@Added processing for big fonts.
@
text
@d1 1
a1 1
/*$Id: xlabel.c,v 1.7 1994/12/07 17:28:38 ty7777 Exp ty7777 $*/
d3 3
a235 2
	Dimension		widget_height;
	Dimension		widget_width;
a401 8

	/* 
	 * Create the clipboard. 
	 */
	n	= 0;
	XtSetArg (arglist[n], XtNwidth, &widget_width); n++;
	XtSetArg (arglist[n], XtNheight, &widget_height); n++;
	XtGetValues (mainWindow_ww, arglist, n);
@


1.7
log
@Added the local_path.
@
text
@d1 1
a1 1
/*$Id: xlabel.c,v 1.6 1994/10/25 18:46:29 ty7777 Exp ty7777 $*/
d3 3
d62 5
a66 1
				   "72"};
d279 1
a279 1
	XmString		xmsize_table [11];
@


1.6
log
@Use SELECT instead of COORD_SELECT.
@
text
@d1 1
a1 1
/*$Id: xlabel.c,v 1.5 1994/08/25 18:11:06 ty7777 Exp ty7777 $*/
d3 3
d273 1
a273 1
	XmString		xmstr;
d276 1
d278 1
d286 2
a300 2
	xm_select	= XmStringCreate ("Select", XmSTRING_DEFAULT_CHARSET);	
	xm_cancel	= XmStringCreate ("Cancel", XmSTRING_DEFAULT_CHARSET);	
d313 3
d318 3
d417 1
a417 1
		"/usr/local/lib/xlabel/xlabel.parameters", &default_parameters);
@


1.5
log
@Before porting to X11R5.
@
text
@d1 1
a1 1
/*$Id: xlabel.c,v 1.4 1994/02/18 20:36:42 ty7777 Exp ty7777 $*/
d3 3
d499 1
a499 1
	coordTextEditData.node_flag	= COORD_SELECT;
@


1.4
log
@Try to add logofile.
@
text
@d1 1
a1 1
/*$Id: xlabel.c,v 1.3 1993/12/13 19:51:02 ty7777 Exp ty7777 $*/
d3 3
d248 2
a250 1
	TEXT_EDIT_DATA		selectTextEditData;
d267 1
d487 8
a494 4
	selectTextEditData.node_flag	= SELECT;
	selectTextEditData.dialog	= frameTextEdit;
	selectTextEditData.text		= textTextEdit;
	XtAddCallback (selectTextEdit, XmNactivateCallback, TextEditCallback, &selectTextEditData);
d496 9
d506 1
d509 4
a512 1
	XtAddCallback (cancelTextEdit, XmNactivateCallback, TextEditCallback, &cancelTextEditData);
d577 2
@


1.3
log
@Same as the lase one.
@
text
@d1 1
a1 1
/*$Id: xlabel.c,v 1.2 1993/03/31 16:35:18 ty7777 Exp ty7777 $*/
d3 3
d213 5
a217 1
	int			n;
a218 2
	Dimension		widget_height;
	XmString		stringTable [MAX_STRINGS];
d220 7
a226 5
	int			screen;		/* X screen */
	int			i, j;		/* counters */
	Window			window;         /* window to display in */
	Window			root_window;         /* window to display in */
	XSetWindowAttributes	wattr;		/* window attribute buffer */
a228 6
	NONIMAGE_COLOR_DATA	backColorData;
	FILE_SELECTION_DATA	openWinDumpSelectionData;
	FILE_SELECTION_DATA	saveWinDumpSelectionData;
	FILE_SELECTION_DATA	getDefaultsSelectionData;
	FILE_SELECTION_DATA	saveDefaultsSelectionData;
	DRAW_DATA		draw_data;
d230 3
a232 8
	DATA_FILE_SELECTION	selectFileData;
	DATA_FILE_SELECTION	DefaultsFileData;
	FONT_DATA		selectFontData;
	FONT_DATA		cancelFontData;
	XmString		xmfont_table [5];
	XmString		xmsize_table [11];
	TEXT_EDIT_DATA		selectTextEditData;
	TEXT_EDIT_DATA		cancelTextEditData;
d234 7
a240 5
	LINE_ATTRIB_DATA	cancelLineAttribData;
	ARROW_OPTIONS_DATA	selectArrowOptionsData;
	ARROW_OPTIONS_DATA	cancelArrowOptionsData;
	LABEL_CHANGE_DATA	fileFormatLabel;
	LABEL_CHANGE_DATA	areaSavedLabel;
d242 5
a246 2
	SAVE_IMAGE_DATA		cancelSaveImageData;
	PARAMETERS_DATA		default_parameters;
a247 2
	Pixel			selected_color_pixel;
	XColor			color;
d249 2
d252 1
a254 2
	Widget			textOrient [ORIENT_NUM];
	Widget			lineColorSet [MAX_NONIMAGE_COLOR];
d256 5
d262 5
a266 1
	XmString		xm_cancel;
d268 3
a270 4
	char			**symbol_names		= symbolNames;
	Pixel			foreground;
	Pixel			background;
	Pixmap			AF3DSymbols [MAX_SYMBOL_NUM];
a271 3
	SYMBOL_MENU		symbol_menu;
	SYMBOL_DATA		selectSymbolData;
	SYMBOL_DATA		cancelSymbolData;
d273 4
d403 4
@


1.2
log
@Add message box.
@
text
@d1 1
a1 1
/*$Id: xlabel.c,v 1.1 1993/03/08 22:48:05 ty7777 Exp ty7777 $*/
d3 3
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
/*$Id$*/
/*$Log$*/
d186 14
@
