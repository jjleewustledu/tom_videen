head	1.11;
access;
symbols;
locks; strict;
comment	@ * @;


1.11
date	99.02.15.14.26.34;	author tom;	state Exp;
branches;
next	1.10;

1.10
date	94.10.25.18.45.48;	author ty7777;	state Exp;
branches;
next	1.9;

1.9
date	94.08.25.18.09.13;	author ty7777;	state Exp;
branches;
next	1.8;

1.8
date	93.12.13.19.50.06;	author ty7777;	state Exp;
branches;
next	1.7;

1.7
date	93.03.31.16.36.10;	author ty7777;	state Exp;
branches;
next	1.6;

1.6
date	93.02.17.16.38.56;	author ty7777;	state Exp;
branches;
next	1.5;

1.5
date	92.11.23.22.19.43;	author ty7777;	state Exp;
branches;
next	1.4;

1.4
date	92.09.28.16.37.23;	author ty7777;	state Exp;
branches;
next	1.3;

1.3
date	92.08.26.20.02.53;	author ty7777;	state Exp;
branches;
next	1.2;

1.2
date	92.07.22.18.31.54;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	92.04.29.15.39.40;	author ty7777;	state Exp;
branches;
next	;


desc
@Xlabel C Source Code Version 1.
@


1.11
log
@start to update & port
@
text
@/*$Header: /home/npggw/tom/src/xlabel/RCS/utility.h,v 1.10 1994/10/25 18:45:48 ty7777 Exp tom $*/
/*$Log: utility.h,v $
 * Revision 1.10  1994/10/25  18:45:48  ty7777
 * Removed COORD_SELECT.
 *
 * Revision 1.9  1994/08/25  18:09:13  ty7777
 * Before porting to X11R5.
 *
 * Revision 1.8  1993/12/13  19:50:06  ty7777
 * Before adding exact coordinates.
 *
 * Revision 1.7  1993/03/31  16:36:10  ty7777
 * Added errorMessageBox as an exteral variable.
 *
 * Revision 1.6  1993/02/17  16:38:56  ty7777
 * Before fixing text alignment problem.
 *
 * Revision 1.5  1992/11/23  22:19:43  ty7777
 * Before moving xwdwud.c to the library.
 *
 * Revision 1.4  1992/09/28  16:37:23  ty7777
 * After Symbol Menu Worked.
 **/

/*______________________________________________________________________________________
	utility.h
	Description:
		Header file for xlabel.
		Includes necessary X and application headers.
	Author:
		Tom Yang
		09/06/91
_______________________________________________________________________________________*/

#ifndef _UTILITY_H_INCLUDED
#define _UTILITY_H_INCLUDED

#include <X11/X.h>
#include <X11/Xlib.h>
#include <X11/Xutil.h>
#include <X11/Xatom.h>
#include <X11/Intrinsic.h>
#include <myvalues.h>

typedef struct {
	Display        *display;
	Window          window;
	GC              gc;
}               DRAW_DATA;

typedef struct {
	unsigned short  red;
	unsigned short  green;
	unsigned short  blue;
}               RGB_COLOR;

typedef enum {
	NoState,
	SaveRegionState,
	CutState,
	CopyState,
	PasteState,
	LabelState,
	SymbolState,
	FreeHandState,
	LineState,
	HoriLineState,
	VertLineState,
	ArrowState,
	RectState,
	EllipseState,
	CircleState,
	LinePathState,
	FilledRectState,
	FilledEllipseState,
	FilledCircleState,
	PolygonState
}               PointerStatus;

typedef enum {
	OpenWinDump,
	SaveWinDump,
	GetDefaults,
	SaveDefaults,
}               FileStatus;

typedef struct {
	Widget         *toggle_color_set;
	Widget         *toggle_symbol_set;
	Widget         *size_scale;
	Widget         *filled;
}               SYMBOL_MENU;

typedef struct {
	Widget         *back_color_set;
	Widget         *font_color_set;
	Widget         *font_list;
	Widget         *size_list;
	Widget         *line_space;
	Widget         *font_name;
	Widget         *font_size;
	Widget         *text_alignment;
	Widget         *text_slant;
	Widget         *text_weight;
	Widget         *text_orient;
	Widget         *line_color_set;
	Widget         *line_width;
	Widget         *arrow_width;
	Widget         *arrow_length;
	Widget         *save_format;
	Widget         *save_area;
	SYMBOL_MENU    *symbol_menu;
}               PARAMETERS_DATA;

typedef struct {
	DRAW_DATA      *draw_data;
	char            node_flag;		 /* 1: select; 2: cancel. */
	Widget          frame;
	Widget         *font_color_set;
	Widget         *font_list;
	Widget         *font_name;
	Widget         *slant_set;
	Widget         *weight_set;
	Widget         *orient_set;
	Widget         *size_list;
	Widget         *size_name;
	Widget         *alignment_set;
	Widget          line_spacing;
}               FONT_DATA;

char   **fontTable;
char   **fontSizeTable;
char   **nonImageColorList;
char   **alignmentList;
char   **slantList;
char   **weightList;
char   **orientList;

/* function prototypes */

void     AppColormap ();
void     SetSelectData ();
void     Swap ();
void     DrawInwardFlatArrow ();
void     GetLineEnd ();
void     DrawLine ();
void     DrawEllipse ();
void     DrawRectangle ();
void     CheckPoints ();
void     DrawFilledEllipse ();
void     DrawFilledRectangle ();
void     DrawLabel ();
void     LoadXwd ();
void     WindowDump ();
int      GetActiveIndex ();
Widget   GetActiveWidget ();
void     GetNameFromWidget ();
int      GetIndexFromName ();
Widget   GetWidgetFromName ();
char    *GetFontName ();
void     GetDefaultParameters ();
void     SaveDefaultParameters ();
void     SetColorParameters ();
unsigned int Image_Size ();
int      GetXColors ();
void     DoPseudo ();

/* global variables */

RGB_COLOR rgbBackground;			 /* background color value */
XFontStruct *FontStruct;
PointerStatus cPointerState;
PointerStatus cPolyState;
char    *szTextString;			 /* text for label */
char     cAlignment;
int      nLineSpacing;
Pixel    pixelTextColor;
int      xClipboard;
int      yClipboard;
unsigned int wClipboard;
unsigned int hClipboard;
Pixel    pixelSymbolColor;
char     cSymbolColorIndex;
char     cSymbolType;
int      nSymbolSize;
Pixel    pixelLineColor;
int      nLineWidth;
int      nArrowWidth;
int      nArrowLength;
FileStatus cFileState;
char     cLineColorIndex;
char     cTextColorIndex;
char     cFontSlantIndex;
char     cFontWeightIndex;
char     cFontOrientIndex;
int      nFontNameIndex;
int      nFontSizeIndex;
BOOLEAN  bWinDumpFile;
BOOLEAN  bSaveWholeScreen;
Widget   errorMessageBox;
Colormap xlabelColormap;
short    xTextEditStart;
short    yTextEditStart;
Atom     IMAGE_DATA_TYPE;
Atom     IMAGE_COLOR_TYPE;
Atom     IMAGE_NCOLOR;

/* constants */
#define DRAW_AREA_WIDTH		1600		 /* width and height of virtual screen */
#define DRAW_AREA_HEIGHT	1200
#define TOTAL_CELLS		256
#define DYNAMIC_COLOR_START	255
#define BACKGROUND_CELL		255
#define MOUSE_SELECT		3		 /* mouse selection */
#define	TOGGLE_COLOR		0
#define TOGGLE_ALIGN		1
#define TOGGLE_SLANT		2
#define TOGGLE_WEIGHT		3
#define TOGGLE_ORIENT		4
#define TOGGLE_SYMBOL_SHAPE	5
#define SLANT_NUM		3		 /* slant number */
#define SLANT_ROMAN		0		 /* roman slant  */
#define SLANT_ITALIC		1		 /* italic */
#define SLANT_OBLIQUE		2		 /* oblique */
#define WEIGHT_NUM		2		 /* weight number */
#define WEIGHT_MEDIUM		0		 /* weight medium */
#define WEIGHT_BOLD		1		 /* weight bold */
#define LINE_SPACING_FACTOR	10		 /* factor for line spacing values */
#define PIXEL_POINT_FACTOR	10		 /* factor for converting pixel size to point size */
#define	BLACK			0
#define	BLUE			1
#define	CYAN			2
#define	GREEN			3
#define	YELLOW			4
#define	MAGENTA			5
#define	RED			6
#define	WHITE			7
#define MAX_NONIMAGE_COLOR	8
#define MAXPOINTS		1000
#define MAXOBJECTS		1000
#endif						 /* _UTILITY_H_INCLUDED */
@


1.10
log
@Removed COORD_SELECT.
@
text
@d1 1
a1 1
/*$Header: /home/petsun4/ty7777/src/xlabel/RCS/utility.h,v 1.9 1994/08/25 18:09:13 ty7777 Exp ty7777 $*/
d3 3
d25 1
a25 1
/*______________________________________________________________________________________	
a26 1

d28 1
a28 1
		Header file for xlabel. 
a29 1

d33 1
a34 5
	Modifications:

	Pending:
_______________________________________________________________________________________*/	

d38 6
a43 1
#include <values.h>
d45 5
a49 5
#include <X11/X.h> 
#include <X11/Xlib.h> 
#include <X11/Xutil.h> 
#include <X11/Xatom.h> 
#include <X11/Intrinsic.h> 
d51 5
a55 2
#include <petutil/petutil.h>
#include <petutil/winutil.h>
d57 1
a57 16
typedef struct 
{
	Display		*display;
	Window		window;
	GC		gc;
} DRAW_DATA;

typedef struct 
{
	unsigned short	red;	
	unsigned short	green;	
	unsigned short	blue;	
} RGB_COLOR;

typedef enum 
{
d78 1
a78 1
} PointerStatus;
d80 1
a80 2
typedef enum 
{
d85 1
a85 1
} FileStatus;
d87 6
a92 7
typedef struct 
{
	Widget		*toggle_color_set;		
	Widget		*toggle_symbol_set;
	Widget		*size_scale;
	Widget		*filled;
} SYMBOL_MENU;
d94 20
a113 21
typedef struct 
{
	Widget		*back_color_set;
	Widget		*font_color_set;
	Widget		*font_list;
	Widget		*size_list;
	Widget		*line_space;
	Widget		*font_name;
	Widget		*font_size;
	Widget		*text_alignment;
	Widget		*text_slant;
	Widget		*text_weight;
	Widget		*text_orient;
	Widget		*line_color_set;
	Widget		*line_width;
	Widget		*arrow_width;
	Widget		*arrow_length;
	Widget		*save_format;
	Widget		*save_area;
	SYMBOL_MENU	*symbol_menu;
} PARAMETERS_DATA;
d115 15
a129 16
typedef struct 
{
	DRAW_DATA	*draw_data;
	char		node_flag;		/* 1: select; 2: cancel. */
	Widget		frame;
	Widget		*font_color_set;
	Widget		*font_list;
	Widget		*font_name;
	Widget		*slant_set;
	Widget		*weight_set;
	Widget		*orient_set;
	Widget		*size_list;
	Widget		*size_name;
	Widget		*alignment_set;
	Widget		line_spacing;
} FONT_DATA;
d131 7
a137 1

d141 26
a166 26
PUBLIC	void		AppColormap ();
PUBLIC	void		SetSelectData ();
PUBLIC	void		Swap ();
PUBLIC	void		DrawInwardFlatArrow ();
PUBLIC	void		GetLineEnd ();
PUBLIC	void		DrawLine ();
PUBLIC	void		DrawEllipse ();
PUBLIC	void		DrawRectangle ();
PUBLIC	void		CheckPoints ();
PUBLIC	void		DrawFilledEllipse ();
PUBLIC	void		DrawFilledRectangle ();
PUBLIC	void		DrawLabel ();
PUBLIC	void		LoadXwd ();
PUBLIC  void		WindowDump ();
PUBLIC	int		GetActiveIndex ();
PUBLIC	Widget		GetActiveWidget ();
PUBLIC	void		GetNameFromWidget ();
PUBLIC	int		GetIndexFromName ();
PUBLIC	Widget		GetWidgetFromName ();
PUBLIC	char		*GetFontName ();
PUBLIC	void		GetDefaultParameters ();
PUBLIC	void		SaveDefaultParameters ();
PUBLIC	void		SetColorParameters ();
PUBLIC	unsigned int	Image_Size ();
PUBLIC	int		GetXColors ();
PUBLIC	void		DoPseudo ();
a167 2


d170 37
a206 44
PUBLIC char		szImageFileName [];
PUBLIC char		szSaveFileName [];
PUBLIC RGB_COLOR	rgbBackground;		/* background color value */
PUBLIC XFontStruct	*FontStruct;
PUBLIC PointerStatus	cPointerState;
PUBLIC PointerStatus	cPolyState;
PUBLIC char		*szTextString;		/* text for label */
PUBLIC char		cAlignment;
PUBLIC int		nLineSpacing;
PUBLIC Pixel		pixelTextColor;
PUBLIC int		xClipboard;
PUBLIC int		yClipboard;
PUBLIC unsigned int	wClipboard;
PUBLIC unsigned int	hClipboard;
PUBLIC char		*symbolNames [];
PUBLIC Pixel		pixelSymbolColor;
PUBLIC char		cSymbolColorIndex;
PUBLIC char		cSymbolType;
PUBLIC int		nSymbolSize;
PUBLIC char		*fontTable [];
PUBLIC char		*fontSizeTable [];
PUBLIC char		*nonImageColorList [];
PUBLIC char		*alignmentList [];
PUBLIC char		*slantList [];
PUBLIC char		*weightList [];
PUBLIC char		*orientList [];
PUBLIC Pixel		pixelLineColor;
PUBLIC int		nLineWidth;
PUBLIC int		nArrowWidth;
PUBLIC int		nArrowLength;
PUBLIC FileStatus	cFileState;
PUBLIC char		cLineColorIndex;
PUBLIC char		cTextColorIndex;
PUBLIC char		cFontSlantIndex;
PUBLIC char		cFontWeightIndex;
PUBLIC char		cFontOrientIndex;
PUBLIC int		nFontNameIndex;
PUBLIC int		nFontSizeIndex;
PUBLIC BOOLEAN		bWinDumpFile;
PUBLIC BOOLEAN		bSaveWholeScreen;
PUBLIC Widget		errorMessageBox;
PUBLIC Colormap		xlabelColormap;
PUBLIC short		xTextEditStart;
PUBLIC short		yTextEditStart;
a207 5
PUBLIC Atom		IMAGE_DATA_TYPE;
PUBLIC Atom		IMAGE_COLOR_TYPE;
PUBLIC Atom		IMAGE_NCOLOR;


d209 2
a210 2
#define DRAW_AREA_WIDTH		1600		/* width and height of virtual screen */
#define DRAW_AREA_HEIGHT	1200	
d214 1
a214 1
#define MOUSE_SELECT		3		/* mouse selection */
d216 14
a229 14
#define TOGGLE_ALIGN		1		
#define TOGGLE_SLANT		2		
#define TOGGLE_WEIGHT		3		
#define TOGGLE_ORIENT		4		
#define TOGGLE_SYMBOL_SHAPE	5		
#define SLANT_NUM		3		/* slant number */
#define SLANT_ROMAN		0		/* roman slant  */
#define SLANT_ITALIC		1		/* italic */
#define SLANT_OBLIQUE		2		/* oblique */
#define WEIGHT_NUM		2		/* weight number */
#define WEIGHT_MEDIUM		0		/* weight medium */
#define WEIGHT_BOLD		1		/* weight bold */
#define LINE_SPACING_FACTOR	10		/* factor for line spacing values */
#define PIXEL_POINT_FACTOR	10		/* factor for converting pixel size to point size */
d239 3
a241 5
#define MAXPOINTS		1000		
#define MAXOBJECTS		1000		

#endif /* _UTILITY_H_INCLUDED */

@


1.9
log
@Before porting to X11R5.
@
text
@d1 1
a1 1
/*$Header: /home/petsun4/ty7777/src/xlabel/RCS/utility.h,v 1.8 1993/12/13 19:50:06 ty7777 Exp ty7777 $*/
d3 3
d50 1
d236 1
a236 4
#define SELECT			1		/* select */
#define MOUSE_SELECT		2		/* mouse selection */
#define COORD_SELECT		3		/* coordinate selection */
#define CANCEL			4		/* cancel */
a242 4
#define ALIGNMENT_NUM		3		/* alignment number */
#define ALIGNMENT_LEFT		0		/* alignment left */
#define ALIGNMENT_CENTER	1		/* alignment center */
#define ALIGNMENT_RIGHT		2		/* alignment right */
a249 3
#define ORIENT_NUM		2		/* orientation number */
#define ORIENT_HORI		0		/* horizontal */
#define ORIENT_VERT		1		/* vertical */
@


1.8
log
@Before adding exact coordinates.
@
text
@d1 1
a1 1
/*$Header: /home/petsun4/ty7777/src/xlabel/RCS/utility.h,v 1.7 1993/03/31 16:36:10 ty7777 Exp ty7777 $*/
d3 3
a161 1
PUBLIC	char		*Lowered ();
d182 1
a182 1
PUBLIC char		*szTextString;
d218 2
d233 3
a235 1
#define CANCEL			2		/* cancel */
@


1.7
log
@Added errorMessageBox as an exteral variable.
@
text
@d1 1
a1 1
/*$Header: /home/petsun4/ty7777/src/xlabel/RCS/utility.h,v 1.6 1993/02/17 16:38:56 ty7777 Exp ty7777 $*/
d3 3
a143 1
PUBLIC	GC		CreateXorGC ();
a222 1
#define MAXLINE			255		/* maximum number of characters in one line */
@


1.6
log
@Before fixing text alignment problem.
@
text
@d1 1
a1 1
/*$Header: /home/petsun4/ty7777/src/xlabel/RCS/utility.h,v 1.5 1992/11/23 22:19:43 ty7777 Exp ty7777 $*/
d3 3
d212 1
d214 1
@


1.5
log
@Before moving xwdwud.c to the library.
@
text
@d1 1
a1 1
/*$Header: /home/petsun4/ty7777/src/xlabel/RCS/utility.h,v 1.4 1992/09/28 16:37:23 ty7777 Exp ty7777 $*/
d3 3
d150 1
a150 1
PUBLIC  void		Window_Dump ();
@


1.4
log
@After Symbol Menu Worked.
@
text
@d1 5
a5 2
/*$Header$*/
/*$Log$*/
d217 1
a253 4


/* macros */
#define ROUND(x)		(int)(x + 0.5)	/* rounding float/double to int */
@


1.3
log
@After font bug (reported by Julie Fiez) is fixed.
@
text
@d1 3
d8 2
a9 3
		Header file for portal software. Includes description
		of atlas slice data and global variables for defaults in
		system. Also includes necessary X and application headers.
d12 2
a13 2
		M. Todd Gamble
		12/06/90
a17 6
		Put comments in function prototypes to make them ANSI C style.

		Add FRAMEBOX_SIZE to define frame point size in moving an atlas 
		slice. 
		3/11/91 by Tom Yang. 

d31 1
a31 1
#include "package.h"		/* include generic package header */
d55 1
d81 26
a106 17
	Widget	*back_color_set;
	Widget	*font_color_set;
	Widget	*font_list;
	Widget	*size_list;
	Widget	*line_space;
	Widget	*font_name;
	Widget	*font_size;
	Widget	*text_alignment;
	Widget	*text_slant;
	Widget	*text_weight;
	Widget	*text_orient;
	Widget	*line_color_set;
	Widget	*line_width;
	Widget	*arrow_width;
	Widget	*arrow_length;
	Widget	*save_format;
	Widget	*save_area;
d177 5
d222 1
@


1.2
log
@After Arrow Works.
@
text
@@


1.1
log
@Initial revision
@
text
@d97 2
d180 2
a235 3
#define THETA			20		/* angle for arrow opening */
#define PI			3.1415926	/* pi value */
#define ARROW_THICKNESS		40		
@
