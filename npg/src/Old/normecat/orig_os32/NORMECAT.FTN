CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  Program:      NORMECAT.FTN
C
C  Author:       Tom O. Videen
C  Date:         18-Jan-93
C  Written For:  Get normalization values for ECAT images.
C
C  History:
C     Modified TEMECAT2 18-Jan-93 to create list for SUMECAT.
C
C  Intent:  Create list of 2 images and scale factors for SUMECAT using
C     an input image for a mask.
C
C  Logical Units:
C     0 = input from CSS
C     1 = input images
C     3 = list output file
C     5 = user output
C
C  Uses subroutines:
C     GETIMAGE
C
C     SYSIO
C
C  Instructions for Compiling/Linking:
C     LINK7T NORMECAT,SYS:GETIMAGE.OBJ/S
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      PROGRAM NORMECAT
C
      INTEGER*2    IMG(128,128) ; input image file
      INTEGER*2    MASK(128,128); input mask image
      INTEGER*2    HEADER(128) ; header
C
      INTEGER*4    AUXLU       ; lu for reading from CSS
      INTEGER*4    DISK        ; lu for reading image
      INTEGER*4    LISTOUT     ; lu for output list suitable for SUMECAT
      INTEGER*4    USEROUT     ; lu for user output
      INTEGER*4    SLICE       ; slice no.
      INTEGER*4    NSLICES     ; no. slices
      INTEGER*4    TOTSLICES   ; no. slices of slices to process
      INTEGER*4    PETTNUM     ; PETT number
      INTEGER*4    I,J         ; array indices
      INTEGER*4    NPIX        ; number of pixels in template
      INTEGER*4    SLICESUM    ; sum of pixel values for 1 slice
      REAL*4       SUM         ; sum of pixel values within template
      REAL*4       MEAN        ; mean pixel value within template
C
      CHARACTER*20 FNAME       ; file name
      CHARACTER*20 FNAME1      ; file name 1
      CHARACTER*20 FNAME2      ; file name 2
      CHARACTER*20 MASKNAME    ; mask file name
C
      LOGICAL*1    HDRONLY
      LOGICAL*1    ERR
      LOGICAL*1    MORE        ; more points added to exterior
C
      DATA AUXLU, DISK, MASKLU, LISTOUT, USEROUT /0,1,2,3,5/
      DATA HDRONLY  /.FALSE./
C
      WRITE(USEROUT,*) '*** NORMECAT  18-Jan-93 {Create a list ',
     & 'for SUMECAT -- scaling to 10000}'
C
C  Get input file name
C
8100  FORMAT(A20)
8200  FORMAT(I)
      READ(AUXLU,8100) FNAME1
      READ(AUXLU,8100) FNAME2
      READ(AUXLU,8100) MASKNAME
      READ(AUXLU,8200) TOTSLICES
C
      WRITE(LISTOUT,*) '2   1.0  ',TOTSLICES,'  ',MASKNAME
      FNAME = FNAME1
C
100   NPIX = 0
      SUM = 0.
      DO 500 SLICE = 1,TOTSLICES
        CALL GETIMAGE(IMG,HEADER,FNAME,SLICE,NSLICES,PETTNUM,DISK,
     &    USEROUT,HDRONLY,ERR)
        IF (ERR) THEN
          WRITE(USEROUT,*) '*** ERROR opening file ',FNAME
          STOP
        ELSE IF (NSLICES.NE.TOTSLICES) THEN
          WRITE(USEROUT,*) 'Error:  Input file is  ',NSLICES,' slices'
          WRITE(USEROUT,*) '        Output file is ',TOTSLICES,' slices'
          STOP
        END IF
C
        CALL GETIMAGE(MASK,HEADER,MASKNAME,SLICE,NSLICES,PETTNUM,DISK,
     &    USEROUT,HDRONLY,ERR)
        IF (ERR) GO TO 210
        GO TO 220
210     WRITE(USEROUT,*) '*** ERROR opening file ',FNAME
        STOP
C
220     SLICESUM = 0
        DO 400 I=1,128
          DO 300 J=1,128
            IF (MASK(I,J).GT.0) THEN
              NPIX = NPIX + 1
              SLICESUM = SLICESUM + IMG(I,J)
            END IF
300       CONTINUE
400     CONTINUE
        SUM = SUM + FLOAT(SLICESUM)
500   CONTINUE
C
      MEAN = SUM/FLOAT(NPIX)
      WRITE(USEROUT,8600) NPIX, MEAN, 10000./MEAN
C
      IF (FNAME.EQ.FNAME1) THEN
        WRITE(LISTOUT,8700)  FNAME, 10000./MEAN
        FNAME = FNAME2
        GO TO 100
      ELSE
        WRITE(LISTOUT,8700)  FNAME, -10000./MEAN
      END IF
C
8600  FORMAT(1X,'TOTAL     Pixels =',I7,'  Mean = ',F8.2,
     &  '  Factor =',F7.4)
8700  FORMAT(1X,A20,F7.4)
C
      STOP
      END
