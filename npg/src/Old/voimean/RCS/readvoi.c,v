head	1.1;
access;
symbols;
locks
	tom:1.1; strict;
comment	@ * @;


1.1
date	94.03.09.22.19.30;	author ty7777;	state Exp;
branches;
next	;


desc
@Wroking version, first release.
@


1.1
log
@Initial revision
@
text
@/*$Id$*/
/*$Log$*/

/*___________________________________________________________________________
  File:		readvoi.c

  Function:	int readvoi (char *voifile, int *nvoi, VOIDATA *voilist)

  Arguments:	voifile,	region file name.
		nvoi,		total number of vois.
		voilist,	list containing the voi names and center coordinates.

  Return:	SUCCEED: successful; FAIL: error.

  Description:	This function reads an region file and put the 3D points on a
		list.

  Called by:	voimean.c.	

  Calling:	None.	

  History:	Created by Tom Yang on 02/22/94. 
___________________________________________________________________________*/

#include <petutil/imglist.h>

static char rcsid [] = "$Id$";

PUBLIC int readvoi (voifile, nvoi, voilist)
	char		*voifile;
	int		*nvoi;
	VOIDATA		*voilist;
{
	FILE	*voifp;
	char	line [MAXLINE];
	char	name [MAXLINE];
	float	x;
	float	y;
	float	z;
	int	nvoi_declared;
	int	type;

	voifp	= fopen (voifile, "r");
	if (voifp == NULL)
	{
		fprintf (stderr, "Error in opening region file %s\n", voifile);
		return FAIL;
	}

	/*
	 * Read the file version and type.
	 */
	if (fgets (line, MAXLINE, voifp) == NULL 
	|| sscanf (line, "%d %s", &type, name) != 2)
	{
		fprintf (stderr, "Error in reading version and type from %s.\n", voifile);
		return FAIL;
	}

	/*
	 * read the description line.
	 */
	if (fgets (line, MAXLINE, voifp) == NULL)
	{
		fprintf (stderr, "The region file %s contains no data.\n", voifile);
		return FAIL;
	}

	/*
	 * Read in the number of volumes defined in the region file.
	 */
	if (fgets (line, MAXLINE, voifp) == NULL 
	|| sscanf (line, "%d", &nvoi_declared) != 1)
	{
		fprintf (stderr, "Error in reading number of vois from %s.\n", voifile);
		return FAIL;
	}

	*nvoi	= 0;
	while (fgets (line, MAXLINE, voifp) != NULL && *nvoi < nvoi_declared)
	{
		if (sscanf (line, "%s %f %f %f", name, &x, &y, &z) == 4) 
		{
			voilist [*nvoi].center.x	= x;
			voilist [*nvoi].center.y	= y;
			voilist [*nvoi].center.z	= z;
			strcpy (voilist [*nvoi].voiname, name);
			(*nvoi)++;
		}
	}

	/*
	 * Check if the actual number is the same as the number defined in the
	 * region file.
	 */
	if (*nvoi != nvoi_declared)
	{
		fprintf (stderr, 
		"Error: the actual (%d) and the declared (%d) number of vois in %s do not match.\n", 
		*nvoi, nvoi_declared, voifile);
		return FAIL;
	}

	fclose (voifp);

	return SUCCEED;
}
@
