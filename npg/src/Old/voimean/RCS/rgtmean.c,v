head	1.8;
access;
symbols;
locks
	tom:1.8; strict;
comment	@ * @;


1.8
date	95.04.17.17.38.42;	author ty7777;	state Exp;
branches;
next	1.7;

1.7
date	94.04.04.16.24.47;	author ty7777;	state Exp;
branches;
next	1.6;

1.6
date	94.04.04.15.53.52;	author ty7777;	state Exp;
branches;
next	1.5;

1.5
date	94.04.01.20.36.16;	author ty7777;	state Exp;
branches;
next	1.4;

1.4
date	94.03.17.21.06.23;	author ty7777;	state Exp;
branches;
next	1.3;

1.3
date	94.03.17.16.47.40;	author ty7777;	state Exp;
branches;
next	1.2;

1.2
date	94.03.15.15.32.43;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	94.03.09.22.19.53;	author ty7777;	state Exp;
branches;
next	;


desc
@Working version, first release.
@


1.8
log
@Compute the standard deviations.
@
text
@/*$Id: rgtmean.c,v 1.7 1994/04/04 16:24:47 ty7777 Exp ty7777 $*/
/*$Log: rgtmean.c,v $
 * Revision 1.7  1994/04/04  16:24:47  ty7777
 * Added the pixels_in_voi.
 *
 * Revision 1.6  1994/04/04  15:53:52  ty7777
 * The module voimean () is changed to average.
 *
 * Revision 1.5  1994/04/01  20:36:16  ty7777
 * Tissue activity works now.
 *
 * Revision 1.4  1994/03/17  21:06:23  ty7777
 * Mask works.
 *
 * Revision 1.3  1994/03/17  16:47:40  ty7777
 * Added mask processing.
 *
 * Revision 1.2  1994/03/15  15:32:43  ty7777
 * Read multiple-frames images.
 *
 * Revision 1.1  1994/03/09  22:19:53  ty7777
 * Initial revision
 **/

/*___________________________________________________________________________
  File:		rgtmean.c

  Function:	int rgtmean (float *image3d, short *mask3d, BOOLEAN mask_exist, 
		short width, short height, short num_slices, FLOAT_POINT3D voxel_size, 
		int nvoi, VOIDATA *voilist, PARAMETER_DATA parameter_data, 
		float *meanlist, float *sdlist, int *pixels_in_voi)

  Arguments:	image3d,	3d floating point image array.
		mask3d,		mask image array.
		mask_exist,	TRUE: mask image exist; FALSE: not exist.
		width,		width of a slice in pixels.
		height,		height of a slice in pixels.
		num_slices,	number of slices in image.
		voxel_size,	size of voxels in mm.
		nvoi,		total number of vois.
		voilist,	list containing the voi names and center coordinates.
				The coordinates are pixels in the image space.
		parameter_data,	parameter data structure.
		meanlist,	list containing the means for the list of vois, 
				returned.
		sdlist,		list containing the standard deviations for the list of vois, 
				returned.
		pixels_in_voi,	total number of pixels in voi, returned.

  Return:	SUCCEED: successful; FAIL: error.

  Description:	This function computes the mean values for each voi.

  Called by:	voimean.c.	

  Calling:	None.	

  History:	Created by Tom Yang on 02/23/94. 
___________________________________________________________________________*/

#include <petutil/imglist.h>
#include <petutil/matrix.h>

static char rcsid [] = "$Header$";

PUBLIC int rgtmean (image3d, mask3d, mask_exist, width, height, num_slices, voxel_size,  
	nvoi, voilist, parameter_data, meanlist, sdlist, pixels_in_voi)
	float		*image3d;
	short		*mask3d;
	BOOLEAN		mask_exist;
	short		width;
	short		height;
	short		num_slices;
	FLOAT_POINT3D	voxel_size;
	int		nvoi;
	VOIDATA		*voilist;
	PARAMETER_DATA	parameter_data;
	float		*meanlist;
	float		*sdlist;
	int		*pixels_in_voi;
{
	VOIDATA		voidata;
	int		i;
	int		actual_number_pixels;

        /*
	 * Compute the means.
	 */
	voidata.voi_shape	= parameter_data.voi_shape;
	voidata.dimension.x	= parameter_data.voi_xdim;
	voidata.dimension.y	= parameter_data.voi_ydim;
	voidata.dimension.z	= parameter_data.voi_zdim;

	*pixels_in_voi	= 0;
	for (i = 0; i < nvoi; i++)
	{
		voidata.center.x	= voilist [i].center.x;
		voidata.center.y	= voilist [i].center.y;
		voidata.center.z	= voilist [i].center.z;

		average (voidata, width, height, num_slices, image3d, 
			mask3d, mask_exist, voxel_size, meanlist + i, 
			sdlist + i, &actual_number_pixels);
		if (actual_number_pixels > *pixels_in_voi)
			*pixels_in_voi	= actual_number_pixels;
	}

	return SUCCEED;
}
@


1.7
log
@Added the pixels_in_voi.
@
text
@d1 1
a1 1
/*$Id: rgtmean.c,v 1.6 1994/04/04 15:53:52 ty7777 Exp ty7777 $*/
d3 3
d31 1
a31 1
		float *meanlist, int *pixels_in_voi)
d46 2
d64 1
a64 1
static char rcsid [] = "$Id: rgtmean.c,v 1.6 1994/04/04 15:53:52 ty7777 Exp ty7777 $";
d67 1
a67 1
	nvoi, voilist, parameter_data, meanlist, pixels_in_voi)
d79 1
d103 1
a103 1
			&actual_number_pixels);
@


1.6
log
@The module voimean () is changed to average.
@
text
@d1 1
a1 1
/*$Id: rgtmean.c,v 1.5 1994/04/01 20:36:16 ty7777 Exp ty7777 $*/
d3 3
d27 2
a28 1
		int nvoi, VOIDATA *voilist, PARAMETER_DATA parameter_data, float *meanlist)
d43 1
d59 1
a59 1
static char rcsid [] = "$Id: rgtmean.c,v 1.5 1994/04/01 20:36:16 ty7777 Exp ty7777 $";
d62 1
a62 1
	nvoi, voilist, parameter_data, meanlist)
d74 1
d78 1
d88 1
d96 4
a99 1
			mask3d, mask_exist, voxel_size, meanlist + i);
@


1.5
log
@Tissue activity works now.
@
text
@d1 1
a1 1
/*$Id: rgtmean.c,v 1.4 1994/03/17 21:06:23 ty7777 Exp ty7777 $*/
d3 3
d54 1
a54 1
static char rcsid [] = "$Id: rgtmean.c,v 1.4 1994/03/17 21:06:23 ty7777 Exp ty7777 $";
d87 1
a87 1
		voimean (voidata, width, height, num_slices, image3d, 
@


1.4
log
@Mask works.
@
text
@d1 1
a1 1
/*$Id: rgtmean.c,v 1.3 1994/03/17 16:47:40 ty7777 Exp ty7777 $*/
d3 3
d29 1
a29 1
		voxel_size,	size of voxels in pixels.
d51 1
a51 1
static char rcsid [] = "$Id: rgtmean.c,v 1.3 1994/03/17 16:47:40 ty7777 Exp ty7777 $";
@


1.3
log
@Added mask processing.
@
text
@d1 1
a1 1
/*$Id: rgtmean.c,v 1.2 1994/03/15 15:32:43 ty7777 Exp ty7777 $*/
d3 3
d16 1
a16 1
  Function:	int rgtmean (float *image3d, float *mask3d, BOOLEAN mask_exist, 
d20 7
a26 1
  Arguments:	
d48 1
a48 1
static char rcsid [] = "$Id: rgtmean.c,v 1.2 1994/03/15 15:32:43 ty7777 Exp ty7777 $";
d53 1
a53 1
	float		*mask3d;
@


1.2
log
@Read multiple-frames images.
@
text
@d1 1
a1 1
/*$Id: rgtmean.c,v 1.1 1994/03/09 22:19:53 ty7777 Exp ty7777 $*/
d3 3
d13 3
a15 2
  Function:	int rgtmean (char *imgfile, int nvoi, VOIDATA *voilist, 
		PARAMETER_DATA parameter_data, float *meanlist)
d17 1
a17 1
  Arguments:	imgfile,	image file name.
d39 1
a39 1
static char rcsid [] = "$Id: rgtmean.c,v 1.1 1994/03/09 22:19:53 ty7777 Exp ty7777 $";
d41 1
a41 1
PUBLIC int rgtmean (image3d, mask3d, width, height, num_slices, voxel_size,  
d45 1
d73 1
a73 1
			voxel_size, meanlist + i);
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
/*$Id$*/
/*$Log$*/
d11 1
a11 2
		int voi_shape, float voi_xdim, float voi_ydim, float voi_zdim,
		float *meanlist)
d17 1
a17 4
		voi_shape,	voi shape.
		voi_xdim,	voi dimension in the x direction, in mm.
		voi_ydim,	voi dimension in the y direction, in mm.
		voi_zdim,	voi dimension in the z direction, in mm.
d35 1
a35 1
static char rcsid [] = "$Id$";
d37 8
a44 3
PUBLIC int rgtmean (imgfile, nvoi, voilist, voi_shape, voi_xdim, 
	voi_ydim, voi_zdim, meanlist)
	char		*imgfile;
d47 1
a47 4
	int		voi_shape; 
	float		voi_xdim; 
	float		voi_ydim; 
	float		voi_zdim; 
a49 3
	FLOAT_POINT3D	voxel_size;
	Image_subheader	**subheader_list;
	Main_header	*main_header;
a50 3
	float		*image3d;
	float		pixel_size;
	float		plane_separation;
a51 6
	int		scanner;
	long		dimension;
	short		width;
	short		height;
	short		num_slices;
	struct Matval	matval;
a53 41
	 * Initialization for matval get the voxel size.
	 */
	matval.frame	= 1;
	matval.plane	= 1;
	matval.gate	= 1;
	matval.data	= 0;
	matval.bed	= 0;

	if (getimagedim (imgfile, matval, &scanner, &width, &height, &num_slices, 
		&(voxel_size.x), &(voxel_size.y), &(voxel_size.z)) == FAIL) 
	{
		fprintf (stderr, "Error in geting image dimension from file %s.\n", imgfile);
		return FAIL;
	}

	voxel_size.x 	*= MMS_PER_CM;
	voxel_size.y 	*= MMS_PER_CM;
	voxel_size.z 	*= MMS_PER_CM;

        /*
	 * Read in the image data.
	 */
	subheader_list	= (Image_subheader **) pkg_malloc (num_slices * sizeof (caddr_t), 
			"rgtmean", "subheader_list");
	dimension	= width * ((long) height) * num_slices;
	image3d		= (float *) pkg_malloc (dimension * sizeof (float), "rgtmean", "image3d");
	main_header	= (Main_header *) calloc (1, sizeof (Main_header));

	if (getrealimg (imgfile, scanner, matval, width, height, num_slices, image3d, 
		main_header, subheader_list) == FAIL)
	{
		fprintf (stderr, "Error occured when reading image %s.\n", imgfile);

		free (subheader_list);
		free (main_header);
		free (image3d);

		return FAIL;
	}

        /*
d56 4
a59 4
	voidata.voi_shape	= voi_shape;
	voidata.dimension.x	= voi_xdim;
	voidata.dimension.y	= voi_ydim;
	voidata.dimension.z	= voi_zdim;
a69 11

        /*
	 * Free memories.
	 */
	for (i = 0; i < num_slices; i++)
	{
		free (subheader_list [i]);
	}
	free (subheader_list);
	free (main_header);
	free (image3d);
@
