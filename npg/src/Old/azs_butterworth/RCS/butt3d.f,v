head	1.3;
access;
symbols;
locks; strict;
comment	@c @;


1.3
date	93.10.21.19.16.42;	author ty7777;	state Exp;
branches;
next	1.2;

1.2
date	93.07.14.20.53.22;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	93.03.08.21.36.21;	author ty7777;	state Exp;
branches;
next	;


desc
@Initial checking in for butt3d.f
@


1.3
log
@Added rcsheader.
@
text
@C$Id: butt3d.f,v 1.2 1993/07/14 20:53:22 ty7777 Exp ty7777 $
C$Log: butt3d.f,v $
c Revision 1.2  1993/07/14  20:53:22  ty7777
c Added message.
c
c Revision 1.1  1993/03/08  21:36:21  ty7777
c Initial revision
c
C
      subroutine BUTT3D (image,nx,ny,nz,cmppix,fhalf,norder)

c     3D Butterworth filter 
c     Author: Avi Snyder 02-Jan-93
c
c     inputs: real*4 image(nx,ny,nz)    ! image to be filtered
c             real*4 cmppix(3)          ! x, y, z voxel dimensions in cm
c             real*4 fhalf              ! half amplitude frequency in cycles/cm
c             integer*4 norder          ! order of Butterworth filter
c
c     variables modified: image         ! input image overwritten
c
c     subroutines called:  FFT, REALT in FORTRAN source fftsun.f
c                          FFT algorithm by Richard C. Singleton via FFTPE.FTN
c
c     restrictions: mixed radix FFT accepts any nx, ny, nz but 
c                   nx must be divisible by 2 
c                   memory allocation requirement 8*(nx/2+1)*ny*nz bytes 

      real*4 image(nx,ny,nz)
      real*4 cmppix(3)
      pointer (pa,a),(pb,b)
      real*4 a((nx/2+1)*ny*nz),b((nx/2+1)*ny*nz)
      character*256 rcsheader

      rcsheader = '$Header$'
      pa=malloc(4*(nx/2+1)*ny*nz)
      pb=malloc(4*(nx/2+1)*ny*nz)

      i=1
      do 21 iz=1,nz
      do 21 iy=1,ny
      do 21 ix=1,nx,2
      a(i)=image(ix,iy,iz)
      b(i)=image(ix+1,iy,iz)
   21 i=i+1

      n1=nx/2
      n=n1*ny*nz
      call FFT(a,b,ny*nz,n1,1,-1)
      call REALT(a,b,ny*nz,n1,1,-1)
      call FFT(a(n+1),b(n+1),nz,ny,1,-1)
      call FFT(a(n+1),b(n+1),1,nz,ny,-1)
      call FFT(a,b,nz,ny,n1,-1)
      call FFT(a,b,1,nz,n1*ny,-1)


      i=1
      do 31 iz=1,nz
      if(iz.le.nz/2+1)then
        fz=float(iz-1)/(float(nz)*cmppix(3))
      else
        fz=float(nz-iz+1)/(float(nz)*cmppix(3))
      endif
      do 31 iy=1,ny
      if(iy.le.ny/2+1)then
        fy=float(iy-1)/(float(ny)*cmppix(2))
      else
        fy=float(ny-iy+1)/(float(ny)*cmppix(2))
      endif
      do 31 ix=1,n1
        fx=float(ix-1)/(float(nx)*cmppix(1))
      f2=fx**2+fy**2+fz**2
      factor=1./(1.+(f2/fhalf**2)**norder)
C      type "(3i6,5f10.4)",ix,iy,iz,fx,fy,fz,f2,factor
      a(i)=factor*a(i)
      b(i)=factor*b(i)
   31 i=i+1
      fx=0.5/cmppix(1)
      do 32 iz=1,nz
      if(iz.le.nz/2+1)then
        fz=float(iz-1)/(float(nz)*cmppix(3))
      else
        fz=float(nz-iz+1)/(float(nz)*cmppix(3))
      endif
      do 32 iy=1,ny
      if(iy.le.ny/2+1)then
        fy=float(iy-1)/(float(ny)*cmppix(2))
      else
        fy=float(ny-iy+1)/(float(ny)*cmppix(2))
      endif
      f2=fx**2+fy**2+fz**2
      factor=1./(1.+(f2/fhalf**2)**norder)
C      type "(3i6,5f10.4)",ix,iy,iz,fx,fy,fz,f2,factor
      a(i)=factor*a(i)
      b(i)=factor*b(i)
   32 i=i+1


      call FFT(a,b,1,nz,n1*ny,+1)
      call FFT(a,b,nz,ny,n1,+1)
      call FFT(a(n+1),b(n+1),1,nz,ny,+1)
      call FFT(a(n+1),b(n+1),nz,ny,1,+1)
      call REALT(a,b,ny*nz,n1,1,+1)
      call FFT(a,b,ny*nz,n1,1,+1)

      i=1
      do 29 iz=1,nz
      do 29 iy=1,ny
      do 29 ix=1,nx,2
      image(ix,iy,iz)=a(i)
      image(ix+1,iy,iz)=b(i)
   29 i=i+1

      call free(pa)
      call free(pb)
      write (*, *) "3D Butterworth Filtering Completed"
      return
      end
 
                      
         
@


1.2
log
@Added message.
@
text
@d1 1
a1 1
C$Id: butt3d.f,v 1.1 1993/03/08 21:36:21 ty7777 Exp ty7777 $
d3 3
d33 1
d35 1
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
C$Id$
C$Log$
d69 1
a69 1
c     type "(3i6,5f10.4)",ix,iy,iz,fx,fy,fz,f2,factor
d88 1
a88 1
c     type "(3i6,5f10.4)",ix,iy,iz,fx,fy,fz,f2,factor
d111 1
@
