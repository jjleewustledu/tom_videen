head	1.3;
access;
symbols;
locks; strict;
comment	@c @;


1.3
date	93.10.04.21.55.32;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	92.04.23.21.25.39;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	92.04.13.19.12.07;	author tom;	state Exp;
branches;
next	;


desc
@Spideram function.
@


1.3
log
@added rcsheader
@
text
@CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  Subroutine:   D2INIT.FTN
C
C  Author:       Tom O. Videen
C  Date:         19-May-87
C  Written For:  SPIDERAM Super PETT Image Display Program
C
C  History:
C     Modified by TOV 12-Aug-87 to eliminate a bug in error checking
C        for max. value of N for coronal and sagittal sections;
C     Modified by TOV 27-Sep-91 for 1152 x 900 pixel window.
C
C  Intent:
C     This subroutine initializes common block display parameters for
C     the particular type and size of display.
C
C    (Note: values of XORG, YORG, XBAR, YBAR should correspond
C        with those in D2DISPLA for multiple images)
C
C  Variables initialized:
C     XLOW,YLOW,XHIGH,YHIGH,XORG,YORG,XBAR,YBAR,N,SIZE,ZOFFSET
C
C  Variables Passed:
C     N = number of sections to display;
C     NUMPETT = PETT number (1,6,7,8);
C
C  Common Blocks from SPIDERAM.INC:
C     **DISPLAY  - display parameters             (write)
C
C  No Subroutines
C
C  Called by:  D2DISPLA
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE D2INIT(N,NUMPETT)
C
      INTEGER*4   N,NUMPETT,LASTSECT
      character*256 rcsheader
C
      INCLUDE 'spideram.inc'
      rcsheader = "$Id$"
C
      IF (MAG.EQ.1) THEN
        SIZE = 128
        XLOW = 1
        XORG = 1
        YORG = 128*(DLOC-1)
        XBAR = 1000
        YBAR = 100
        IF (DLOC.GT.6 .AND. NUMDISP.GT.7) THEN
          N = 7
        ELSE IF (DLOC.GT.5 .AND. NUMDISP.GT.14) THEN
          N = 14
        ELSE IF (DLOC.GT.4 .AND. NUMDISP.GT.21) THEN
          N = 21
        ELSE IF (DLOC.GT.3 .AND. NUMDISP.GT.28) THEN
          N = 28
        ELSE IF (DLOC.GT.2 .AND. NUMDISP.GT.35) THEN
          N = 35
        ELSE IF (DLOC.GT.1 .AND. NUMDISP.GT.42) THEN
          N = 42
        ELSE IF (NUMDISP.GT.49) THEN
          N = 49
        ELSE
          N = NUMDISP
        END IF
        LASTSECT = DSECTION - 1 + (SECTSTEP*N)
        IF (ORIENT.EQ.'T') THEN
          IF (LASTSECT.GT.SLICES) N = (SLICES-DSECTION+1)/SECTSTEP
        ELSE IF (NUMPETT.EQ.6) THEN
          IF (LASTSECT.GT.100) N = (100-DSECTION+1)/SECTSTEP
        ELSE
          IF (LASTSECT.GT.128) N = (128-DSECTION+1)/SECTSTEP
        END IF
C
      ELSE IF (MAG.EQ.2) THEN
        SIZE = 84
        XLOW = 17
        XORG = 0
        YORG = 224*(DLOC-1)
        XBAR = 380
        YBAR = YORG + 180
        IF (DLOC.GT.3 .AND. NUMDISP.GT.7) THEN
          N = 7
        ELSE IF (DLOC.GT.2 .AND. NUMDISP.GT.14) THEN
          N = 14
        ELSE IF (DLOC.GT.1 .AND. NUMDISP.GT.21) THEN
          N = 21
        ELSE IF (NUMDISP.GT.28) THEN
          N = 28
        ELSE
          N = NUMDISP
        END IF
        LASTSECT = DSECTION - 1 + (SECTSTEP*N)
        IF (ORIENT.EQ.'T') THEN
          IF (LASTSECT.GT.SLICES) N = (SLICES-DSECTION+1)/SECTSTEP
        ELSE IF (NUMPETT.EQ.6) THEN
          IF (LASTSECT.GT.100) N = (100-DSECTION+1)/SECTSTEP
        ELSE
          IF (LASTSECT.GT.128) N = (128-DSECTION+1)/SECTSTEP
        END IF
C
      ELSE IF (MAG.EQ.3) THEN
        SIZE = 88
        XLOW = 21
        XORG = 48
        YORG = 298*(DLOC-1)
        XBAR = 385
        YBAR = YORG + 264
        IF (DLOC.GT.2 .AND. NUMDISP.GT.4) THEN
          N = 4
        ELSE IF (DLOC.GT.1 .AND. NUMDISP.GT.8) THEN
          N = 8
        ELSE IF (NUMDISP.GT.12) THEN
          N = 12
        ELSE
          N = NUMDISP
        END IF
        LASTSECT = DSECTION - 1 + (SECTSTEP*N)
        IF (ORIENT.EQ.'T') THEN
          IF (LASTSECT.GT.SLICES) N = (SLICES-DSECTION+1)/SECTSTEP
        ELSE IF (NUMPETT.EQ.6) THEN
          IF (LASTSECT.GT.100) N = (100-DSECTION+1)/SECTSTEP
        ELSE
          IF (LASTSECT.GT.128) N = (128-DSECTION+1)/SECTSTEP
        END IF
C
      ELSE IF (MAG.EQ.4 .OR. MAG.EQ.5) THEN
        IF (DLOC.EQ.1) THEN
          XORG  = 0
          YORG  = 0
        ELSE IF (DLOC.EQ.2) THEN
          XORG  = 530
          YORG  = 0
        ELSE IF (DLOC.EQ.3) THEN
          XORG  = 0
          YORG  = 448
        ELSE
          XORG  = 530
          YORG  = 448
        END IF
        IF (MAG.EQ.4) THEN
          SIZE = 112
          XLOW = 1
          XBAR = XORG + 465
          YBAR = YORG + 40
        ELSE
          SIZE = 89
          XLOW = 20
          XBAR = XORG + 438
          YBAR = YORG + 30
        END IF
        IF (NUMDISP.LE.(5-DLOC)) THEN
          N = NUMDISP
        ELSE
          N = 5-DLOC
        END IF
        LASTSECT = DSECTION - 1 + (SECTSTEP*N)
        IF (ORIENT.EQ.'T') THEN
          IF (LASTSECT.GT.SLICES) N = (SLICES-DSECTION+1)/SECTSTEP
        ELSE IF (NUMPETT.EQ.6) THEN
          IF (LASTSECT.GT.100) N = (100-DSECTION+1)/SECTSTEP
        ELSE
          IF (LASTSECT.GT.128) N = (128-DSECTION+1)/SECTSTEP
        END IF
      ELSE
        SIZE = AMAX
        XLOW = 1
        XORG = 70
        YORG = 0
        XBAR = 1000
        YBAR = 100
        N = 1
      END IF
      YLOW = XLOW
      XHIGH = XLOW+SIZE-1
      YHIGH = YLOW+SIZE-1
C
C  Initialize SLCLINES, ZOFFSET, YLOW and YHIGH
C    for coronal/sagittal displays
C
      IF (ORIENT.NE.'T') THEN
        IF (NUMPETT.EQ.6) THEN
          IF (SLICES.EQ.7) THEN
            SLCLINES = 5
          ELSE IF (SLICES.EQ.14) THEN
            SLCLINES = 2
          ELSE
            SLCLINES = 1
          END IF
        ELSE IF (NUMPETT.EQ.7) THEN
          IF (SLICES.EQ.7) THEN
            SLCLINES = 4
          ELSE IF (SLICES.EQ.14) THEN
            SLCLINES = 2
          ELSE
            SLCLINES = 1
          END IF
        ELSE
          IF (SLICES.EQ.7) THEN
            SLCLINES = 6
          ELSE IF (SLICES.EQ.14) THEN
            SLCLINES = 3
          ELSE
            SLCLINES = 1
          END IF
        END IF
        ZOFFSET = (SIZE - SLICES*SLCLINES)/2
        IF (SMOOTH) THEN
          YLOW  = 1 + (SLCLINES/2)
          YHIGH = (SLICES-1)*SLCLINES + YLOW
        ELSE
          YLOW  = 1
          YHIGH = SLICES*SLCLINES
        END IF
      END IF
C
      RETURN
      END
@


1.2
log
@Save window dump. 04/23/92 by Tom Yang
@
text
@d40 1
d43 1
@


1.1
log
@Initial revision
@
text
@@
