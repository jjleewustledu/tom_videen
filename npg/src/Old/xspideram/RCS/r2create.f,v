head	1.3;
access;
symbols;
locks; strict;
comment	@c @;


1.3
date	93.10.04.21.55.32;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	92.04.23.21.25.39;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	92.04.13.19.12.07;	author tom;	state Exp;
branches;
next	;


desc
@Spideram function.
@


1.3
log
@added rcsheader
@
text
@CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  Subroutine:   R2CREATE.FTN
C
C  Author:       Tom O. Videen
C  Date:         13-Mar-87
C  Written For:  SPIDERAM Super PET Image Display Program
C
C  History:
C     Modified by Tom Yang on Oct. 14, 1991 to add return for
C        irregular region creation.
C
C  Intent:
C     Create a region of interest.
C     This subroutine get the name and type of region
C     and then calls other subroutines to create & display the region.
C     The region will be created and displayed on the image in
C     IMAGE(n,n,1), which is normally the last image displayed.
C
C  Common Blocks from SPIDERAM.INC:
C     **LUINFO   - logical units                  (read only)
C     **DISPLAY  - display parameters             (read only)
C     **FILES    - scan file list                 (read only)
C     **REGION   - region analysis parameters     (write)
C
C  Variable Passed:
C     N = region number;
C
C  Variables:
C     Q = question;
C     CH = character;
C     CHARSET = character set of allowed characters in GETCHAR;
C
C  Uses:
C
C  SPIDERAM.LIB - main subroutines for SPIDERAM:
C     R2RECT   - create a rectangular region;
C     R2IRREG  - create a irregular region;
C
C  TERMINAL.LIB - terminal I/O subroutines
C     GETCHAR
C     GTSTRING
C
C  Called by:  M2REGION
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE R2CREATE(N)
C
      INTEGER*4    N
      LOGICAL*1    ERRFLAG
      CHARACTER*1  CH
      CHARACTER*80 Q,STR,CHARSET
      character*256 rcsheader
C
      INCLUDE 'spideram.inc'
      rcsheader = "$Id$"
C
      CHARSET = 'RIXrix'
      ERRFLAG = .FALSE.
C
      IF (N.EQ.1) THEN
        RORIENT  = ORIENT
        RSCANNER = PETTNUM
        RSLICES  = SLICES
      ELSE
        IF (ORIENT.NE.RORIENT .OR. PETTNUM.NE.RSCANNER) THEN
          WRITE(USEROUT,*) 'Region list must be uniform'
          ERRFLAG = .TRUE.
          RETURN
        END IF
      END IF
C
      WRITE(USEROUT,*) ' '
      Q = 'Region Name'
      STR = REGNAME(N)
      CALL GTSTRING(Q,STR)
      REGNAME(N) = STR(1:10)
C
      Q = 'Type of Region (R=Rectangle, I=Irregular, X=Cancel)'
100   CALL GETCHAR(Q,CH,CHARSET)
      IF ((CH.EQ.'R').OR.(CH.EQ.'r')) THEN
        REGTYPE(N) = 'R'
        CALL R2RECT(N,ERRFLAG)
      ELSE IF ((CH.EQ.'I').OR.(CH.EQ.'i')) THEN
        REGTYPE(N) = 'I'
        CALL R2IRREG(N,ERRFLAG)
      ELSE IF ((CH.EQ.'X').OR.(CH.EQ.'x')) THEN
        REGNAME(N) = ' '
        REGTYPE(N) = ' '
        RETURN
      ELSE
        GO TO 100
      END IF
C
      IF (ERRFLAG) THEN
        REGNAME(N) = ' '
        REGTYPE(N) = ' '
      ELSE
        LASTREGN = N
      END IF
C
      RETURN
      END
@


1.2
log
@Save window dump. 04/23/92 by Tom Yang
@
text
@a49 2
C
C
d54 1
d57 1
a57 1
C
@


1.1
log
@Initial revision
@
text
@@
