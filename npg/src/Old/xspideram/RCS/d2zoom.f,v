head	1.3;
access;
symbols;
locks; strict;
comment	@c @;


1.3
date	93.10.04.21.55.32;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	92.04.23.21.25.39;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	92.04.13.19.12.07;	author tom;	state Exp;
branches;
next	;


desc
@Spideram function.
@


1.3
log
@added rcsheader
@
text
@CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  Subroutine:   D2ZOOM.FTN
C
C  Author:       Tom O. Videen
C  Date:         01-Jun-87
C  Written For:  SPIDERAM Super PETT Image Display Program
C
C  History:
C     Modified by Tom Yang on 04-Oct-91 to port to Sun Workstation.
C     Modified by Tom Yang on 10-Oct-91 to get character on zoom without
C	carriage return. Clear old outline for moving region.
C
C  Intent:
C     Zoom an image.
C
C  NOTE:  uses region number 100 for the zoom, but restores original
C     values;
C
C  Common Blocks from SPIDERAM.INC:
C     **LUINFO   - logical units (also /USRIO/)   (read only)
C     **DISPLAY  - display parameters             (read only)
C     **REGION   - region analysis parameters     (read & write)
C
C  Variables:
C     OXLOC,OYLOC = original values for XLOC and YLOC;
C     OXMIN,OXMAX = original values for XMIN and XMAX;
C     OYMIN,OYMAX = original values for YMIN and YMAX;
C     MENUSET - set of characters allowed for menu options;
C     OTYPE = original value of REGTYPE;
C        (restored before exitting subroutine)
C     ZMIN = minimum zoom;
C     Z = current level of zoom;
C     DIFF = difference of XHIGH-XLOW (or YHIGH-YLOW);
C     CH = input character from the terminal;
C
C  Uses:
C
C  TERMINAL.LIB
C     TCONTROL - terminal control;
C     INCHAR   - get a character from user;
C     GETINT   - get an integer from user;
C
C  SPIDERAM.LIB
C     P2RECT   - draws a rectangle
C     P2NORECT - erases a rectangle
C     R2MOVE   - move a rectangular region;
C     D2RAW    - display an uninterpolated image;
C     D2SMOOTH - display an interpolated image;
C     D2BAR    - display a color bar;
C     D2LABEL4 - write labels on MAG=4 display;
C
C  Internal Subroutines:
C     ZOOMAREA - create the zoom area;
C
C  Called by:  M2DISPLA
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE D2ZOOM
C
      INTEGER*4		OXMIN,OXMAX,OYMIN,OYMAX,ZMIN,Z,DIFF,N,
     &			ROWCH,COLCH,HOME,CLEAR
      INTEGER*2		ZERO
      REAL		OXLOC, OYLOC
      CHARACTER*1	CH, OTYPE
      CHARACTER*80	Q,MENUSET
      LOGICAL*1		SPLIT
      character*256 rcsheader
C
      INCLUDE 'spideram.inc'
      rcsheader = "$Id$"
C
      DATA	N,ZERO /100,0/
      DATA	HOME,CLEAR /1,2/
      DATA MENUSET      /'ERI12346789XZerixz'/
      DATA ROWCH,COLCH  /11,1/
C
      SPLIT	= .FALSE.
C
C  Display the menu at the upper left corner of screen
      CALL TCONTROL (HOME,0,0)
      CALL TCONTROL (CLEAR,0,0)
C
C  Save original values of MIN and MAX values for region N
C
      OXLOC	= XLOC (N)
      OYLOC	= YLOC (N)
      OXMIN	= XMIN (N)
      OXMAX	= XMAX (N)
      OYMIN	= YMIN (N)
      OYMAX	= YMAX (N)
      OTYPE	= REGTYPE (N)
C
C  Display the largest square that can be zoomed with current image
C
      REGTYPE (N)	= 'R'
      DIFF		= XHIGH - XLOW + 1
      XLOC (N)		= DIFF / 2 + XLOW
      YLOC (N)		= DIFF / 2 + YLOW
      ZMIN		= SIZE / DIFF
      IF (ZMIN .EQ. 1) ZMIN = 2
      Z		= ZMIN
      CALL ZOOMAREA (N,Z)
      CALL P2RECT (N,REGPLANE)
C
      WRITE (USEROUT, *) 'Select Region to Zoom:'
      WRITE (USEROUT, *) '---------------------'
      WRITE (USEROUT, *)
      WRITE (USEROUT, *) '   E = Expand size of region'
      WRITE (USEROUT, *) '   R = Reduce size of region'
      WRITE (USEROUT, *) '   I = Change increment for move'
      WRITE (USEROUT, *) '   1-9 = Move the region'
      WRITE (USEROUT, *) '   X = Exit without zooming'
      WRITE (USEROUT, *) '   Z = Zoom the region'
      WRITE (USEROUT, *) 
C
100   CALL CHFIELD(CH,MENUSET,ROWCH,COLCH,0)
      IF (CH .EQ. '1') THEN
	CALL R2MOVE (N, -INC, +INC)
      ELSE IF (CH .EQ. '2') THEN
	CALL R2MOVE (N, ZERO, +INC)
      ELSE IF (CH .EQ. '3') THEN
	CALL R2MOVE (N, +INC, +INC)
      ELSE IF (CH .EQ. '4') THEN
	CALL R2MOVE (N, -INC, ZERO)
      ELSE IF (CH .EQ. '6') THEN
	CALL R2MOVE (N, +INC, ZERO)
      ELSE IF (CH .EQ. '7') THEN
	CALL R2MOVE (N, -INC, -INC)
      ELSE IF (CH .EQ. '8') THEN
	CALL R2MOVE (N, ZERO, -INC)
      ELSE IF (CH .EQ. '9') THEN
	CALL R2MOVE (N, +INC, -INC)
      ELSE IF ((CH.EQ.'E'.OR.CH.EQ.'e') .AND. (Z.GT.ZMIN)) THEN
	Z	= Z - 1
	CALL ZOOMAREA (N, Z)
        CALL P2RECT (N, REGPLANE)
      ELSE IF ((CH .EQ. 'R' .OR. CH .EQ. 'r') .AND. (Z .LT. 128)) THEN
	Z	= Z + 1
	CALL ZOOMAREA (N, Z)
        CALL P2RECT (N, REGPLANE)
      ELSE IF (CH .EQ. 'I' .OR. CH .EQ. 'i') THEN
        WRITE (USEROUT, *) 
	Q	= 'Increment size for moving region'
	I	= INT (INC)
	CALL GETINT (Q,I,1,100)
	INC	= INT (I)
        CALL ERSFIELD(40,ROWCH+1,COLCH)
        CALL ERSFIELD(40,ROWCH+2,COLCH)
	GO TO 100
      ELSE IF (CH .EQ. 'X' .OR. CH .EQ. 'x') THEN
	CALL P2NORECT (N, REGPLANE)
        GO TO 9000
      ELSE IF (CH .EQ. 'Z' .OR. CH .EQ. 'z') THEN
	CALL P2NORECT (N, REGPLANE)
	ZFACTOR		= Z
	XLOW		= XMIN (N)
	XHIGH		= XMAX (N)
	YLOW		= YMIN (N)
	YHIGH		= YMAX (N)
	IF (SMOOTH) THEN
		CALL D2SMOOTH (SPLIT)
	ELSE
		CALL D2RAW
	END IF
	CALL D2BAR
	IF (ANNOTATE) THEN
		IF (MAG .EQ. 4) THEN
			CALL D2LABEL4
		END IF
	END IF
	GO TO 9000
      ELSE
	GO TO 100
      END IF
C
      GO TO 100
C
C  Restore original values of MIN and MAX values for region N
C
9000  XLOC (N)		= OXLOC
      YLOC (N)		= OYLOC
      XMIN (N)		= OXMIN
      XMAX (N)		= OXMAX
      YMIN (N)		= OYMIN
      YMAX (N)		= OYMAX
      REGTYPE (N)	= OTYPE
      RETURN
      END
C
C *********************************************************************
C
      SUBROUTINE ZOOMAREA (N,Z)
C
C  Create a zoom region with ZFACTOR = Z
C
      INTEGER*4	 TXMIN,TXMAX,TYMIN,TYMAX,Z,SIDE,N
C
      INCLUDE 'spideram.inc'
C
      CALL P2NORECT (N,REGPLANE)
      SIDE	= SIZE / Z
      TXMIN	= NINT (XLOC (N)) - SIDE / 2
      TXMAX	= TXMIN + SIDE - 1
      TYMIN	= NINT (YLOC (N)) - SIDE / 2
      TYMAX	= TYMIN + SIDE - 1
      IF (TXMIN .GE. XLOW .AND. TXMAX .LE. XHIGH) THEN
	XMIN (N)	= INT (TXMIN)
	XMAX (N)	= INT (TYMAX)
      END IF
      IF (TYMIN .GE. YLOW .AND. TYMAX .LE. YHIGH) THEN
	YMIN (N)	= INT (TYMIN)
	YMAX (N)	= INT (TYMAX)
      END IF
C
      RETURN
      END
@


1.2
log
@Save window dump. 04/23/92 by Tom Yang
@
text
@d63 1
a63 1
     2			ROWCH,COLCH,HOME,CLEAR
d69 1
d72 1
@


1.1
log
@Initial revision
@
text
@@
