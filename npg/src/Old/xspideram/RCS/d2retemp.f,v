head	1.3;
access;
symbols;
locks; strict;
comment	@c @;


1.3
date	93.10.04.21.55.32;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	92.04.23.21.25.39;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	92.04.13.19.12.07;	author tom;	state Exp;
branches;
next	;


desc
@Spideram function.
@


1.3
log
@added rcsheader
@
text
@CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  Subroutine:   D2RETEMP.FTN
C
C  Author:       Tom O. Videen
C  Date:         07-Nov-86
C  Written For:  SPIDERAM Super PET Image Display Program
C
C  Intent:
C     This routine reduces the size of a template by subtracting
C     COUNT pixels from each side of template number TNUM.
C
C  Common Blocks from SPIDERAM.INC:
C     **IMAGEDAT - image arrays                   (read & write)
C     **LUINGO   - logical units                  (read)
C
C  Variables Passed:
C     COUNT = number of pixels to subtract from each side of the
C        template;
C     TNUM = template number (1-14);
C
C  Variables Internal:
C     I,J = indices to the template array;
C     K = counter of number of pixels remaining to be subtracted
C        during the loop;
C     IOREADR - random access I/O wait read;
C     IOWRITER - random access I/O wait write;
C     PB - parameter block used by SYSIO;
C     TBYTES - no. of bytes to read for a template (TIMAGE);
C     ADDR - random address to start reading a template from;
C
C  Common Blocks from SPIDERAM.INC:
C     **IMAGEDAT - image arrays                   (read only)
C     **LUINFO   - logical units                  (read only)
C
C  Uses:  SYSIO
C
C  Called by:  M2DISPLA
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE D2RETEMP (COUNT, TNUM)
C
      INTEGER*4 COUNT, TNUM, PB (6), IOREADR, IOWRITER, ADDR, 
     &						TBYTES, I, J, K
      character*256 rcsheader
C
      INCLUDE 'spideram.inc'
      rcsheader = "$Id$"

      DATA IOREADR, IOWRITER, TBYTES /92, 60, 16384/
C
C  Get the template from disk file
C
      ADDR	= (TNUM - 1) * 64
      CALL SYSIO (PB, IOREADR, TDISK, TIMAGE, TBYTES, ADDR)
C
C  Reduce Upper Row
C
      DO 200 I = 1, 128
	K	= COUNT
	DO 100 J = 1, 128
		IF (TIMAGE (I, J)) THEN
			TIMAGE (I, J)	= .FALSE.
			K		= K - 1
			IF (K .EQ. 0) GO TO 200
		END IF
100	CONTINUE
200   CONTINUE
C
C  Reduce Lower Row
C
      DO 400 I = 1, 128
	K	= COUNT
	DO 300 J = 128, 1, -1
		IF (TIMAGE (I, J)) THEN
			TIMAGE (I, J)	= .FALSE.
			K		= K - 1
			IF (K .EQ. 0) GO TO 400
		END IF
300	CONTINUE
400   CONTINUE
C
C  Reduce Left Column
C
      DO 600 J = 1, 128
	K	= COUNT
	DO 500 I = 1, 128
		IF (TIMAGE (I, J)) THEN
			TIMAGE (I, J)	= .FALSE.
			K		= K - 1
			IF (K .EQ. 0) GO TO 600
		END IF
500	CONTINUE
600   CONTINUE
C
C  Reduce Right Column
C
      DO 800 J = 1, 128
	K	= COUNT
	DO 700 I = 128, 1, -1
		IF (TIMAGE (I, J)) THEN
			TIMAGE (I, J)	= .FALSE.
			K		= K - 1
			IF (K .EQ. 0) GO TO 800
		END IF
700	CONTINUE
800   CONTINUE
C
C  Write the template to disk file
C
      CALL SYSIO (PB, IOWRITER, TDISK, TIMAGE, TBYTES, ADDR)
C
      RETURN
      END
@


1.2
log
@Save window dump. 04/23/92 by Tom Yang
@
text
@d45 2
a46 1
     2						TBYTES, I, J, K
d49 2
@


1.1
log
@Initial revision
@
text
@@
