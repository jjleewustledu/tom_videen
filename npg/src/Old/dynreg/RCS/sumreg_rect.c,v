head	1.1;
access;
symbols;
locks; strict;
comment	@ * @;


1.1
date	93.10.26.18.56.40;	author tom;	state Exp;
branches;
next	;


desc
@Initial version
@


1.1
log
@Initial revision
@
text
@/* $log$
 */
/*	========================================================================
 *	Module:				sumreg_rect.c
 *	Date:					25-Oct-93
 *	Author:				Tom Videen
 *	Description:	Sum pixels withing a region
 *	========================================================================
 */

#include <stdio.h>
#include <stdlib.h>
#include <petutil/petutil.h>

#define MAXSLICES 49
#define DIM  128       /* x- and y-dimension of PET-array */
#define MAX_REGIONS 100

static char rcsid []= "$Id$"; 

/*	-----------------------
 *	Function sumreg_rect
 *	-----------------------
 */
float sumreg_rect (image, nx, ny, nslices, regnum, slice, xctr, yctr, xdim, ydim)

	float	image [MAXSLICES][DIM][DIM];
	int		regnum;
	float	slice[MAX_REGIONS];
	float	xctr[MAX_REGIONS];
	float	yctr[MAX_REGIONS];
	int		xdim[MAX_REGIONS];
	int		ydim[MAX_REGIONS];

{
	float	sum;
	int		npixels;
	int		i, j, k;
	int		x0, y0;
	int		x1, y1;

	if (regnum > MAX_REGIONS) {
		fprintf (stderr, "Region number %d exceeds %d\n", regnum, MAX_REGIONS);
		exit;
	}

	x0 = xctr[regnum] - 1 - (xdim[regnum] / 2);
	x1 = x0 + xdim[regnum];
	y0 = yctr[regnum]  - 1 - (ydim[regnum] / 2);
	y1 = y0 + ydim[regnum];
	k = slice[regnum] - 1;

	if (x0 < 0 || x1 > nx || y0 < 0 || y1 > ny || k < 0 || k >= nslices) {
		fprintf (stderr, "Region is outside image space\n");
		exit;
	}

	npixels = 0;
	sum = 0;

	for (i = x0; i < x1; i++) {
		for (j = y0; j < y1; j++) {
			sum = sum + image[k][j][i];
			npixels = npixels + 1;
		}
	}
	if (npixels > 0)
		return (sum / (float) npixels);
	else
		return 0;
}
@
