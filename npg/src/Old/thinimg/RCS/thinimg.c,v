head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	2002.11.27.18.11.03;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	2000.09.06.19.46.45;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	96.05.24.17.54.26;	author tom;	state Exp;
branches;
next	;


desc
@@


1.3
log
@*** empty log message ***
@
text
@/* $Log: thinimg.c,v $
 * Revision 1.2  2000/09/06  19:46:45  tom
 * strcpy filename
 *
 * Revision 1.1  1996/05/24  17:54:26  tom
 * Initial revision
 * */
/*	=========================================================================
 *	Module:			thinimg.c
 *	Author:			Tom Videen
 *	Description:	Strip non-zero pixels from the edges of an image.
 *	=================================================================================
 */
#ifndef lint
static char     rcsid[] = "$Id: thinimg.c,v 1.2 2000/09/06 19:46:45 tom Exp tom $";
#endif

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <image.h>
#include <libimage.h>
#include <nrutil.h>
#include <libnrimg.h>

main (argc, argv)
	int             argc;
	char           *argv[];
{
	ImageFile      *file;
	Index           indx;
	char           *imgname;		 /* input image filename */
	int             count;			 /* number of pixels to strip */
	float        ***image;			 /* input image tensor */

/*
 *	Get command line arguments.
 */
	imgname = argv[1];
	count = atoi (argv[2]);

	indx.frm = 1;
	indx.pln = 1;
	indx.gate = 1;
	indx.data = 0;
	indx.bed = 0;

/*	Read image */

	file = make_imgfile (imgname);
	if (open_imgfile (file) == ERROR) {
		fprintf (stderr, "ERROR [thinimg]: Cannot open %s\n", imgname);
		return (ERROR);
	}
	if (get_mh (file) == ERROR) {
		fprintf (stderr, "ERROR [thinimg]: Cannot get MainHeader from %s\n", imgname);
		return (ERROR);
	}
	if (get_sh (file, &indx) == ERROR) {
		fprintf (stderr, "ERROR [thinimg]: Cannot read file subheader in %s\n", imgname);
		return (ERROR);
	}
	if ((image = readtensor (file, &indx)) == NULL) {
		fprintf (stderr, "ERROR [thinimg]: Cannot read %s\n", imgname);
		return (ERROR);
	}
/*	Strip pixels */

	thintensor (file, image, count);

/*	Write the masked image */

	printf ("Writing masked image %s\n", imgname);
	close_imgfile (file);
	(void) strcpy (file->name, imgname);
	(void) strcpy (file->mode, "w");
	if (open_imgfile (file) == ERROR) {
		fprintf (stderr, "ERROR [thinimg]: Cannot open %s\n", imgname);
		return (ERROR);
	}
	if (put_mh (file) == ERROR) {
		fprintf (stderr, "ERROR [thinimg]: Cannot write %s\n", imgname);
		return (ERROR);
	}
	if (writetensor (file, &indx, image) == ERROR) {
		fprintf (stderr, "ERROR [thinimg]: Cannot write %s\n", imgname);
		return (ERROR);
	}
	free_imgfile (file);
	return (OK);
}
@


1.2
log
@strcpy filename
@
text
@d2 3
d15 1
a15 1
static char     rcsid[] = "$Id: thinimg.c,v 1.1 1996/05/24 17:54:26 tom Exp tom $";
a22 1
#include <nr.h>
a24 1
#include <imgutil.h>
d34 1
a34 1
	float        ***image = NULL;	 /* input image tensor */
d75 2
a76 2
	strcpy (file->name, imgname);
	strcpy (file->mode, "w");
@


1.1
log
@Initial revision
@
text
@d1 4
a4 1
/* $Log$ */
d12 1
a12 1
static char     rcsid[] = "$Id: thinimg.c,v 2.0 1996/05/23 20:06:51 tom Exp $";
d74 1
a74 2
	free (file->name);
	file->name = imgname;
@
