head	1.5;
access;
symbols;
locks; strict;
comment	@ * @;


1.5
date	93.03.02.18.41.41;	author ty7777;	state Exp;
branches;
next	1.4;

1.4
date	93.02.15.20.31.58;	author ty7777;	state Exp;
branches;
next	1.3;

1.3
date	93.02.09.18.21.24;	author ty7777;	state Exp;
branches;
next	1.2;

1.2
date	93.01.27.20.43.16;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	93.01.26.20.58.53;	author ty7777;	state Exp;
branches;
next	;


desc
@savesxr.c initial checking in.
@


1.5
log
@Before taking magnification factor into consideration for Fran's column.
@
text
@/*$Id: savesxr.c,v 1.4 1993/02/15 20:31:58 ty7777 Exp ty7777 $*/
/*$Log: savesxr.c,v $
 * Revision 1.4  1993/02/15  20:31:58  ty7777
 * Before adding lines for slices.
 *
 * Revision 1.3  1993/02/09  18:21:24  ty7777
 * Same as the last one.
 *
 * Revision 1.2  1993/01/27  20:43:16  ty7777
 * After adding PET image width and skull X ray width.
 *
 * Revision 1.1  1993/01/26  20:58:53  ty7777
 * Initial revision
 **/

#ifndef lint
static char sccsid [] = "@@(#)savesxr.c	11/03/92  Copyright Neural Pet Group, Washington University 1992";
#endif

static char rcsid [] = "$Id: savesxr.c,v 1.4 1993/02/15 20:31:58 ty7777 Exp ty7777 $";

/*___________________________________________________________________________
  File:		savesxr.c

  Function:	void SaveSXRData ()

  Arguments:	

  Description:	This function writes skull xray data and atlas/tomograph
		constants to a file.

  Called by:	

  Calling:	

  History:	Created by Tom Yang on 11/03/92. 
___________________________________________________________________________*/

#include "xray.h"

PUBLIC void SaveSXRData (sxr_name, peaktype, petfile, sxr_root, sxr_output)
	char		*sxr_name;
	char		peaktype;
	char		*petfile;
	char		*sxr_root;
	SXR_OUTPUT	sxr_output;
{
	FILE	*sxrfp;
	char	user_name [MAXLINE];
	int	i;
	long	date [DATE_COMPONENTS];

	sxrfp	= fopen (sxr_name, "w");

	intdate_ (date);
	getuser_ (user_name);

	fprintf (sxrfp, "%3d   {Created by xray 3.0}\n", sxr_output.type);  
	fprintf (sxrfp, "%s; %d%% %s peak template of %s, slices 1-%d; %d/%2.2d/%d; %s\n", 
		sxr_name, sxr_output.threshold, (peaktype == PEAK_PER_SLICE)? "slice": "scan", petfile, 
		sxr_output.number_slices, date [MONTH], date [DAY], date [YEAR], user_name);
	fprintf (sxrfp, "%s\n", sxr_root);
	fprintf (sxrfp, "%6.3f  %6.3f  %2d  %6.3f %2d  %5.2f  %5.2f %7.1f %7.1f %7.1f\n", 
		sxr_output.pixel_size, sxr_output.magnification_factor, sxr_output.number_slices,
		sxr_output.slice_separation, sxr_output.reference_slice, sxr_output.zatlas_dimension, 
		sxr_output.apatlas_dimension, sxr_output.film_position, sxr_output.scan_position,
		sxr_output.reference_offset); 
	fprintf (sxrfp, "%6.3f %7.2f %6.2f %6.2f %6.2f %6.2f %6.2f %6.2f %6.2f %7.2f %7.2f\n", 
		sxr_output.apxray, sxr_output.degx, sxr_output.zxray, 
		sxr_output.dz, sxr_output.dap, sxr_output.apcenter,
		sxr_output.ear_separation, sxr_output.eardap, 
		sxr_output.eardz, sxr_output.degy, sxr_output.degz);

	for (i = 0; i < sxr_output.number_slices; i++)
	{
		fprintf (sxrfp, "%5.1f  %5.1f  %5.1f  %5.1f\n", sxr_output.rlpetdim [i], 
			sxr_output.rlcenter [i], sxr_output.vertical_petdim [i],
			sxr_output.rlslicedim [i]);
	}

	fclose (sxrfp);
}
@


1.4
log
@Before adding lines for slices.
@
text
@d1 1
a1 1
/*$Id: savesxr.c,v 1.3 1993/02/09 18:21:24 ty7777 Exp ty7777 $*/
d3 3
d20 1
a20 1
static char rcsid [] = "$Id: savesxr.c,v 1.3 1993/02/09 18:21:24 ty7777 Exp ty7777 $";
d63 5
a67 4
	fprintf (sxrfp, "%6.3f  %6.3f  %2d  %6.3f %2d  %5.2f  %5.2f\n", sxr_output.pixel_size,
		sxr_output.magnification_factor, sxr_output.number_slices,
		sxr_output.slice_separation, sxr_output.reference_slice, 
		sxr_output.zatlas_dimension, sxr_output.apatlas_dimension); 
d76 1
a76 1
		fprintf (sxrfp, "%5.1f  %5.1f   %.1f   %.1f\n", sxr_output.rlpetdim [i], 
@


1.3
log
@Same as the last one.
@
text
@d1 1
a1 1
/*$Id: savesxr.c,v 1.2 1993/01/27 20:43:16 ty7777 Exp $*/
d3 3
d17 1
a17 1
static char rcsid [] = "$Id: savesxr.c,v 1.2 1993/01/27 20:43:16 ty7777 Exp $";
d38 1
a38 1
PUBLIC void SaveSXRData (sxr_name, threshold, peaktype, petfile, sxr_root, sxr_output)
a39 1
	char		threshold;
d55 1
a55 1
	fprintf (sxrfp, "%d  {Created by xray 3.0}\n", sxr_output.type);  
d57 1
a57 1
		sxr_name, threshold, (peaktype == PEAK_PER_SLICE)? "slice": "scan", petfile, 
d60 1
a60 1
	fprintf (sxrfp, "%.3f   %.3f   %d   %.2f   %d   %.1f   %.1f\n", sxr_output.pixel_size,
d64 1
a64 1
	fprintf (sxrfp, "%.4f  %.4f  %.4f  %.4f  %.4f  %.1f  %.2f  %.1f  %.1f  %.4f  %.4f\n", 
d72 1
a72 1
		fprintf (sxrfp, "%.1f   %.1f   %.1f   %.1f\n", sxr_output.rlpetdim [i], 
@


1.2
log
@After adding PET image width and skull X ray width.
@
text
@d1 1
a1 1
/*$Id: savesxr.c,v 1.1 1993/01/26 20:58:53 ty7777 Exp ty7777 $*/
d3 3
d14 1
a14 1
static char rcsid [] = "$Id: savesxr.c,v 1.1 1993/01/26 20:58:53 ty7777 Exp ty7777 $";
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
/*$Id$*/
/*$Log$*/
d11 1
a11 1
static char rcsid [] = "$Id$";
d67 3
a69 1
		fprintf (sxrfp, "%.1f	%.1f\n", sxr_output.rlpetdim [i], sxr_output.rlcenter [i]);
@
