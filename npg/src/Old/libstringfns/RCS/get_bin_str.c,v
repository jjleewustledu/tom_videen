head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	99.12.10.16.02.08;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	96.06.10.08.48.28;	author jane;	state Exp;
branches;
next	;


desc
@Initial revision
@


1.2
log
@new Makefile, y2k rebuild
@
text
@/*$Id: get_bin_str.c,v 1.1 1996/06/10 08:48:28 jane Exp tom $*/
/*$Log: get_bin_str.c,v $
 * Revision 1.1  1996/06/10  08:48:28  jane
 * Initial revision
 **/
/* ==========================
 * File: get_bin_str.c
 * Author: Jane Dunford-Shore
 * Date: 28-April-96
 * Functions: get_bin_str()
 * ==========================
 */

#include <stdio.h>
#include <string.h>
#include <stringfns.h>
#include <errhand.h>

/* ---------------------
 * FUNCTION: get_bin_str
 * PURPOSE: Get a string from a binary file, given the offset and
 *          length of the string.
 * ARGUMENTS: FILE *fp_file: pointer to file containing the string
 *            int offset: byte position of first char. of the string,
 *                        relative to the beginning of the file
 *                        (first byte of file = byte 0)                        
 *            int length: number of bytes in the string
 * RETURNS: pointer to the string specified
 * IDEAS: Rather than having the function return (char *), and limiting
 *        the string length (currently 50 chars.), add (char *string) as
 *        an argument, and have the function modify this argument. Change
 *        return type of function to void. Would need to modify all calls. 
 * ---------------------
 */

#define MAXSTR 256

char *get_bin_str(FILE *fp_file, int offset, int length) {

static char tmpstr[MAXSTR];

    if (fseek(fp_file, offset, SEEK_SET)) 
        err_handler(FILE_READ_ERR, "");
    (void) memset(tmpstr, '\0', 256);  
    if (fread(tmpstr, length, 1, fp_file) != 1)
        err_handler(FILE_READ_ERR, "");
    return tmpstr;
}
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
/*$Id$*/
/*$Log$*/
a14 1
#include <stdlib.h>
d16 2
a17 2
#include "stringfns.h"
#include "errhand.h"
a40 1
int  chunksread;
d42 1
a42 1
    if (fseek(fp_file, offset, SEEK_SET)) {
d44 2
a45 3
    }
    memset(tmpstr, '\0', 256);  
    if ((chunksread = fread(tmpstr, length, 1, fp_file)) != 1) {
a46 1
    }
@
