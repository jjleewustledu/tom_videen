head	1.1;
access;
symbols;
locks; strict;
comment	@c @;


1.1
date	95.12.07.15.43.10;	author tom;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@C$Id
C$Log: imgpad.f,v $
c Revision 1.1  1995/12/02  00:00:55  avi
c Initial revision
c
C
      subroutine npad_test
      real*4 mmppix/2.086214/
      character*256 rcsheader /'$Header: /home/npggw/tom/src/azs_gauss/temp/RCS/imgpad.f,v 1.1 1995/12/02 00:00:55 avi Exp $'/
c     margin computed as 2.*sd = 2.*0.1874/(mmppix*fhalf)
      fhalf=0.02
      margin=nint(2.*0.1874/(mmppix*fhalf))
      type "('mmppix,fhalf,margin',2f10.4,i4)",mmppix,fhalf,margin
      do 1 n=1,1000
      np=npad(n,margin)
    1 type *,n,np,float(np)/float(n)
      end

      function npad(n,margin)
      if(n.le.1)then
        npad=n
        return
      endif
      m=1
      do 2 j=1,12
      do 4 i=2,9
      npad=m*i
    4 if(i.ne.7.and.npad.ge.n+2*margin)return
    2 m=m*2
      npad=n
      return
      end

      subroutine imgpad(imag,nx,ny,nz,imagp,nxp,nyp,nzp)
      real*4 imag(nx,ny,nz),imagp(nxp,nyp,nzp)
      logical*4 ldebug/.false./

      pi=atan2(0.,-1.)

      mx=(nxp-nx)/2
      my=(nyp-ny)/2
      mz=(nzp-nz)/2
      l=nzp-nz-2*mz	! 0 or 1
      do 1 kp=1,nzp
      k=kp-mz
c     if(k.ge.-mz/2.and.k.lt.nz+mz/2)k=min0(nz,max0(1,kp-mz))
      if(k.lt.1)then
        t=float(k-1)/float(mz)
        k=1
      elseif(k.gt.nz)then
        t=float(nz-k+l)/float(mz)
        k=nz
      else
        t=0.
      endif
      f=0.5*(1.+cos(pi*t))
      if(ldebug)type "('kp,k,f ',2i6,f10.6)",kp,k,f
      do 1 jp=1,nyp
      j=jp-my
      do 1 ip=1,nxp
      i=ip-mx
      if(j.lt.1.or.j.gt.ny.or.i.lt.1.or.i.gt.nx)then
        imagp(ip,jp,kp)=0.
      else
        imagp(ip,jp,kp)=f*imag(i,j,k)
      endif
    1 continue

      return
      end

      subroutine imgdap(imag,nx,ny,nz,imagp,nxp,nyp,nzp)
      real*4 imag(nx,ny,nz),imagp(nxp,nyp,nzp)

      mx=(nxp-nx)/2
      my=(nyp-ny)/2
      mz=(nzp-nz)/2

      do 1 k=1,nz
      kp=k+mz
      do 1 j=1,ny
      jp=j+my
      do 1 i=1,nx
      ip=i+mx
    1 imag(i,j,k)=imagp(ip,jp,kp)
      return
      end

@
