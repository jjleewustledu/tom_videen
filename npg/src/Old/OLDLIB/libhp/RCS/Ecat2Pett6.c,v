head	1.22;
access;
symbols;
locks; strict;
comment	@ * @;


1.22
date	95.10.30.22.39.01;	author tom;	state Exp;
branches;
next	1.21;

1.21
date	95.09.28.18.26.40;	author ty7777;	state Exp;
branches;
next	1.20;

1.20
date	95.09.05.17.24.57;	author ty7777;	state Exp;
branches;
next	1.19;

1.19
date	95.05.18.19.20.35;	author ty7777;	state Exp;
branches;
next	1.18;

1.18
date	94.11.07.20.53.51;	author ty7777;	state Exp;
branches;
next	1.17;

1.17
date	94.10.14.16.28.32;	author ty7777;	state Exp;
branches;
next	1.16;

1.16
date	94.03.03.19.52.48;	author ty7777;	state Exp;
branches;
next	1.15;

1.15
date	93.10.08.17.16.23;	author ty7777;	state Exp;
branches;
next	1.14;

1.14
date	93.10.08.15.06.51;	author ty7777;	state Exp;
branches;
next	1.13;

1.13
date	93.10.07.14.42.15;	author ty7777;	state Exp;
branches;
next	1.12;

1.12
date	93.10.07.14.39.38;	author ty7777;	state Exp;
branches;
next	1.11;

1.11
date	93.10.05.21.08.27;	author ty7777;	state Exp;
branches;
next	1.10;

1.10
date	93.10.04.19.49.13;	author ty7777;	state Exp;
branches;
next	1.9;

1.9
date	93.07.23.15.33.28;	author ty7777;	state Exp;
branches;
next	1.8;

1.8
date	93.07.14.19.21.39;	author ty7777;	state Exp;
branches;
next	1.7;

1.7
date	93.07.14.19.16.24;	author ty7777;	state Exp;
branches;
next	1.6;

1.6
date	93.07.12.23.48.35;	author ty7777;	state Exp;
branches;
next	1.5;

1.5
date	93.05.10.21.01.17;	author ty7777;	state Exp;
branches;
next	1.4;

1.4
date	93.05.05.18.55.00;	author ty7777;	state Exp;
branches;
next	1.3;

1.3
date	93.04.28.16.00.13;	author ty7777;	state Exp;
branches;
next	1.2;

1.2
date	93.04.21.16.58.43;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	93.03.03.20.29.13;	author ty7777;	state Exp;
branches;
next	;


desc
@Convert ECAT images to PETT VI images.
@


1.22
log
@change include to remove "petutil"
@
text
@/*$Id: Ecat2Pett6.c,v 1.21 1995/09/28 18:26:40 ty7777 Exp tom $*/
/*$Log: Ecat2Pett6.c,v $
 * Revision 1.21  1995/09/28  18:26:40  ty7777
 * Updated for 961 data.
 *
 * Revision 1.20  1995/09/05  17:24:57  ty7777
 * Use ERROR_BOUND.
 *
 * Revision 1.19  1995/05/18  19:20:35  ty7777
 * Same as the last version.
 *
 * Revision 1.18  1994/11/07  20:53:51  ty7777
 * Edited the documentation.
 *
 * Revision 1.17  1994/10/14  16:28:32  ty7777
 * Added math.h.
 *
 * Revision 1.16  1994/03/03  19:52:48  ty7777
 * Replace id with header.
 *
 * Revision 1.15  1993/10/08  17:16:23  ty7777
 * Added processing for ECAT images created from PETT VI images.
 *
 * Revision 1.14  1993/10/08  15:06:51  ty7777
 * Assign ecat_orientation to 1 after reflection.
 *
 * Revision 1.13  1993/10/07  14:42:15  ty7777
 * Moved ECAT_NUM_SLICES to /usr/local/include/petutil/petutil.h.
 *
 * Revision 1.12  1993/10/07  14:39:38  ty7777
 * Same as the las one.
 *
 * Revision 1.11  1993/10/05  21:08:27  ty7777
 * Added comment_info ().
 *
 * Revision 1.10  1993/10/04  19:49:13  ty7777
 * Added reflection to slice_data if the ECAT image is not reflected.
 *
 * Revision 1.9  1993/07/23  15:33:28  ty7777
 * Move MILLISECONDS_PER_SECOND to /usr/local/include/petutil.h
 *
 * Revision 1.8  1993/07/14  19:21:39  ty7777
 * Added DEFAULT_FRAME_DURATION.
 *
 * Revision 1.7  1993/07/14  19:16:24  ty7777
 * Added ecat_calibration_fctr in the scaling factor.
 *
 * Revision 1.6  1993/07/12  23:48:35  ty7777
 * Adding ecat_calibration_fctr to scaling factor.
 *
 * Revision 1.5  1993/05/10  21:01:17  ty7777
 * filter code -1 is ramp filter.
 *
 * Revision 1.4  1993/05/05  18:55:00  ty7777
 * After getrealimg () and writerealimg () worked.
 *
 * Revision 1.3  1993/04/28  16:00:13  ty7777
 * Modified array copying.
 *
 * Revision 1.2  1993/04/21  16:58:43  ty7777
 * Initial checking in.
 *
 * Revision 1.1  1993/03/03  20:29:13  ty7777
 * Initial revision
 **/

#ifndef lint
static char sccsid[]="@@(#)Ecat2Pett6.c	10/09/92  Copyright Neural Pet Group, Washington University 1992";
#endif

static char rcsid []	= "$Header: /home/npggw/tom/src/libhp/RCS/Ecat2Pett6.c,v 1.21 1995/09/28 18:26:40 ty7777 Exp tom $";

/*___________________________________________________________________________________
	File Name:	Ecat2Pett6.c

	Function Name:	Ecat2Pett6

	Arguments:	fptr,		Pointer to a MatrixFile structure.
					Get this pointer before calling
					with matrixx_open () function from 
					the CTI library. Free memory after
					the pointer is not used anymore.
			scale_factor,	Multiplied times each pixel.
			pett6_header,	Pointer to a PETT6HDR structure.
					Allocate memory before calling.
			slice_data,	Pointer to a short integer array.
					Allocate memory before calling.
			num_slices,	number of slices in image.
			matval,		structure containing information of
					frame, plane, gate, data, and bed.
	Return Value:	SUCCEED: successful; FAIL: failed.

	Description:	Read a slice of ECAT image and fill the fields of a PETT6HDR 
			structure with either default information or information from 
			the ECAT main header and the ECAT image subheader.

	Called by:	getimage.c in this library.
			ecat2pett6.c in the program "ecat2pett6".

	Calling:	FillHeaderPett6 (), ieee2pe (), itoa (), mat_numcod (), 
			matrixx_read ().
	 
	Author:		Tom Yang

	Date:		04/10/1992
___________________________________________________________________________________*/

#include <stdio.h>
#include <math.h>
#include <matrix_64.h>
#include <petutil.h>
#include <pettable.h>

#define	MAX_YEAR_LEN		4

int Ecat2Pett6 (fptr, scale_factor, pett6_header, slice_data, num_slices, matval)
MatrixFile	*fptr;
float		scale_factor;
PETT6HDR	*pett6_header;
short		*slice_data;
short		num_slices;
struct Matval	matval;
{
	MatrixData	*matrix_read ();
	int		mat_numcod ();

	COMMENT_INFO		comment_info_data;
	Main_header		*main_header;
	Main_header_64		main_header64;
	MatDirNode		*node;
	MatrixData		*matrix_data;
	MatrixData		*volume;
	Image_subheader		*image_subheader;
	Image_subheader_64	image_subheader64;
	char			day [MAX_YEAR_LEN + 1];
	char			filter_params [FILTER_PARAMS_LEN + 1];
	char			month [MAX_YEAR_LEN + 1];
	char			year [MAX_YEAR_LEN + 1];
	int			dimension;
	int			filter_name_index;
	int			frame_duration;
	int			i;
	int			matnum;
	int			slice_index;
	float			decay;
	float			ecat_calibration_fctr;
	float			quant_factor;
	short			*raw_slice_data;

	/*
	 * Get the fields filled for the MatrixData structure.
	 */
	main_header	= fptr->mhptr;
	mh64_convert (&main_header64, main_header);

	if (main_header->file_type == PetImage || main_header->file_type == PetVolume
	|| main_header->file_type == ByteImage || main_header->file_type == ByteVolume
	|| main_header->file_type == InterfileImage)
	{
		if (main_header->file_type == PetVolume)
		{
			slice_index	= 0;
			node = fptr->dirlist->first;
			while (node && slice_index < matval.plane) 
			{
				volume = matrix_read (fptr, node->matnum, MAT_SUB_HEADER);

				for (i = 0; i < volume->zdim && slice_index < matval.plane; i++) 
				{
					slice_index++;
				}
				if (slice_index < matval.plane)
					free_matrix_data (volume);

				node = node->next;
			}
			if (slice_index == matval.plane)
			{
				matrix_data      = matrix_read_slice (fptr, volume, i - 1, 0);
				free_matrix_data (volume);
			}
		}
		else
		{
			matnum		= mat_numcod (matval.frame, matval.plane, 
						matval.gate, matval.data, matval.bed);
			matrix_data	= matrix_read (fptr, matnum, main_header64.data_type);
		}
		if (matrix_data == NULL)
			return FAIL;

		image_subheader	= (Image_subheader *) matrix_data->shptr;
		ih64_convert (&image_subheader64, image_subheader, main_header);

		raw_slice_data	= (short *) matrix_data->data_ptr;

		/*
	 	 * Get the information in comment if there is any.
	 	 */
		comment_info (main_header64.study_description, &comment_info_data);

		/*
	 	 * Fill the PETT6HDR header with the necessary information.
	 	 */
		FillHeaderPett6 (pett6_header);

		pett6_header->scan_time	= image_subheader64.frame_duration 
						/ MILISECONDS_PER_SECOND,

		itoa (main_header64.scan_start_day, day);
		itoa (main_header64.scan_start_month, month);
		itoa (main_header64.scan_start_year, year);

		/*
		 * Find the date. Check for single or double digit.
		 */
		if (strlen (month) == 1)
		{
			pett6_header->date[0]	= '0';
			pett6_header->date[1]	= month[0];
		}
		else
		{
			pett6_header->date[0]	= month[0];
			pett6_header->date[1]	= month[1];
		}

		if (strlen (day) == 1)
		{
			pett6_header->date[2]	= '0';
			pett6_header->date[3]	= day[0];
		}
		else
		{
			pett6_header->date[2]	= day[0];
			pett6_header->date[3]	= day[1];
		}

		if (strlen (year) == 2)
		{
			pett6_header->date[4]	= year[0];
			pett6_header->date[5]	= year[1];
		}
		else
		{
			pett6_header->date[4]	= year[2];
			pett6_header->date[5]	= year[3];
		}

		/*
		 * Convert decay constant to PE representation.
		 */
		decay	= log (2.0) / main_header64.isotope_halflife;
		pett6_header->decay_constant	= ieee2pe (&decay); 

		pett6_header->slice_number	= matval.plane;

		/*
		 * Get the compound name.
		 */
		for (i = 0; i < PETT6_COMPOUND_LEN; i++)
			pett6_header->compound [i]	
				= main_header64.radiopharmaceutical [i];

		pett6_header->number_of_slices	= num_slices;
		pett6_header->file_type		= ECAT_FILE_TYPE;
		if (image_subheader64.filter_code < GAUSSIAN_FILTER_CODE - 1)
			filter_name_index	= image_subheader64.filter_code;
		else if (image_subheader64.filter_code >= GAUSSIAN_FILTER_CODE - 1 &&
			image_subheader64.filter_code < BUTTERWORTH_FILTER_CODE - 1)
			filter_name_index	= GAUSS_INDEX;
		else 
			filter_name_index	= BUTTERWORTH_INDEX;
		if (filter_name_index < 0)
		{
			filter_name_index	= RAMP_INDEX;
		}
		strcpy (pett6_header->filter, filterTable [filter_name_index]);	
		sprintf (filter_params, "%5f", image_subheader64.filter_params [0]);

		/*
		 * Filter name.
		 */
		for (i = 0; i < FILTER_PARAMS_LEN; i++)
			pett6_header->filter[FILTER_NAME_LEN + i]	
				= filter_params [i]; 

		/*
		 * Factor multiplied to ecah pixel value.
		 */
		if (image_subheader64.frame_duration != 0)
			frame_duration	= image_subheader64.frame_duration;
		else	
			frame_duration	= DEFAULT_FRAME_DURATION;
		if (pkg_abs (image_subheader64.ecat_calibration_fctr) >= ERROR_BOUND)
			ecat_calibration_fctr	= image_subheader64.ecat_calibration_fctr;
		else	
			ecat_calibration_fctr	= DEFAULT_CALIBRATION_FACTOR;
		if (main_header->system_type == SYSTEM_TYPE_961)
			quant_factor	= image_subheader64.quant_scale * ecat_calibration_fctr
					* scale_factor;
		else
			quant_factor	= image_subheader64.quant_scale * ecat_calibration_fctr
					* frame_duration * scale_factor;

		dimension	= image_subheader64.dimension_1 * image_subheader64.dimension_2;

		if (!(comment_info_data.xflip_flag || comment_info_data.pett6_flag))
		{
			reflection (image_subheader64.dimension_1, 
			image_subheader64.dimension_2, raw_slice_data);
		}
		pett6_header->ecat_orientation	= 1;

		for (i = 0; i < dimension; i++)
		{
			slice_data [i]	= ROUND (raw_slice_data [i] * quant_factor);
		}

		free_matrix_data (matrix_data);
	}

	return SUCCEED;
}
@


1.21
log
@Updated for 961 data.
@
text
@d1 1
a1 1
/*$Id: Ecat2Pett6.c,v 1.20 1995/09/05 17:24:57 ty7777 Exp $*/
d3 3
d71 1
a71 1
static char rcsid []	= "$Header: /home/petsun4/ty7777/src/libhp/RCS/Ecat2Pett6.c,v 1.20 1995/09/05 17:24:57 ty7777 Exp $";
d110 3
a112 3
#include <petutil/matrix_64.h>
#include <petutil/petutil.h>
#include <petutil/pettable.h>
@


1.20
log
@Use ERROR_BOUND.
@
text
@d1 1
a1 1
/*$Id: Ecat2Pett6.c,v 1.19 1995/05/18 19:20:35 ty7777 Exp ty7777 $*/
d3 3
d68 1
a68 1
static char rcsid []	= "$Header: /home/petsun4/ty7777/src/libhp/RCS/Ecat2Pett6.c,v 1.19 1995/05/18 19:20:35 ty7777 Exp ty7777 $";
d107 1
a107 1
#include <petutil/matrix.h>
d124 22
a145 18
	COMMENT_INFO	comment_info_data;
	Main_header	*main_header;
	MatrixData	*matrixx_data;
	Image_subheader	*image_subheader;
	char		day [MAX_YEAR_LEN + 1];
	char		filter_params [FILTER_PARAMS_LEN + 1];
	char		month [MAX_YEAR_LEN + 1];
	char		year [MAX_YEAR_LEN + 1];
	int		dimension;
	int		filter_name_index;
	int		frame_duration;
	int		i;
	int		j;
	int		matnum;
	float		decay;
	float		ecat_calibration_fctr;
	float		quant_factor;
	short		*raw_slice_data;
a149 1
	matnum		= mat_numcod (matval.frame, matval.plane, matval.gate, matval.data, matval.bed);
d151 1
a151 3
	matrixx_data	= matrix_read (fptr, matnum);
	if (matrixx_data == NULL)
		return FAIL;
d153 3
a155 1
	if (main_header->data_type == IMAGE_DATA)
d157 7
a163 2
		image_subheader	= (Image_subheader *) matrixx_data->shptr;
		raw_slice_data	= (short *) matrixx_data->data_ptr;
d165 29
d197 1
a197 1
		comment_info (main_header->study_description, &comment_info_data);
d204 1
a204 1
		pett6_header->scan_time	= image_subheader->frame_duration 
d207 3
a209 3
		itoa (main_header->scan_start_day, day);
		itoa (main_header->scan_start_month, month);
		itoa (main_header->scan_start_year, year);
d250 1
a250 1
		decay	= log (2.0) / main_header->isotope_halflife;
d260 1
a260 1
				= main_header->radiopharmaceutical [i];
d264 4
a267 4
		if (image_subheader->filter_code < GAUSSIAN_FILTER_CODE - 1)
			filter_name_index	= image_subheader->filter_code;
		else if (image_subheader->filter_code >= GAUSSIAN_FILTER_CODE - 1 &&
			image_subheader->filter_code < BUTTERWORTH_FILTER_CODE - 1)
d276 1
a276 1
		sprintf (filter_params, "%5f", image_subheader->filter_params [0]);
d288 2
a289 2
		if (image_subheader->frame_duration != 0)
			frame_duration	= image_subheader->frame_duration;
d292 2
a293 2
		if (pkg_abs (image_subheader->ecat_calibration_fctr) >= ERROR_BOUND)
			ecat_calibration_fctr	= image_subheader->ecat_calibration_fctr;
d296 6
a301 2
		quant_factor	= image_subheader->quant_scale * ecat_calibration_fctr
				* frame_duration * scale_factor;
d303 1
a303 1
		dimension	= image_subheader->dimension_1 * image_subheader->dimension_2;
d307 2
a308 2
			reflection (image_subheader->dimension_1, 
			image_subheader->dimension_2, raw_slice_data);
d317 1
a317 1
		free_matrix_data (matrixx_data);
@


1.19
log
@Same as the last version.
@
text
@d1 1
a1 1
/*$Id: Ecat2Pett6.c,v 1.18 1994/11/07 20:53:51 ty7777 Exp ty7777 $*/
d3 3
d65 1
a65 1
static char rcsid []	= "$Header: /home/petsun4/ty7777/src/libhp/RCS/Ecat2Pett6.c,v 1.18 1994/11/07 20:53:51 ty7777 Exp ty7777 $";
d252 1
a252 1
		if (image_subheader->ecat_calibration_fctr != 0.0)
@


1.18
log
@Edited the documentation.
@
text
@d1 1
a1 1
/*$Id: Ecat2Pett6.c,v 1.17 1994/10/14 16:28:32 ty7777 Exp ty7777 $*/
d3 3
d62 1
a62 1
static char rcsid []	= "$Header: /home/petsun4/ty7777/src/libhp/RCS/Ecat2Pett6.c,v 1.17 1994/10/14 16:28:32 ty7777 Exp ty7777 $";
d247 1
a247 1
		else	/* Attenuation image bug, reported by TOV on Sep. 29, 1992*/
@


1.17
log
@Added math.h.
@
text
@d1 1
a1 1
/*$Id: Ecat2Pett6.c,v 1.16 1994/03/03 19:52:48 ty7777 Exp ty7777 $*/
d3 3
d59 1
a59 1
static char rcsid []	= "$Header: /home/petsun4/ty7777/src/libhp/RCS/Ecat2Pett6.c,v 1.16 1994/03/03 19:52:48 ty7777 Exp ty7777 $";
d62 32
a93 26
 *
 *	File Name:	Ecat2Pett6.c
 *	Function Name:	Ecat2Pett6
 *	Arguments:	fptr:			Pointer to a MatrixFile structure.
 *						Get this pointer before calling
 *						with matrixx_open () function from 
 *						the CTI library. Free memory after
 *						the pointer is not used anymore.
 *			scale_factor:		Multiplied times each pixel.
 *			pett6_header:		Pointer to a PETT6HDR structure.
 *						Allocate memory before calling.
 *			slice_data:		Pointer to a short integer array.
 *						Allocate memory before calling.
 *			matval:			structure containing information of
 *						frame, plane, gate, data, and bed.
 *	Return Value:	void
 *	Description:	Read a slice of ECAT image and fill the fields of a PETT6HDR 
 *			structure with either default information or information from 
 *			the ECAT main header and the ECAT image subheader.
 *	Called by:	getimage.c in this library.
 *			ecat2pett6.c in the program "ecat2pett6".
 *	Calling:	FillHeaderPett6 (), ieee2pe (), itoa (), mat_numcod (), 
 *			matrixx_read ().
 *	Author:		Tom Yang
 *	Date:		04/10/1992
 *
@


1.16
log
@Replace id with header.
@
text
@d1 1
a1 1
/*$Id: Ecat2Pett6.c,v 1.15 1993/10/08 17:16:23 ty7777 Exp ty7777 $*/
d3 3
d56 1
a56 1
static char rcsid []	= "$Header$";
d88 1
@


1.15
log
@Added processing for ECAT images created from PETT VI images.
@
text
@d1 1
a1 1
/*$Id: Ecat2Pett6.c,v 1.14 1993/10/08 15:06:51 ty7777 Exp ty7777 $*/
d3 3
d53 1
a53 1
static char	rcsid []	= "$Id: Ecat2Pett6.c,v 1.14 1993/10/08 15:06:51 ty7777 Exp ty7777 $";
@


1.14
log
@Assign ecat_orientation to 1 after reflection.
@
text
@d1 1
a1 1
/*$Id: Ecat2Pett6.c,v 1.13 1993/10/07 14:42:15 ty7777 Exp ty7777 $*/
d3 3
d50 1
a50 1
static char	rcsid []	= "$Id: Ecat2Pett6.c,v 1.13 1993/10/07 14:42:15 ty7777 Exp ty7777 $";
d239 1
a239 1
		if (!(comment_info_data.xflip_flag))
@


1.13
log
@Moved ECAT_NUM_SLICES to /usr/local/include/petutil/petutil.h.
@
text
@d1 1
a1 1
/*$Id: Ecat2Pett6.c,v 1.12 1993/10/07 14:39:38 ty7777 Exp ty7777 $*/
d3 3
d47 1
a47 1
static char	rcsid []	= "$Id: Ecat2Pett6.c,v 1.12 1993/10/07 14:39:38 ty7777 Exp ty7777 $";
d241 1
@


1.12
log
@Same as the las tone.
@
text
@d1 1
a1 1
/*$Id: Ecat2Pett6.c,v 1.11 1993/10/05 21:08:27 ty7777 Exp ty7777 $*/
d3 3
d44 1
a44 1
static char	rcsid []	= "$Id: Ecat2Pett6.c,v 1.11 1993/10/05 21:08:27 ty7777 Exp ty7777 $";
@


1.11
log
@Added comment_info ().
@
text
@d1 1
a1 1
/*$Id: Ecat2Pett6.c,v 1.10 1993/10/04 19:49:13 ty7777 Exp ty7777 $*/
d3 3
d41 1
a41 1
static char	rcsid []	= "$Id: Ecat2Pett6.c,v 1.10 1993/10/04 19:49:13 ty7777 Exp ty7777 $";
a76 3
#define	ECAT_FILE_TYPE		3000	/* file type for ECAT image,
					needs to be the same as the one
					defined in pettable.h */
@


1.10
log
@Added reflection to slice_data if the ECAT image is not reflected.
@
text
@d1 1
a1 1
/*$Id: Ecat2Pett6.c,v 1.9 1993/07/23 15:33:28 ty7777 Exp ty7777 $*/
d3 3
d38 1
a38 1
static char	rcsid []	= "$Id: Ecat2Pett6.c,v 1.9 1993/07/23 15:33:28 ty7777 Exp ty7777 $";
d90 1
a90 1
	int		matnum;
d94 7
d103 2
a104 1
	int		filter_name_index;
a106 4
	char		day [MAX_YEAR_LEN + 1];
	char		month [MAX_YEAR_LEN + 1];
	char		year [MAX_YEAR_LEN + 1];
	char		filter_params [FILTER_PARAMS_LEN + 1];
a107 3
	float		decay;
	int		frame_duration;
	int		dimension;
d124 5
d229 3
a231 1
		if (main_header->image_orientation != TRUE)
d234 1
@


1.9
log
@Move MILLISECONDS_PER_SECOND to /usr/local/include/petutil.h
@
text
@d1 1
a1 1
/*$Id: Ecat2Pett6.c,v 1.8 1993/07/14 19:21:39 ty7777 Exp ty7777 $*/
d3 3
d35 1
a35 1
static char	rcsid []	= "$Id: Ecat2Pett6.c,v 1.8 1993/07/14 19:21:39 ty7777 Exp ty7777 $";
d220 4
@


1.8
log
@Added DEFAULT_FRAME_DURATION.
@
text
@d1 1
a1 1
/*$Id: Ecat2Pett6.c,v 1.7 1993/07/14 19:16:24 ty7777 Exp ty7777 $*/
d3 3
d32 1
a32 1
static char	rcsid []	= "$Id: Ecat2Pett6.c,v 1.7 1993/07/14 19:16:24 ty7777 Exp ty7777 $";
a67 1
#define	MILISECONDS_PER_SECOND	1000	/* miliseconds in a second */
@


1.7
log
@Added ecat_calibration_fctr in the scaling factor.
@
text
@d1 1
a1 1
/*$Id: Ecat2Pett6.c,v 1.6 1993/07/12 23:48:35 ty7777 Exp ty7777 $*/
d3 3
d29 1
a29 1
static char	rcsid []	= "$Id: Ecat2Pett6.c,v 1.6 1993/07/12 23:48:35 ty7777 Exp ty7777 $";
d206 1
a206 1
			frame_duration	= 100000;
@


1.6
log
@Adding ecat_calibration_fctr to scaling factor.
@
text
@d1 1
a1 1
/*$Id: Ecat2Pett6.c,v 1.5 1993/05/10 21:01:17 ty7777 Exp ty7777 $*/
d3 3
d26 1
a26 1
static char	rcsid []	= "$Id: Ecat2Pett6.c,v 1.5 1993/05/10 21:01:17 ty7777 Exp ty7777 $";
d86 1
d204 5
a208 1
		quant_factor	= image_subheader->quant_scale * image_subheader->ecat_calibration_fctr
@


1.5
log
@filter code -1 is ramp filter.
@
text
@d1 1
a1 1
/*$Id: Ecat2Pett6.c,v 1.4 1993/05/05 18:55:00 ty7777 Exp ty7777 $*/
d3 3
d23 1
a23 1
static char	rcsid []	= "$Id: Ecat2Pett6.c,v 1.4 1993/05/05 18:55:00 ty7777 Exp ty7777 $";
d200 2
a201 1
		quant_factor	= image_subheader->quant_scale * frame_duration * scale_factor;
@


1.4
log
@After getrealimg () and writerealimg () worked.
@
text
@d1 1
a1 1
/*$Id: Ecat2Pett6.c,v 1.3 1993/04/28 16:00:13 ty7777 Exp ty7777 $*/
d3 3
d20 1
a20 1
static char	rcsid []	= "$Id: Ecat2Pett6.c,v 1.3 1993/04/28 16:00:13 ty7777 Exp ty7777 $";
d169 1
a169 1
		if (image_subheader->filter_code < GAUSSIAN_FILTER_CODE)
d171 2
a172 2
		else if (image_subheader->filter_code >= GAUSSIAN_FILTER_CODE &&
			image_subheader->filter_code < BUTTERWORTH_FILTER_CODE)
d176 1
a176 1
		if (filter_name_index < 0 || filter_name_index > BUTTERWORTH_INDEX)
d178 1
a178 2
			fprintf (stderr, "Wrong filter code: %d\n", filter_name_index);
			return FAIL;
@


1.3
log
@Modified array copying.
@
text
@d1 1
a1 1
/*$Id: Ecat2Pett6.c,v 1.2 1993/04/21 16:58:43 ty7777 Exp ty7777 $*/
d3 3
d17 1
a17 1
static char	rcsid []	= "$Id: Ecat2Pett6.c,v 1.2 1993/04/21 16:58:43 ty7777 Exp ty7777 $";
d173 5
@


1.2
log
@Initial checking in.
@
text
@d1 1
a1 1
/*$Id: Ecat2Pett6.c,v 1.1 1993/03/03 20:29:13 ty7777 Exp ty7777 $*/
d3 3
d14 1
a14 1
static char	rcsid []	= "$Id: Ecat2Pett6.c,v 1.1 1993/03/03 20:29:13 ty7777 Exp ty7777 $";
a78 2
	short		width;
	short		height;
d82 1
d189 2
a190 3
		width		= image_subheader->dimension_1;
		height		= image_subheader->dimension_2;
		for (j = 0; j < height; j++)
d192 1
a192 6
			for (i = 0; i < width; i++)
			{
				slice_data [j * width + i]
					= ROUND (raw_slice_data [j * width + i]
					* quant_factor);
			}
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
/*$Id$*/
/*$Log$*/
d11 1
a11 1
static char	rcsid []	= "$Id: Ecat2Pett6.c,v 1.1 1993/01/28 21:59:21 ty7777 Exp $";
d68 3
a70 1
	int		i, j;
d75 1
a75 1
	char		filter_params[FILTER_PARAMS_LEN + 1];
d161 8
a168 1
		strcpy (pett6_header->filter, filterTable [image_subheader->filter_code]);	
@
