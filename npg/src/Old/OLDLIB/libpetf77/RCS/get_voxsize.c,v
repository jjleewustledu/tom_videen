head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	95.10.31.14.54.23;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	95.10.13.16.19.15;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	95.10.10.15.32.48;	author ty7777;	state Exp;
branches;
next	;


desc
@Initial checking in, working version.
@


1.3
log
@remove petutil parent directory from include statements
@
text
@/*$Id: get_voxsize.c,v 1.2 1995/10/13 16:19:15 ty7777 Exp tom $*/
/*$Log: get_voxsize.c,v $
 * Revision 1.2  1995/10/13  16:19:15  ty7777
 * Use matrix7.h
 *
 * Revision 1.1  1995/10/10  15:32:48  ty7777
 * Initial revision
 **/

#ifndef lint
static char sccsid[]="@@(#)getimage_type.c 10/09/92 Copyright Neural Pet Group, Washington University 1992";
#endif

/*___________________________________________________________________________________
 File Name:	get_voxsize.c

 Function Name:	int get_voxsize (int fd, char *image_name, cmppix [])

 Arguments:	fd:		File descriptor, assigned before calling.	
 		image_name:	Image name.
		cmppix:		Array holding pixel width, pixel height and
				pixel depth, returned.

 Return Value:	FAIL: failed; SUCCEED: success.

 Description:	Get the voxel size of an ECAT image.

 Calling:	OpenEcat () in OpenEcat.c of libpetutil.a	

 Author:	Tom Yang

 History:	Created by Tom Yang on 01/18/1992.
___________________________________________________________________________________*/

#include <petutil.h>
#include <matrix7.h>

static char rcsid []= "$Header: /export/home/npggw/tom/src/libpetf77/RCS/get_voxsize.c,v 1.2 1995/10/13 16:19:15 ty7777 Exp tom $";

int get_voxsize (fd, image_name, cmppix)
int		fd;
char		*image_name;
float		cmppix [3];
{
	MatrixFile	*matfptr;		/* ECAT MatrixFile pointer */
	float		pixel_size;
	float		plane_separation;
	short		num_slices;
	short		xdim;			/* dimension-x */
	short		ydim;			/* dimension-y */
	struct Matval	matval;

	/*
	 * Assign default values for matval.
	 */
	matval.frame	= 1;
	matval.plane	= 1;
	matval.gate	= 1;
	matval.data	= 0;
	matval.bed	= 0;

	if ((matfptr = OpenEcat (fd, image_name, &num_slices, &xdim, &ydim, 
					&pixel_size, &plane_separation, matval)) != NULL)
	{
		cmppix [0]	= pixel_size;
		cmppix [1]	= pixel_size;
		if (pkg_abs (plane_separation) > ERROR_BOUND) 
			cmppix [2]	= plane_separation;
		else
		{
			if (matfptr->mhptr->system_type == SYSTEM_TYPE_961)
				cmppix [2]	= DEFAULT_ECAT961_SEP;
			else
				cmppix [2]	= DEFAULT_ECAT_SEP;
		}
		matrix_close (matfptr);
	}
	else
	{
		fprintf (stderr, "ECAT image opening error in get_voxsize ().\n");
		return;
	}
}
@


1.2
log
@Use matrix7.h
@
text
@d1 1
a1 1
/*$Id: get_voxsize.c,v 1.1 1995/10/10 15:32:48 ty7777 Exp ty7777 $*/
d3 3
d35 2
a36 2
#include <petutil/petutil.h>
#include <petutil/matrix7.h>
d38 1
a38 1
static char rcsid []= "$Header: /data/petsun4/src/libpetutil/RCS/get_voxsize.c,v 1.1 1995/10/10 15:32:48 ty7777 Exp ty7777 $";
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
/*$Id$*/
/*$Log$*/
d33 1
a33 2
#include <petutil/matrix.h>
#define DEFAULT_SEP		0.3375
d35 1
a35 1
static char rcsid []= "$Header$";
d64 1
a64 1
		if (plane_separation > 0.0) 
d67 6
a72 1
			cmppix [2]	= DEFAULT_SEP;
@
