head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	96.01.31.18.04.46;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	96.01.31.17.03.37;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	95.11.28.20.11.33;	author tom;	state Exp;
branches;
next	;


desc
@@


1.3
log
@changed pr_filter codes to 7 and 8
@
text
@/*	$Id: comment_info.c,v 1.2 1996/01/31 17:03:37 tom Exp $
	$Log: comment_info.c,v $
 * Revision 1.2  1996/01/31  17:03:37  tom
 * changed = to ==
 *
 * Revision 1.1  1995/11/28  20:11:33  tom
 * Initial revision
 *
 */
/* ===============================================================================
 *	Module:			comment_info.c
 *	Date:			Oct-93
 *	Author:			Tom Yang
 *	Functions:
 *		comment2info - fills MainHeader structure fields from comment field.
 *		info2comment - fills comment field from MainHeader structure fields.
 *	History:
 *		Nov-95	TOV modification
 * ===============================================================================
 */
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimg/RCS/comment_info.c,v 1.2 1996/01/31 17:03:37 tom Exp $";
#endif

#include <stdio.h>
#include <string.h>
#include <pett6.h>
#include <imagio.h>
#define MAXLINE 512

/* ===============================================================================
 *	Function:		comment2info
 *	Description:	Fills MainHeader structure fields from the comment field
 *					read from an ECAT file main header.
 * ===============================================================================
 */
void           comment2info (mh, comment)
	MainHeader     *mh;			 /* MainHeader */
	char           *comment;	 /* study_description */
{
	char            label[MAXLINE];
	char           *pattern;
	float           scaling_factor;
	int             zorigin;

/* Set default values */

	mh->orientation = 1;
	mh->scale_flag = 0;
	mh->pr_scaler = 1.0;
	mh->pr_filter = 0;
	mh->pett6_flag = 0;
	mh->zorigin = 0;

	if (comment && *comment) {
		pattern = strstr (comment, XFLIP_LABEL);
		if (pattern && *pattern)
			mh->orientation = 0;
		pattern = strstr (comment, SCALE_LABEL);
		if (pattern && *pattern && sscanf (pattern, "%s %f", label, &scaling_factor) == 2) {
			mh->scale_flag = 1;
			mh->pr_scaler = scaling_factor;
		}
		pattern = strstr (comment, GAUSS_FILTER_LABEL);
		if (pattern && *pattern)
			mh->pr_filter = 7;
		pattern = strstr (comment, BUTTERWORTH_FILTER_LABEL);
		if (pattern && *pattern)
			mh->pr_filter = 8;
		pattern = strstr (comment, PETTVI_IMAGE_LABEL);
		if (pattern && *pattern)
			mh->pett6_flag = 1;
		pattern = strstr (comment, ZORIGIN_LABEL);
		if (pattern && *pattern && sscanf (pattern, "%s %d", label, &zorigin) == 2)
			mh->zorigin = zorigin;
	}
	return;
}

/* ===============================================================================
 *	Function:		info2comment
 *	Description:	creates a comment field for an ECAT file main header
 *					from info in the MainHeader structure.
 * ===============================================================================
 */
void           info2comment (mh, new_comment)
	MainHeader     *mh;			 /* MainHeader */
	char           *new_comment;		 /* comment field */
{
	int             first, i;
	char            comments[MAXLINE];
	char            scaling_factor[MAXLINE];
	char            zorigin[MAXLINE];

	first = TRUE;
	strcpy (comments, "");
	if (mh->orientation == 0) {
		strcpy (comments, XFLIP_LABEL);
		first = FALSE;
	}
	if (mh->scale_flag == 1) {
		sprintf (scaling_factor, "%s %f", SCALE_LABEL, mh->pr_scaler);
		if (!first) {
			strcat (comments, " ");
			strcat (comments, scaling_factor);
		} else
			strcpy (comments, scaling_factor);
		first = FALSE;
	}
	if (mh->zorigin > 0) {
		sprintf (zorigin, "%s %d", ZORIGIN_LABEL, mh->zorigin);
		if (!first) {
			strcat (comments, " ");
			strcat (comments, zorigin);
		} else
			strcpy (comments, zorigin);
		first = FALSE;
	}
	if (mh->pr_filter == 7) {
		if (!first) {
			strcat (comments, " ");
			strcat (comments, GAUSS_FILTER_LABEL);
		} else
			strcpy (comments, GAUSS_FILTER_LABEL);
		first = FALSE;
	}
	if (mh->pr_filter == 8) {
		if (!first) {
			strcat (comments, " ");
			strcat (comments, BUTTERWORTH_FILTER_LABEL);
		} else {
			strcpy (comments, BUTTERWORTH_FILTER_LABEL);
		}
		first = FALSE;
	}
	if (mh->pett6_flag) {
		if (!first) {
			strcat (comments, " ");
			strcat (comments, PETTVI_IMAGE_LABEL);
		} else
			strcpy (comments, PETTVI_IMAGE_LABEL);
		first = FALSE;
	}
	strncpy (new_comment, comments, 32);
	return;
}
@


1.2
log
@changed = to ==
@
text
@d1 1
a1 1
/*	$Id: comment_info.c,v 1.1 1995/11/28 20:11:33 tom Exp tom $
d3 3
d22 1
a22 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimg/RCS/comment_info.c,v 1.1 1995/11/28 20:11:33 tom Exp tom $";
d66 1
a66 1
			mh->pr_filter = 1;
d69 1
a69 1
			mh->pr_filter = 2;
d90 1
a90 1
	int             first;
d96 1
d119 1
a119 1
	if (mh->pr_filter == 1) {
d127 1
a127 1
	if (mh->pr_filter == 2) {
d131 1
a131 1
		} else
d133 1
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
/*	$Id$
	$Log$
d19 1
a19 1
static char     rcsid[] = "$Header$";
d123 1
a123 1
	if (mh->pr_filter = 2) {
@
