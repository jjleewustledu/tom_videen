head	1.46;
access;
symbols;
locks; strict;
comment	@ * @;


1.46
date	95.11.10.16.29.20;	author tom;	state Exp;
branches;
next	1.45;

1.45
date	95.04.18.15.44.37;	author ty7777;	state Exp;
branches;
next	1.44;

1.44
date	95.04.17.15.22.36;	author ty7777;	state Exp;
branches;
next	1.43;

1.43
date	94.10.03.17.03.18;	author ty7777;	state Exp;
branches;
next	1.42;

1.42
date	94.10.03.16.42.45;	author ty7777;	state Exp;
branches;
next	1.41;

1.41
date	94.09.20.22.04.40;	author ty7777;	state Exp;
branches;
next	1.40;

1.40
date	94.06.20.17.46.01;	author ty7777;	state Exp;
branches;
next	1.39;

1.39
date	94.05.11.14.49.29;	author ty7777;	state Exp;
branches;
next	1.38;

1.38
date	94.04.13.15.22.08;	author ty7777;	state Exp;
branches;
next	1.37;

1.37
date	94.04.07.15.28.37;	author ty7777;	state Exp;
branches;
next	1.36;

1.36
date	94.04.05.19.13.39;	author ty7777;	state Exp;
branches;
next	1.35;

1.35
date	94.04.04.21.57.55;	author ty7777;	state Exp;
branches;
next	1.34;

1.34
date	94.03.25.22.40.09;	author ty7777;	state Exp;
branches;
next	1.33;

1.33
date	94.03.22.16.18.32;	author ty7777;	state Exp;
branches;
next	1.32;

1.32
date	94.03.22.16.08.00;	author ty7777;	state Exp;
branches;
next	1.31;

1.31
date	94.03.22.16.06.21;	author ty7777;	state Exp;
branches;
next	1.30;

1.30
date	94.03.11.17.14.53;	author ty7777;	state Exp;
branches;
next	1.29;

1.29
date	94.03.04.19.20.49;	author ty7777;	state Exp;
branches;
next	1.28;

1.28
date	94.03.04.16.31.38;	author ty7777;	state Exp;
branches;
next	1.27;

1.27
date	94.03.03.20.41.28;	author ty7777;	state Exp;
branches;
next	1.26;

1.26
date	94.03.03.16.14.18;	author ty7777;	state Exp;
branches;
next	1.25;

1.25
date	94.02.23.21.31.17;	author ty7777;	state Exp;
branches;
next	1.24;

1.24
date	94.02.22.21.10.10;	author ty7777;	state Exp;
branches;
next	1.23;

1.23
date	94.02.22.20.46.51;	author ty7777;	state Exp;
branches;
next	1.22;

1.22
date	94.02.02.21.20.41;	author ty7777;	state Exp;
branches;
next	1.21;

1.21
date	93.11.15.22.17.43;	author ty7777;	state Exp;
branches;
next	1.20;

1.20
date	93.11.15.21.49.50;	author ty7777;	state Exp;
branches;
next	1.19;

1.19
date	93.11.15.21.23.04;	author ty7777;	state Exp;
branches;
next	1.18;

1.18
date	93.11.03.17.00.33;	author ty7777;	state Exp;
branches;
next	1.17;

1.17
date	93.11.02.21.18.23;	author ty7777;	state Exp;
branches;
next	1.16;

1.16
date	93.10.28.16.43.40;	author ty7777;	state Exp;
branches;
next	1.15;

1.15
date	93.10.22.15.21.57;	author ty7777;	state Exp;
branches;
next	1.14;

1.14
date	93.09.07.20.34.48;	author ty7777;	state Exp;
branches;
next	1.13;

1.13
date	93.09.07.20.27.50;	author ty7777;	state Exp;
branches;
next	1.12;

1.12
date	93.09.03.17.01.16;	author ty7777;	state Exp;
branches;
next	1.11;

1.11
date	93.08.12.14.54.55;	author ty7777;	state Exp;
branches;
next	1.10;

1.10
date	93.08.09.20.30.46;	author ty7777;	state Exp;
branches;
next	1.9;

1.9
date	93.08.06.19.54.10;	author ty7777;	state Exp;
branches;
next	1.8;

1.8
date	93.08.06.19.48.03;	author ty7777;	state Exp;
branches;
next	1.7;

1.7
date	93.08.06.19.35.39;	author ty7777;	state Exp;
branches;
next	1.6;

1.6
date	93.07.30.16.54.07;	author ty7777;	state Exp;
branches;
next	1.5;

1.5
date	93.07.28.19.24.32;	author ty7777;	state Exp;
branches;
next	1.4;

1.4
date	93.07.23.20.00.23;	author ty7777;	state Exp;
branches;
next	1.3;

1.3
date	93.07.23.15.38.37;	author ty7777;	state Exp;
branches;
next	1.2;

1.2
date	93.07.21.19.20.44;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	93.07.06.18.13.49;	author ty7777;	state Exp;
branches;
next	;


desc
@readparm.c first checking in. Working version.
@


1.46
log
@remove petutil parent directory from include statements
@
text
@/*$Id: readparm.c,v 1.45 1995/04/18 15:44:37 ty7777 Exp tom $*/
/*$Log: readparm.c,v $
 * Revision 1.45  1995/04/18  15:44:37  ty7777
 * Added processing for normalization and scatter correction parameters.
 *
 * Revision 1.44  1995/04/17  15:22:36  ty7777
 * Added voi_sd.
 *
 * Revision 1.43  1994/10/03  17:03:18  ty7777
 * Deleted extension default.
 *
 * Revision 1.42  1994/10/03  16:42:45  ty7777
 * Initializes every fields of the structure PARAMETER_DATA.
 *
 * Revision 1.41  1994/09/20  22:04:40  ty7777
 * Added the default value for voi_norm.
 *
 * Revision 1.40  1994/06/20  17:46:01  ty7777
 * Uses 999999.00 for halflife for backward compatibability.
 *
 * Revision 1.39  1994/05/11  14:49:29  ty7777
 * Allowing upper case letters for datapath.
 *
 * Revision 1.38  1994/04/13  15:22:08  ty7777
 * Added wellcounts processing.
 *
 * Revision 1.37  1994/04/07  15:28:37  ty7777
 * Use Lowered ().
 *
 * Revision 1.36  1994/04/05  19:13:39  ty7777
 * Fixed the voi_norm problem.
 *
 * Revision 1.35  1994/04/04  21:57:55  ty7777
 * Added voi_norm processing.
 *
 * Revision 1.34  1994/03/25  22:40:09  ty7777
 * Added processing for imglist_mode.
 *
 * Revision 1.33  1994/03/22  16:18:32  ty7777
 * Added values.h where MAXFLOAT is defined.
 *
 * Revision 1.32  1994/03/22  16:08:00  ty7777
 * Use MAXFLOAT as the default halflife.
 *
 * Revision 1.31  1994/03/22  16:06:21  ty7777
 * Added processing for tissue activity and halflife.
 *
 * Revision 1.30  1994/03/11  17:14:53  ty7777
 * Added the default for category.
 *
 * Revision 1.29  1994/03/04  19:20:49  ty7777
 * Assign the default maskimg.
 *
 * Revision 1.28  1994/03/04  16:31:38  ty7777
 * Release memory for lowered.
 *
 * Revision 1.27  1994/03/03  20:41:28  ty7777
 * Replace id with header.
 *
 * Revision 1.26  1994/03/03  16:14:18  ty7777
 * Added processing for processing, rgt_format, regfile.
 *
 * Revision 1.25  1994/02/23  21:31:17  ty7777
 * Added processing for voi.
 *
 * Revision 1.24  1994/02/22  21:10:10  ty7777
 * Fixed voi processing bug.
 *
 * Revision 1.23  1994/02/22  20:46:51  ty7777
 * Added processing for reading voi parameters.
 *
 * Revision 1.22  1994/02/02  21:20:41  ty7777
 * Added processing for atlfile.
 *
 * Revision 1.21  1993/11/15  22:17:43  ty7777
 * Same as the last one.
 *
 * Revision 1.20  1993/11/15  21:49:50  ty7777
 * Added processing for 12.
 * recfilter = 12.
 *
 * Revision 1.19  1993/11/15  21:23:04  ty7777
 * Added li to maximum_like.
 *
 * Revision 1.18  1993/11/03  17:00:33  ty7777
 * Same as the last version.
 *
 * Revision 1.17  1993/11/02  21:18:23  ty7777
 * Processing for suffix.
 *
 * Revision 1.16  1993/10/28  16:43:40  ty7777
 * Added literal list mode.
 *
 * Revision 1.15  1993/10/22  15:21:57  ty7777
 * Added error checking for reconstruction, datatype, etc.
 *
 * Revision 1.14  1993/09/07  20:34:48  ty7777
 * Correcting the contant STD_IMAGE_MODE.
 *
 * Revision 1.13  1993/09/07  20:27:50  ty7777
 * Added weld_lstmode.
 *
 * Revision 1.12  1993/09/03  17:01:16  ty7777
 * Added f-tracer and v-tracer.
 *
 * Revision 1.11  1993/08/12  14:54:55  ty7777
 * Add reading rms_align.
 *
 * Revision 1.10  1993/08/09  20:30:46  ty7777
 * Reading extension.
 *
 * Revision 1.9  1993/08/06  19:54:10  ty7777
 * Check acquisition parameter.
 *
 * Revision 1.8  1993/08/06  19:48:03  ty7777
 * Check parameter for mskimg.
 *
 * Revision 1.7  1993/08/06  19:35:39  ty7777
 * Change parmaeters for mskimg.
 *
 * Revision 1.6  1993/07/30  16:54:07  ty7777
 * Added parameter "slices".
 *
 * Revision 1.5  1993/07/28  19:24:32  ty7777
 * Adding rcsid.
 *
 * Revision 1.4  1993/07/23  20:00:23  ty7777
 * change strchr to strncmp for checking comment lines.
 *
 * Revision 1.3  1993/07/23  15:38:37  ty7777
 * Adding imgmean related parameters.
 *
 * Revision 1.2  1993/07/21  19:20:44  ty7777
 * Changing finfo to parameter_data.
 *
 * Revision 1.1  1993/07/06  18:13:49  ty7777
 * Initial revision
 **/

/*___________________________________________________________________________
  File:		readparm.c

  Function:	int readparm (char *parameter_file, PARAMETER_DATA *parameter_data)

  Arguments:	parameter_file,	file containing image parameters, passed in.
		parameter_data,	a structure defined in /usr/local/include/petutil/imglist.h.
				returned.

  Description:	This function reads the image parameter file and puts the information
		it contains in a structure.

  Return:	SUCCEED for successful; FAIL for error.

  Reminder:	Every real number should contain at least a decimal point. 
		The sxr file extension should start with a letter.

  Creator:	Tom Yang
  History:	Created by Tom Yang on 05/18/93. 
___________________________________________________________________________*/

#include <stdio.h>
#include <string.h>
#include <values.h>
#include <imglist.h>

#define LOW_RESOLUTION	0
#define HIGH_RESOLUTION	1
#define STATIONARY	2
#define WOBBLE		3
#define THREE_DIM	4
#define FBOLD		0
#define FB		1
#define ML		2
#define FBDGP		3
#define FBP3D		4
#define FBP3DJMON	5
#define FBP3DJMOS	6
#define DEFAULT_CUTOFF	0.5
#define DEFAULT_ORDER	5

#define	SCANNER_953B	"953"

char *acquisition_string []	= {"low", 
				   "high", 
				   "sta", 
				   "wob",
				   "3d"};

char *reconstruction_string []	= {"fbold", 
				   "fb",
				   "ml",
				   "fbdgp",
				   "3dbp",
				   "3dbpjmon",
				   "3dbpjmos"};

static char rcsid [] = "$Header: /export/home/npggw/tom/src/libnpg/RCS/readparm.c,v 1.45 1995/04/18 15:44:37 ty7777 Exp tom $";

PRIVATE void error_message ();

PRIVATE void error_message (keyword, parameter, file)
	char	*keyword;
	char	*parameter;
	char	*file;
{
	fprintf (stderr, 
	"Error: wrong parameter (%s) for keyword (%s) in parameter file (%s).\n",
	parameter, keyword, file);
}

PUBLIC int readparm (parameter_file, parameter_data) 
	char		*parameter_file;
	PARAMETER_DATA	*parameter_data;
{
	FILE	*fp;
	FILE	*pathfp;
	char	label [MAXLINE];
	char	line [MAXLINE];
	char	original_parameter [MAXLINE];
	char	parameter [MAXLINE];
	char	parameter2 [MAXLINE];
	char	parameter3 [MAXLINE];
	float	x;
	float	y;
	float	z;
	int	cat;
	int	first_slice;
	int	last_slice;
	int	index;
	int	type;

	fp	= fopen (parameter_file, "r");
	if (fp == (FILE *) NULL)
	{
		fprintf (stderr, "Error in opening parameter file %s\n", parameter_file);
		return FAIL;
	}

	/*
	 * Initialization
	 */
	memset (parameter_data, 0, sizeof (PARAMETER_DATA)); 

	parameter_data->category		= INDIVIDUAL;
	parameter_data->recfilter_type		= FILTER_NONE;
	parameter_data->recfilter_cutoff	= DEFAULT_CUTOFF;
	parameter_data->recfilter_order		= DEFAULT_ORDER;
	parameter_data->mskfilter_type		= FILTER_NONE;
	parameter_data->mskfilter_cutoff	= DEFAULT_CUTOFF;
	parameter_data->mskfilter_order		= DEFAULT_ORDER;
	parameter_data->imgfilter_type		= FILTER_NONE;
	parameter_data->imgfilter_cutoff	= DEFAULT_CUTOFF;
	parameter_data->imgfilter_order		= DEFAULT_ORDER;
	parameter_data->imglist_mode		= STDIMAGE_MODE;
	parameter_data->first_slice		= 0;
	parameter_data->last_slice		= 0;
	parameter_data->voi_shape		= VOI_UNDEFINED;
	parameter_data->voi_norm		= 0.0;
	parameter_data->voi_sd			= FALSE;
	parameter_data->voi_xdim		= 0;
	parameter_data->voi_ydim		= 0;
	parameter_data->voi_zdim		= 0;
	parameter_data->processing		= PROCESSING_NONE;
	parameter_data->rgt_format		= REGIONCOL;
	parameter_data->image_frames		= 1;
	parameter_data->halflife		= MAXFLOAT;

	while (fgets (line, MAXLINE, fp) != NULL)
	{
		if (sscanf (line, "%s %s", label, parameter) == 2)
		{
			if (strncmp (label, "#", 1) == 0)
				continue;

			strcpy (original_parameter, parameter);
			Lowered (label, strlen (label));
			Lowered (parameter, strlen (parameter));

			if (strncmp (label, "datapath:", 9) == 0)
			{
				strcpy (parameter2, original_parameter);
				strcat (parameter2, "/.");
				pathfp	= fopen (parameter2, "r");
				if (pathfp != (FILE *) NULL)
					strcpy (parameter_data->datapath, original_parameter);
				else
				{
					fprintf (stderr, "datapath error. Path %s does not exist\n", 
					parameter);
					return FAIL;
				}

				continue;
			}

			if (strncmp (label, "suffix:", 7) == 0 && strlen (original_parameter) > 0)
			{
				strcpy (parameter_data->suffix, original_parameter);

				continue;
			}

			if (strncmp (label, "extension:", 10) == 0 
			&& strlen (original_parameter) > 0)
			{
				if (strlen (original_parameter) > 0 
				&& strncmp (parameter, ".", 1) != 0)
				{
					strcpy (parameter_data->extension, ".");
					strcat (parameter_data->extension, original_parameter);
				}
				else
					strcpy (parameter_data->extension, original_parameter);

				continue;
			}

			if (strncmp (label, "slices:", 8) == 0)
			{
				if (sscanf (parameter, "%dto%d", &first_slice, &last_slice) == 2)
				{
					if (first_slice <= last_slice)
					{
						parameter_data->first_slice	= first_slice;
						parameter_data->last_slice	= last_slice;
					}
					else
					{
						parameter_data->first_slice	= last_slice;
						parameter_data->last_slice	= first_slice;
					}
				}

				continue;
			}

			if (strncmp (label, "species:", 8) == 0)
			{
				if (strncmp (parameter, "p", 1) == 0 ||
				strncmp (parameter, "m", 1) == 0)
					strcpy (parameter_data->species, parameter);
				
				continue;
			}

			if (strncmp (label, "tracer:", 7) == 0)
			{
				/*
				if (strncmp (parameter, "ho", 2) == 0 ||
				strncmp (parameter, "co", 2) == 0 ||
				strncmp (parameter, "oo", 2) == 0 ||
				strncmp (parameter, "bu", 2) == 0)
				*/
				strcpy (parameter_data->tracer, original_parameter);

				continue;
			}

			if (strncmp (label, "f-tracer:", 9) == 0)
			{
				strcpy (parameter_data->ftracer, original_parameter);

				continue;
			}

			if (strncmp (label, "v-tracer:", 9) == 0)
			{
				strcpy (parameter_data->vtracer, original_parameter);

				continue;
			}

			if (strncmp (label, "category:", 9) == 0)
			{
				if (strncmp (parameter, "individual", 10) == 0)
					parameter_data->category	= INDIVIDUAL;
				else if (strncmp (parameter, "composite", 9) == 0)
					parameter_data->category	= COMPOSITE;
				else if (strncmp (parameter, "phantom", 7) == 0)
					parameter_data->category	= PHANTOM;
				else
				{
					error_message (label, parameter, parameter_file);
					return FAIL;
				}

				continue;
			}

			if (strncmp (label, "datatype:", 9) == 0)
			{
				if (strncmp (parameter, "common_data", 11) == 0)
					parameter_data->datatype	= COMMON_DATA;
				else if (strncmp (parameter, "pet_data", 8) == 0)
					parameter_data->datatype	= PET_DATA;
				else if (strncmp (parameter, "pet_image", 9) == 0)
					parameter_data->datatype	= PET_IMAGE;
				else if (strncmp (parameter, "mri_data", 8) == 0)
					parameter_data->datatype	= MRI_DATA;
				else if (strncmp (parameter, "mri_image", 9) == 0)
					parameter_data->datatype	= MRI_IMAGE;
				else
				{
					error_message (label, parameter, parameter_file);
					return FAIL;
				}

				continue;
			}

			if (strncmp (label, "scanner:", 8) == 0)
			{
				if (strncmp (parameter, "pett6", 5) == 0 ||
				strncmp (parameter, SCANNER_953B, 3) == 0)
					strcpy (parameter_data->scanner, parameter);
				else if (strncmp (parameter, "ecat", 4) == 0)
					strcpy (parameter_data->scanner, SCANNER_953B);
				else
				{
					error_message (label, parameter, parameter_file);
					return FAIL;
				}

				continue;
			}

			if (strncmp (label, "acquisition:", 12) == 0)
			{
				if (strncmp (parameter, "low_resolution", 14) == 0)
					strcpy (parameter_data->acquisition, 
						acquisition_string [LOW_RESOLUTION]);
				else if (strncmp (parameter, "high_resolution", 15) == 0)
					strcpy (parameter_data->acquisition, 
						acquisition_string [HIGH_RESOLUTION]);
				else if (strncmp (parameter, "stationary", 10) == 0)
					strcpy (parameter_data->acquisition, 
						acquisition_string [STATIONARY]);
				else if (strncmp (parameter, "wobble", 6) == 0)
					strcpy (parameter_data->acquisition, 
						acquisition_string [WOBBLE]);
				else if (strncmp (parameter, "3d", 2) == 0)
					strcpy (parameter_data->acquisition, 
						acquisition_string [THREE_DIM]);
				else
				{
					error_message (label, parameter, parameter_file);
					return FAIL;
				}

				continue;
			}

			if (strncmp (label, "reconstruction:", 15) == 0)
			{
				if (strncmp (parameter, "filtered_backprojection_old", 27) == 0)
          				strcpy (parameter_data->reconstruction, 
						reconstruction_string [FBOLD]);
				else if (strncmp (parameter, "filtered_backprojection", 23) == 0)
          				strcpy (parameter_data->reconstruction, 
						reconstruction_string [FB]);
				else if (strncmp (parameter, "maximum_likelihood", 18) == 0)
          				strcpy (parameter_data->reconstruction, 
						reconstruction_string [ML]);
				else if (strncmp (parameter, 
					"filtered_backprojection_Dave_Politte", 36) == 0)
          				strcpy (parameter_data->reconstruction, 
						reconstruction_string [FBDGP]);
				else if (strncmp (parameter, "3d_filtered_backprojection", 26) == 0)
          				strcpy (parameter_data->reconstruction, 
						reconstruction_string [FBP3D]);
				else if (strncmp (parameter, "3d_filtered_backprojection_jmo_norm", 35) == 0)
          				strcpy (parameter_data->reconstruction, 
						reconstruction_string [FBP3DJMON]);
				else if (strncmp (parameter, "3d_filtered_backprojection_jmo_scat", 35) == 0)
          				strcpy (parameter_data->reconstruction, 
						reconstruction_string [FBP3DJMOS]);
				else
				{
					error_message (label, parameter, parameter_file);
					return FAIL;
				}

				continue;
			}

			if (strncmp (label, "recfilter:", 10) == 0)
			{
				if (strncmp (parameter, "filterg", 7) == 0 ||
				strncmp (parameter, "filterf", 7) == 0 ||
				strncmp (parameter, "ramp", 4) == 0 ||
				strncmp (parameter, "12", 2) == 0)
					strcpy (parameter_data->recfilter, parameter);

				if ((strncmp (parameter, "gauss", 5) == 0 ||
				strncmp (parameter, "butterworth", 11) == 0) &&
				sscanf (line, "%s %s %s", label, parameter, parameter2) == 3)
				{
					strcpy (parameter_data->recfilter, parameter);

					if (strncmp (parameter, "gauss", 5) == 0)
						parameter_data->recfilter_type	= FILTER_GAUSS;
					else if (sscanf (line, "%s %s %s %s", label, parameter, 
					parameter2, parameter3) == 4)
					{
						parameter_data->recfilter_type	= FILTER_BUTTERWORTH;
						if (DetermineType (parameter3) == DATA_TYPE_INTEGER)
							parameter_data->recfilter_order	= atoi (parameter3);
						else
						{
							fprintf (stderr, "recfilter_order error\n");
							return FAIL;
						}
					}

					if (DetermineType (parameter2) == DATA_TYPE_REAL ||
					DetermineType (parameter2) == DATA_TYPE_INTEGER)
						parameter_data->recfilter_cutoff	= atof (parameter2);
					else
					{
						fprintf (stderr, "Error: recfilter_cutoff (%s)\n", 
							parameter2);
						return FAIL;
					}
				}

				continue;
			}

			if (strncmp (label, "mskimg:", 7) == 0)
			{
				if (strncmp (parameter, "control_image", 13) == 0)
				{
					parameter_data->mskimg_type	= MASK_CONTROL;
				}
				else if (strncmp (parameter, "specified", 9) == 0)
				{
					parameter_data->mskimg_type	= MASK_SPECIFIED;
					if (sscanf (line, "%s %s %s", label, parameter, parameter2) == 3)
					{
						strcpy (parameter_data->mskimg, parameter2);
					}
				}
				else
				{
					error_message (label, parameter, parameter_file);
					return FAIL;
				}

				continue;
			}

			if (strncmp (label, "mskpct:", 7) == 0)
			{
				if (DetermineType (parameter) == DATA_TYPE_INTEGER)
					parameter_data->mskpct	= atoi (parameter);
				else
				{
					fprintf (stderr, "mskpct parameter error\n");
					return FAIL;
				}

				continue;
			}

			if (strncmp (label, "mskfilter:", 10) == 0)
			{
				if ((strncmp (parameter, "gauss", 5) == 0 ||
				strncmp (parameter, "butterworth", 11) == 0) &&
				sscanf (line, "%s %s %s", label, parameter, parameter2) == 3)
				{
					if (strncmp (parameter, "gauss", 5) == 0)
						parameter_data->mskfilter_type	= FILTER_GAUSS;
					else if (sscanf (line, "%s %s %s %s", label, parameter, 
					parameter2, parameter3) == 4)
					{
						parameter_data->mskfilter_type	= FILTER_BUTTERWORTH;
						if (DetermineType (parameter3) == DATA_TYPE_INTEGER)
							parameter_data->mskfilter_order	= atoi (parameter3);
						else
						{
							fprintf (stderr, "mskfilter_order error\n");
							return FAIL;
						}
					}

					if (DetermineType (parameter2) == DATA_TYPE_REAL ||
					DetermineType (parameter2) == DATA_TYPE_INTEGER)
						parameter_data->mskfilter_cutoff	= atof (parameter2);
					else
					{
						fprintf (stderr, "mskfilter_cutoff error\n");
						return FAIL;
					}
				}

				continue;
			}

			if (strncmp (label, "imgfilter:", 10) == 0)
			{
				if ((strncmp (parameter, "gauss", 5) == 0 ||
				strncmp (parameter, "butterworth", 11) == 0) &&
				sscanf (line, "%s %s %s", label, parameter, parameter2) == 3)
				{
					if (strncmp (parameter, "gauss", 5) == 0)
						parameter_data->imgfilter_type	= FILTER_GAUSS;
					else if (sscanf (line, "%s %s %s %s", label, parameter, 
					parameter2, parameter3) == 4)
					{
						parameter_data->imgfilter_type	= FILTER_BUTTERWORTH;
						if (DetermineType (parameter3) == DATA_TYPE_INTEGER)
							parameter_data->imgfilter_order	= atoi (parameter3);
						else
						{
							fprintf (stderr, "imgfilter_order error\n");
							return FAIL;
						}
					}

					if (DetermineType (parameter2) == DATA_TYPE_REAL ||
					DetermineType (parameter2) == DATA_TYPE_INTEGER)
						parameter_data->imgfilter_cutoff	= atof (parameter2);
					else
					{
						fprintf (stderr, "imgfilter_cutoff error\n");
						return FAIL;
					}
				}

				continue;
			}

			if (strncmp (label, "rms_align:", 10) == 0)
			{
				if ((strncmp (parameter, "n", 1) == 0 ||
				strncmp (parameter, "a", 1) == 0))
				{
					strncpy (parameter_data->rms_align, parameter, 1);
				}

				continue;
			}

			if (strncmp (label, "imglist_mode:", 13) == 0
			|| strncmp (label, "imgmode:", 8) == 0
			|| strncmp (label, "weld_lstmode:", 13) == 0)
			{
				if (strncmp (parameter, "standard", 8) == 0)
				{
					parameter_data->imglist_mode	= STDIMAGE_MODE;
				}
				else if (strncmp (parameter, "diff", 4) == 0)
				{
					parameter_data->imglist_mode	= DIFIMAGE_MODE;
				}
				else if (strncmp (parameter, "prewelded", 9) == 0)
				{
					parameter_data->imglist_mode	= PREWELDED_IMAGE_MODE;
				}
				else if (strncmp (parameter, "multitracer", 11) == 0)
				{
					parameter_data->imglist_mode	= MULTITRACER_IMAGE_MODE;
				}
				else if (strncmp (parameter, "welded", 6) == 0)
				{
					parameter_data->imglist_mode	= WELDED_IMAGE_MODE;
				}
				else if (strncmp (parameter, "literal", 7) == 0)
				{
					parameter_data->imglist_mode	= LITERAL_IMAGE_MODE;
				}

				continue;
			}

			if (strncmp (label, "atlfile:", 8) == 0)
			{
				strcpy (parameter_data->atlfile, original_parameter);

				continue;
			}

			if (strncmp (label, "voi_norm:", 9) == 0)
			{
				if (DetermineType (parameter) == DATA_TYPE_REAL ||
				DetermineType (parameter) == DATA_TYPE_INTEGER)
					parameter_data->voi_norm	= atof (parameter);
				else
				{
					fprintf (stderr, "Error: voi_norm (%s)\n", parameter);
					return FAIL;
				}

				continue;
			}

			if (strncmp (label, "voi_sd:", 7) == 0)
			{
				if (strncmp (parameter, "yes", 3) == 0)
					parameter_data->voi_sd	= TRUE;;

				continue;
			}

			if (strncmp (label, "voi:", 4) == 0)
			{
				if (sscanf (line, "%s %s %f %f %f", label, parameter, &x, &y, &z) == 5
				&& strncmp (parameter, "cube", 4) == 0)
				{
					parameter_data->voi_shape	= VOI_CUBE;
					parameter_data->voi_xdim	= x;
					parameter_data->voi_ydim	= y;
					parameter_data->voi_zdim	= z;
				}
				else if (sscanf (line, "%s %s %f", label, parameter, &x) == 3
				&& strncmp (parameter, "sphere", 6) == 0)
				{
					parameter_data->voi_shape	= VOI_SPHERE;
					parameter_data->voi_xdim	= x;
					parameter_data->voi_ydim	= x;
					parameter_data->voi_zdim	= x;
				}

				continue;
			}

			if (strncmp (label, "processing:", 11) == 0)
			{
				if (strncmp (parameter, "none", 4) == 0)
					parameter_data->processing	= PROCESSING_NONE;
				else if (strncmp (parameter, "cbf", 3) == 0)
					parameter_data->processing	= PROCESSING_CBF;
				else if (strncmp (parameter, "cbv", 3) == 0)
					parameter_data->processing	= PROCESSING_CBV;
				else if (strncmp (parameter, "tissue_activity", 15) == 0)
					parameter_data->processing	= PROCESSING_TISACT;
				else if (strncmp (parameter, "wellcounts", 10) == 0)
					parameter_data->processing	= PROCESSING_WELLCOUNTS;
				else if (strncmp (parameter, "oef", 3) == 0)
					parameter_data->processing	= PROCESSING_OEF;
				else if (strncmp (parameter, "cmro2", 5) == 0)
					parameter_data->processing	= PROCESSING_CMRO2;

				continue;
			}

			if (strncmp (label, "halflife:", 9) == 0)
			{
				parameter_data->halflife	= atof (parameter);
				if (parameter_data->halflife == 999999.00)
					parameter_data->halflife	= NONDECAY_HALFLIFE;

				continue;
			}

			if (strncmp (label, "rgt_format:", 11) == 0)
			{
				if (strncmp (parameter, "regioncol", 9) == 0)
					parameter_data->rgt_format	= REGIONCOL;
				else if (strncmp (parameter, "regionrow", 9) == 0)
					parameter_data->rgt_format	= REGIONROW;

				continue;
			}

			if (strncmp (label, "frames:", 7) == 0)
			{
				if (strncmp (parameter, "all", 3) == 0)
					parameter_data->image_frames	= ALL_FRAMES;
				else if (DetermineType (parameter) == DATA_TYPE_INTEGER)
					parameter_data->image_frames	= atoi (parameter);

				continue;
			}

			if (strncmp (label, "regfile:", 8) == 0)
			{
				strcpy (parameter_data->regfile, parameter);
			}
		}
	}

	/*
	 * Check the parameters that are necessary.
	 */
	if (strlen (parameter_data->extension) == 0)
	{
		if (strncmp (parameter_data->scanner, SCANNER_953B, 3) == 0)
			strcpy (parameter_data->extension, IMAGE_EXT);
	}

	fclose (fp);

	return SUCCEED;
}
@


1.45
log
@Added processing for normalization and scatter correction parameters.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.44 1995/04/17 15:22:36 ty7777 Exp ty7777 $*/
d3 3
d164 1
a164 1
#include <petutil/imglist.h>
d197 1
a197 1
static char rcsid [] = "$Header: /home/petsun4/ty7777/src/libhp/RCS/readparm.c,v 1.44 1995/04/17 15:22:36 ty7777 Exp ty7777 $";
@


1.44
log
@Added voi_sd.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.43 1994/10/03 17:03:18 ty7777 Exp ty7777 $*/
d3 3
d171 1
a171 1
#define FDBP		3
d173 2
d189 4
a192 2
				   "fbdp",
				   "3dbp"};
d194 1
a194 1
static char rcsid [] = "$Header: /home/petsun4/ty7777/src/libhp/RCS/readparm.c,v 1.43 1994/10/03 17:03:18 ty7777 Exp ty7777 $";
d464 1
a464 1
						reconstruction_string [ML]);
d468 6
@


1.43
log
@Deleted extension default.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.42 1994/10/03 16:42:45 ty7777 Exp ty7777 $*/
d3 3
d187 1
a187 1
static char rcsid [] = "$Header: /home/petsun4/ty7777/src/libhp/RCS/readparm.c,v 1.42 1994/10/03 16:42:45 ty7777 Exp ty7777 $";
d249 1
d677 8
@


1.42
log
@Initializes every fields of the structure PARAMETER_DATA.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.41 1994/09/20 22:04:40 ty7777 Exp ty7777 $*/
d3 3
d184 1
a184 1
static char rcsid [] = "$Header: /home/petsun4/ty7777/src/libhp/RCS/readparm.c,v 1.41 1994/09/20 22:04:40 ty7777 Exp ty7777 $";
a761 2
		else
			strcpy (parameter_data->extension, "");
@


1.41
log
@Added the default value for voi_norm.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.40 1994/06/20 17:46:01 ty7777 Exp ty7777 $*/
d3 3
d167 2
d181 1
a181 1
static char rcsid [] = "$Header: /home/petsun4/ty7777/src/libhp/RCS/readparm.c,v 1.40 1994/06/20 17:46:01 ty7777 Exp ty7777 $";
d226 1
a226 6
	strcpy (parameter_data->datapath, "");
	strcpy (parameter_data->suffix, "");
	strcpy (parameter_data->mskimg, "");
	strcpy (parameter_data->atlfile, "");
	strcpy (parameter_data->regfile, "");
	strcpy (parameter_data->extension, "");
d397 1
a397 1
				strncmp (parameter, "953", 3) == 0)
d400 1
a400 1
					strcpy (parameter_data->scanner, "953");
d757 1
a757 1
		if (strncmp (parameter_data->scanner, "953", 3) == 0)
@


1.40
log
@Uses 999999.00 for halflife for backward compatibability.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.39 1994/05/11 14:49:29 ty7777 Exp ty7777 $*/
d3 3
d161 2
d176 1
a176 1
static char rcsid [] = "$Header: /home/petsun4/ty7777/src/libhp/RCS/readparm.c,v 1.39 1994/05/11 14:49:29 ty7777 Exp ty7777 $";
d219 1
a219 1
	 * Setting up the defaults.
d228 22
a249 12
	parameter_data->category	= INDIVIDUAL;
	parameter_data->recfilter_type	= FILTER_NONE;
	parameter_data->mskfilter_type	= FILTER_NONE;
	parameter_data->imgfilter_type	= FILTER_NONE;
	parameter_data->imglist_mode	= STDIMAGE_MODE;
	parameter_data->first_slice	= 0;
	parameter_data->last_slice	= 0;
	parameter_data->voi_shape	= VOI_UNDEFINED;
	parameter_data->processing	= PROCESSING_NONE;
	parameter_data->rgt_format	= REGIONCOL;
	parameter_data->image_frames	= 1;
	parameter_data->halflife	= MAXFLOAT;
@


1.39
log
@Allowing upper case letters for datapath.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.38 1994/04/13 15:22:08 ty7777 Exp ty7777 $*/
d3 3
d171 1
a171 1
static char rcsid [] = "$Header: /home/petsun4/ty7777/src/libhp/RCS/readparm.c,v 1.38 1994/04/13 15:22:08 ty7777 Exp ty7777 $";
d704 2
@


1.38
log
@Added wellcounts processing.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.37 1994/04/07 15:28:37 ty7777 Exp ty7777 $*/
d3 3
d168 1
a168 1
static char rcsid [] = "$Header: /home/petsun4/ty7777/src/libhp/RCS/readparm.c,v 1.37 1994/04/07 15:28:37 ty7777 Exp ty7777 $";
d190 1
d240 1
d246 1
a246 1
				strcpy (parameter2, parameter);
d250 1
a250 1
					strcpy (parameter_data->datapath, parameter);
d261 1
a261 1
			if (strncmp (label, "suffix:", 7) == 0 && strlen (parameter) > 0)
d263 1
a263 1
				strcpy (parameter_data->suffix, parameter);
d268 2
a269 1
			if (strncmp (label, "extension:", 10) == 0 && strlen (parameter) > 0)
d271 2
a272 1
				if (strlen (parameter) > 0 && strncmp (parameter, ".", 1) != 0)
d275 1
a275 1
					strcat (parameter_data->extension, parameter);
d278 1
a278 1
					strcpy (parameter_data->extension, parameter);
d319 1
a319 1
				strcpy (parameter_data->tracer, parameter);
d326 1
a326 1
				strcpy (parameter_data->ftracer, parameter);
d333 1
a333 1
				strcpy (parameter_data->vtracer, parameter);
d637 1
a637 1
				strcpy (parameter_data->atlfile, parameter);
@


1.37
log
@Use Lowered ().
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.36 1994/04/05 19:13:39 ty7777 Exp ty7777 $*/
d3 3
d165 1
a165 1
static char rcsid [] = "$Header: /home/petsun4/ty7777/src/libhp/RCS/readparm.c,v 1.36 1994/04/05 19:13:39 ty7777 Exp ty7777 $";
d681 2
@


1.36
log
@Fixed the voi_norm problem.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.35 1994/04/04 21:57:55 ty7777 Exp ty7777 $*/
d3 3
d162 1
a162 1
static char rcsid [] = "$Header: /home/petsun4/ty7777/src/libhp/RCS/readparm.c,v 1.35 1994/04/04 21:57:55 ty7777 Exp ty7777 $";
a179 1
	BOOLEAN	lowered;	
a183 2
	char	*lower_label;
	char	*lower_parameter;
d211 1
d218 2
a225 2
	lowered	= FALSE;

d233 2
a234 5
			if (lowered)
			{
				free (lower_label);
				free (lower_parameter);
			}
d236 1
a236 6
			lower_label	= Lowered (label, strlen (label));
			lower_parameter	= Lowered (parameter, strlen (parameter));
			if (!lowered)
				lowered		= TRUE;

			if (strncmp (lower_label, "datapath:", 9) == 0)
d253 1
a253 1
			if (strncmp (lower_label, "suffix:", 7) == 0 && strlen (parameter) > 0)
d260 1
a260 1
			if (strncmp (lower_label, "extension:", 10) == 0 && strlen (parameter) > 0)
d273 1
a273 1
			if (strncmp (lower_label, "slices:", 8) == 0)
d275 1
a275 1
				if (sscanf (lower_parameter, "%dto%d", &first_slice, &last_slice) == 2)
d292 1
a292 1
			if (strncmp (lower_label, "species:", 8) == 0)
d294 3
a296 3
				if (strncmp (lower_parameter, "p", 1) == 0 ||
				strncmp (lower_parameter, "m", 1) == 0)
					strcpy (parameter_data->species, lower_parameter);
d301 1
a301 1
			if (strncmp (lower_label, "tracer:", 7) == 0)
d304 4
a307 4
				if (strncmp (lower_parameter, "ho", 2) == 0 ||
				strncmp (lower_parameter, "co", 2) == 0 ||
				strncmp (lower_parameter, "oo", 2) == 0 ||
				strncmp (lower_parameter, "bu", 2) == 0)
d309 1
a309 1
				strcpy (parameter_data->tracer, lower_parameter);
d314 1
a314 1
			if (strncmp (lower_label, "f-tracer:", 9) == 0)
d316 1
a316 1
				strcpy (parameter_data->ftracer, lower_parameter);
d321 1
a321 1
			if (strncmp (lower_label, "v-tracer:", 9) == 0)
d323 1
a323 1
				strcpy (parameter_data->vtracer, lower_parameter);
d328 1
a328 1
			if (strncmp (lower_label, "category:", 9) == 0)
d330 1
a330 1
				if (strncmp (lower_parameter, "individual", 10) == 0)
d332 1
a332 1
				else if (strncmp (lower_parameter, "composite", 9) == 0)
d334 1
a334 1
				else if (strncmp (lower_parameter, "phantom", 7) == 0)
d345 1
a345 1
			if (strncmp (lower_label, "datatype:", 9) == 0)
d347 1
a347 1
				if (strncmp (lower_parameter, "common_data", 11) == 0)
d349 1
a349 1
				else if (strncmp (lower_parameter, "pet_data", 8) == 0)
d351 1
a351 1
				else if (strncmp (lower_parameter, "pet_image", 9) == 0)
d353 1
a353 1
				else if (strncmp (lower_parameter, "mri_data", 8) == 0)
d355 1
a355 1
				else if (strncmp (lower_parameter, "mri_image", 9) == 0)
d366 1
a366 1
			if (strncmp (lower_label, "scanner:", 8) == 0)
d368 2
a369 2
				if (strncmp (lower_parameter, "pett6", 5) == 0 ||
				strncmp (lower_parameter, "953", 3) == 0)
d371 1
a371 1
				else if (strncmp (lower_parameter, "ecat", 3) == 0)
d382 1
a382 1
			if (strncmp (lower_label, "acquisition:", 12) == 0)
d384 1
a384 1
				if (strncmp (lower_parameter, "low_resolution", 14) == 0)
d387 1
a387 1
				else if (strncmp (lower_parameter, "high_resolution", 15) == 0)
d390 1
a390 1
				else if (strncmp (lower_parameter, "stationary", 10) == 0)
d393 1
a393 1
				else if (strncmp (lower_parameter, "wobble", 6) == 0)
d396 1
a396 1
				else if (strncmp (lower_parameter, "3d", 2) == 0)
d408 1
a408 1
			if (strncmp (lower_label, "reconstruction:", 15) == 0)
d410 1
a410 1
				if (strncmp (lower_parameter, "filtered_backprojection_old", 27) == 0)
d413 1
a413 1
				else if (strncmp (lower_parameter, "filtered_backprojection", 23) == 0)
d416 1
a416 1
				else if (strncmp (lower_parameter, "maximum_likelihood", 18) == 0)
d419 1
a419 1
				else if (strncmp (lower_parameter, 
d423 1
a423 1
				else if (strncmp (lower_parameter, "3d_filtered_backprojection", 26) == 0)
d435 1
a435 1
			if (strncmp (lower_label, "recfilter:", 10) == 0)
d437 4
a440 4
				if (strncmp (lower_parameter, "filterg", 7) == 0 ||
				strncmp (lower_parameter, "filterf", 7) == 0 ||
				strncmp (lower_parameter, "ramp", 4) == 0 ||
				strncmp (lower_parameter, "12", 2) == 0)
d443 2
a444 2
				if ((strncmp (lower_parameter, "gauss", 5) == 0 ||
				strncmp (lower_parameter, "butterworth", 11) == 0) &&
d449 1
a449 1
					if (strncmp (lower_parameter, "gauss", 5) == 0)
d478 1
a478 1
			if (strncmp (lower_label, "mskimg:", 7) == 0)
d480 1
a480 1
				if (strncmp (lower_parameter, "control_image", 13) == 0)
d484 1
a484 1
				else if (strncmp (lower_parameter, "specified", 9) == 0)
d501 1
a501 1
			if (strncmp (lower_label, "mskpct:", 7) == 0)
d514 1
a514 1
			if (strncmp (lower_label, "mskfilter:", 10) == 0)
d516 2
a517 2
				if ((strncmp (lower_parameter, "gauss", 5) == 0 ||
				strncmp (lower_parameter, "butterworth", 11) == 0) &&
d520 1
a520 1
					if (strncmp (lower_parameter, "gauss", 5) == 0)
d548 1
a548 1
			if (strncmp (lower_label, "imgfilter:", 10) == 0)
d550 2
a551 2
				if ((strncmp (lower_parameter, "gauss", 5) == 0 ||
				strncmp (lower_parameter, "butterworth", 11) == 0) &&
d554 1
a554 1
					if (strncmp (lower_parameter, "gauss", 5) == 0)
d582 1
a582 1
			if (strncmp (lower_label, "rms_align:", 10) == 0)
d584 2
a585 2
				if ((strncmp (lower_parameter, "n", 1) == 0 ||
				strncmp (lower_parameter, "a", 1) == 0))
d587 1
a587 1
					strncpy (parameter_data->rms_align, lower_parameter, 1);
d593 3
a595 3
			if (strncmp (lower_label, "imglist_mode:", 13) == 0
			|| strncmp (lower_label, "imgmode:", 8) == 0
			|| strncmp (lower_label, "weld_lstmode:", 13) == 0)
d597 1
a597 1
				if (strncmp (lower_parameter, "standard", 8) == 0)
d601 1
a601 1
				else if (strncmp (lower_parameter, "diff", 4) == 0)
d605 1
a605 1
				else if (strncmp (lower_parameter, "prewelded", 9) == 0)
d609 1
a609 1
				else if (strncmp (lower_parameter, "multitracer", 11) == 0)
d613 1
a613 1
				else if (strncmp (lower_parameter, "welded", 6) == 0)
d617 1
a617 1
				else if (strncmp (lower_parameter, "literal", 7) == 0)
d625 1
a625 1
			if (strncmp (lower_label, "atlfile:", 8) == 0)
d632 1
a632 1
			if (strncmp (lower_label, "voi_norm:", 9) == 0)
d646 1
a646 1
			if (strncmp (lower_label, "voi:", 4) == 0)
d668 1
a668 1
			if (strncmp (lower_label, "processing:", 11) == 0)
d670 1
a670 1
				if (strncmp (lower_parameter, "none", 4) == 0)
d672 1
a672 1
				else if (strncmp (lower_parameter, "cbf", 3) == 0)
d674 1
a674 1
				else if (strncmp (lower_parameter, "cbv", 3) == 0)
d676 1
a676 1
				else if (strncmp (lower_parameter, "tissue_activity", 15) == 0)
d678 1
a678 1
				else if (strncmp (lower_parameter, "oef", 3) == 0)
d680 1
a680 1
				else if (strncmp (lower_parameter, "cmro2", 5) == 0)
d686 1
a686 1
			if (strncmp (lower_label, "halflife:", 9) == 0)
d688 1
a688 1
				parameter_data->halflife	= atof (lower_parameter);
d693 1
a693 1
			if (strncmp (lower_label, "rgt_format:", 11) == 0)
d695 1
a695 1
				if (strncmp (lower_parameter, "regioncol", 9) == 0)
d697 1
a697 1
				else if (strncmp (lower_parameter, "regionrow", 9) == 0)
d703 1
a703 1
			if (strncmp (lower_label, "frames:", 7) == 0)
d705 1
a705 1
				if (strncmp (lower_parameter, "all", 3) == 0)
d707 2
a708 2
				else if (DetermineType (lower_parameter) == DATA_TYPE_INTEGER)
					parameter_data->image_frames	= atoi (lower_parameter);
d713 1
a713 1
			if (strncmp (lower_label, "regfile:", 8) == 0)
@


1.35
log
@Added voi_norm processing.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.34 1994/03/25 22:40:09 ty7777 Exp ty7777 $*/
d3 3
d159 1
a159 1
static char rcsid [] = "$Header: /home/petsun4/ty7777/src/libhp/RCS/readparm.c,v 1.34 1994/03/25 22:40:09 ty7777 Exp ty7777 $";
d641 3
a643 3
				if (DetermineType (parameter2) == DATA_TYPE_REAL ||
				DetermineType (parameter2) == DATA_TYPE_INTEGER)
					parameter_data->voi_norm	= atof (parameter2);
d646 1
a646 2
					fprintf (stderr, "Error: voi_norm (%s)\n", 
						parameter2);
d649 2
@


1.34
log
@Added processing for imglist_mode.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.33 1994/03/22 16:18:32 ty7777 Exp ty7777 $*/
d3 3
d156 1
a156 1
static char rcsid [] = "$Header: /home/petsun4/ty7777/src/libhp/RCS/readparm.c,v 1.33 1994/03/22 16:18:32 ty7777 Exp ty7777 $";
d634 13
@


1.33
log
@Added values.h where MAXFLOAT is defined.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.32 1994/03/22 16:08:00 ty7777 Exp ty7777 $*/
d3 3
d153 1
a153 1
static char rcsid [] = "$Header: /home/petsun4/ty7777/src/libhp/RCS/readparm.c,v 1.32 1994/03/22 16:08:00 ty7777 Exp ty7777 $";
d210 1
a210 1
	parameter_data->weld_lstmode	= STDIMAGE_MODE;
d594 3
a596 1
			if (strncmp (lower_label, "weld_lstmode:", 13) == 0)
d600 1
a600 1
					parameter_data->weld_lstmode	= STDIMAGE_MODE;
d602 4
d608 1
a608 1
					parameter_data->weld_lstmode	= PREWELDED_IMAGE_MODE;
d610 8
d620 1
a620 1
					parameter_data->weld_lstmode	= LITERAL_IMAGE_MODE;
@


1.32
log
@Use MAXFLOAT as the default halflife.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.31 1994/03/22 16:06:21 ty7777 Exp ty7777 $*/
d3 3
d124 1
d150 1
a150 1
static char rcsid [] = "$Header: /home/petsun4/ty7777/src/libhp/RCS/readparm.c,v 1.31 1994/03/22 16:06:21 ty7777 Exp ty7777 $";
@


1.31
log
@Added processing for tissue activity and halflife.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.30 1994/03/11 17:14:53 ty7777 Exp ty7777 $*/
d3 3
d146 1
a146 1
static char rcsid [] = "$Header: /home/petsun4/ty7777/src/libhp/RCS/readparm.c,v 1.30 1994/03/11 17:14:53 ty7777 Exp ty7777 $";
d208 1
@


1.30
log
@Added the default for category.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.29 1994/03/04 19:20:49 ty7777 Exp ty7777 $*/
d3 3
d143 1
a143 1
static char rcsid [] = "$Header: /home/petsun4/ty7777/src/libhp/RCS/readparm.c,v 1.29 1994/03/04 19:20:49 ty7777 Exp ty7777 $";
d638 2
d644 7
@


1.29
log
@Assign the default maskimg.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.28 1994/03/04 16:31:38 ty7777 Exp ty7777 $*/
d3 3
d140 1
a140 1
static char rcsid [] = "$Header: /home/petsun4/ty7777/src/libhp/RCS/readparm.c,v 1.28 1994/03/04 16:31:38 ty7777 Exp ty7777 $";
d190 4
a201 2
	strcpy (parameter_data->atlfile, "");
	strcpy (parameter_data->regfile, "");
@


1.28
log
@Release memory for lowered.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.27 1994/03/03 20:41:28 ty7777 Exp ty7777 $*/
d3 3
d137 1
a137 1
static char rcsid [] = "$Header: /home/petsun4/ty7777/src/libhp/RCS/readparm.c,v 1.27 1994/03/03 20:41:28 ty7777 Exp ty7777 $";
d186 1
@


1.27
log
@Replace id with header.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.26 1994/03/03 16:14:18 ty7777 Exp ty7777 $*/
d3 3
d134 1
a134 1
static char rcsid [] = "$Header$";
d152 1
d194 2
d203 2
a204 1
			if (lower_label && *lower_label)
a205 2

			if (lower_parameter && *lower_parameter)
d207 1
d211 2
d606 1
a606 1
				if (sscanf (line, "%s %s %f", label, parameter, &x) == 3
@


1.26
log
@Added processing for processing, rgt_format, regfile.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.25 1994/02/23 21:31:17 ty7777 Exp ty7777 $*/
d3 3
d131 1
a131 1
static char rcsid []= "$Id: readparm.c,v 1.25 1994/02/23 21:31:17 ty7777 Exp ty7777 $";
@


1.25
log
@Added processing for voi.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.24 1994/02/22 21:10:10 ty7777 Exp ty7777 $*/
d3 3
d128 1
a128 1
static char rcsid []= "$Id: readparm.c,v 1.24 1994/02/22 21:10:10 ty7777 Exp ty7777 $";
d181 5
d194 6
d216 2
d219 2
a220 2
			else if (strncmp (lower_label, "suffix:", 7) == 0 &&
			strlen (parameter) > 0)
d223 2
d226 2
a227 2
			else if (strncmp (lower_label, "extension:", 10) == 0 &&
			strlen (parameter) > 0)
d236 2
d239 2
a240 1
			else if (strncmp (lower_label, "slices:", 8) == 0)
d255 2
d258 2
a259 1
			else if (strncmp (lower_label, "species:", 8) == 0)
d264 2
d267 2
a268 1
			else if (strncmp (lower_label, "tracer:", 7) == 0)
d277 2
d280 2
a281 1
			else if (strncmp (lower_label, "f-tracer:", 9) == 0)
d284 2
d287 2
a288 1
			else if (strncmp (lower_label, "v-tracer:", 9) == 0)
d291 2
d294 2
a295 1
			else if (strncmp (lower_label, "category:", 9) == 0)
d308 2
d311 2
a312 1
			else if (strncmp (lower_label, "datatype:", 9) == 0)
d329 2
d332 2
a333 1
			else if (strncmp (lower_label, "scanner:", 8) == 0)
d345 2
d348 2
a349 1
			else if (strncmp (lower_label, "acquisition:", 12) == 0)
d371 2
d374 2
a375 1
			else if (strncmp (lower_label, "reconstruction:", 15) == 0)
d398 2
d401 2
a402 1
			else if (strncmp (lower_label, "recfilter:", 10) == 0)
d441 2
d444 2
a445 1
			else if (strncmp (lower_label, "mskimg:", 7) == 0)
d464 2
d467 2
a468 1
			else if (strncmp (lower_label, "mskpct:", 7) == 0)
d477 2
d480 2
a481 1
			else if (strncmp (lower_label, "mskfilter:", 10) == 0)
d511 2
d514 2
a515 1
			else if (strncmp (lower_label, "imgfilter:", 10) == 0)
d545 2
d548 2
a549 1
			else if (strncmp (lower_label, "rms_align:", 10) == 0)
d556 2
d559 2
a560 1
			else if (strncmp (lower_label, "weld_lstmode:", 13) == 0)
d574 2
d577 2
a578 1
			else if (strncmp (lower_label, "atlfile:", 8) == 0)
d580 3
a582 4
				if (sscanf (line, "%s %s", label, parameter) == 2)
				{
					strcpy (parameter_data->atlfile, parameter);
				}
d584 2
a585 1
			else if (strncmp (lower_label, "voi:", 4) == 0)
d603 2
d607 40
a646 2
			free (lower_label);
			free (lower_parameter);
@


1.24
log
@Fixed voi processing bug.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.23 1994/02/22 20:46:51 ty7777 Exp ty7777 $*/
d3 3
d125 1
a125 1
static char rcsid []= "$Id: readparm.c,v 1.23 1994/02/22 20:46:51 ty7777 Exp ty7777 $";
d516 1
a516 1
				&& strncmp (label, "cube", 4) == 0)
d524 1
a524 1
				&& strncmp (label, "sphere", 6) == 0)
@


1.23
log
@Added processing for reading voi parameters.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.22 1994/02/02 21:20:41 ty7777 Exp ty7777 $*/
d3 3
d122 1
a122 1
static char rcsid []= "$Id: readparm.c,v 1.22 1994/02/02 21:20:41 ty7777 Exp ty7777 $";
d512 1
a512 1
				if (sscanf (line, "%s %f %f %f", label, &x, &y, &z) == 4
d520 1
a520 1
				if (sscanf (line, "%s %f", label, &x) == 2
@


1.22
log
@Added processing for atlfile.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.21 1993/11/15 22:17:43 ty7777 Exp ty7777 $*/
d3 3
d119 1
a119 1
static char rcsid []= "$Id: readparm.c,v 1.21 1993/11/15 22:17:43 ty7777 Exp ty7777 $";
d146 3
d171 1
d505 19
@


1.21
log
@Same as the last one.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.20 1993/11/15 21:49:50 ty7777 Exp ty7777 $*/
d3 3
d116 1
a116 1
static char rcsid []= "$Id: readparm.c,v 1.20 1993/11/15 21:49:50 ty7777 Exp ty7777 $";
d491 7
@


1.20
log
@Added processing for 12.
recfilter = 12.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.19 1993/11/15 21:23:04 ty7777 Exp ty7777 $*/
d3 4
d113 1
a113 1
static char rcsid []= "$Id: readparm.c,v 1.19 1993/11/15 21:23:04 ty7777 Exp ty7777 $";
d340 1
a340 1
				strncmp (lower_parameter, "12", 4) == 0)
@


1.19
log
@Added li to maximum_like.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.18 1993/11/03 17:00:33 ty7777 Exp ty7777 $*/
d3 3
d109 1
a109 1
static char rcsid []= "$Id: readparm.c,v 1.18 1993/11/03 17:00:33 ty7777 Exp ty7777 $";
d335 2
a336 1
				strncmp (lower_parameter, "ramp", 4) == 0)
@


1.18
log
@Same as the last version.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.17 1993/11/02 21:18:23 ty7777 Exp $*/
d3 3
d106 1
a106 1
static char rcsid []= "$Id: readparm.c,v 1.17 1993/11/02 21:18:23 ty7777 Exp $";
d312 1
a312 1
				else if (strncmp (lower_parameter, "maximum_likehood", 16) == 0)
@


1.17
log
@Processing for suffix.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.16 1993/10/28 16:43:40 ty7777 Exp ty7777 $*/
d3 3
d103 1
a103 1
static char rcsid []= "$Id: readparm.c,v 1.16 1993/10/28 16:43:40 ty7777 Exp ty7777 $";
@


1.16
log
@Added literal list mode.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.15 1993/10/22 15:21:57 ty7777 Exp ty7777 $*/
d3 3
d100 1
a100 1
static char rcsid []= "$Id: readparm.c,v 1.15 1993/10/22 15:21:57 ty7777 Exp ty7777 $";
d144 1
d173 5
@


1.15
log
@Added error checking for reconstruction, datatype, etc.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.14 1993/09/07 20:34:48 ty7777 Exp ty7777 $*/
d3 3
d97 1
a97 1
static char rcsid []= "$Id: readparm.c,v 1.14 1993/09/07 20:34:48 ty7777 Exp ty7777 $";
d461 4
@


1.14
log
@Correcting the contant STD_IMAGE_MODE.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.13 1993/09/07 20:27:50 ty7777 Exp ty7777 $*/
d3 3
d94 1
a94 1
static char rcsid []= "$Id: readparm.c,v 1.13 1993/09/07 20:27:50 ty7777 Exp ty7777 $";
d226 5
d244 5
d257 5
d304 5
@


1.13
log
@Added weld_lstmode.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.12 1993/09/03 17:01:16 ty7777 Exp ty7777 $*/
d3 3
d91 1
a91 1
static char rcsid []= "$Id: readparm.c,v 1.12 1993/09/03 17:01:16 ty7777 Exp ty7777 $";
d138 1
a138 1
	parameter_data->weld_lstmode	= STD_IMAGE_MODE;
d430 1
a430 1
					parameter_data->weld_lstmode	= STD_IMAGE_MODE;
@


1.12
log
@Added f-tracer and v-tracer.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.11 1993/08/12 14:54:55 ty7777 Exp ty7777 $*/
d3 3
d88 1
a88 1
static char rcsid []= "$Id: readparm.c,v 1.11 1993/08/12 14:54:55 ty7777 Exp ty7777 $";
d135 1
d421 11
@


1.11
log
@Add reading rms_align.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.10 1993/08/09 20:30:46 ty7777 Exp ty7777 $*/
d3 3
d85 1
a85 1
static char rcsid []= "$Id: readparm.c,v 1.10 1993/08/09 20:30:46 ty7777 Exp ty7777 $";
d199 8
@


1.10
log
@Reading extension.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.9 1993/08/06 19:54:10 ty7777 Exp ty7777 $*/
d3 3
d82 1
a82 1
static char rcsid []= "$Id: readparm.c,v 1.9 1993/08/06 19:54:10 ty7777 Exp ty7777 $";
d126 1
d157 7
a163 2
				strcpy (parameter_data->extension, ".");
				strcat (parameter_data->extension, parameter);
d275 32
d398 8
@


1.9
log
@Check acquisition parameter.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.8 1993/08/06 19:48:03 ty7777 Exp ty7777 $*/
d3 3
d79 1
a79 1
static char rcsid []= "$Id: readparm.c,v 1.8 1993/08/06 19:48:03 ty7777 Exp ty7777 $";
d81 12
d150 6
d180 1
d182 5
a186 4
				strncmp (lower_parameter, "co", 1) == 0 ||
				strncmp (lower_parameter, "oo", 1) == 0 ||
				strncmp (lower_parameter, "bu", 1) == 0)
					strcpy (parameter_data->tracer, lower_parameter);
d237 1
a237 3
					fprintf (stderr, 
			"Error: wrong parameter (%s) for keyword (acquisition) in parameter file %s.\n",
					parameter, parameter_file);
d283 1
a283 3
					fprintf (stderr, 
			"Error: wrong parameter (%s) for keyword (mskimg) in parameter file %s.\n",
					parameter, parameter_file);
d363 11
@


1.8
log
@Check parameter for mskimg.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.7 1993/08/06 19:35:39 ty7777 Exp ty7777 $*/
d3 3
d76 1
a76 1
static char rcsid []= "$Id: readparm.c,v 1.7 1993/08/06 19:35:39 ty7777 Exp ty7777 $";
d212 7
d263 2
a264 2
					"Error: wrong parameter for keyword (mskimg) in file %s.\n",
					parameter_file);
@


1.7
log
@Change parmaeters for mskimg.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.6 1993/07/30 16:54:07 ty7777 Exp ty7777 $*/
d3 3
d73 1
a73 1
static char rcsid []= "$Id: readparm.c,v 1.6 1993/07/30 16:54:07 ty7777 Exp ty7777 $";
d249 7
@


1.6
log
@Added parameter "slices".
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.5 1993/07/28 19:24:32 ty7777 Exp ty7777 $*/
d3 3
d70 1
a70 1
static char rcsid []= "$Id: readparm.c,v 1.5 1993/07/28 19:24:32 ty7777 Exp ty7777 $";
d235 1
a235 1
				if (strncmp (lower_parameter, "mask_control", 12) == 0)
d239 1
a239 1
				else if (strncmp (lower_parameter, "mask_specified", 14) == 0)
@


1.5
log
@Adding rcsid.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.4 1993/07/23 20:00:23 ty7777 Exp ty7777 $*/
d3 3
d67 1
a67 1
static char rcsid []= "$Id$";
d83 2
d124 16
@


1.4
log
@change strchr to strncmp for checking comment lines.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.3 1993/07/23 15:38:37 ty7777 Exp ty7777 $*/
d3 3
d63 2
@


1.3
log
@Adding imgmean related parameters.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.2 1993/07/21 19:20:44 ty7777 Exp ty7777 $*/
d3 3
d35 1
d96 1
a96 1
			if (strchr (label, '#') != NULL)
@


1.2
log
@Changing finfo to parameter_data.
@
text
@d1 1
a1 1
/*$Id: readparm.c,v 1.1 1993/07/06 18:13:49 ty7777 Exp ty7777 $*/
d3 3
d62 1
d68 2
d75 5
d81 7
d98 1
a98 1
			if (strncmp (lower_label, "species:", 8) == 0)
d100 14
d118 1
a118 1
			if (strncmp (lower_label, "tracer:", 7) == 0)
d199 87
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
/*$Id$*/
/*$Log$*/
d10 1
a10 1
  Function:	int readparm (char *parameter_file, struct INFO_TYPE *finfo)
d12 3
a14 5
  Arguments:   parameter_file, file containing image parameters, passed in.
               finfo, a structure defined in 
							 /usr/local/include/petutil/petutil.h.
               returned.
               num_image_list, total number of list in file, returned.
d16 2
a17 2
  Description: This function reads an image list file and put the information 
							 it contains in an array of structures.
d19 1
a19 1
  Return:      SUCCEED for successful; FAIL for error.
d21 2
a22 2
  Reminder:    Every real number should contain at least a decimal point. 
							 The sxr file extension should start with a letter.
d24 2
a25 2
	Creator:     Tom Yang
  History:	   Created by Tom Yang on 05/18/93. 
a27 1

d29 1
a29 2
#include <petutil/chklist.h>
#include <petutil/archive.h>
d31 26
a56 5
PUBLIC int readparm (parameter_file, finfo, species, tracer) 
	char							*parameter_file;
	struct INFO_TYPE	*finfo;
	char							*species;
	char							*tracer;
d64 3
a66 2
	int		cat;
	int		type;
a69 6
	if (fgets (line, MAXLINE, fp) == NULL)
	{
		fprintf (stderr, "The parameter file %s is empty.\n", parameter_file);
		return FAIL;
	}

d74 4
a77 1
			lower_label			= Lowered (label, strlen (label));
d83 2
a84 2
						strncmp (lower_parameter, "m", 1) == 0)
          strcpy (species, lower_parameter);
d89 4
a92 4
						strncmp (lower_parameter, "co", 1) == 0 ||
						strncmp (lower_parameter, "oo", 1) == 0 ||
						strncmp (lower_parameter, "bu", 1) == 0)
          strcpy (tracer, lower_parameter);
d97 1
a97 1
          cat	= INDIVIDUAL;
d99 1
a99 1
          cat	= COMPOSITE;
d101 1
a101 2
          cat	= PHANTOM;
				finfo->cat	= cat;
d103 1
a103 1
			else if (strncmp (lower_label, "type:", 5) == 0)
d105 4
a108 2
				if (strncmp (lower_parameter, "pet_data", 8) == 0)
          type	= PET_DATA;
d110 1
a110 1
          type	= PET_IMAGE;
d112 1
a112 1
          type	= MRI_DATA;
d114 1
a114 6
          type	= MRI_IMAGE;
				else if (strncmp (lower_parameter, "ascii", 5) == 0)
          type	= ASCII;
				else if (strncmp (lower_parameter, "binary", 5) == 0)
          type	= BINARY;
				finfo->type	= type;
d119 4
a122 2
						strncmp (lower_parameter, "953", 3) == 0)
          strcpy (finfo->attr.scanner, parameter);
d126 15
a140 6
				if (strncmp (lower_parameter, "low", 3) == 0 ||
						strncmp (lower_parameter, "high", 4) == 0 ||
						strncmp (lower_parameter, "sta", 3) == 0 ||
						strncmp (lower_parameter, "wob", 3) == 0 ||
						strncmp (lower_parameter, "3d", 2) == 0)
          strcpy (finfo->attr.acq, parameter);
d144 16
a159 6
				if (strncmp (lower_parameter, "fbold", 5) == 0 ||
						strncmp (lower_parameter, "fb", 2) == 0 ||
						strncmp (lower_parameter, "ml", 2) == 0 ||
						strncmp (lower_parameter, "fbdgp", 5) == 0 ||
						strncmp (lower_parameter, "3dbp", 4) == 0)
          strcpy (finfo->attr.recon, parameter);
d161 1
a161 1
			else if (strncmp (lower_label, "filter:", 7) == 0)
d164 3
a166 5
						strncmp (lower_parameter, "filterf", 7) == 0 ||
						strncmp (lower_parameter, "ramp", 4) == 0 ||
						strncmp (lower_parameter, "gaussian", 8) == 0 ||
						strncmp (lower_parameter, "butterworth", 11) == 0)
          strcpy (finfo->attr.fltr, parameter);
@
