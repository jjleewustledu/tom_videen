head	1.6;
access;
symbols;
locks; strict;
comment	@ * @;


1.6
date	95.09.08.21.39.36;	author ty7777;	state Exp;
branches;
next	1.5;

1.5
date	95.06.30.15.21.49;	author ty7777;	state Exp;
branches;
next	1.4;

1.4
date	94.01.24.20.08.05;	author ty7777;	state Exp;
branches;
next	1.3;

1.3
date	93.06.03.19.38.10;	author ty7777;	state Exp;
branches;
next	1.2;

1.2
date	93.05.20.15.10.38;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	92.04.28.17.58.26;	author ty7777;	state Exp;
branches;
next	;


desc
@View25d C Source Code 
@


1.6
log
@Updated to introduce atlas 2.
@
text
@/*$Id: colormap.c,v 1.5 1995/06/30 15:21:49 ty7777 Exp ty7777 $*/
/*$Log: colormap.c,v $
 * Revision 1.5  1995/06/30  15:21:49  ty7777
 * Before making further changes, tow independent color bars worked.
 **/

/*___________________________________________________________________________	
File Name:	colormap.c

Function Name:	ImageColormap (Display *display, Window window, 
			char *image1ColorTable, char *image2ColorTable)

Description:	Support function for changing color maps.

Author:		Tom Yang, 07/17/91
____________________________________________________________________________*/

#include <X11/Xatom.h>
#include <X11/X.h>
#include <X11/Xlib.h>
#include <X11/Xutil.h>
#include <stdio.h>
#include <fcntl.h>
#include <values.h>

#include <petutil/package.h>
#include "portal.h"

static char rcsid [] = "$Header: /data/petsun4/src/view25d/RCS/colormap.c,v 1.5 1995/06/30 15:21:49 ty7777 Exp ty7777 $";

PUBLIC void ImageColormap (display, window, image1ColorTable, image2ColorTable)
Display	*display;
Window	window;
char	*image1ColorTable;
char	*image2ColorTable;
{
	Colormap 	cmap;
	Colormap 	dcmap;
	FILE 		*fp;
	Visual 		*visual;
	XColor 		temp;
	int		blue;
	int		green;
  	int 		i;
	int		red;
	int 		screen;
    
	screen		= DefaultScreen (display);
	visual		= XDefaultVisual (display, screen);
	dcmap		= XDefaultColormap (display, screen);

	cmap		= XCreateColormap (display, window, visual, AllocAll);
	temp.flags	= DoRed | DoGreen | DoBlue;

	/*
	 * Copy the default color map.
	 */
	for (i = 0; i < PET_COLOR_START - 20; i++)
	{
		temp.pixel = i;
		XQueryColor (display, dcmap, &temp);
		XStoreColor (display, cmap, &temp);
	}

	/*
	 * Read the image 2 color table.
	 */
	fp = fopen (image2ColorTable, "r");
	if (fp == NULL) 
	{
		fprintf (stderr, "open: can not find color table %s\n", image2ColorTable);
		exit (1);
	}

	for (i = PET_COLOR_START - 20; i < PET_COLOR_START; i++)
	{
		fscanf (fp, "%x %x %x", &red, &green, &blue);

		temp.pixel	= i;
		temp.red	= red;
		temp.green	= green;
		temp.blue	= blue;

		XStoreColor (display, cmap, &temp);
	}

	fclose (fp);

	/*
	 * Read the image 1 color table.
	 */
	fp = fopen (image1ColorTable, "r");
	if (fp == NULL) 
	{
		fprintf (stderr, "open: can not find color table %s\n", image1ColorTable);
		exit (1);
	}

	for (i = PET_COLOR_START; i < PET_COLOR_START + NCOLORS; i++) 
	{
		fscanf (fp, "%x %x %x", &red, &green, &blue);

		temp.pixel	= i;
		temp.red	= red;
		temp.green	= green;
		temp.blue	= blue;

		XStoreColor (display, cmap, &temp);
	}		
	fclose (fp);

	i		= PET_COLOR_START + NCOLORS;
	temp.pixel	= i;
	temp.red	= rgbBackground.red;
	temp.green	= rgbBackground.green;
	temp.blue	= rgbBackground.blue;
	XStoreColor (display, cmap, &temp);

	temp.pixel	= i + 1;
	temp.red	= rgbAtlas1.red;
	temp.green	= rgbAtlas1.green;
	temp.blue	= rgbAtlas1.blue;
	XStoreColor (display, cmap, &temp);

	temp.pixel	= i + 2;
	temp.red	= rgbAtlas2.red;
	temp.green	= rgbAtlas2.green;
	temp.blue	= rgbAtlas2.blue;
	XStoreColor (display, cmap, &temp);

	temp.pixel	= i + 3;
	temp.red	= rgbLabel.red;
	temp.green	= rgbLabel.green;
	temp.blue	= rgbLabel.blue;
	XStoreColor (display, cmap, &temp);

	XSetWindowColormap (display, window, cmap); 
	view25dColormap	= cmap;
}
@


1.5
log
@Before making further changes, tow independent color bars worked.
@
text
@d1 5
a5 2
/*$Id$*/
/*$Log$*/
d29 1
a29 1
static char rcsid [] = "$Header$";
d120 3
a122 3
	temp.red	= rgbAtlas.red;
	temp.green	= rgbAtlas.green;
	temp.blue	= rgbAtlas.blue;
d126 6
@


1.4
log
@Same as the last one.
@
text
@d1 3
d5 1
a5 2
	File Name:
		colormap.c
d7 6
a12 5
	Description:
		Support functions for changing color maps.
	Author:
		Tom (Tongzeng) Yang
		07/17/91
a14 1

d26 3
a28 1
PUBLIC void PetColormap (display, window, colorTableName)
d31 2
a32 1
char	*colorTableName;
d34 10
a43 11

	int 			screen;
	Visual 			*visual;
  	int 			i;
	int			red;
	int			green;
	int			blue;
	Colormap 		cmap;
	Colormap 		dcmap;
	FILE 			*fp;
	XColor 			temp;
d45 3
a47 3
  	screen	= DefaultScreen (display);
	visual	= XDefaultVisual (display, screen);
	dcmap	= XDefaultColormap (display, screen);
d49 2
a50 1
	cmap	= XCreateColormap (display, window, visual, AllocAll);
d52 9
a60 1
	fp = fopen (colorTableName, "r");
d62 4
d68 1
a68 1
		fprintf (stderr, "open: can not find color table %s\n", colorTableName);
d72 3
a74 1
	temp.flags  = DoRed | DoGreen | DoBlue;
d76 5
a80 4
	for (i = 0; i < PET_COLOR_START; i++)
	{
		temp.pixel = i;
		XQueryColor (display, dcmap, &temp);
d84 7
a90 1
	for (i = 0; i < NCOLORS; i++) 
d92 6
d100 1
a100 1
		temp.pixel	= PET_COLOR_START + i;
@


1.3
log
@Delete dynamic region color change.
@
text
@@


1.2
log
@Same as the last one.
@
text
@a90 6
	temp.red	= rgbRegion.red;
	temp.green	= rgbRegion.green;
	temp.blue	= rgbRegion.blue;
	XStoreColor (display, cmap, &temp);

	temp.pixel	= i + 3;
@


1.1
log
@Initial revision
@
text
@@
