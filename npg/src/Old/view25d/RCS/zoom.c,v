head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	92.12.07.20.45.15;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	92.04.28.17.58.26;	author ty7777;	state Exp;
branches;
next	;


desc
@View25d C Source Code First Version.
@


1.2
log
@Change protection.
@
text
@#include <stdlib.h>

static unsigned int *BuildIndex (width, zoom, rwidth)
	unsigned int	width;
	float		zoom;
	unsigned int	rwidth;
{ 
	unsigned int	*index;
	unsigned int	i;

	index	= (unsigned int *) malloc (sizeof (unsigned int) * rwidth);

	for (i = 0; i < rwidth; i++)
	{
		*(index + i)	= (float) i / zoom;
	}

	return (index);
}

void zoom (oimage, owidth, oheight, xzoom, yzoom, xwidth, ywidth, nimage)
	register short	*oimage;	/* Input image to be interpolated or expanded */	
	unsigned int	owidth;
	unsigned int	oheight;
	float		xzoom;
	float		yzoom;
	unsigned int	xwidth, ywidth;
	register short	*nimage;	/* Output image */	
{
	unsigned int	*xindex, *yindex;
	unsigned int	i, j;
	unsigned int	row_index;

	xindex	= BuildIndex (owidth, xzoom, xwidth);
	yindex	= BuildIndex (oheight, yzoom, ywidth);

	for (j = 0; j < ywidth; j++) 
	{
		row_index	= *(yindex + j) * owidth;
		for (i = 0; i < xwidth; i++) 
		{
			*nimage	= oimage [row_index + *(xindex + i)];
			nimage++;
		}
	}

	free (xindex);
	free (yindex);
}
@


1.1
log
@Initial revision
@
text
@@
