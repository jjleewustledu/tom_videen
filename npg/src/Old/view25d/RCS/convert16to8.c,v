head	1.4;
access;
symbols;
locks; strict;
comment	@ * @;


1.4
date	95.07.07.17.11.48;	author ty7777;	state Exp;
branches;
next	1.3;

1.3
date	93.11.02.16.51.35;	author ty7777;	state Exp;
branches;
next	1.2;

1.2
date	93.10.22.20.38.54;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	92.04.28.17.58.26;	author ty7777;	state Exp;
branches;
next	;


desc
@
View25d C Source Code First Version.
@


1.4
log
@Two data sets works correctly.
@
text
@/*$Id: convert16to8.c,v 1.3 1993/11/02 16:51:35 ty7777 Exp ty7777 $*/
/*$Log: convert16to8.c,v $
 * Revision 1.3  1993/11/02  16:51:35  ty7777
 * Make the negative scale works correctly.
 *
 * Revision 1.2  1993/10/22  20:38:54  ty7777
 * Allow minimum to be clipped.
 **/

/*_________________________________________________________________________________	
	convert16to8.c

	Description:
		Convert pet pixel values (two bytes) into color cells with
		value between 0 and 255.
 	Author:	
		Tom (Tongzeng) Yang
		04/29/91

	Modifications:

	Pending:
		All comments which include the string "FIX" have information
		on current limitation, bugs, or noted problems.

___________________________________________________________________________________*/

#include <values.h>
#include <petutil/package.h>
#include "portal.h"

static char rcsid [] = "$Header: /data/petsun4/src/view25d/RCS/convert16to8.c,v 1.3 1993/11/02 16:51:35 ty7777 Exp ty7777 $";

PUBLIC void Convert16to8 (old, x, y, new, min_pet_value, max_pet_value, 
auto_image_value_flag, image_value_flag)
	short	*old;
	int	x;
	int	y;
	char	*new;
	short	*min_pet_value;
	short	*max_pet_value;
	char	auto_image_value_flag;
	char	image_value_flag;
{
	char	temp_cell;
	float	range;
	float	temp;
	int	i;
	int	nTempOld;
	long	dimension;
	short	max_value;
	short	min_value;

	min_value	= *min_pet_value; 
	max_value	= *max_pet_value; 
	RegularMinMax (auto_image_value_flag, image_value_flag, &min_value, &max_value);

	range		= (float) (max_value - min_value);
	
	dimension	= x * y;
	for (i = 0; i < dimension; i++) 
	{
		nTempOld	= old [i];
		if (nTempOld < min_value)
			nTempOld = min_value;
		else if (nTempOld > max_value)
			nTempOld = max_value;

		temp	= (nTempOld - min_value) / range;
		if (temp > 1.0)
			temp	= 1.0;
		if (temp < 0.0)
			temp	= 0.0;
		if (max_value <= 0)
			temp	= 1 - temp;
		temp		*= NCOLORS;
		temp_cell	= (char) temp;
		if (temp_cell >= NCOLORS)
			temp_cell	= NCOLORS - 1;
		if (temp_cell < 0)
			temp_cell	= 0;

		new [i]	= temp_cell;
	}
}
@


1.3
log
@Make the negative scale works correctly.
@
text
@d1 1
a1 1
/*$Id: convert16to8.c,v 1.2 1993/10/22 20:38:54 ty7777 Exp ty7777 $*/
d3 3
d32 1
a32 1
static char rcsid [] = "$Header: /home/petsun4/ty7777/src/view25d/RCS/convert16to8.c,v 1.2 1993/10/22 20:38:54 ty7777 Exp ty7777 $";
d34 2
a35 1
PUBLIC void Convert16to8 (old, x, y, new, min_pet_value, max_pet_value, pet_value_flag)
d42 2
a43 1
	char	pet_value_flag;
d56 1
a56 1
	RegularMinMax (pet_value_flag, &min_value, &max_value);
@


1.2
log
@Allow minimum to be clipped.
@
text
@d1 5
a5 2
/*$Id$*/
/*$Log$*/
d29 1
a29 1
static char rcsid [] = "$Header$";
d69 1
a69 1
		if (max_value == 0)
@


1.1
log
@Initial revision
@
text
@d1 2
d10 1
a10 1
	Author:
d26 10
a35 8
void		Convert16to8 (old, x, y, new, min_pet_value, max_pet_value, pet_value_flag)
short		*old;
int		x;
int		y;
char		*new;
short		*min_pet_value;
short		*max_pet_value;
char		pet_value_flag;
d37 1
a37 1
	int	i;
d40 1
d42 2
a43 1
	char	temp_cell;
a44 1
	short	max_value;
d46 2
a47 2
	min_value = *min_pet_value; 
	max_value = *max_pet_value; 
d50 1
a50 1
	range = (float) (max_value - min_value);
d52 2
a53 1
	for (i = 0; i < x * y; i++) 
d55 1
a55 1
		nTempOld = old[i];
d61 1
a61 1
		temp = (nTempOld - min_value) / range;
d63 1
a63 1
			temp = 1.0;
d65 1
a65 1
			temp = 0.0;
d67 3
a69 3
			temp = 1 - temp;
		temp *= NCOLORS;
		temp_cell = (char) temp;
d71 1
a71 1
			temp_cell = NCOLORS - 1;
d73 1
a73 1
			temp_cell = 0;
d75 1
a75 1
		new[i] = temp_cell;
@
