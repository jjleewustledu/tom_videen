head	1.1;
access;
symbols;
locks; strict;
comment	@c @;


1.1
date	97.09.23.15.42.49;	author tom;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  Subroutine:   R2SAVE.FTN
C
C  Author:       Tom O. Videen
C  Date:         12-Mar-87
C  Written For:  SPIDERAM Super PET Image Display Program
C
C  History:
C     Modified by TOV 15-Jul-87 to change record length of .REG
C        file from 256 to 80;
C     Modified by TOV 20-Jul-90 to save RSCANNER=1 as "128x128 2 mm";
C        (for Scanditronix PC2048, CTI ECAT-953B, and 128x128 PETT VI
C        images)
C     Modified by Tom Yang on Sep. 23, 1991 to write coordinates of
C        irregular regions to file when porting to Sun workstation.
C     Modified by Tom Yang 29-Dec-92 to save ECAT 953B images.
C
C  Intent:
C     This procedure saves all currently defined regions in a
C     disk file.
C
C     See REGFORM.TXT for a description of the file format.
C
C  Common Blocks from SPIDERAM.INC:
C     **LUINFO   - logical units (also /USRIO/)   (read only)
C     **REGION   - region analysis parameters     (read only)
C
C  Variables:
C     IOWRITE = used in SYSIO;
C         no. of records;
C     FNAME = file name
C     ERASE = set true if old file with same name is to be rewritten;
C
C  Uses:
C
C  TERMINAL.LIB
C     GTSTRING
C     YESNO
C
C  FORTRAN library
C     SYSIO
C
C  Called by:  M2REGION
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE R2SAVE
C
      INTEGER*4		IOWRITE, RTYPE, FIRST, I, J, K, L
      CHARACTER*10	ENDLIST, ONAME
      CHARACTER*14	SCNRNAME
      CHARACTER*20	FNAME
      CHARACTER*80	Q, STR
      LOGICAL*1		ERASE
      character*256 rcsheader
C
      INCLUDE 'spideram.inc'
      rcsheader = "$Id: r2save.f,v 1.6 1993/11/18 20:10:36 ty7777 Exp $"

      DATA	IOWRITE, RTYPE  /56, 20/
      DATA	ENDLIST   /'*END LIST*'/
C
C  Get the file name for storing the parameters
C
      STR	= ' '
100   Q		= 'File Name'
      CALL GTSTRING (Q, STR)
C
C  File must have .REG extension
C
      L	= IANYL (STR, '.')
      IF (L .NE. 0) THEN
	FNAME	= STR (1:L)//'reg'
      ELSE
	L	= INANYR (STR, ' ')
	FNAME	= STR (1:L)//'.reg'
      END IF
C
C  Check if the file exists
C
      OPEN (DISK, FILE = FNAME, STATUS = 'OLD', ERR = 110)
      TYPE *, '*** WARNING -- file exists ***'
      ERASE	= .FALSE.
      Q	= 'Do you want to rewrite the file'
      CALL YESNO (Q, ERASE)
      IF (ERASE) THEN
	CLOSE (DISK, STATUS = 'DELETE')
      ELSE
	CLOSE (DISK)
	GO TO 100
      END IF
C
C  If the file does not exist, open it
C
110   OPEN (DISK, FILE = FNAME, STATUS = 'NEW', ERR = 120)
      GO TO 200
120   L = INANYR (FNAME, ' ')
      WRITE (USEROUT, *) '*** ERROR -- cannot open file ',
     2        FNAME(1:L),' ***'
      GO TO 100
C
C  Write file type information, atlas (blank), and header
C
8000  FORMAT (I3, 5X, A10, 3X, A14, 3X, I2)
8100  FORMAT (A80)
8200  FORMAT (I3, 3X, A10, 5X, A1, F9.2, F8.2, F8.2, 3X, I4, 3X, I4)
C
200   IF (RORIENT .EQ. 'T') THEN
	ONAME	= 'TRANSVERSE'
      ELSE IF (RORIENT .EQ. 'C') THEN
	ONAME	= 'CORONAL'
      ELSE IF (RORIENT .EQ. 'S') THEN
	ONAME	= 'SAGITTAL'
      ELSE
	ONAME	= 'STRANGE'
      END IF
      IF (RSCANNER .EQ. 6) THEN
	SCNRNAME	= 'PETT 6'
      ELSE IF (RSCANNER .EQ. 7) THEN
	SCNRNAME	= 'SUPER PETT I'
      ELSE IF (RSCANNER .EQ. 8) THEN
	SCNRNAME	= 'SUPER PETT II'
      ELSE IF (RSCANNER .EQ. 1) THEN
	SCNRNAME	= '128x128 2 mm '
      ELSE IF (RSCANNER .EQ. 10) THEN
	SCNRNAME	= 'ECAT 953B'
      ELSE
	SCNRNAME	= 'UNKNOWN DEVICE'
      END IF
C
      WRITE (DISK, 8000) RTYPE, ONAME, SCNRNAME, RSLICES
      STR	= ' '
      WRITE (DISK, 8100) STR
      Q	= 'File Header'
      CALL GTSTRING (Q, STR)
      WRITE (DISK, 8100) STR
C
C  Write region information to disk
C
      DO 500 I = 1, 100
	IF (REGTYPE(I) .EQ. 'R' .OR. REGTYPE (I) .EQ. 'C') THEN
		WRITE (DISK, 8200) I, REGNAME(I), REGTYPE(I), FLOAT(SLICE(I)),
     2			XLOC(I), YLOC(I), AVAL(I), BVAL(I)
		LASTREGN = I
        ELSE IF (REGTYPE(I) .EQ. 'I') THEN
		WRITE (DISK, 8200) I, REGNAME(I), REGTYPE(I), FLOAT(SLICE(I)),
     2			XLOC(I), YLOC(I), AVAL(I), 0
		FIRST	= BVAL(I)
		LAST	= FIRST + AVAL (I) - 1
		WRITE (DISK, 8300) ((BOUNDARY (J, K), J = 1, 2), K = FIRST, LAST)
8300		FORMAT (40Z2.2)
		LASTREGN	= I
	END IF
500   CONTINUE
C
      WRITE (DISK, 8200) 0, ENDLIST, ' ', 0., 0., 0., 0, LASTREGN
      CLOSE (DISK)
      WRITE (USEROUT, *) 'Regions saved in ', FNAME
C
      RETURN
      END
@
