head	1.1;
access;
symbols;
locks; strict;
comment	@c @;


1.1
date	97.09.23.15.42.49;	author tom;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  Subroutine:   d2getimg.f
C
C  Author:       Tom O. Videen
C  Date:         04-Jun-87
C  Written For:  SPIDERAM Super PETT Image Display Program
C
C  History:
C     Modified 28-Jul-87 by TOV to read write-protected files;
C     Modified 06-Oct-87 by TOV to read PETTDCOR from HDR file
C        (PETT conversion factor with no decay correction);
C     Modified 12-Sep-88 by TOV to read PETT VI filter name from header.
C     Modified 14-Nov-89 by TOV to read Scanditronix PC2048-15B files
C        as PETT 8 images.
C     Modified 18-Apr-90 by TOV to read CTI ECAT-953B files
C        as PETT 8 images.
C     Modified 02-Oct-91 by Tom Yang to read metabolic header and
C        convert floating point numbers in os32 format to IEEE format.
C     Modified 14-Oct-91 by TOV to use Unix file names.
C        Replace GETIMAGE with GETUIMAGE.
C     Modified 15-Oct-91 by Tom Yang to use path names.
C        Deleted the INQUIRE part before GETUIMAGE can
C	     check file existence. Deleted logical variable EXISTS.
C     Modified 28-Apr-92 by Tom Yang to process ECAT images.
C     Modified 21-Aug-92 by Tom Yang to do no error checking
C	     for images with different slice numbers.
C     Modified 28-Oct-92 by Tom Yang to read either .HDR or .hdr files.
C
C  Intent:
C     This subroutine reads an image file.
C     If HDRONLY = true, only the header is read for the specified slice.
C     Otherwise, it gets one slice of an image from a disk file
C     and sets the scaler to 1.
C
C     Decoded and encoded PETT 6-8 images can be read (7-49 slices).
C        (PETT VI, Super PETT I and Super PETT IIH, ECAT).
C
C  Common Blocks from: SPIDERAM.INC
C     **IMAGEDAT - image arrays                   (write)
C     **LUINFO   - logical units (also /USRIO/)   (read only)
C     **DISPLAY  - display parameters             (write)
C     **FILES    - scan file list                 (write)
C
C  Passed Variables:
C     INUM = number of the image to get (1-5);
C     SLICENUM = number of the desired slice of the image (1-14);
C     FNM = scan file number to read (1-20);
C     HDRONLY = true--> read the header only;
C               false--> read the header and image;
C     ERRTYPE = type of error in processing images:
C       0 = no errors in processing;
C       6 = cannot read FILE(1);
C       7 = cannot read FILE(2);
C       8 = cannot read FILE(3);
C       9 = cannot read FILE(4);
C      10 = cannot read FILE(5);
C      17 = illegal scanner = SCANRERR;
C      18 = illegal number of slices in image = SLICERR;
C
C  Local Variables:
C     NUMSLCS  = no. of slices in the file (local variables used
C        to check with common NMSLICES);
C     NUMPETT  = local variable used to check with PETTNUM;
C
C  Uses:
C     GETUIMAGE
C
C  Called by:  D2PRCIMG
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE D2GETIMG (INUM, SLICENUM, FNM, ERRTYPE, HDRONLY)
C
      INTEGER*4     INUM, SLICENUM, FNM, ERRTYPE, NUMSLCS, 
     &              NUMPETT, PB (6)
      INTEGER*4     IOREAD, HBYTES, I, L1, L2, L3
      INTEGER*4     LENGTH, SLICECOUNTS
      INTEGER*4     READERR (5), SCANRERR, SLICERR, METCONST (11, 2)
      INTEGER*2	    IO (128), HEAD5, HEAD12
      REAL*4        HEAD18
      CHARACTER*4   HEAD11
      CHARACTER*8   HEAD2, HEAD3, HEAD10
      CHARACTER*10  HEAD6 
      CHARACTER*12  HEAD7
      CHARACTER*14  HEAD1
      CHARACTER*100 HDRNAME, UHDRNAME
      LOGICAL*1	    HDRONLY, ERROR
      character*256 rcsheader
      CHARACTER*10   EXPDATE
      CHARACTER*10   NUCLID
      CHARACTER*10   COMPND
      CHARACTER*12   FILTERNAME
C
C  Parameters in HDR files
C
      EQUIVALENCE (IO (1),  HEAD1),	! SCANNER
     2		(IO (8),  HEAD2),		! SCANNAME
     3		(IO (12), HEAD3),		! SCANDATE
     4		(IO (17), HEAD5),		! SCANTIME
     5		(IO (18), HEAD6),		! COMPOUND
     6		(IO (23), HEAD7),		! FILTER
     7		(IO (31), HEAD10)		! PROCDATE
      EQUIVALENCE (IO (35), HEAD11),! INITIALS
     2		(IO (37), HEAD12),		! NTYPE
     3		(IO (49), HEAD18),		! SCANLEN
     4		(IO (55), METCONST)		! Metabolic Conversion Constants

      INCLUDE 'spideram.inc'
      rcsheader = "$Id: d2getimg.f,v 1.9 1995/12/12 20:42:02 tom Exp $"

      DATA IOREAD /88/
      DATA HBYTES /256/
      DATA READERR, SCANRERR, SLICERR /6, 7, 8, 9, 10, 17, 18/

C  Check existence of file

      ERRTYPE	= 0

C  Read Image Slice and/or Header

      CALL GETUIMAGE (IMAGE(1, 1, INUM), FILENAME(FNM), IMGVOL, SLICENUM, NUMSLCS, NUMPETT,
     &     NUCLID, LENGTH, COMPND, EXPDATE, SLICECOUNTS, FILTERNAME, ERROR)

      IF (ERROR) THEN
          ERRTYPE = READERR (INUM) 
          RETURN
      END IF
      FILE (INUM) = FNM
      NUCLIDE (INUM) = NUCLID
      SCANLEN(INUM) = LENGTH
      COMPOUND(INUM) = COMPND
      SCANDATE(INUM) = EXPDATE
      SLCOUNTS(INUM, SLICENUM)= SLICECOUNTS
      FILTER(INUM)= FILTERNAME(1:8)

C  Compare PETT number and no. of slices with current scan file list

      IF (PETTNUM .EQ. 0) THEN
          PETTNUM = NUMPETT
          NMSLICES = NUMSLCS
      END IF

C  If read image, then initialize SCALER and CURSLICE

      IF (.NOT. HDRONLY) THEN
          SCALER (INUM) = 1.0
          CURSLICE = SLICENUM
      END IF

C  Check if there is a .HDR file

      L1 = INANYR (HDRVOL, ' ')
      L2 = IANYR (FILENAME(FNM), '/') + 1
      L3 = IANYR (FILENAME(FNM), '.') - 1
      IF (L3 .LE. 0) THEN
          L3 = INANYR (FILENAME (FNM), ' ')
      ENDIF
      IF (L1 .NE. 0) THEN
          HDRNAME  = HDRVOL (1: L1)//FILENAME (FNM) (L2:L3)//'.hdr'
          UHDRNAME = HDRVOL (1: L1)//FILENAME (FNM) (L2:L3)//'.HDR'
      ELSE
          HDRNAME  = FILENAME (FNM)(L2:L3)//'.hdr'
          UHDRNAME = FILENAME (FNM)(L2:L3)//'.HDR'
      END IF
      OPEN (DISK, FILE = HDRNAME, STATUS = 'OLD', ERR = 101)
      GO TO 400
101   OPEN (DISK, FILE = UHDRNAME, STATUS = 'OLD', ERR = 200)
      GO TO 400

C  Case: No .HDR file

200   HDRFILE (FNM)	= .FALSE.
      NTYPE (INUM)	= 0
      PROCDATE (FNM)	= '* NO HDR'
      PROCBY (FNM)	= 'FILE'
      DO 300 I = 1, 2
          PETTCONV (INUM, I)	= 0.0
          AFLOW (INUM, I)		= 0.0
          BFLOW (INUM, I)		= 0.0
          BVFACTOR (INUM, I)	= 0.0
          AOXYGEN (INUM, I)	= 0.0
          BOXYGEN (INUM, I)	= 0.0
          AWATER (INUM, I)	= 0.0
          BWATER (INUM, I)	= 0.0
          O2CNTS (INUM, I)	= 0.0
          OXYCONT (INUM, I)	= 0.0
          PETTDCOR (INUM, I)	= 0.0
300   CONTINUE
      L1 = IANYR(FILENAME(FNM), '/') + 1
      L2 = IANYR(FILENAME(FNM), '.') - 1
      IF (L2.LE.0) L2 = INANYR (FILENAME(FNM), ' ')
          SCANNAME(INUM) = FILENAME(FNM)(L1:L2)
      IF (PETTNUM .EQ. 6 .OR. PETTNUM .EQ. 10) THEN
          IF (PETTNUM .EQ. 6) THEN
              SCANNER = 'PETT VI'
          ELSE
              SCANNER = 'ECAT'
          ENDIF
      ELSE IF (PETTNUM .EQ. 7) THEN
          SCANNER = 'SUPER PETT I'
      ELSE IF (PETTNUM .EQ. 8 .OR. PETTNUM .EQ. 1) THEN
          IF (PETTNUM .EQ. 8) THEN
              SCANNER = 'SUPER PETT IIH'
          ELSE
              SCANNER = 'PC2048-15B    '
          END IF
      END IF
      RETURN

C  Case: .HDR file exists

400   HDRFILE(FNM) = .TRUE.
      CALL SYSIO (PB, IOREAD, DISK, IO, HBYTES, 0)
      CLOSE (DISK)
      SCANNER		= HEAD1
      SCANNAME (INUM)	= HEAD2
      SCANDATE (INUM)	= HEAD3
      COMPOUND (INUM)	= HEAD6
      FILTER (INUM)	= HEAD7
      PROCDATE (FNM)	= HEAD10
      PROCBY (FNM)	= HEAD11
      NTYPE (INUM)	= HEAD12
      SCANLEN (INUM)	= HEAD5
      DO 500 I = 1, 2
          PETTCONV (INUM, I) = PEFLOAT (METCONST (1, I))
          AFLOW (INUM, I)	 = PEFLOAT (METCONST (2, I))
          BFLOW (INUM, I)	 = PEFLOAT (METCONST (3, I))
          BVFACTOR (INUM, I) = PEFLOAT (METCONST (4, I))
          AOXYGEN (INUM, I)  = PEFLOAT (METCONST (5, I))
          BOXYGEN (INUM, I)  = PEFLOAT (METCONST (6, I))
          AWATER (INUM, I)   = PEFLOAT (METCONST (7, I))
          BWATER (INUM, I)   = PEFLOAT (METCONST (8, I))
          O2CNTS (INUM, I)   = PEFLOAT (METCONST (9, I))
          OXYCONT (INUM, I)  = PEFLOAT (METCONST (10, I))
          PETTDCOR (INUM, I) = PEFLOAT (METCONST (11, I))
500   CONTINUE

      RETURN
      END
@
