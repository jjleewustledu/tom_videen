head	1.1;
access;
symbols;
locks; strict;
comment	@c @;


1.1
date	97.09.23.15.42.49;	author tom;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  Subroutine:   D2BARLAB.FTN
C
C  Author:       Tom O. Videen
C  Date:         27-May-87
C  Written For:  SPIDERAM Super PETT Image Display Program
C
C  Intent:
C     This routine labels a color bar.
C
C  History:
C     Modified 06-Oct-87 by TOV to allow processing for tissue activity
C        either with or without decay correction; (PROCESS may be 0-5)
C     Modified by TOV 30-Dec-87:
C       1) Use SCANNAME(1) as file name.
C       2) Change label for rows of 7 when scaling to individual slice
C          maximum (SEPSCALE added to common block).
C     Modified 15-Sep-88 by TOV:
C        1) Incorporate % diff scaling into SCALER and eliminate factor
C           of 0.1 used formerly for percent difference images.
C        2) Add 'DIFF' to all labels when there is a subtrahend image.
C        3) Add '% DIFF' to all labels when there is a divisor image.
C     Modified 25-Sep-91 by Tom Yang for cleaning text area before
C       drawing text when porting to X Windows in Sun Workstation
C       environment.
C     Modified by TOV 26-Sep-91 for XSPIDERAM.
C
C  Common Blocks from SPIDERAM.INC:
C     **IMAGEDAT - image arrays                   (read only)
C     **LUINFO   - logical units (also /USRIO/)   (read only)
C     **DISPLAY  - display parameters             (read only)
C     **SCALES   - scaling parameters             (read only)
C     **FILES     - scan file list                (read only)
C
C  Variables Passed:
C     LENGTH,WIDTH = length and width of the color bar;
C
C  Internal Variables:
C     XST,YST = location to write to on the Ramtek;
C     SCAN = for horizontal labels;
C     DOWN = for vertical labels;
C     XSIZE,YSIZE = character size written in the color bar scale;
C     PLANE = planes in which to write the scale;
C     X,Y,Y1,Y2,Y3 = coordinates used to write color bar scale;
C     TEXT,STR = strings written to the color bar scale;
C     RTOPP,RMID,RBOT = scale labels at top, middle, and bottom
C        of scale for real numbered scale;
C     RMAX = maximum of RTOPP and RBOT;
C
C  Uses:
C
C  RAMUTY.LIB
C     RAMWRITE - writes text on the Ramtek;
C
C  FORTRAN runtime library
C     ENCODE
C     INANYR
C
C  Called by:  D2BAR
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE D2BARLAB (LENGTH, WIDTH)
C
      INTEGER*4     LENGTH, WIDTH, XST, YST, XSIZE, YSIZE, SCAN, PLANE,
     &              X, Y, Y1, Y2, Y3, L, L1, DOWN, TXTYSIZE
      REAL*4        RTOPP, RMID, RBOT, RMAX
      CHARACTER*1   TEXT (100)
      CHARACTER*14  BLANK
      CHARACTER*100 STR
      LOGICAL*1     SUB, DIVISOR
      character*256 rcsheader
C
      EQUIVALENCE (STR, TEXT)
C
      INCLUDE 'spideram.inc'
      DATA SCAN, DOWN, XSIZE, YSIZE, TXTYSIZE /0, 4, 1, 2, 24/
      rcsheader = "$Id: d2barlab.f,v 1.3 1993/10/04 21:55:32 tom Exp $"
C
      BLANK = '             ~'
      XST   = XBAR
      YST   = YBAR
      RBOT  = 0.0
      RMID  = 0.0
      RTOPP = 0.0
      PLANE = 2**12 - 1
C
      SUB       = .FALSE.
      DIVISOR   = .FALSE.
      IF (COMPARE) THEN
        IF (FILE (2) .NE. 0) SUB     = .TRUE.
        IF (FILE (3) .NE. 0) DIVISOR = .TRUE.
      END IF
C
8100  FORMAT (I5)
8201  FORMAT (F6.1)
8202  FORMAT (F6.2)
8203  FORMAT (F6.3)
C
C  Get values to write (RTOPP, RMID, and RBOT)
C
      IF (ABSSCALE) THEN
        IF (ABSRANGE) THEN
          RTOPP = ABSMAX
        ELSE
          RTOPP = FLOAT (DMAX) * SCALER (1)
        END IF
        RMID = RTOPP / 2.0
        RBOT = 0.0
      ELSE
        IF (SCALEPOS .EQ. 0) THEN
          IF (ABSRANGE) THEN
            RTOPP = RELMAX
          ELSE
            RTOPP = FLOAT (MAX0 (DMAX, IABS (DMIN))) * SCALER (1)
          END IF
          RMID = 0.0
          RBOT = -RTOPP
        ELSE IF (SCALEPOS .EQ. 1) THEN
          IF (ABSRANGE) THEN
            RTOPP = RELMAX
          ELSE
            RTOPP = FLOAT (DMAX) * SCALER (1)
            RMID  = RTOPP / 2.0
          END IF
          RBOT  = 0.0
        ELSE IF (SCALEPOS .EQ. - 1) THEN
          IF (ABSRANGE) THEN
            RBOT = -ABS (RELMAX)
          ELSE
            RBOT = FLOAT (DMIN) * SCALER (1)
          END IF
          RMID  = RBOT / 2.0
          RTOPP = 0.0
        END IF
      END IF
      RMAX = AMAX1 (ABS (RTOPP), ABS(RBOT))
C
C  Write label for a horizontal color bar (rows of 7 images)
C
      IF (MAG.EQ.2 .OR. MAG.EQ.3) THEN
        X = XST + LENGTH + 15
        IF (.NOT. SEPSCALE) THEN
          STR = 'MAX =          ~'
          IF (ABS (RMAX) .GE. 100.0) THEN
            WRITE (STR (7:80), 8100) NINT (RMAX)
          ELSE IF (ABS (RMAX) .GE. 10.0) THEN
            WRITE (STR (7:80), 8201) RMAX
          ELSE IF (ABS (RMAX) .GE. 1.0) THEN
            WRITE (STR (7:80), 8202) RMAX
          ELSE
            WRITE (STR (7:80), 8203) RMAX
          END IF
          L = INANYR (STR, ' ')
          STR (L + 1:L + 1)       = '~'
        ELSE
          STR = '               ~'
        END IF
        CALL RAMWRITE (X,YST,XSIZE,YSIZE,SCAN,PLANE,RMD,TEXT,FONT1C)
C
C  Scan Name for rows of 7
C
        X  = 40
        STR = SCANNAME (1)
        STR (9:9) = '~'
        CALL RAMWRITE (X,YST,XSIZE,YSIZE,SCAN,PLANE,RMD,TEXT,FONT1C)
C
C  Annotation for rows of 7
C
        IF (ANNOTATE) THEN
          X = XST + LENGTH + 190
          IF (PROCESS .EQ. 0) THEN
            IF (DIVISOR) THEN
              STR = '% DIFF CNTS~'
            ELSE IF (SUB) THEN
              STR = 'PETT DIFF  ~'
            ELSE
              STR = 'PETT COUNTS~'
            END IF
          ELSE IF (PROCESS .EQ. 1) THEN
            IF (NTYPE (1) .EQ. 2 .OR. NTYPE (1) .EQ. 4) THEN
              IF (DIVISOR) THEN
                STR  = '% DIFF CBF ~'
              ELSE IF (SUB) THEN
                STR  = 'CBF DIFF   ~'
              ELSE
                STR  = 'CBF        ~'
              END IF
            ELSE IF (NTYPE (1) .EQ. 3) THEN
              IF (DIVISOR) THEN
                STR  = '% DIFF CBV ~'
              ELSE IF (SUB) THEN
                STR  = 'CBV DIFF   ~'
              ELSE
                STR  = 'CBV        ~'
              END IF
            ELSE
              RETURN
            END IF
          ELSE IF (PROCESS .EQ. 2) THEN
            IF (DIVISOR) THEN
              STR = '% DIFF OEF ~'
            ELSE IF (SUB) THEN
              STR = 'OEF DIFF   ~'
            ELSE
              STR = 'OEF        ~'
            END IF
          ELSE IF (PROCESS .EQ. 3) THEN
            IF (DIVISOR) THEN
              STR = '%DIFF CMRO2~'
            ELSE IF (SUB) THEN
              STR = 'CMRO2 DIFF ~'
            ELSE
              STR = 'CMRO2      ~'
            END IF
          ELSE IF (PROCESS .EQ. 4 .OR. PROCESS .EQ. 5) THEN
            IF (DIVISOR) THEN
              STR = '% DIFF CPS ~'
            ELSE IF (SUB) THEN
              STR = 'CPS/ML DIFF~'
            ELSE
              STR = 'CPS/ML     ~'
            END IF
          ELSE
            RETURN
          END IF
          CALL RAMWRITE (X,YST,XSIZE,YSIZE,SCAN,PLANE,RMD,TEXT,FONT1C)
        END IF
        RETURN
C
C  Write 3 scales labels for a vertical color bar
C
      ELSE
        X = XST + WIDTH + 5
        Y1 = YST
        Y2 = YST + (LENGTH - 9 * YSIZE) / 2
        Y3 = YST +  LENGTH - 9 * YSIZE
      END IF
      STR = '12345678'
      CALL RAMCLEAR (X,Y1,SCAN,TEXT,8,FONT1C)
      CALL RAMCLEAR (X,Y2,SCAN,TEXT,8,FONT1C)
      CALL RAMCLEAR (X,Y3,SCAN,TEXT,8,FONT1C)
C
C
C  Label at top of scale
C
      STR       = ' '
      IF (ABS (RMAX) .GE. 100.0) THEN
        WRITE (STR, 8100) NINT (RTOPP)
      ELSE IF (ABS (RMAX) .GE. 10.0) THEN
        WRITE (STR, 8201) RTOPP
      ELSE IF (ABS (RMAX) .GE. 1.0) THEN
        WRITE (STR, 8202) RTOPP
      ELSE
        WRITE (STR, 8203) RTOPP
      END IF
      L1 = INANYL (STR, ' ')
      L = INANYR (STR, ' ')
      STR (L + 1:L + 1) = '~'
      CALL RAMWRITE (X,Y1,XSIZE,YSIZE,SCAN,PLANE,RMD,STR(L1:L),FONT1C)
C
C  Label at middle of scale
C
      STR = ' '
      IF (ABS (RMAX) .GE. 100.0) THEN
        WRITE (STR, 8100) NINT (RMID)
      ELSE IF (ABS (RMAX) .GE. 10.0) THEN
        WRITE (STR, 8201) RMID
      ELSE IF (ABS (RMAX) .GE. 1.0) THEN
        WRITE (STR, 8202) RMID
      ELSE
        WRITE (STR, 8203) RMID
      END IF
      L1 = INANYL (STR, ' ')
      L = INANYR (STR, ' ')
      STR (L + 1:L + 1) = '~'
      CALL RAMWRITE (X,Y2,XSIZE,YSIZE,SCAN,PLANE,RMD,STR(L1:L),FONT1C)
C
C  Label at bottom of scale
C
      STR = ' '
      IF (ABS(RMAX) .GE. 100.0) THEN
        WRITE (STR, 8100) NINT (RBOT)
      ELSE IF (ABS (RMAX) .GE. 10.0) THEN
        WRITE (STR, 8201) RBOT
      ELSE IF (ABS (RMAX) .GE. 1.0) THEN
        WRITE (STR, 8202) RBOT
      ELSE
        WRITE (STR, 8203) RBOT
      END IF
      L1 = INANYL (STR, ' ')
      L = INANYR (STR, ' ')
      STR (L + 1:L + 1) = '~'
      CALL RAMWRITE (X,Y3,XSIZE,YSIZE,SCAN,PLANE,RMD,STR(L1:L),FONT1C)
C
C  Label to the left of the color bar
C
      IF (PROCESS .EQ. 0) THEN
        IF (MAG.EQ.1 .OR. MAG.EQ.7) THEN
          IF (DIVISOR) THEN
            STR = '% DIFF PETT COUNTS~'
          ELSE IF (SUB) THEN
            STR = 'PETT COUNTS DIFF~'
          ELSE
            STR = 'PETT COUNTS~'
          END IF
        ELSE
          IF (DIVISOR) THEN
            STR = '% DIFF CNTS~'
          ELSE IF (SUB) THEN
            STR = 'PETT DIFF~'
          ELSE
            STR = 'PETT CNTS~'
          END IF
        END IF
      ELSE IF (PROCESS .EQ. 1) THEN
        IF (NTYPE (1) .EQ. 2 .OR. NTYPE (1) .EQ. 4) THEN
          IF (DIVISOR) THEN
            STR = '% DIFF CBF~'
          ELSE IF (SUB) THEN
            STR = 'CBF DIFF~'
          ELSE
            STR = 'CBF~'
          END IF
        ELSE IF (NTYPE (1) .EQ. 3) THEN
          IF (DIVISOR) THEN
            STR = '% DIFF CBV~'
          ELSE IF (SUB) THEN
            STR = 'CBV DIFF~'
          ELSE
            STR = 'CBV~'
          END IF
        ELSE
          RETURN
        END IF
      ELSE IF (PROCESS .EQ. 2) THEN
        IF (DIVISOR) THEN
          STR = '% DIFF OEF~'
        ELSE IF (SUB) THEN
          STR = 'OEF DIFF~'
        ELSE
          STR = 'OEF~'
        END IF
      ELSE IF (PROCESS .EQ. 3) THEN
        IF (DIVISOR) THEN
          STR = '% DIFF CMRO2~'
        ELSE IF (SUB) THEN
          STR = 'CMRO2 DIFF~'
        ELSE
          STR = 'CMRO2~'
        END IF
      ELSE IF (PROCESS .EQ. 4 .OR. PROCESS .EQ. 5) THEN
        IF (MAG.EQ.1 .OR. MAG.EQ.7) THEN
          IF (DIVISOR) THEN
            STR = '% DIFF ACTIVITY~'
          ELSE IF (SUB) THEN
            STR = 'ACTIVITY DIFF~'
          ELSE
            STR = 'TISSUE ACTIVITY~'
          END IF
        ELSE
          IF (DIVISOR) THEN
            STR = '% DIFF ACTIV~'
          ELSE IF (SUB) THEN
            STR = 'ACTIV DIFF~'
          ELSE
            STR = 'ACTIVITY~'
          END IF
        END IF
      ELSE
        RETURN
      END IF
      L = IANYL (STR, '~')
      IF (L .GT. 0) THEN
        X = XST - 15
C        Y = YST + (LENGTH - L * YSIZE * 9) / 2
        Y = YST + (LENGTH - L * TXTYSIZE) / 2
        CALL RAMWRITE (X,Y,XSIZE,YSIZE,DOWN,PLANE,RMD,TEXT,FONT1C)
      END IF
C
C  Label below the color bar
C
      IF (MAG.EQ.1 .OR. MAG.EQ.7) THEN
        IF (DIVISOR) THEN
          STR = BLANK
        ELSE IF (PROCESS .EQ. 0) THEN
          STR = BLANK
        ELSE IF (PROCESS .EQ. 1) THEN
          IF (NTYPE (1) .EQ. 2 .OR. NTYPE (1) .EQ. 4) THEN
            STR = 'ML/(MIN*100G)~'
          ELSE IF (NTYPE(1) .EQ. 3) THEN
            STR = 'ML/100G~'
          ELSE
            STR = BLANK
          END IF
        ELSE IF (PROCESS .EQ. 2) THEN
          STR = BLANK
        ELSE IF (PROCESS .EQ. 3) THEN
          STR = 'ML/(MIN*100G)~'
        ELSE IF (PROCESS .EQ. 4 .OR. PROCESS .EQ. 5) THEN
          STR = 'CPS/ML~'
        ELSE
          STR = BLANK
        END IF
        L = IANYL (STR, '~')
        IF (L .GT. 0) THEN
          X= XST + (WIDTH - L * XSIZE * 7) / 2
          Y = YST + LENGTH + 15
          CALL RAMWRITE (X,Y,XSIZE,YSIZE,SCAN,PLANE,RMD,TEXT,FONT1C)
        END IF
      END IF
C
      RETURN
      END
@
