head	1.1;
access;
symbols;
locks; strict;
comment	@c @;


1.1
date	97.09.23.15.42.49;	author tom;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  Subroutine:   R2ALTER.FTN
C
C  Author:       Tom O. Videen
C  Date:         21-May-87
C  Written For:  SPIDERAM Super PETT Image Display Program
C
C  Intent:
C     Alter the size of a RECTANGULAR region.
C
C  NOTES:
C     (1) Cannot move the edge of a region beyond the edges of
C       the currently displayed image.
C     (2) X- and Y-dimensions may be altered independently.
C     (3) When both x- and y-dimensions are to be increased and
C       one dimension cannot be increased, the other dimension
C       may still be increased (changing the shape of the rectangle).
C     (4) When incrementing the size of a region by odd-values (i.e.,
C       1,3,5,...) the location of the region shifts by 0.5 pixel.
C       When shifting from a value which is xx.5, the shift is to the
C         lower value xx.0 (truncation).
C       When shifting from a value which is xx.0, the shift is to the
C         higher value xx.5 (addition of 0.5).
C
C  Common Blocks from SPIDERAM.INC:
C     **DISPLAY  - display parameters             (read only)
C     **REGION   - region analysis parameters     (write)
C
C  Variables:
C     TXLOC,TYLOC = temporary values for XLOC and YLOC;
C     TXMIN,TXMAX = temporary values for XMIN and XMAX;
C     TYMIN,TYMAX = temporary values for YMIN and YMAX;
C     TA,TB = temporary values for AVAL and BVAL;
C
C  Uses:
C
C  SPIDERAM.LIB
C     P2RECT   - draws a rectangle
C     P2NORECT - erases a rectangle
C
C  Called by:  M2REGION
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE R2ALTER(N,X,Y)
C
      INTEGER*2  X,Y,TXMIN,TXMAX,TYMIN,TYMAX,TA,TB
      INTEGER*4  N
      REAL       TXLOC,TYLOC,CRIT
      character*256 rcsheader
C
      INCLUDE 'spideram.inc'
      rcsheader = "$Id: r2alter.f,v 1.3 1993/10/04 21:55:32 tom Exp $"

      DATA CRIT /0.25/
C
      IF (REGTYPE(N).NE.'R') RETURN
      CALL P2NORECT(N,REGPLANE)
C
C  Get new x-values and check if allowed
C
      IF (ALTERX) THEN
        TA = AVAL(N) + X
        IF (MOD(INT(INC),2).EQ.0) THEN
          TXLOC = XLOC(N)
        ELSE IF (XLOC(N)-FLOAT(INT(XLOC(N))).GT.CRIT) THEN
          TXLOC = FLOAT(INT(XLOC(N)))
        ELSE
          TXLOC = XLOC(N) + 0.5
        END IF
        TXMIN = NINT(TXLOC - FLOAT(TA)/2. + 0.5)
        TXMAX = TXMIN + TA - 1
        IF (TXMIN.LT.XLOW .AND. TXMAX.GT.XHIGH) GO TO 100
        IF (TXMAX-TXMIN.LT.0) GO TO 100
        AVAL(N) = TA
        XMIN(N) = TXMIN
        XMAX(N) = TXMAX
        XLOC(N) = TXLOC
      END IF
C
C  Get new y-values and check if allowed
C
100   IF (ALTERY) THEN
        TB = BVAL(N) + Y
        IF (MOD(INT(INC),2).EQ.0) THEN
          TYLOC = YLOC(N)
        ELSE IF (YLOC(N)-FLOAT(INT(YLOC(N))).GT.CRIT) THEN
          TYLOC = FLOAT(INT(YLOC(N)))
        ELSE
          TYLOC = YLOC(N) + 0.5
        END IF
        TYMIN = NINT(TYLOC - FLOAT(TB)/2. + 0.5)
        TYMAX = TYMIN + TB - 1
        IF (TYMAX-TYMIN.LT.0) GO TO 200
        IF (ORIENT.EQ.'T') THEN
          IF (TYMIN.LT.YLOW .OR. TYMAX.GT.YHIGH) GO TO 200
        ELSE
          IF (TYMIN.LT.1) GO TO 200
          IF (SMOOTH) THEN
            IF (TYMAX.GT.(SLICES-1)*SLCLINES+1) GO TO 200
          ELSE
            IF (TYMAX.GT.SLICES*SLCLINES) GO TO 200
          END IF
        END IF
        BVAL(N) = TB
        YMIN(N) = TYMIN
        YMAX(N) = TYMAX
        YLOC(N) = TYLOC
      END IF
C
200   CALL P2RECT(N,REGPLANE)
C
      RETURN
      END
@
