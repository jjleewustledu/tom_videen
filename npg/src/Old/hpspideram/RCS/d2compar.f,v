head	1.1;
access;
symbols;
locks; strict;
comment	@c @;


1.1
date	97.09.23.15.42.49;	author tom;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  Subroutine:   D2COMPAR.FTN
C
C  Author:       Tom O. Videen
C  Date:         26-Mar-87
C  Written For:  SPIDERAM Super PET Image Display Program
C
C  History:
C     Modified by TOV 26-Aug-87 to use ROW and COL consistently;
C     Modified by TOV 29-Dec-87 to correct a bug (row and col indices
C        were reversed in the DO loops).
C     Modified by TOV 15-Sep-88 to correct a bug in SCALER, which was
C        not computed accurately during division.
C
C  Intent:
C     This routine subtracts and divides image arrays.
C
C  NOTES:
C  (1) If the divisor is zero, the dividend is obtained by
C     dividing by 1.
C  (2) If there is a divisor, the dividend is multiplied X 1000
C     (to yield tenths of a percent) and the SCALER of the result
C     (SCALER(1)) is set to 0.1.
C  (3) The divisor image may be the same as either the primary file
C     or the subtracted file.  The primary and subtracted files
C     should be two distinct files of the same type.
C  (4) If COL and ROW are both zero, the entire array is checked.
C      For sagittal and coronal images, only one row or column is checked.
C      If COL is not zero, only one column is checked (sagittal);
C      If ROW is not zero, only one row is checked (coronal);
C      Note:  IMAGE(col,row,number)
C
C  Variables Passed:
C     COL,ROW - see above;
C
C  Common Blocks from SPIDERAM.INC:
C     **IMAGEDAT - image arrays                   (read & write)
C     **DISPLAY  - display parameters             (read only)
C     **FILES    - scan file list                 (read only)
C
C  Local Variables:
C     I,J = indices to the arrays;
C     A,B,C = file numbers of FILE(1), FILE(2), and FILE(3);
C     K = image array number of divisor (1,2, or 3);
C     SUB = true if FILE(2) is to be subtracted from FILE(1)
C     DIVIDE = true if resultant image is to be divided by FILE(3);
C
C  No Subroutines.
C
C  Called by:  D2DISPLA
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE D2COMPAR (COL, ROW)
C
      INTEGER*4		COL, ROW, I, J, K, A, B, C, C1, C2, R1, R2
      REAL*4		SX             ! scaler factor
      LOGICAL*1		SUB, DIVIDE
      character*256 rcsheader
C
      INCLUDE 'spideram.inc'
C
      rcsheader = "$Id: d2compar.f,v 1.3 1993/10/04 21:55:32 tom Exp $"
C
      A	= FILE (1)
      B	= FILE (2)
      C	= FILE (3)
      K	= 1
      IF (COMPARE .AND. B .NE. 0 .AND. MULTFACT (B) .NE. 0.0) THEN
	SUB	= .TRUE.
      ELSE
	SUB	= .FALSE.
      END IF
      IF (COMPARE .AND. C .NE. 0 .AND. MULTFACT (C) .NE. 0.0) THEN
	DIVIDE	= .TRUE.
	IF (C .EQ. A) THEN
		K	= 1
	ELSE IF (C .EQ. B) THEN
		K	= 2
	ELSE
		K	= 3
	END IF
      ELSE
	DIVIDE	= .FALSE.
      END IF
      C1	= 1
      C2	= AMAX
      R1	= 1
      R2	= AMAX
      IF (COL .NE. 0) THEN
	C1	= COL
	C2	= COL
      END IF
      IF (ROW .NE. 0) THEN
	R1	= ROW
	R2	= ROW
      END IF
C
C  Add and/or Divide the Image Arrays
C
      IF (SUB .AND. .NOT. DIVIDE) THEN
	DO 200 J = R1, R2
		DO 100 I = C1, C2
			IMAGE (I, J, 1)		= IMAGE (I, J, 1) - IMAGE (I, J, 2)
100		CONTINUE
200	CONTINUE
C
      ELSE IF (DIVIDE .AND. .NOT. SUB) THEN
	SX		= 1000.0 * SCALER (1) / SCALER (K)
	SCALER (1)	= 100.0 / SX
	DO 400 J = R1, R2
		DO 300 I = C1, C2
			IF (IMAGE (I, J, K) .NE. 0) IMAGE (I, J, 1)	= NINT(SX *
     2				(FLOAT (IMAGE (I, J, 1))) / (FLOAT (IMAGE (I, J, K))))
300		CONTINUE
400	CONTINUE
C
      ELSE IF (SUB .AND. DIVIDE) THEN
	SX		= 1000.0 * SCALER (1) / SCALER (K)
	SCALER (1)	= 100.0 / SX
	DO 600 J = R1, R2
		DO 500 I = C1, C2
			IF (IMAGE (I, J, K) .NE. 0) THEN
				IMAGE (I, J, 1)		= NINT (SX *
     2				(FLOAT (IMAGE (I, J, 1) - IMAGE (I, J, 2))) /
     3				(FLOAT (IMAGE (I, J, K))))
			ELSE
				IMAGE (I, J, 1)		= NINT (SX * FLOAT (IMAGE (I, J, 1)
     1								- IMAGE (I, J, K)))
			END IF
500		CONTINUE
600	CONTINUE
      END IF
C
      RETURN
      END
@
