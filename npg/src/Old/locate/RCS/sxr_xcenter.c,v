head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	94.02.09.20.55.17;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	94.02.08.20.39.05;	author tom;	state Exp;
branches;
next	;


desc
@corrected atlas transform
@


1.2
log
@Added external declaration for function.
@
text
@/* $Log */
/*	========================================================================
 *	Module:				sxr_xcenter.c
 *	Date:					08-Feb-94
 *	Author:				Tom Videen
 *	Description:	Find the atlas x-center of a PET image using the mean center
 *								of the PET slices (as given by the sxr file):
 *								For PETT VI (or < 16 slices), throw out the top and bottom slice;
 *								For ECAT, throw out the top 4 and bottom 4 slices.
 *
 *	Note:  sxr file has rlcenter in FORTRAN-array indices (1,2,....)
 *	       The center returned is also a FORTRAN-array index (1,2,...)
 *	       This differs from sxr_center.c used in t88mean!
 *	========================================================================
 */

#include <stdio.h>
#include <petutil/petutil.h>			/* SXR_OUTPUT */
#include "locate.h"

static char rcsid []= "$Id: sxr_xcenter.c,v 1.1 1994/02/08 20:39:05 tom Exp ty7777 $";

/*	-----------------------
 *	Function sxr_xcenter
 *	-----------------------
 */
PUBLIC void sxr_xcenter (sxr, center)

	SXR_OUTPUT		sxr;			/* information from sxr file */
	float					*center;

{
	float		xctr;
	int			first, last;
	int			i;

	if (sxr.number_slices < 16) {
		first = 1;
		last = sxr.number_slices - 1;
	} else {
		first = 4;
		last = sxr.number_slices - 4;
	}

	xctr = 0;

	for (i = first; i < last; ++i)
		xctr += sxr.rlcenter[i];

	center[0] = xctr / (last - first);
}
@


1.1
log
@Initial revision
@
text
@d19 1
d21 1
a21 1
static char rcsid []= "$Id$";
d27 1
a27 1
void sxr_xcenter (sxr, center)
@
