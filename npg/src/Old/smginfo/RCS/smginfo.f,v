head	1.6;
access;
symbols;
locks
	ty7777:1.6; strict;
comment	@c @;


1.6
date	93.04.15.20.05.21;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	93.02.26.22.07.46;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	93.02.26.21.53.54;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	92.11.03.18.48.19;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	92.11.03.17.11.35;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	92.09.17.18.41.55;	author ty7777;	state Exp;
branches;
next	;


desc
@gammaz source code initial version.
@


1.6
log
@Modified to recognize tal88 instead of t88mean
@
text
@C$Header: /tmp/RCS/smginfo.f,v 1.5 1993/02/26 22:07:46 tom Exp tom $
C$Log: smginfo.f,v $
c Revision 1.5  1993/02/26  22:07:46  tom
c If PROGNAME = 'HD6MEAN', convert NORMFACT to IEEE real (from PE)
c
c Revision 1.4  1993/02/26  21:53:54  tom
c Recognizes lowercase 'g' and 'a' for DIVIDEBY and PIXUSED
c
c Revision 1.3  1992/11/03  18:48:19  tom
c Recognizes program names hd6mean and t88mean
c
c Revision 1.2  1992/11/03  17:11:35  ty7777
c Same as last one.
c
c Revision 1.1  1992/09/17  18:41:55  ty7777
c Initial revision
c
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  Program:      smginfo.f 
C
C  Author:       Tom O. Videen
C  Date:         12-Jul-91
C  Written for:  HD6MEAN output files
C
C  History:
C     Modified and ported to the Unix environment by Tom Yang 09/17/1992.
C			Modified 03-Nov-92 TOV to recognize hd6mean and t88mean as program names.
C			Modified 26-Feb-93 TOV to:
C				1) recognize lowercase divisor and include
C				2) If PROGNAME = 'HD6MEAN' then convert NORMFACT to PE
C				   otherwise, treat it as an IEEE float
C			Modified 15-Apr-93 TOV to recognize tal88 instead of t88mean.
C
C  Description:
C     Read header & appended info from SMG file and write to terminal.
C
C  FORTRAN Runtime Library
C     SYSIO
C     PEFLOAT
C
C  History:
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      PROGRAM SMGINFO
C
      INTEGER*2     HEADER(128)    ! header
      INTEGER*2     LOC            ! record address for supplementary info
      INTEGER*2     NRECS          ! no. of records in file
C
C  Fields in new HEADER
C
      CHARACTER*1   DIVIDEBY       ! G or L
      CHARACTER*1   PIXUSED        ! A or N
      CHARACTER*4   CREATOR        ! INITIALS
      CHARACTER*6   RUNNAME        ! N = nfiles
      CHARACTER*6   PTYPE          ! type of averaging (PAIRED or SINGLE)
      CHARACTER*8   SCANID         ! file name
      CHARACTER*8   PROGNAME       ! program name
      CHARACTER*10  PROCTYPE       ! type of processing
      CHARACTER*10  VERSION        ! program version (date)
      CHARACTER*10  ENCODED        !
      CHARACTER*12  TODAY          ! current date and time
      CHARACTER*80  FILEDSC        ! image descriptor
      CHARACTER*80  STR1,STR2      ! string
      CHARACTER*256 SMGFILE		! smg file name
      CHARACTER*256 RCSHEADER
C
      INTEGER*4     INTNORMF		!integer representation of normalization factor
      REAL*4        NORMFACT		! normalization factor
      INTEGER*2     SLICES
      INTEGER*2     NFILES
C
      INTEGER*4     PB(6)
      INTEGER*4     RAD
      INTEGER*4     IOREAD
      INTEGER*4     NBYTES
      INTEGER*4     IN
      INTEGER*4     OUT
C
      EQUIVALENCE (STR1    , HEADER(1))
      EQUIVALENCE (STR2    , HEADER(61))
C
      EQUIVALENCE (NRECS   , HEADER(9))
      EQUIVALENCE (LOC     , HEADER(59))
C
      EQUIVALENCE (ENCODED , HEADER(1))
      EQUIVALENCE (RUNNAME , HEADER(2))
      EQUIVALENCE (PTYPE   , HEADER(5))
      EQUIVALENCE (SCANID  , HEADER(9))
      EQUIVALENCE (DIVIDEBY, HEADER(30))
      EQUIVALENCE (PIXUSED , HEADER(31))
      EQUIVALENCE (SLICES  , HEADER(32))
      EQUIVALENCE (CREATOR , HEADER(39))
      EQUIVALENCE (NFILES  , HEADER(50))
      EQUIVALENCE (INTNORMF, HEADER(51))
      EQUIVALENCE (NORMFACT, HEADER(51))
      EQUIVALENCE (PROCTYPE, HEADER(57))
      EQUIVALENCE (PROGNAME, HEADER(71))
      EQUIVALENCE (VERSION , HEADER(75))
      EQUIVALENCE (FILEDSC , HEADER(81))
      EQUIVALENCE (TODAY   , HEADER(123))
C
      DATA IN,OUT /1,6/
      DATA IOREAD /92/        ! binary read random wait
      DATA NBYTES /256/
C
8810  FORMAT(1X,'0',44X,'(data format)')
8820  FORMAT(1X,'SARP',41X,'(program version)')
C
8000  FORMAT(1X,'1',44X,'(data format)')
8100  FORMAT(1X,A8,2X,A10,25X,'(program version)')
8200  FORMAT(1X,A2,'/',A2,'/',A2,2X,A2,':',A2,':',A2,5X,A4,
     &      18X,'(created)')
8300  FORMAT(1X,A10,35X,'(processed as)')
C
8400  FORMAT(1X,'GLOBAL N used to divide pixels.')
8410  FORMAT(1X,'LOCAL N used to divide pixels.')
8500  FORMAT(1X,'ALL PIXELS included.')
8510  FORMAT(1X,'ONLY COMPLETELY SAMPLED PIXELS included.')
8550  FORMAT(1X,F9.3,36X,'(normalized to)')
8600  FORMAT(1X,80A)
8710  FORMAT(1X,I3,1X,A6,' (control-mean-activation-mean-xray)')
8720  FORMAT(1X,I3,1X,A6,' (control-mean-xray)')
8900  FORMAT(I2)
C
			RCSHEADER = "$Header: /tmp/RCS/smginfo.f,v 1.5 1993/02/26 22:07:46 tom Exp tom $"
C
C**** Get image name
      CALL GETARG (1, SMGFILE)
C**** Open image file
      OPEN (IN, FILE = SMGFILE, STATUS = 'OLD', ERR = 55)
      GOTO 77
55    WRITE (OUT, *)'*****ERROR OPENING IMAGE DATA FILE*****'
      WRITE (OUT, *)'*****       PROGRAM ABORTED        *****'
      STOP

77    CONTINUE
      PB(6) = 0
      RAD = 0
      CALL SYSIO(PB,IOREAD,IN,HEADER,NBYTES,0)
      IF (ENCODED.EQ.'ENCODED   ') THEN
        RAD = LOC - 1
        CALL SYSIO(PB,IOREAD,IN,HEADER,NBYTES,1)
      ELSE
        RAD = 3919
      END IF
C
C  If input file was not created by HD6MEAN, STOP
C
      IF (PROGNAME.NE.'HD6MEAN ' .and.
     &    PROGNAME.NE.'hd6mean ' .and.
     &    PROGNAME.NE.'tal88   ') THEN
        WRITE(OUT,8810)
        WRITE(OUT,8820)
        STOP
      END IF
C
      WRITE(OUT,8000)
      WRITE(OUT,8100) PROGNAME, VERSION
      WRITE(OUT,8200) TODAY(1:2), TODAY(3:4), TODAY(5:6),
     &     TODAY(7:8), TODAY(9:10), TODAY(11:12), CREATOR
      WRITE(OUT,8300) PROCTYPE
      IF (DIVIDEBY.EQ.'G' .OR .DIVIDEBY.EQ.'g') THEN
        WRITE(OUT,8400)
      ELSE
        WRITE(OUT,8410)
      END IF
      IF (PIXUSED.EQ.'A' .OR.PIXUSED.EQ.'a') THEN
        WRITE(OUT,8500)
      ELSE
        WRITE(OUT,8510)
      END IF
      IF (PROGNAME.EQ.'HD6MEAN ') THEN
	      WRITE(OUT,8550) PEFLOAT (INTNORMF)
			ELSE
	      WRITE(OUT,8550) NORMFACT
			END IF
      WRITE(OUT,8600) FILEDSC
C      READ(HEADER(4),8900) NFILES
      IF (PTYPE.EQ.'PAIRED') THEN
        WRITE(OUT,8710) NFILES, PTYPE
      ELSE
        WRITE(OUT,8720) NFILES, PTYPE
      END IF
C
      DO 100 I=1,NFILES
        CALL SYSIO(PB,IOREAD,IN,HEADER,NBYTES,RAD+I)
        WRITE(OUT,8600) STR1
        WRITE(OUT,8600) STR2
100   CONTINUE
C
      CLOSE (IN)
      STOP
      END

@


1.5
log
@If PROGNAME = 'HD6MEAN', convert NORMFACT to IEEE real (from PE)
@
text
@d1 1
a1 1
C$Header: /home/petsun2/tom/src/hd6mean/smginfo/RCS/smginfo.f,v 1.4 1993/02/26 21:53:54 tom Exp tom $
d3 3
d33 1
d127 1
a127 1
			RCSHEADER = "$Header: /home/petsun2/tom/src/hd6mean/smginfo/RCS/smginfo.f,v 1.4 1993/02/26 21:53:54 tom Exp tom $"
d153 1
a153 1
     &    PROGNAME.NE.'t88mean ') THEN
@


1.4
log
@Recognizes lowercase 'g' and 'a' for DIVIDEBY and PIXUSED
@
text
@d1 1
a1 1
C$Header: /home/petsun2/tom/src/hd6mean/smginfo/RCS/smginfo.f,v 1.3 1992/11/03 18:48:19 tom Exp tom $
d3 3
d26 4
a29 1
C			Modified 26-Feb-93 TOV to recognize lowercase divisor and include
d93 1
a99 1
C
d123 1
a123 1
			RCSHEADER = "$Header: /home/petsun2/tom/src/hd6mean/smginfo/RCS/smginfo.f,v 1.3 1992/11/03 18:48:19 tom Exp tom $"
d170 5
a174 2
      NORMFACT = PEFLOAT (INTNORMF)
      WRITE(OUT,8550) NORMFACT
@


1.3
log
@Recognizes program names hd6mean and t88mean
@
text
@d1 1
a1 1
C$Header: /home/petsun2/tom/programs/hd6mean/smginfo/RCS/smginfo.f,v 1.2 1992/11/03 17:11:35 ty7777 Exp tom $
d3 3
d23 1
d117 1
a117 1
			RCSHEADER = "$Header$"
d154 1
a154 1
      IF (DIVIDEBY.EQ.'G') THEN
d159 1
a159 1
      IF (PIXUSED.EQ.'A') THEN
@


1.2
log
@Same as last one.
@
text
@d1 1
a1 1
C$Header: /home/petsun4/ty7777/src/smginfo/RCS/smginfo.f,v 1.1 1992/09/17 18:41:55 ty7777 Exp ty7777 $
d3 3
d17 4
a28 2
C     Modified and ported to the Unix environment by Tom Yang.
C     09/17/1992.
d53 1
d113 2
d137 3
a139 1
      IF (PROGNAME.NE.'HD6MEAN ') THEN
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
C$Header$
C$Log$
@
