head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	2010.05.03.20.18.44;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.03.20.08.48;	author tom;	state Exp;
branches;
next	;


desc
@@


1.2
log
@*** empty log message ***
@
text
@/* $Log: imgsub.c,v $
 * Revision 1.1  2010/05/03  20:08:48  tom
 * Initial revision
 * */
/*	===============================================================================
 *	Module:			imgsub.c
 *	Date:			May 2010
 *	Author:			Tom Videen
 *	Description:	Subtract a constant from an ECAT image.
 *	===============================================================================
 */
static char     rcsid[] = "$Header: /home/npggw/tom/src/imgsub/RCS/imgsub.c,v 1.1 2010/05/03 20:08:48 tom Exp tom $";

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <libnrimg.h>
#include <image.h>
#include <libimage.h>
#include <imgutil.h>
#include <nrutil.h>

int             main (argc, argv)
	int             argc;
	char           *argv[];
{
	ImageFile      *file1;			 /* input image file structure */
	Index           indx;			 /* frame, plane, gate, data, bed */
	FILE           *recfp;

	char            program[MAXFNAME];
	char            version[MAXFNAME];
	char            runstamp[40];
	char           *fname;
	char           *recfile;
	int             pdim[3];
	int             i, j, k;
	int             n;
	float           val;
	float        ***img;

/*
 *	Read command line arguments and initialize filenames.
 */

	if (argc != 12) {
		printf ("Usage: imgsub image value\n");
		return (ERROR);
	}
	fname = argv[1];
	val = atof (argv[2]);
	recfile = argv[3];
	n = 4;
	(void) sprintf (runstamp, "%s %s %s %s %s %s", argv[n], argv[n + 1], argv[n + 2], argv[n + 4], argv[n + 5], argv[n + 7]);

	recfp = fopen (recfile, "a");
	if (recfp == (FILE *) NULL) {
		fprintf (stderr, "ERROR [imgsub]: opening %s\n", recfile);
		return (ERROR);
	}
	(void) sscanf (rcsid, "%s %s", program, version);
	(void) strcat (program, " ");
	(void) strcat (program, version);
	indx.frm = 1;
	indx.pln = 1;
	indx.gate = 1;
	indx.data = 0;
	indx.bed = 0;

	file1 = make_imgfile (fname);
	if (open_imgfile (file1) == ERROR) {
		fprintf (stderr, "ERROR [imgsub]: opening %s\n", fname);
		return (ERROR);
	}
	if (get_mh (file1) == ERROR) {
		fprintf (stderr, "ERROR [imgsub]: reading MainHeader from %s\n", fname);
		return (ERROR);
	}
	if (existimgfrm (file1, &indx) == ERROR) {
		indx.frm = 2;
		if (existimgfrm (file1, &indx) == ERROR) {
			fprintf (stderr, "ERROR [imgsub]: reading scan %s frame %d\n", fname, indx.frm);
			return (ERROR);
		}
	}
	if (get_sh (file1, &indx) == ERROR) {
		fprintf (stderr, "ERROR [imgsub]: reading subheader in %s\n", fname);
		return (ERROR);
	}
	pdim[0] = file1->sh->dim1;
	pdim[1] = file1->sh->dim2;
	pdim[2] = file1->sh->dim3;

	if ((img = rdtensor (file1, &indx, pdim)) == NULL) {
		fprintf (stderr, "ERROR [imgsub]: reading %s\n", fname);
		return (ERROR);
	}
	recout (recfp, fname);
	close_imgfile (file1);

	for (i = 1; i <= pdim[2]; i++)
		for (j = 1; j <= pdim[1]; j++)
			for (k = 1; k <= pdim[0]; k++)
				img[i][j][k] -= val;

	file1->name = fname;
	(void) strcpy (file1->mode, "w");
	indx.frm = 1;
	printf ("Writing %s\n", fname);
	if (open_imgfile (file1) == ERROR) {
		fprintf (stderr, "ERROR [imgsub]: opening %s\n", fname);
		return (ERROR);
	}
	(void) save_rcs (file1, rcsid, runstamp);
	file1->mh->nframe = indx.frm;
	file1->mh->orientation = 0;
	if (put_mh (file1) == ERROR) {
		fprintf (stderr, "ERROR [imgsub] writing %s\n", fname);
		return (ERROR);
	}
	if (writetensor (file1, &indx, img) == ERROR) {
		fprintf (stderr, "ERROR [imgsub] writing %s\n", fname);
		return (ERROR);
	}
	close_imgfile (file1);
	free_f3tensor (img, 1, pdim[2], 1, pdim[1], 1, pdim[0]);
	(void) fclose (recfp);
	return (0);
}
@


1.1
log
@Initial revision
@
text
@d1 4
a4 1
/* $Log$ */
d12 1
a12 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/imgsub/RCS/imgsub.c,v 1.5 2004/02/16 19:27:51 tom Exp $";
d34 1
a34 2
	char           *infile;
	char           *outfile;
d46 2
a47 2
	if (argc != 13) {
		printf ("Usage: imgsub in out val\n");
d50 4
a53 5
	infile = argv[1];
	outfile = argv[2];
	val = atof (argv[3]);
	recfile = argv[4];
	n = 5;
d70 1
a70 1
	file1 = make_imgfile (infile);
d72 1
a72 1
		fprintf (stderr, "ERROR [imgsub]: opening %s\n", infile);
d76 1
a76 1
		fprintf (stderr, "ERROR [imgsub]: reading MainHeader from %s\n", infile);
d82 1
a82 1
			fprintf (stderr, "ERROR [imgsub]: reading scan %s frame %d\n", infile, indx.frm);
d87 1
a87 1
		fprintf (stderr, "ERROR [imgsub]: reading subheader in %s\n", infile);
d95 1
a95 1
		fprintf (stderr, "ERROR [imgsub]: reading %s\n", infile);
d98 1
a98 1
	recout (recfp, infile);
d106 1
a106 1
	file1->name = outfile;
d109 1
a109 1
	printf ("Writing %s\n", outfile);
d111 1
a111 1
		fprintf (stderr, "ERROR [imgsub]: opening %s\n", outfile);
d118 1
a118 1
		fprintf (stderr, "ERROR [imgsub] writing %s\n", outfile);
d122 1
a122 1
		fprintf (stderr, "ERROR [imgsub] writing %s\n", outfile);
@
