CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  Subroutine:   QSF.FTN
C
C  Author:       Ken Larson
C  Date:         13-Feb-87
C  Written For:  OPROFILE.FTN
C
C  Intent:
C     SUBROUTINE QSF COMPUTES THE VECTOR Z OF INTEGRAL VALUES
C     FOR A VECTOR Y OF FUNCTION VALUES TABULATED EQUIDISTANTLY
C     WITH STEP SIZE H. EVALUATION OF Z IS DONE BY MEANS OF
C     SIMPSON'S RULE TOGETHER WITH NEWTON'S 3/8 RULE, OR A
C     COMBINATION OF THESE TWO RULES.  FOR DETAILS SEE THE IBM SSP.
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE QSF(H, Y, Z, NDIM)
C
      DIMENSION Y(NDIM), Z(NDIM)
      HT = H / 3.
      IF (NDIM - 5) 7, 8, 1
   1  SUM1 = Y(2) + Y(2)
      SUM1 = SUM1 + SUM1
      SUM1 = HT * (Y(1) + SUM1 + Y(3))
      AUX1 = Y(4) + Y(4)
      AUX1 = AUX1 + AUX1
      AUX1 = SUM1 + HT * (Y(3) + AUX1 + Y(5))
     0 AUX2 = HT * (Y(1) + 3.875 * (Y(2) + Y(5))
     1                   + 2.625 * (Y(3) + Y(4)) + Y(6))
      SUM2 = Y(5) + Y(5)
      SUM2 = SUM2 + SUM2
      SUM2 = AUX2 - HT * (Y(4) + SUM2 + Y(6))
      Z(1) = 0.
      AUX = Y(3) + Y(3)
      AUX = AUX + AUX
      Z(2) = SUM2 - HT * (Y(2) + AUX + Y(4))
      Z(3) = SUM1
      Z(4) = SUM2
      IF (NDIM - 6) 5, 5, 2
   2  DO 4  I = 7, NDIM, 2
      SUM1 = AUX1
      SUM2 = AUX2
      AUX1 = Y(I - 1) + Y(I - 1)
      AUX1 = AUX1 + AUX1
      AUX1 = SUM1 + HT * (Y(I - 2) + AUX1 + Y(I))
      Z(I - 2) = SUM1
      IF (I - NDIM) 3, 6, 6
   3  AUX2 = Y(I) + Y(I)
      AUX2 = AUX2 + AUX2
      AUX2 = SUM2 + HT * (Y(I - 1) + AUX2 + Y(I+ 1))
   4  Z(I - 1) = SUM2
   5  Z(NDIM - 1) = AUX1
      Z(NDIM) = AUX2
      RETURN
   6  Z(NDIM - 1) = SUM2
      Z(NDIM) = AUX1
      RETURN
   7  IF (NDIM - 3) 12, 11, 8
   8 0 SUM2 = 1.125 * HT * (Y(1) + 3. * Y(2)
     1                           + 3. * Y(3) + Y(4))
      SUM1 = Y(2) + Y(2)
      SUM1 = SUM1 + SUM1
      SUM1 = HT * (Y(1) + SUM1 + Y(3))
      Z(1) = 0.
      AUX1 = Y(3) + Y(3)

      AUX1 = AUX1 + AUX1
      Z(2) = SUM2 - HT * (Y(2) + AUX1 + Y(4))
      IF (NDIM - 5) 10, 9, 9
   9  AUX1 = Y(4) + Y(4)
      AUX1 = AUX1 + AUX1
      Z(5) = SUM1 + HT * (Y(3) + AUX1 + Y(5))
  10  Z(3) = SUM1
      Z(4) = SUM2
      RETURN
  11  SUM1 = HT * (1.25 * Y(1) + Y(2) + Y(2) - 0.25 * Y(3))
      SUM2 = Y(2) + Y(2)
      SUM2 = SUM2 + SUM2
      Z(3) = HT * (Y(1) + SUM2 + Y(3))
      Z(1) = 0.
      Z(2) = SUM1
  12  RETURN
      END
