CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  Subroutine:   OFILE.FTN
C
C  Author:       Tom O. Videen
C  Date:         10-Feb-87
C  Written For:  OPROFILE.FTN
C
C  Intent:
C     Write oxygen content values to a disk file.
C     Disk file has standard SPED format with 2-6 columns.
C
C  Uses Subroutines:
C     GETINT
C     GTSTRING
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
        SUBROUTINE OFILE(DISPTYPE,DISK)
C
      INTEGER*4    DISK,COL1,COL2,NCOLS,NR,NZ,L
      REAL         ZTILDE(101), RTILDE(101), C1TILDE(101),ULAB(101),
     2             C2TILDE(101,101), C11TILDE(101)
      CHARACTER*1  DISPTYPE
      CHARACTER*20 FNAME
      CHARACTER*80 Q,STR
      LOGICAL*1    A
C
      COMMON /VALUES/ NZ,NR,ZTILDE,RTILDE,ULAB,C1TILDE,C11TILDE,
     2                C2TILDE
C
C  Open file
C
100   Q = 'Disk file name'
      STR = FNAME
      CALL GTSTRING(Q,STR)
      FNAME = STR(1:20)
C
C  Check if the file exists
C
      OPEN(DISK,FILE=FNAME,STATUS='OLD',ERR=200)
      TYPE*,'*** WARNING -- file exists ***'
      A = .FALSE.
      Q = 'Do you want to rewrite the file'
      CALL YESNO(Q,A)
      IF (A) THEN
        CLOSE(DISK,STATUS='DELETE')
      ELSE
        CLOSE(DISK)
        GO TO 100
      END IF
C
C  If the file does not exist, open it
C
200   OPEN(DISK,FILE=FNAME,STATUS='NEW',ERR=300)
      GO TO 400
C
300   L = INANYR(FNAME,' ')
      TYPE*,'*** ERROR -- cannot open file ',FNAME(1:L),' ***'
      GO TO 100
C
C  Get header
C
400   STR = ' '
      Q = 'File header (up to 80 characters)'
      CALL GTSTRING(Q,STR)
      WRITE(DISK,*) STR
C
C  Write axial profiles
C
      IF (DISPTYPE.EQ.'A' .OR. DISPTYPE.EQ.'a') THEN
        IF (NR.LE.5) THEN
          NCOLS = NR
          COL1 = 1
          COL2 = NCOLS
        ELSE
          Q = 'Number of radial values to store (1,5)'
          CALL GETINT(Q,N,1,5)
          Q = 'Number of first radial value to store'
          CALL GETINT(Q,COL1,1,NR-N+1)
          NCOLS = N+1
          COL2 = COL1+N-1
        END IF
        WRITE(DISK,8000) NZ,NCOLS
        DO 600 I = 1,NZ
          WRITE (DISK,8100) ZTILDE (I),(C2TILDE(I,J),J=COL1,COL2)
600     CONTINUE
C
C  Write Radial Profiles
C
      ELSE IF (DISPTYPE.EQ.'R' .OR. DISPTYPE.EQ.'r') THEN
        IF (NZ.LE.5) THEN
          NCOLS = NZ
          COL1 = 1
          COL2 = NCOLS
        ELSE
          Q = 'Number of radial values to store (1,5)'
          CALL GETINT(Q,N,1,5)
          Q = 'Number of first radial value to store'
          CALL GETINT(Q,COL1,1,NZ-N+1)
          NCOLS = N+1
          COL2 = COL1+N-1
        END IF
        WRITE(DISK,8000) NR,NCOLS
        DO 700 J = 1,NR
          WRITE (DISK,8100) RTILDE (J),(C2TILDE(I,J),I=COL1,COL2)
700     CONTINUE
C
C  Write Utilization Profile
C
      ELSE IF (DISPTYPE.EQ.'U' .OR. DISPTYPE.EQ.'u') THEN
        WRITE(DISK,8000) NZ,2
        DO 800 I = 1,NZ
          WRITE (DISK,8100) ZTILDE (I),ULAB(I)
800     CONTINUE
C
C  Write Whole Blood Profile
C
      ELSE IF (DISPTYPE.EQ.'W' .OR. DISPTYPE.EQ.'w') THEN
        WRITE(DISK,8000) NZ,2
        DO 900 I = 1,NZ
          WRITE (DISK,8100) ZTILDE (I),C1TILDE(I)
900     CONTINUE
C
C  Write Plasma Profile
C
      ELSE IF (DISPTYPE.EQ.'P' .OR. DISPTYPE.EQ.'p') THEN
        WRITE(DISK,8000) NZ,2
        DO 1000 I = 1,NZ
          WRITE (DISK,8100) ZTILDE (I),C11TILDE(I)
1000    CONTINUE
      END IF
C
8000  FORMAT(1X,2I)
8100  FORMAT(1X,F5.3,5(E14))
C
      RETURN
      END
