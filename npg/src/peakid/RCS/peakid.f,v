head	2.5;
access;
symbols;
locks; strict;
comment	@c @;


2.5
date	2004.02.17.14.58.13;	author tom;	state Exp;
branches;
next	2.3;

2.3
date	99.10.13.19.02.02;	author tom;	state Exp;
branches;
next	2.2;

2.2
date	99.10.13.18.49.42;	author tom;	state Exp;
branches;
next	2.1;

2.1
date	99.04.07.13.29.39;	author tom;	state Exp;
branches;
next	2.0;

2.0
date	96.10.16.22.41.52;	author tom;	state Exp;
branches;
next	1.10;

1.10
date	94.06.13.18.15.24;	author ty7777;	state Exp;
branches;
next	1.9;

1.9
date	94.06.08.17.50.23;	author ty7777;	state Exp;
branches;
next	1.8;

1.8
date	94.05.19.20.48.41;	author ty7777;	state Exp;
branches;
next	1.7;

1.7
date	94.04.27.21.03.51;	author ty7777;	state Exp;
branches;
next	1.6;

1.6
date	94.01.21.18.06.43;	author ty7777;	state Exp;
branches;
next	1.5;

1.5
date	94.01.21.16.59.17;	author ty7777;	state Exp;
branches;
next	1.4;

1.4
date	94.01.21.16.48.50;	author ty7777;	state Exp;
branches;
next	1.3;

1.3
date	94.01.21.16.47.22;	author ty7777;	state Exp;
branches;
next	1.2;

1.2
date	94.01.19.22.33.30;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	94.01.19.20.10.05;	author ty7777;	state Exp;
branches;
next	;


desc
@Working version, first checking in.
@


2.5
log
@Feb 2004
@
text
@C$Id: peakid.f,v 2.3 1999/10/13 19:02:02 tom Exp tom $
C$Log: peakid.f,v $
c Revision 2.3  1999/10/13  19:02:02  tom
c change terminal messages
c
c Revision 2.2  1999/10/13  18:49:42  tom
c increase number of slices to 150
c
c Revision 2.1  1999/04/07  13:29:39  tom
c increase NPKS from 100 to 1000
c
c Revision 2.0  1996/10/16  22:41:52  tom
c TOV libs
c
c Revision 1.10  1994/06/13  18:15:24  ty7777
c Correct the x coordinate for the right hand coordinate system.
c
c Revision 1.9  1994/06/08  17:50:23  ty7777
c Change to (x, y, z).
c
c Revision 1.8  1994/05/19  20:48:41  ty7777
c Change the output from (z, x, y) to (x, y, z).
c
c Revision 1.7  1994/04/27  21:03:51  ty7777
c Added processing for zorigin.
c
c Revision 1.6  1994/01/21  18:06:43  ty7777
c Changed the copyright logo.
c
c Revision 1.5  1994/01/21  16:59:17  ty7777
c Changed the copyright message.
c
c Revision 1.4  1994/01/21  16:48:50  ty7777
c Modified the copyright message.
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  Program:      PEAKID.FTN
C  Author:       Tom O. Videen
C  Date:         02-Oct-90
C  Written For:  Generate list of image peaks
C
C  History:
C     Modified 12-Nov-90 by TOV:
C        1) change coordinate signs:
C           +X --> left hemisphere
C           +Y --> anterior
C        2) add vector distance to output file as well as check for
C           at least SEPARATION mm between adjacent peaks (where
C           SEPARATION is passed in from the CSS).
C        3) write distance to nearest larger peak in output file;
C     Modified 13-Nov-90 by TOV:
C        1) pass all parameters through CSS (to allow batch processing);
C        2) clean up code for identifying last maximum and local max;
C     Modified 14-Nov-90 by TOV:
C        1) algorithm revised and improved for identifying peaks;
C        2) subroutine PEAK3DCK replaces IMG3DS;
C     Renamed PEAKID (formerly IMGPEAK) 18-Nov-90.
C     Modified 05-Dec-90 by TOV:
C        1) allow input image to be filtered in 3D with spherical average
C           analagous to that used in AF3D and TIMAGE programs;
C        2) add common block PEAKPARM
C           (altered PEAKID, PEAK3DCK; added new subroutine PEAKAVG)
C        3) add MASK for restricting volume in which peaks are allowed
C           without biasing peaks away from brain or sample edges;
C     Modified 14-Jan-94 by Tom Yang:
C        1) Changed all the logical unit numbers.
C        2) Added code for getting the logical unit.
C        3) Cahnged all the comment statement. 
C        4) Get all parameters from the command line. 
C        5) Ported to the UNIX environment.
C     Modified 20-Jan-94 by Tom Yang:
C        Added copyright logo.
C     Modified 26-Apr-94 by Tom Yang:
C	1) Modified to process images with up to 75 slices.
C	2) Modified to read zorigin from image and use it in the
C	   transformation between the image space and the streotactic
C	   space.
C     Modified 18-May-94 by Tom Yang to change the final output from (z, x, y)
C	to (x, y, z).
C     Modified 08-June-94 by Tom Yang to make changes to (x, y, z) that are
C	left out the last time.
C
C  Intent:
C     Read a 49-slice image.
C     For all pixels >= input threshold, determine distinct peaks.
C     Write to output file.
C
C     All images are in a SARP-format (49-slice images, encoded or decoded).
C
C  Logical Units:
C     7 = Input image
C     8 = Region definition table
C     9 = Output file
C     6 = User output
C
C  Uses Subroutines:
C     PEAKAVG   - generate averaged image with spherical kernel
C     PEAK3DCK  - check for unique 3-D peak
C     getimage  - read image file
C     getimagetype  - read image file type
C
C  Instructions for Compiling/Linking:  PEAKID.CMP; PEAKID.LNK
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      PROGRAM PEAKID

      PARAMETER (NPKS = 1000)
C
C  Common block variables
C
      INTEGER*2   IMG (128, 128, 150) ! image array
      INTEGER*2   MASK (128, 128, 150)! masking array
      LOGICAL*1   INC (128, 128, 150) ! elements included in this peak
      LOGICAL*1   USED (128, 128, 150)! elements included in other peaks
      INTEGER*4   XLOC (310, 0:4)    ! locations of pixels for 2D section
      INTEGER*4   YLOC (310, 0:4)    !    of a local region
      INTEGER*4   NPIX (0:4)         ! number of pixels in region for 2D section
      INTEGER*4   NSUM               ! total pixels within 3D region
C
C Variables associated with calling C functions
C
      INTEGER*4    ZORIGIN 
      INTEGER*4    NUMSLICES	 ! number of slices obtained by calling getimagetype
      INTEGER*4    getimagetype 
      external     getimagetype  !$pragma C (getimagetype)
      external     getimage		 !$pragma C (getimage)
C
C  logical units
C
      INTEGER*4   OUTLU         ! lu for output file
      INTEGER*4   USEROUT       ! lu for user output
      INTEGER*4   TABLE         ! lu for list of regional pixel locations
C
      INTEGER*4   SLICE         ! slice number
      INTEGER*4   NSLICES       ! no. of slices
      INTEGER*4   PETTNUM       ! PETT no.
      INTEGER*4   THRESH        ! threshold
      INTEGER*4   SIGN          ! sign of threshold
      INTEGER*4   MAX           ! absolute of min or max value
      INTEGER*4   CUTOFF        ! temporary maximum (always positive)
      INTEGER*4   SUM           ! sum of pixels > CUTOFF
      INTEGER*4   REGRADIUS     ! region radius (0,1,2,3, or 4)
      INTEGER*4   RADIUS        ! local for reading radius from region table
      INTEGER*4   ZL            ! local for reading Z-loc  from region table
C
      INTEGER*4   X1,Y1,Z1      ! local peak (I,J,SLICE)
      INTEGER*4   X(NPKS)       ! list of x for local max
      INTEGER*4   Y(NPKS)       ! list of y for local max
      INTEGER*4   Z(NPKS)       ! list of slice for local max
      INTEGER*4   TOT           ! number of regions in list
      INTEGER*4   NMIN          ! number of peak nearest to current one
      INTEGER*4   I,J,K,N       ! local indices and temporary values
      INTEGER*4   MASK_EXIST    ! 1, mask image exist; 0, mask image does not exist.
C
      REAL*4      FRAC          ! fraction of peak to distinguish
      REAL*4      XR,YR,ZR      ! stereotaxic conversion of XYZ
      REAL*4      DISTANCE      ! vector distance between 2 peaks (in mm)
      REAL*4      SEPARATION    ! minimum distance between 2 peaks (in mm)
      REAL*4      DMIN          ! minimum distance for current peak
C
      CHARACTER*256 FNAME       ! file name for image
      CHARACTER*256 MNAME       ! file name for mask
      CHARACTER*256 PEAKNAME    ! file name for peak file
      CHARACTER*256 TBLNAME     ! file name for table file
      CHARACTER*256 RCSHEADER
      CHARACTER*256 STR         ! string used for reading in command line arguments
C
      INTEGER*4   ERR           ! error reading image file
      LOGICAL*1   UNIQUE        ! peak is unique
C
      COMMON /PEAKPARM/ IMG, MASK, INC, USED, XLOC, YLOC, NPIX, NSUM
C
      RCSHEADER = '$Header: /home/npggw/tom/src/peakid/RCS/peakid.f,v 2.3 1999/10/13 19:02:02 tom Exp tom $'
C
      DATA USEROUT, TABLE, OUTLU  /6, 7, 8/
C
      WRITE (USEROUT, *) 'peakid {13-Oct-99}'
c     WRITE (USEROUT, *) 'Copyright 1991-1996, Washington University.'
c     WRITE (USEROUT, *) 'All rights reserved. Unauthorized reproduction prohibited.'
C
C  Initializations
C
      DISTANCE = 0.
      RADIUS = 0
      NMIN = 0
      TOT = 0
      DO 10 I=1,NPKS
        X(I) = 0
        Y(I) = 0
        Z(I) = 0
10    CONTINUE
      DO 40 SLICE = 1, 150
        DO 30 J = 1, 128
          DO 20 I = 1, 128
            USED (I, J, SLICE) = .FALSE.
            MASK (I, J, SLICE) = 1
20        CONTINUE
30      CONTINUE
40    CONTINUE
C
C
8010  FORMAT (I6)
8020  FORMAT (F80.4)
8030  FORMAT (F80.0)

      CALL GETARG (1, FNAME)
      CALL GETARG (2, PEAKNAME)
      CALL GETARG (3, STR)
      READ (STR, 8010) THRESH
      CALL GETARG (4, STR)
      READ (STR, 8020) FRAC
      CALL GETARG (5, STR)
      READ (STR, 8030) SEPARATION
      CALL GETARG (6, STR)
      READ (STR, 8010) REGRADIUS
      CALL GETARG (7, TBLNAME)
      CALL GETARG (8, STR)
      READ (STR, 8010) MASK_EXIST
      CALL GETARG (9, MNAME)
C
C  Check these parameters
C
C  Set SIGN
C
      SIGN = 1
      IF (THRESH .GT. 0) THEN
        SIGN = 1
      ELSE IF (THRESH .LT. 0) THEN
        SIGN = -1
      ELSE
        WRITE (USEROUT, *) '*** Threshold cannot be 0!'
        STOP
      END IF
C
      IF (REGRADIUS .LT. 0 .OR. REGRADIUS .GT. 4) THEN
        WRITE (USEROUT, *) '*** Region radius must be 0, 1, 2, 3, or 4'
        STOP
      END IF
C
      OPEN (OUTLU, FILE = PEAKNAME, STATUS = 'OLD', ERR = 61)
      CLOSE (OUTLU, STATUS = 'DELETE')    
61    OPEN (OUTLU, FILE = PEAKNAME, STATUS = 'NEW', ERR = 62)
      GO TO 71
62    WRITE (USEROUT, *) '*** Error: opening output file ', PEAKNAME
      STOP

71    OPEN (TABLE, FILE = TBLNAME, STATUS = 'OLD', ERR = 72)
      GO TO 81
72    WRITE (USEROUT, *) '*** Error: opening timage.tbl file ', TBLNAME
      STOP
81    CONTINUE
C  ---------------------------------------------------------------
C  Get the locations defining the region used for averaging:
C    Read all z-locations for each radius until the proper radius is read.
C    NPIX(ZL) will be no. of pixels at each Z location.
C    NSUM will be total no. of pixels in 3D region.
C
8080  FORMAT (3I6)
8090  FORMAT (30((24I3)/))
      READ (TABLE, *, END = 70)     ! first line is a header
      DO 60 I = 0, REGRADIUS
        NSUM = 0
        DO 50 J = 0, I
          READ (TABLE, 8080, ERR = 70, END = 70) RADIUS, ZL, NPIX (ZL)
          READ (TABLE, 8090, ERR = 70, END = 70)
     &      (XLOC (K, ZL), YLOC (K, ZL), K = 1, NPIX (ZL))
          IF (J .EQ. 0) THEN
            NSUM = NSUM + NPIX (ZL)
          ELSE
            NSUM = NSUM + 2 * NPIX (ZL)
          END IF
50      CONTINUE
60    CONTINUE
      WRITE(USEROUT,*) NSUM,' pixels per region for radius ',RADIUS
C
C  Error logging for input list read errors
C
      GO TO 80
70    WRITE (USEROUT, *) 'Error reading region table, TIMAGE.TBL'
      STOP
80    CONTINUE
C
C  ---------------------------------------------------------------
C  Get the total number of the slices in image and the zorigin
C
      PETTNUM = getimagetype (FNAME, NUMSLICES, ZORIGIN)
      IF (PETTNUM .EQ. -1) THEN
		WRITE (STDOUT, *) 'Wrong image type for ', FNAME
		STOP
      ENDIF
C
C  ---------------------------------------------------------------
C  Read the masking image, if defined
C
      IF (MASK_EXIST .GT. 0) THEN
        DO 85 SLICE = 1, NUMSLICES
        	CALL getimage (MASK(1,1,SLICE), MNAME, %VAL(SLICE), NSLICES, ERR)
	  		IF (NUMSLICES .NE. NSLICES) THEN
	    		WRITE (USEROUT, *) 'Image and Mask have different numbers of slices.'
				STOP
	  		ENDIF
85      CONTINUE
      END IF
C
C  ---------------------------------------------------------------
C  Read the entire image and perform regional averaging, if required
C
      IF (REGRADIUS .EQ. 0) THEN
        DO 90 SLICE = 1, NUMSLICES
        	CALL getimage (IMG(1,1,SLICE), FNAME, %VAL(SLICE), NSLICES, ERR)
90      CONTINUE
      ELSE
        CALL PEAKAVG (REGRADIUS, FNAME, ERR, NUMSLICES)
        IF (ERR .GT. 0) THEN
          WRITE (USEROUT, *) '*** Error in PEAKAVG'
          STOP
        END IF
      END IF
C
C  Write important parameters to user and output file
C
      WRITE (USEROUT, 8100) FNAME, MNAME, REGRADIUS, NSUM
      WRITE (USEROUT, 8110) THRESH, FRAC, SEPARATION
C
      WRITE (OUTLU, 8100) FNAME, MNAME, REGRADIUS, NSUM
      WRITE (OUTLU, 8110) THRESH, FRAC, SEPARATION
C
8100  FORMAT (1X, 2A20, 'Averaging Radius = ', I2, ' pixels (vol = ', I3, ')')
8110  FORMAT (1X, 'Threshold = ', I6,' Separation Fraction = ', F5.2,
     &  '  Separation Distance = ', F5.1, ' mm')
C
C GENRP1MD            GENP1MK             Averaging Radius = 3 pixels (vol=147)
C Threshold = 25  Separation Fraction = 0.90  Separation Distance = 18.0 mm
C # 1  19  41  48    80     46   Z=  24.0  X=  47.0  Y=  33.0  D=   0.0 (# 1)
C
C
C  BEGIN PEAK IDENTIFICATION LOOP
C---------------------------------------------------------
C  Find max pixel which is not USED and not MASKed
C
100   MAX = 0
      DO 130 SLICE = 1, NUMSLICES
        DO 120 J = 1, 128
          DO 110 I = 1, 128
            IF (.NOT. USED (I, J, SLICE) .AND. MASK (I, J, SLICE) .GT. 0) THEN
              N = SIGN * IMG (I, J, SLICE)
              IF (N .GT. MAX) THEN
                MAX = N
                X1 = I
                Y1 = J
                Z1 = SLICE
              END IF
            END IF
110       CONTINUE
120     CONTINUE
130   CONTINUE
C
C  Compare with threshold for peaks
C
      WRITE(USEROUT,*) "   ",MAX
      IF (MAX.LT.SIGN*THRESH) GO TO 900
C
C  Set CUTOFF for this peak
C
      CUTOFF = NINT(FRAC*FLOAT(MAX))
c     WRITE(USEROUT,*) 'Max = ',SIGN*MAX,'  Cutoff = ',SIGN*CUTOFF
C
C  Is this PEAK unique?
C
      SUM = 0
      CALL PEAK3DCK (X1, Y1, Z1, SIGN, CUTOFF, SUM, UNIQUE, NUMSLICES)
      IF (UNIQUE) THEN
        IF (SIGN.GT.0) THEN
          WRITE(USEROUT,*) SUM,' pixels > ',CUTOFF
        ELSE
          WRITE(USEROUT,*) SUM,' pixels < ',SIGN*CUTOFF
        END IF
      ELSE
        GO TO 100
      END IF
C
C  Is it at least SEPARATION mm from all existing peaks?
C
      DMIN = 0.
      NMIN = 1
      IF (TOT.GT.0) THEN
        DO 200 K=1,TOT
          DISTANCE = SQRT(FLOAT((X1-X(K))**2 + (Y1-Y(K))**2 +
     &      (Z1-Z(K))**2))*2.0
          IF (DISTANCE.LT.SEPARATION) THEN
            GO TO 100
          ELSE IF (K.EQ.1) THEN
            DMIN = DISTANCE
            NMIN = K
          ELSE IF (DISTANCE.LT.DMIN) THEN
            DMIN = DISTANCE
            NMIN = K
          END IF
200     CONTINUE
      END IF
C  If so, add it to the list of true peaks
C
      TOT = TOT + 1
      X(TOT) = X1
      Y(TOT) = Y1
      Z(TOT) = Z1
      ZR = (ZORIGIN - FLOAT (Z1)) * 2.0
      XR = (FLOAT (X1) - 64.5) * 2.0
      YR = (64.5 - FLOAT (Y1)) * 2.0
C
C  Write peak to output file
C
      WRITE (USEROUT, 8200) TOT, X1, Y1, Z1, IMG (X1, Y1, Z1), SUM,
     &  'X', XR, 'Y', YR, 'Z', ZR, 'D', DMIN, NMIN
      WRITE (OUTLU, 8200)   TOT, X1, Y1, Z1, IMG (X1, Y1, Z1), SUM,
     &  'X', XR, 'Y', YR, 'Z', ZR, 'D', DMIN, NMIN
C
C  Have 100 peaks been identified?
C
      IF (TOT.EQ.NPKS) THEN
        WRITE(USEROUT,*) '*** TOT = ',TOT
        GO TO 900
      END IF
C
      GO TO 100
C
C---------------------------------------------------------
8200  FORMAT(1X,'#',I2,3I4,I6,I7,1X,4(2X,A1,'= ',F5.1),' (#',I2,')')
C
C # 1  19  41  48    80     46   Z=  24.0  X=  47.0  Y=  33.0  D=   0.0 (# 1)
C # 1  19  41  48    80     46   X=  47.0  Y=  33.0  Z=  24.0  D=   0.0 (# 1)
C
900   CLOSE (TABLE) 
      CLOSE (OUTLU) 
      STOP
      END
@


2.3
log
@change terminal messages
@
text
@d1 1
a1 1
C$Id: peakid.f,v 2.2 1999/10/13 18:49:42 tom Exp tom $
d3 3
d175 1
a175 1
      RCSHEADER = '$Header: /home/npggw/tom/src/peakid/RCS/peakid.f,v 2.2 1999/10/13 18:49:42 tom Exp tom $'
@


2.2
log
@increase number of slices to 150
@
text
@d1 1
a1 1
C$Id: peakid.f,v 2.1 1999/04/07 13:29:39 tom Exp tom $
d3 3
d172 1
a172 1
      RCSHEADER = '$Header: /home/npggw/tom/src/peakid/RCS/peakid.f,v 2.1 1999/04/07 13:29:39 tom Exp tom $'
d176 3
a178 4
      WRITE (USEROUT, *) 'peakid - image peak identifier {16-Oct-96}'
      WRITE (USEROUT, *) 'Copyright 1991-1996, Washington University.'
      WRITE (USEROUT, *) 'All rights reserved. Unauthorized reproduction prohibited.'
      WRITE (USEROUT, *) 
d359 1
a359 1
      WRITE(USEROUT,*) MAX, SIGN*THRESH
d365 1
a365 1
      WRITE(USEROUT,*) 'Max = ',SIGN*MAX,'  Cutoff = ',SIGN*CUTOFF
@


2.1
log
@increase NPKS from 100 to 1000
@
text
@d1 1
a1 1
C$Id: peakid.f,v 2.0 1996/10/16 22:41:52 tom Exp tom $
d3 3
d107 4
a110 4
      INTEGER*2   IMG (128, 128, 75) ! image array
      INTEGER*2   MASK (128, 128, 75)! masking array
      LOGICAL*1   INC (128, 128, 75) ! elements included in this peak
      LOGICAL*1   USED (128, 128, 75)! elements included in other peaks
d169 1
a169 1
      RCSHEADER = '$Header: /home/npggw/tom/src/peakid/RCS/peakid.f,v 2.0 1996/10/16 22:41:52 tom Exp tom $'
d189 1
a189 1
      DO 40 SLICE = 1, 75
@


2.0
log
@TOV libs
@
text
@d1 1
a1 1
C$Id: peakid.f,v 1.10 1994/06/13 18:15:24 ty7777 Exp tom $
d3 3
d99 2
d140 3
a142 3
      INTEGER*4   X(100)        ! list of x for local max
      INTEGER*4   Y(100)        ! list of y for local max
      INTEGER*4   Z(100)        ! list of slice for local max
d166 1
a166 1
      RCSHEADER = '$Header: /home/npggw/tom/src/peakid/RCS/peakid.f,v 1.10 1994/06/13 18:15:24 ty7777 Exp tom $'
d181 1
a181 1
      DO 10 I=1,100
d414 1
a414 1
      IF (TOT.EQ.100) THEN
@


1.10
log
@Correct the x coordinate for the right hand coordinate system.
@
text
@d1 1
a1 1
C$Id: peakid.f,v 1.9 1994/06/08 17:50:23 ty7777 Exp ty7777 $
d3 3
a22 2
c
c
a26 1
C
d88 2
a89 1
C     GETIMG    - read image file
a109 3
      INTEGER*4    fd 
      INTEGER*4    getfd 
      INTEGER*4    getimage_type 
d111 4
a114 3
      INTEGER*2    NUMSLICES	 ! number of slices obtained by calling getiamge_type
      external     getimage_type !$pragma C (getimage_type)
      external     get_zorigin   !$pragma C (get_zorigin)
a117 1
      INTEGER*4   INLU          ! lu for input image file
a120 1
      INTEGER*4   MASKLU        ! lu for mask image
a121 1
      INTEGER*2   HEADER(128)   ! header record
d141 1
a148 1
C
d154 1
a154 2
      CHARACTER*80  STR         ! string used for reading in command line arguments
      CHARACTER*20  NULL        ! blank file name
d156 1
a156 4
      LOGICAL*1   ENCODED
      LOGICAL*1   ERR           ! error reading image file
      LOGICAL*1   HDRONLY       ! false--> read image data
      LOGICAL*1   MASK_EXIST    ! 1, mask image exist; 0, mask image does not exist.
d159 1
a159 1
      COMMON /PEAKPARM/ IMG,MASK,INC,USED,XLOC,YLOC,NPIX,NSUM
d161 1
a161 1
      RCSHEADER = '$Header: /home/petsun4/ty7777/src/peakid/RCS/peakid.f,v 1.9 1994/06/08 17:50:23 ty7777 Exp ty7777 $'
d163 1
a163 1
      DATA USEROUT, INLU, TABLE, OUTLU, MASKLU /6, 7, 8, 9, 10/
d165 2
a166 3
      WRITE (USEROUT, *) '*** peakid:  Peak Identifier     {20-Jan-94}'
      WRITE (USEROUT, *) 
      WRITE (USEROUT, *) 'Copyright 1991-1994, Washington University.'
a171 2
      NULL = '                    '
      HDRONLY = .FALSE.
d229 5
a233 3
      OPEN (INLU, FILE = FNAME, STATUS = 'OLD', ERR = 55)
      GO TO 77
55    WRITE (USEROUT, *) '*** Error: opening image file ', FNAME (1:20), ' ***'
d235 4
a238 1
65    WRITE (USEROUT, *) '*** Error: opening output file ', PEAKNAME (1:20), ' ***'
d240 1
a240 12
75    WRITE (USEROUT, *) '*** Error: opening timage.tbl file ', TBLNAME (1:20), ' ***'
      STOP
76    WRITE (USEROUT, *) '*** Error: opening mask image file ', MNAME (1:20), ' ***'
      STOP
77    CONTINUE
      OPEN (OUTLU, FILE = PEAKNAME, STATUS = 'OLD', ERR = 88)
      CLOSE (OUTLU, STATUS = 'DELETE')    
88    OPEN (OUTLU, FILE = PEAKNAME, STATUS = 'NEW', ERR = 65)
      OPEN (TABLE, FILE = TBLNAME, STATUS = 'OLD', ERR = 75)
      IF (MASK_EXIST .EQ. 1) THEN
        OPEN (MASKLU, FILE = MNAME, STATUS = 'OLD', ERR = 76)
      ENDIF
d275 1
a275 3
      fd = getfd (INLU)		! get the file descriptor
      PETTNUM = getimage_type (%VAL(fd), FNAME, 
     &  ENCODED, NUMSLICES)
d277 2
a278 2
	WRITE (STDOUT, *) 'Wrong image type for ', FNAME
	STOP
a279 1
      CLOSE (INLU) 
a280 11
      ZORIGIN = 31
      IF (PETTNUM .EQ. 10) THEN
        OPEN (INLU, FILE = FNAME, STATUS = 'OLD', ERR = 55)
        fd = getfd (INLU)		! get the file descriptor
	CALL get_zorigin (FNAME, %VAL(fd), I, ERR)
	IF (ERR .NE. .TRUE.) THEN
		ZORIGIN = I
	ENDIF
        CLOSE (INLU) 
      ENDIF
C
d284 1
a284 1
      IF (MASK_EXIST .EQ. 1) THEN
d286 5
a290 6
          CALL GETIMG (MASK (1, 1, SLICE), HEADER, MNAME, SLICE, NSLICES,
     &      PETTNUM, MASKLU, USEROUT, HDRONLY, ERR)
	  IF (NUMSLICES .NE. NSLICES) THEN
	    WRITE (USEROUT, *) 'The image and mask image has different number'
	    WRITE (USEROUT, *) 'of slices.'
	  ENDIF
d299 1
a299 4
      WRITE (*, *) 'Debug ', SLICE + 2
          CALL GETIMG (IMG (1, 1, SLICE), HEADER, FNAME, SLICE, NSLICES,
     &      PETTNUM, INLU, USEROUT, HDRONLY, ERR)
      WRITE (*, *) 'Debug N', SLICE + 2
d302 3
a304 3
        CALL PEAKAVG (REGRADIUS, INLU, USEROUT, FNAME, ERR, NUMSLICES)
        IF (ERR) THEN
          WRITE (USEROUT, *) '*** Error in PEAKAVG -- see Tom Yang'
d349 1
a421 1
C900   CLOSE (INLU) 
a423 3
      IF (MASK_EXIST .EQ. 1) THEN
        CLOSE (MASKLU) 
      ENDIF
@


1.9
log
@Change to (x, y, z).
@
text
@d1 1
a1 1
C$Id: peakid.f,v 1.8 1994/05/19 20:48:41 ty7777 Exp ty7777 $
d3 3
d169 1
a169 1
      RCSHEADER = '$Header: /home/petsun4/ty7777/src/peakid/RCS/peakid.f,v 1.8 1994/05/19 20:48:41 ty7777 Exp ty7777 $'
d431 1
a431 1
      XR = (64.5 - FLOAT (X1)) * 2.0
@


1.8
log
@Change the output from (z, x, y) to (x, y, z).
@
text
@d1 1
a1 1
C$Id: peakid.f,v 1.7 1994/04/27 21:03:51 ty7777 Exp ty7777 $
d3 3
d66 2
d166 1
a166 1
      RCSHEADER = '$Header: /home/petsun4/ty7777/src/peakid/RCS/peakid.f,v 1.7 1994/04/27 21:03:51 ty7777 Exp ty7777 $'
d433 1
a433 1
      WRITE (USEROUT, 8200) TOT, Z1, X1, Y1, IMG (X1, Y1, Z1), SUM,
d435 1
a435 1
      WRITE (OUTLU, 8200)   TOT, Z1, X1, Y1, IMG (X1, Y1, Z1), SUM,
@


1.7
log
@Added processing for zorigin.
@
text
@d1 1
a1 1
C$Id: peakid.f,v 1.6 1994/01/21 18:06:43 ty7777 Exp ty7777 $
d3 3
d61 2
d161 1
a161 1
      RCSHEADER = '$Header: /home/petsun4/ty7777/src/peakid/RCS/peakid.f,v 1.6 1994/01/21 18:06:43 ty7777 Exp ty7777 $'
d428 4
a431 4
      WRITE(USEROUT,8200) TOT,Z1,X1,Y1,IMG(X1,Y1,Z1),SUM,
     &  'Z',ZR,'X',XR,'Y',YR,'D',DMIN,NMIN
      WRITE(OUTLU,8200)   TOT,Z1,X1,Y1,IMG(X1,Y1,Z1),SUM,
     &  'Z',ZR,'X',XR,'Y',YR,'D',DMIN,NMIN
d446 1
@


1.6
log
@Changed the copyright logo.
@
text
@d1 1
a1 1
C$Id: peakid.f,v 1.5 1994/01/21 16:59:17 ty7777 Exp ty7777 $
d3 3
d53 5
d85 8
a92 8
      INTEGER*2   IMG(128,128,49) ! image array
      INTEGER*2   MASK(128,128,49)! masking array
      LOGICAL*1   INC(128,128,49) ! elements included in this peak
      LOGICAL*1   USED(128,128,49)! elements included in other peaks
      INTEGER*4   XLOC(310,0:4)   ! locations of pixels for 2D section
      INTEGER*4   YLOC(310,0:4)   !    of a local region
      INTEGER*4   NPIX(0:4)       ! number of pixels in region for 2D section
      INTEGER*4   NSUM            ! total pixels within 3D region
d94 10
d139 1
d146 1
a146 1
      CHARACTER*20 NULL         ! blank file name
d148 2
a149 1
      LOGICAL*1   UNIQUE        ! peak is unique
a150 1
      LOGICAL*1   ERR           ! error reading image file
d152 1
d156 1
a156 1
      RCSHEADER = '$Header: /home/petsun4/ty7777/src/peakid/RCS/peakid.f,v 1.5 1994/01/21 16:59:17 ty7777 Exp ty7777 $'
d179 5
a183 5
      DO 40 SLICE=1,49
        DO 30 J=1,128
          DO 20 I=1,128
            USED(I,J,SLICE) = .FALSE.
            MASK(I,J,SLICE) = 1
d272 1
a272 1
70    WRITE(USEROUT,*) 'Error reading region table, TIMAGE.TBL'
d277 23
d303 1
a303 1
        DO 85 SLICE = 1, 49
d306 4
d317 2
a318 1
        DO 90 SLICE = 1, 49
d321 1
d324 1
a324 1
        CALL PEAKAVG(REGRADIUS,INLU,USEROUT,FNAME,ERR)
d326 1
a326 1
          WRITE(USEROUT,*) '*** Error in PEAKAVG -- see Tom'
d353 6
a358 6
      DO 130 SLICE=1,49
        DO 120 J=1,128
          DO 110 I=1,128
            IF (.NOT.USED(I,J,SLICE) .AND. MASK(I,J,SLICE).GT.0) THEN
              N = SIGN*IMG(I,J,SLICE)
              IF (N.GT.MAX) THEN
d381 1
a381 1
      CALL PEAK3DCK(X1,Y1,Z1,SIGN,CUTOFF,SUM,UNIQUE)
a410 1
C
d417 3
a419 3
      ZR = (31.0-FLOAT(Z1))*2.0
      XR = (64.5-FLOAT(X1))*2.0
      YR = (64.5-FLOAT(Y1))*2.0
d442 2
a443 2
900   CLOSE (INLU) 
      CLOSE (TABLE) 
@


1.5
log
@Changed the copyright message.
@
text
@d1 1
a1 1
C$Id: peakid.f,v 1.4 1994/01/21 16:48:50 ty7777 Exp ty7777 $
d3 3
d136 1
a136 1
      RCSHEADER = '$Header: /home/petsun4/ty7777/src/peakid/RCS/peakid.f,v 1.4 1994/01/21 16:48:50 ty7777 Exp ty7777 $'
d142 1
a142 1
      WRITE (USEROUT, *) 'Copyright 1991-1994, Washington University Neuroscience Imageing Group.'
@


1.4
log
@Modified the copyright message.
@
text
@d1 4
a4 2
C$Id$
C$Log$
d6 1
d133 1
a133 1
      RCSHEADER = '$Header: /home/petsun4/ty7777/src/peakid/RCS/peakid.f,v 1.3 1994/01/21 16:47:22 ty7777 Exp ty7777 $'
d137 1
a137 1
      WRITE (USEROUT, *) '*** PEAKID:  Peak Identifier     {20-Jan-94}'
d139 1
a139 1
      WRITE (USEROUT, *) 'Copyright 1991-1994, Washington University Neuroscience Imageing Group'
@


1.3
log
@Added copyright.
@
text
@d1 2
a2 4
C$Id: peakid.f,v 1.2 1994/01/19 22:33:30 ty7777 Exp ty7777 $
C$Log: peakid.f,v $
c Revision 1.2  1994/01/19  22:33:30  ty7777
c Delete the output file if it already exist.
a3 3
c Revision 1.1  1994/01/19  20:10:05  ty7777
c Initial revision
c
d130 1
a130 1
      RCSHEADER = '$Header: /home/petsun4/ty7777/src/peakid/RCS/peakid.f,v 1.2 1994/01/19 22:33:30 ty7777 Exp ty7777 $'
d138 1
a180 3
       
      WRITE (*, *) 'THRESH = ', THRESH
      WRITE (*, *) 'MASK EXIST = ', MASK_EXIST
@


1.2
log
@Delete the output file if it already exist.
@
text
@d1 1
a1 1
C$Id: peakid.f,v 1.1 1994/01/19 20:10:05 ty7777 Exp ty7777 $
d3 3
d47 2
d135 1
a135 1
      RCSHEADER = '$Header: /home/petsun4/ty7777/src/peakid/RCS/peakid.f,v 1.1 1994/01/19 20:10:05 ty7777 Exp ty7777 $'
d139 4
a142 2
      WRITE(USEROUT,*) '*** PEAKID:  Peak Identifier     {05-Dec-90}'
      WRITE(USEROUT,*)
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
C$Id$
C$Log$
d86 1
d126 1
d130 1
a130 1
      RCSHEADER = '$Header$'
d132 1
a132 1
      DATA USEROUT, INLU, TABLE, OUTLU /6, 7, 8, 9/
d174 7
a180 3
      CALL GETARG (7, MNAME)
      TBLNAME = '/usr/local/lib/peakid/timage.tbl'
      WRITE (*, *) FNAME, PEAKNAME, THRESH, FRAC, SEPARATION, REGRADIUS, MNAME
d187 1
a187 1
      IF (THRESH.GT.0) THEN
d189 1
a189 1
      ELSE IF (THRESH.LT.0) THEN
d192 1
a192 1
        WRITE(USEROUT,*) '*** Threshold cannot be 0!'
d196 2
a197 2
      IF (REGRADIUS.LT.0 .OR. REGRADIUS.GT.4) THEN
        WRITE(USEROUT,*) '*** Region radius must be 0, 1, 2, 3, or 4'
d203 1
a203 1
55    WRITE (USEROUT, *) '*** Error: opening image file ', FNAME, ' ***'
d205 1
a205 1
65    WRITE (USEROUT, *) '*** Error: opening output file ', PEAKNAME, ' ***'
d207 1
a207 1
75    WRITE (USEROUT, *) '*** Error: opening timage.tbl file ', TBLNAME, ' ***'
d209 6
a214 2
77      CONTINUE
      OPEN (OUTLU, FILE = PEAKNAME, STATUS = 'NEW', ERR = 65)
d216 3
a231 1
	  WRITE (*, *) RADIUS, ZL, NPIX (ZL)
d253 1
a253 1
      IF (MNAME(1:20) .NE. NULL) THEN
d256 1
a256 1
     &      PETTNUM, INLU, USEROUT, HDRONLY, ERR)
d278 2
a279 2
      WRITE(USEROUT,8100) FNAME, MNAME, REGRADIUS, NSUM
      WRITE(USEROUT,8110) THRESH, FRAC, SEPARATION
d281 2
a282 2
      WRITE(OUTLU,8100) FNAME, MNAME, REGRADIUS, NSUM
      WRITE(OUTLU,8110) THRESH, FRAC, SEPARATION
d284 3
a286 3
8100  FORMAT(1X,2A20,'Averaging Radius =',I2,' pixels (vol=',I3,')')
8110  FORMAT(1X,'Threshold = ',I,' Separation Fraction =',F5.2,
     &  '  Separation Distance =',F5.1, ' mm')
d391 3
@
