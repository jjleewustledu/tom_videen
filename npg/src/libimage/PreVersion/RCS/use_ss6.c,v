head	1.1;
access;
symbols;
locks; strict;
comment	@ * @;


1.1
date	2000.02.18.21.49.13;	author tom;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/*  $Id$
    $Log$ */
/* =============================================================================
 *	Function:		use_ss6
 *  Date:           Mar-96
 *  Author:         Tom Videen
 *	Description:	Fill structure scn from Version 6 sinogram subheader
 * =============================================================================
 */
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/use_ss6.c,v 1.5 1999/12/13 17:45:50 tom Exp $";
#endif

#include <stdio.h>
#include <stdlib.h>
#include <image.h>

int             use_ss6 (file)
	ImageFile      *file;
{
	SubHeader      *sh;
	Scan_subheader *ss6;
	Main_header    *mh6;

	if (file->m6 == NULL) {
		(void) fprintf (stderr, "ERROR [use_ss6]: Version 6 header is not defined\n");
		return (ERROR);
	}
	ss6 = file->m6->scn;
	mh6 = file->m6->mh;
	if (ss6 == NULL) {
		(void) fprintf (stderr, "ERROR [use_ss6]: Version 6 subheader is not defined\n");
		return (ERROR);
	}
	if (file->sh == NULL) {
		if ((file->sh = (SubHeader *) malloc (sizeof (SubHeader))) == NULL) {
			(void) fprintf (stderr, "ERROR [use_ss6]: Could not malloc memory for SubHeader\n");
			return (ERROR);
		}
	}
	sh = file->sh;
	if (ss6->data_type == BYTE_TYPE)
		sh->number_format = BYTE_DATA;
	else if (ss6->data_type == SUN_I2 || ss6->data_type == VAX_I2)
		sh->number_format = SHORT_DATA;
	else if (ss6->data_type == IEEE_R4)
		sh->number_format = FLOAT_DATA;
	else
		sh->number_format = SHORT_DATA;
	sh->file_format = MATRIX_REV6;
	sh->ndim = 2;
	sh->dim1 = ss6->dimension_1;
	sh->dim2 = ss6->dimension_2;
	sh->dim3 = mh6->num_planes;
	sh->scale_factor = ss6->scale_factor;
	sh->calibration_factor = 1;
	sh->min = ss6->scan_min;
	sh->max = ss6->scan_max;
	sh->deadtime_corr = ss6->loss_correction_fctr;
	sh->sample_size_1 = ss6->sample_distance;
	sh->sample_size_2 = ss6->sample_distance;
	sh->sample_size_3 = 1;
	sh->start_time = ss6->frame_start_time;
	sh->duration = ss6->frame_duration;
	sh->decay_corr = 0;
	sh->filter_code = 0;
	sh->filter_cutoff_frequency = 0;
	sh->filter_resolution = 0;
	sh->filter_ramp_slope = 0;
	sh->filter_order = 0;
	sh->filter_scatter_fraction = 0;
	sh->filter_scatter_slope = 0;
	sh->comment = NULL;
	return (OK);
}
@
