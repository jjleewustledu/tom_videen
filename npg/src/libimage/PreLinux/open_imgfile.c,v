head	1.4;
access;
symbols;
locks; strict;
comment	@ * @;


1.4
date	2002.03.13.21.56.41;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	2000.07.18.15.40.34;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	99.12.13.17.45.50;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	96.04.19.19.33.20;	author tom;	state Exp;
branches;
next	;


desc
@@


1.4
log
@lint cleaning
@
text
@/*  $Id: open_imgfile.c,v 1.3 2000/07/18 15:40:34 tom Exp tom $
 *  $Log: open_imgfile.c,v $
 * Revision 1.3  2000/07/18  15:40:34  tom
 * add Interfile compatibility
 *
 * Revision 1.2  1999/12/13  17:45:50  tom
 * tov revision
 *
 * Revision 1.1  1996/04/19  19:33:20  tom
 * Initial revision
 *
 */
/* =============================================================================
 *	Function:		open_imgfile
 *  Date:           Mar-96
 *  Author:         Tom Videen
 *	Description:	Get file pointer to ImageFile.
 *	Notes: The following must be defined:
 *		file->name
 *		file->mode
 * =============================================================================
 */
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/open_imgfile.c,v 1.3 2000/07/18 15:40:34 tom Exp tom $";
#endif

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <image.h>
#include <libimage.h>

int             open_imgfile (file)
	ImageFile      *file;
{
	int             fformat;

	if (file->name == NULL) {
		(void) fprintf (stderr, "ERROR [open_imgfile]: filename is NULL\n");
		return (ERROR);
	}
	if (strcmp (file->mode, "w") == 0)
		fformat = file->mh->file_format;
	else
		fformat = getfiletype (file);

	if (fformat == MATRIX_REV7) {
		if (open_m7 (file) == ERROR) {
			(void) fprintf (stderr, "ERROR [open_imgfile]: Cannot open %s\n", file->name);
			return (ERROR);
		}
	} else if (fformat == MATRIX_REV6) {
		if (open_m6 (file) == ERROR) {
			(void) fprintf (stderr, "ERROR [open_imgfile]: Cannot open %s\n", file->name);
			return (ERROR);
		}
	} else if (fformat == PETT6) {
		if (open_p6 (file) == ERROR) {
			(void) fprintf (stderr, "ERROR [open_imgfile]: Cannot open %s\n", file->name);
			return (ERROR);
		}
	} else if (fformat == INTERFILE) {
		if (open_if (file) == ERROR) {
			(void) fprintf (stderr, "ERROR [open_imgfile]: Cannot open %s\n", file->name);
			return (ERROR);
		}
	} else {
		(void) fprintf (stderr, "ERROR [open_imgfile]: Cannot open %s\n", file->name);
		return (ERROR);
	}
	return (OK);
}
@


1.3
log
@add Interfile compatibility
@
text
@d1 1
a1 1
/*  $Id: open_imgfile.c,v 1.2 1999/12/13 17:45:50 tom Exp tom $
d3 3
d24 1
a24 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/open_imgfile.c,v 1.2 1999/12/13 17:45:50 tom Exp tom $";
d29 1
a29 1
#include <strings.h>
@


1.2
log
@tov revision
@
text
@d1 1
a1 1
/*  $Id: open_imgfile.c,v 1.1 1996/04/19 19:33:20 tom Exp tom $
d3 3
d21 1
a21 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/open_imgfile.c,v 1.1 1996/04/19 19:33:20 tom Exp tom $";
d58 5
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
/*  $Id$
 *  $Log$
d18 1
a18 1
static char     rcsid[] = "$Header: /home/petsun19/tom/src/libimg/RCS/cti7.c,v 1.11 1995/12/15 21:40:17 tom Exp $";
d23 1
a23 1
#include <unistd.h>
d33 1
a33 1
		fprintf (stderr, "ERROR [open_imgfile]: filename is NULL\n");
d43 1
a43 1
			fprintf (stderr, "ERROR [open_imgfile]: Cannot open %s\n", file->name);
d48 1
a48 1
			fprintf (stderr, "ERROR [open_imgfile]: Cannot open %s\n", file->name);
d53 1
a53 1
			fprintf (stderr, "ERROR [open_imgfile]: Cannot open %s\n", file->name);
d57 1
a57 1
		fprintf (stderr, "ERROR [open_imgfile]: Cannot open %s\n", file->name);
@
