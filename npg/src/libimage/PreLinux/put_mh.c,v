head	1.4;
access;
symbols;
locks; strict;
comment	@ * @;


1.4
date	2002.12.17.21.55.15;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	2001.11.21.17.01.28;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	99.12.13.17.45.50;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	96.04.19.19.33.20;	author tom;	state Exp;
branches;
next	;


desc
@@


1.4
log
@fix pointer/cast errors found with gcc
@
text
@/*  $Id: put_mh.c,v 1.3 2001/11/21 17:01:28 tom Exp tom $
    $Log: put_mh.c,v $
    Revision 1.3  2001/11/21 17:01:28  tom
    add put_mhif

 * Revision 1.2  1999/12/13  17:45:50  tom
 * tov revision
 *
 * Revision 1.1  1996/04/19  19:33:20  tom
 * Initial revision
 *
 */
/* =============================================================================
 *	Function:		put_mh
 *  Date:           Mar-96
 *  Author:         Tom Videen
 *	Description:	Update image mainheader from MainHeader, then write image mainheader.
 * =============================================================================
 */
#ifndef lint
static char     rcsid[] = "$Header: /home/tom/src/libimage/RCS/put_mh.c,v 1.3 2001/11/21 17:01:28 tom Exp tom $";
#endif

#include <stdio.h>
#include <stdlib.h>
#include <image.h>
#include <libimage.h>

int             put_mh (file)
	ImageFile      *file;
{
	int             fformat;

	fformat = file->mh->file_format;

	if (fformat == MATRIX_REV7) {
		if (update_mh7 (file) == ERROR) {
			(void) fprintf (stderr, "ERROR [put_mh]: Error updating mainheader for %s\n", file->name);
			return (ERROR);
		}
		if ((put_mh7 (file)) == ERROR) {
			(void) fprintf (stderr, "ERROR [put_mh]: Error writing main header for %s\n", file->name);
			return (ERROR);
		}
	} else if (fformat == MATRIX_REV6) {
		if (update_mh6 (file) == ERROR) {
			(void) fprintf (stderr, "ERROR [put_mh]: Error updating mainheader for %s\n", file->name);
			return (ERROR);
		}
		if ((put_mh6 (file)) == ERROR) {
			(void) fprintf (stderr, "ERROR [put_mh]: Error writing main header for %s\n", file->name);
			return (ERROR);
		}
	} else if (fformat == INTERFILE) {
		if ((put_mhif (file)) != ERROR) {
			(void) fprintf (stderr, "ERROR [put_mh]: Error writing main header for %s\n", file->name);
			return (ERROR);
		}
/* PETT VI images have no separate main header */
	} else if (fformat != PETT6) {
		(void) fprintf (stderr, "ERROR [put_mh]: Unsupported file format %d for %s\n", fformat, file->name);
		return (ERROR);
	}
	return (OK);
}
@


1.3
log
@add put_mhif
@
text
@d1 1
a1 1
/*  $Id: put_mh.c,v 1.2 1999/12/13 17:45:50 tom Exp tom $
d3 3
d21 1
a21 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/put_mh.c,v 1.2 1999/12/13 17:45:50 tom Exp tom $";
d55 1
a55 1
		if ((put_mhif (file)) != NULL) {
@


1.2
log
@tov revision
@
text
@d1 1
a1 1
/*  $Id: put_mh.c,v 1.1 1996/04/19 19:33:20 tom Exp tom $
d3 3
d18 1
a18 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/put_mh.c,v 1.1 1996/04/19 19:33:20 tom Exp tom $";
a50 2

#ifdef UNDEF
a55 2
#endif

@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
/*  $Id$
    $Log$
d15 1
a15 1
static char     rcsid[] = "$Header: /home/petsun19/tom/src/libimg/RCS/cti.c,v 1.15 1996/03/12 22:43:02 tom Exp $";
d32 1
a32 1
			fprintf (stderr, "ERROR [put_mh]: Error updating mainheader for %s\n", file->name);
d36 1
a36 1
			fprintf (stderr, "ERROR [put_mh]: Error writing main header for %s\n", file->name);
d41 1
a41 1
			fprintf (stderr, "ERROR [put_mh]: Error updating mainheader for %s\n", file->name);
d45 1
a45 1
			fprintf (stderr, "ERROR [put_mh]: Error writing main header for %s\n", file->name);
a48 4
/* PETT VI images have no separate main header */

	} else if (fformat == PETT6) {

d52 1
a52 1
			fprintf (stderr, "ERROR [put_mh]: Error writing main header for %s\n", file->name);
d56 4
a59 2
	} else {
		fprintf (stderr, "ERROR [put_mh]: Unsupported file format %d for %s\n", fformat, file->name);
@
