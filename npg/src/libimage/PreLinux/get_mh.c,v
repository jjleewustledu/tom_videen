head	1.5;
access;
symbols;
locks; strict;
comment	@ * @;


1.5
date	2002.03.13.21.56.41;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	2000.09.27.19.03.28;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	2000.07.18.15.40.28;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.13.18.23.14;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	96.04.19.19.33.20;	author tom;	state Exp;
branches;
next	;


desc
@@


1.5
log
@lint cleaning
@
text
@/*  $Id: get_mh.c,v 1.4 2000/09/27 19:03:28 tom Exp tom $
    $Log: get_mh.c,v $
 * Revision 1.4  2000/09/27  19:03:28  tom
 * *** empty log message ***
 *
 * Revision 1.3  2000/07/18  15:40:28  tom
 * add Interfile compatibility
 *
 * Revision 1.2  2000/03/13  18:23:14  tom
 * *** empty log message ***
 *
 * Revision 1.1  1996/04/19  19:33:20  tom
 * Initial revision
 *
 */
/* =============================================================================
 *	Function:		get_mh
 *  Date:           Mar-96
 *  Author:         Tom Videen
 *	Description:	Get a generic mainheader from an image file.
 * =============================================================================
 */
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/get_mh.c,v 1.4 2000/09/27 19:03:28 tom Exp tom $";
#endif

#include <stdio.h>
#include <stdlib.h>
#include <image.h>
#include <libimage.h>

int             get_mh (file)
	ImageFile      *file;
{
	Index		   *indx;
	int             fformat;

	fformat = getfiletype (file);

	if (fformat == MATRIX_REV7) {		 /* Matrix file version 7 */
		if ((get_mh7 (file)) == ERROR) {
			(void) fprintf (stderr, "ERROR [get_mh]: Cannot read MainHeader from %s\n", file->name);
			return (ERROR);
		}
		if ((use_mh7 (file)) == ERROR) 
			return (ERROR);
	} else if (fformat == MATRIX_REV6) {	 /* Matrix file version 6 */
		if ((get_mh6 (file)) == ERROR) {
			(void) fprintf (stderr, "ERROR [get_mh]: Cannot read MainHeader from %s\n", file->name);
			return (ERROR);
		}
		if ((use_mh6 (file)) == ERROR)
			return (ERROR);
	} else if (fformat == PETT6) {		 /* PETT VI */
		indx = (Index *) calloc (1, sizeof (Index));
		indx->frm = 1;
		indx->pln = 1;
		indx->gate = 1;
		indx->data = 0;
		indx->bed = 0;
		if ((get_hp6 (file, indx)) == ERROR) {
			free (indx);
			(void) fprintf (stderr, "ERROR [get_mh]: Cannot read Header from %s\n", file->name);
			return (ERROR);
		}
		if ((use_mhp6 (file)) == ERROR)
			return (ERROR);
		free (indx);
	} else if (fformat == INTERFILE) {	 /* Interfile file. */
		if ((get_ifh (file)) == ERROR) {
			(void) fprintf (stderr, "ERROR [get_mh]: Cannot read MainHeader from %s\n", file->name);
			return (ERROR);
		}
		if ((use_mhif (file)) == ERROR)
			return (ERROR);
	} else {
		(void) fprintf (stderr, "ERROR [get_mh]: Unsupported file format %d in %s\n", fformat, file->name);
		return (ERROR);
	}
	return (OK);
}
@


1.4
log
@*** empty log message ***
@
text
@d1 1
a1 1
/*  $Id: get_mh.c,v 1.3 2000/07/18 15:40:28 tom Exp tom $
d3 3
d24 1
a24 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/get_mh.c,v 1.3 2000/07/18 15:40:28 tom Exp tom $";
d74 2
a75 1
		use_mhif (file);
@


1.3
log
@add Interfile compatibility
@
text
@d1 1
a1 1
/*  $Id: get_mh.c,v 1.2 2000/03/13 18:23:14 tom Exp tom $
d3 3
d21 1
a21 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/get_mh.c,v 1.2 2000/03/13 18:23:14 tom Exp tom $";
d52 1
a52 1
		indx = (Index *) malloc (sizeof (Index));
@


1.2
log
@*** empty log message ***
@
text
@d1 1
a1 1
/*  $Id: get_mh.c,v 1.1 1996/04/19 19:33:20 tom Exp tom $
d3 3
d18 1
a18 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/get_mh.c,v 1.1 1996/04/19 19:33:20 tom Exp tom $";
a62 2

#ifdef UNDEF
d64 1
a64 1
		if ((get_mhif (file)) == ERROR) {
a68 1
#endif
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
/*  $Id$
    $Log$
d15 1
a15 1
static char     rcsid[] = "$Header: /home/petsun19/tom/src/libimg/RCS/cti.c,v 1.15 1996/03/12 22:43:02 tom Exp $";
d33 1
a33 1
			fprintf (stderr, "ERROR [get_mh]: Cannot read MainHeader from %s\n", file->name);
d36 2
a37 1
		use_mh7 (file);
d40 1
a40 1
			fprintf (stderr, "ERROR [get_mh]: Cannot read MainHeader from %s\n", file->name);
d43 2
a44 1
		use_mh6 (file);
d54 1
a54 1
			fprintf (stderr, "ERROR [get_mh]: Cannot read Header from %s\n", file->name);
d57 2
a58 1
		use_mhp6 (file);
d64 1
a64 1
			fprintf (stderr, "ERROR [get_mh]: Cannot read MainHeader from %s\n", file->name);
d70 1
a70 1
		fprintf (stderr, "ERROR [get_mh]: Unsupported file format %d in %s\n", fformat, file->name);
@
