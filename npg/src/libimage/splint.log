free_imgfile.c: (in function free_imgfile)
free_imgfile.c:128:8: Only storage file->name (type char *) derived from
                         released storage is not released (memory leak): file
  A storage leak due to incomplete deallocation of a structure or deep pointer
  is suspected. Unshared storage that is reachable from a reference that is
  being deallocated has not yet been deallocated. Splint assumes when an object
  is passed as an out only void pointer that the outer object will be
  deallocated, but the inner objects will not. (Use -compdestroy to inhibit
  warning)
free_imgfile.c:128:8: Only storage file->fp (type FILE *) derived from released
                         storage is not released (memory leak): file
get_hp6.c: (in function get_hp6)
get_hp6.c:172:13: Storage file->p6 reachable from parameter is kept (should be
                     implicitly only)
  Storage derivable from a parameter does not match the alias kind expected for
  the formal parameter. (Use -compmempass to inhibit warning)
   get_hp6.c:171:2: Storage file->p6 becomes kept
get_mh7.c: (in function get_mh7)
get_mh7.c:234:13: Storage file->m7->mh reachable from parameter is kept (should
                     be implicitly only)
   get_mh7.c:233:2: Storage file->m7->mh becomes kept
ieee2pe.c: (in function ieee2pe)
ieee2pe.c:100:25: Right operand of >> may be negative (int):
                     mantissa >> (-temp)
  The right operand to a shift operator may be negative (behavior undefined).
  (Use -shiftnegative to inhibit warning)
make_mh.c: (in function make_mh)
make_mh.c:92:13: Released storage file->mh->data_file reachable from parameter
                    at return point
  Memory is used after it has been released (either by passing as an only param
  or assigning to an only global). (Use -usereleased to inhibit warning)
   make_mh.c:54:9: Storage file->mh->data_file released
make_mh.c:92:13: Released storage file->mh->sw_revision reachable from
                    parameter at return point
   make_mh.c:83:9: Storage file->mh->sw_revision released
make_mh.c:92:13: Released storage file->mh->filetime reachable from parameter
                    at return point
   make_mh.c:85:9: Storage file->mh->filetime released
make_mh.c:92:13: Released storage file->mh->gen_data reachable from parameter
                    at return point
   make_mh.c:87:9: Storage file->mh->gen_data released
open_m6.c: (in function open_m6)
open_m6.c:92:23: Cast to underlying abstract type FILE *: (FILE *)file->m6->mfp
  An abstraction barrier is broken. If necessary, use /*@access <type>@*/ to
  allow access to an abstract type. (Use -abstract to inhibit warning)
open_m6.c:93:2: Clauses exit with file->m6->mfp referencing implicitly only
                   storage in true branch, kept storage in false branch
  The state of a variable is different depending on which branch is taken. This
  means no annotation can sensibly be applied to the storage. (Use -branchstate
  to inhibit warning)
   open_m6.c:92:3: Storage file->m6->mfp becomes kept
open_m6.c:93:2: Storage file->m6->mfp is kept in one path, but live in another.
   open_m6.c:92:3: Storage file->m6->mfp becomes kept
   open_m6.c:83:8: Storage file->m6->mfp defined
open_m7.c: (in function open_m7)
open_m7.c:120:2: Clauses exit with file->name referencing kept storage in true
                    branch, implicitly only storage in continuation
   open_m7.c:119:3: Storage file->name becomes kept
open_m7.c:126:16: Storage file->name reachable from parameter is unqualified
                     (should be implicitly only)
open_m7.c:131:17: Storage file->name reachable from parameter is unqualified
                     (should be implicitly only)
open_m7.c:137:17: Storage file->name reachable from parameter is unqualified
                     (should be implicitly only)
open_m7.c:144:17: Storage file->name reachable from parameter is unqualified
                     (should be implicitly only)
open_m7.c:153:13: Storage file->name reachable from parameter is unqualified
                     (should be implicitly only)
put_mhif.c: (in function put_mhif)
put_mhif.c:113:3: New fresh storage IF_hdr (type void) cast to void (not
                     released): (void)strncpy(IF_hdr, ptr + 1, 256 - 1)
  A memory leak has been detected. Storage allocated locally is not released
  before the last reference to it is lost. (Use -mustfreefresh to inhibit
  warning)
put_mhif.c:114:3: New fresh storage IF_img (type void) cast to void (not
                     released): (void)strncpy(IF_img, ptr + 1, 256 - 1)
put_mhif.c:116:3: New fresh storage IF_hdr (type void) cast to void (not
                     released): (void)strncpy(IF_hdr, file->name, 256 - 1)
put_mhif.c:117:3: New fresh storage IF_img (type void) cast to void (not
                     released): (void)strncpy(IF_img, file->name, 256 - 1)
rdattn6.c: (in function rdattn6)
rdattn6.c:82:15: Fresh storage mdata not released before return
   rdattn6.c:66:2: Fresh storage mdata created
rdimg6.c: (in function rdimg6)
rdimg6.c:137:15: Fresh storage mdata not released before return
   rdimg6.c:88:2: Fresh storage mdata created
rdscan6.c: (in function rdscan6)
rdscan6.c:82:15: Fresh storage mdata not released before return
   rdscan6.c:66:2: Fresh storage mdata created
use_mhif.c: (in function use_mhif)
use_mhif.c:126:13: Storage file->ih->mh->data_file reachable from parameter is
                      kept (should be implicitly only)
   use_mhif.c:72:2: Storage file->ih->mh->data_file becomes kept
wrattn6.c: (in function wrattn6)
wrattn6.c:90:16: Storage file->m6->atn reachable from parameter is kept (should
                    be implicitly only)
   wrattn6.c:78:2: Storage file->m6->atn becomes kept
wrimg6.c: (in function wrimg6)
wrimg6.c:186:2: Variable img is kept in false branch, but not kept in true
                   branch.
   wrimg6.c:186:2: in false branch:
   wrimg6.c:185:3: Storage img becomes kept
wrimg6.c:202:16: Storage file->m6->sh reachable from parameter is kept (should
                    be implicitly only)
   wrimg6.c:189:2: Storage file->m6->sh becomes kept
wrscan6.c: (in function wrscan6)
wrscan6.c:99:16: Storage file->m6->scn reachable from parameter is kept (should
                    be implicitly only)
   wrscan6.c:87:2: Storage file->m6->scn becomes kept

