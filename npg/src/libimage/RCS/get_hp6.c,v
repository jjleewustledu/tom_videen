head	2.4;
access;
symbols;
locks; strict;
comment	@ * @;


2.4
date	2004.02.20.16.06.24;	author tom;	state Exp;
branches;
next	2.3;

2.3
date	2004.02.18.19.56.33;	author tom;	state Exp;
branches;
next	2.2;

2.2
date	2004.02.12.22.04.10;	author tom;	state Exp;
branches;
next	2.0;

2.0
date	2004.01.02.18.40.48;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	2003.07.01.19.14.19;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	99.12.13.17.45.50;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	97.12.02.22.55.59;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	97.12.02.22.46.21;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	96.04.19.19.33.20;	author tom;	state Exp;
branches;
next	;


desc
@@


2.4
log
@Feb 2004
@
text
@/*  $Id: get_hp6.c,v 2.3 2004/02/18 19:56:33 tom Exp tom $
 *  $Log: get_hp6.c,v $
 * Revision 2.3  2004/02/18  19:56:33  tom
 * Feb 18 (interfile)
 *
 * Revision 2.2  2004/02/12  22:04:10  tom
 * sync Feb 2004
 *
 * Revision 2.0  2004/01/02  18:40:48  tom
 * splint cleanup
 *
 * Revision 1.5  2003/07/01  19:14:19  tom
 * *** empty log message ***
 *
 *  Revision 1.4  1999/12/13 17:45:50  tom
 *  tov revision
 *
 * Revision 1.3  1997/12/02  22:55:59  tom
 * add unistd.h
 *
 * Revision 1.2  1997/12/02  22:46:21  tom
 * modify for dynamic
 *
 * Revision 1.1  1996/04/19  19:33:20  tom
 * Initial revision
 *
 */
/* =============================================================================
 *	Function:		get_hp6
 *  Date:           Mar 2003
 *  Author:         Tom Videen
 *	Description:	Read PETT VI slice header and store in PETT6HDR.
 * =============================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/get_hp6.c,v 2.3 2004/02/18 19:56:33 tom Exp tom $";
#endif

#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <image.h>
#include <endian.h>

int             get_hp6 (file, indx)
	ImageFile      *file;
	Index          *indx;
{
	union temp_short {
		short           s[LENREC_S];
		char            c[LENREC];
	}               tmp;

	union temp_long {
		float           f;
		int             l;
		short           s[2];
	}               conv;

	PETT6HDR       *p6;
	int             i, j;
	long            offset, slices, n;
	long            nbytes = LENREC;

	if (file->p6 == NULL) {
		if ((p6 = (PETT6HDR *) calloc (1, sizeof (PETT6HDR))) == NULL) {
			(void) fprintf (stderr, "ERROR [get_hp6]: Could not calloc memory for PETT VI header\n");
			return (ERROR);
		}
	} else
		p6 = file->p6;

	slices = p6->number_of_slices;
	if (slices == 0)
		slices = 7;
	n = (long) ((indx->frm) - 1) * slices;
	offset = (n + (long) indx->pln - 1) * PETT6_SLICE_BYTES;
	(void) fseek (file->fp, offset, SEEK_SET);

	if ((fread (tmp.s, 1, RECLEN, file->fp)) != RECLEN) {
		(void) fprintf (stderr, "ERROR [get_hp6]: reading PETT VI header from %s\n", file->name);
		return (ERROR);
	}
	/* Strings	 */
	for (i = 0; i < 2; i++)
		p6->file_flag[i] = tmp.c[i];
	for (i = 0; i < 6; i++)
		p6->run_name[i] = tmp.c[2 + i];
	for (i = 0; i < 8; i++)
		p6->subject_id[i] = tmp.c[16 + i];
	for (i = 0; i < 6; i++)
		p6->date[i] = tmp.c[24 + i];
	for (i = 0; i < 10; i++)
		p6->compound[i] = tmp.c[48 + i];
	for (i = 0; i < 12; i++)
		p6->filter[i] = tmp.c[80 + i];
	for (i = 0; i < 12; i++)
		p6->pett_location[i] = tmp.c[244 + i];

	/* Shorts and Longs  */
	/* CONSTCOND	 */
	if (__BYTE_ORDER == __LITTLE_ENDIAN) {
		swap_byte (tmp.c, nbytes);
		j = 1;
	} else
		j = 0;

	p6->rotation = tmp.s[4];
	p6->wobble_rate = tmp.s[5];
	p6->nwobble_pts = tmp.s[6];
	p6->scan_time = tmp.s[7];

	p6->resolution = tmp.s[15];
	p6->isotope_code = tmp.s[16];
	p6->slice_number = tmp.s[17];

	conv.s[0 + j] = tmp.s[18];
	conv.s[1 - j] = tmp.s[19];
	p6->decay_constant = conv.l;

	p6->image_orientation = tmp.s[20];
	p6->time_per_frame = tmp.s[21];

	conv.s[0 + j] = tmp.s[22];
	conv.s[1 - j] = tmp.s[23];
	p6->total_counts = conv.l;

	for (i = 0; i < 2; i++)
		p6->unused_1[i] = tmp.s[29 + i];
	p6->number_of_slices = tmp.s[31];
	for (i = 0; i < 5; i++)
		p6->unused_2[i] = tmp.s[32 + i];

	p6->file_type = tmp.s[37];
	p6->ecat_orientation = tmp.s[38];
	p6->rotation_increment = tmp.s[39];

	for (i = 0; i < 2; i++)
		p6->unused_4[i] = tmp.s[46 + i];
	p6->un_norm_average = tmp.s[48];
	p6->norm_average = tmp.s[49];

	conv.s[0 + j] = tmp.s[50];
	conv.s[1 - j] = tmp.s[51];
	p6->total_raw_events = conv.l;

	conv.s[0 + j] = tmp.s[52];
	conv.s[1 - j] = tmp.s[53];
	p6->total_random_events = conv.l;

	conv.s[0 + j] = tmp.s[54];
	conv.s[1 - j] = tmp.s[55];
	p6->raw_random_events = conv.l;

	for (i = 0; i < 13; i++)
		p6->unused_5[i] = tmp.s[56 + i];
	p6->norm_run_time = tmp.s[69];
	for (i = 0; i < 8; i++)
		p6->unused_6[i] = tmp.s[70 + i];
	for (i = 0; i < 16; i++)
		p6->metabolic_data[i] = tmp.s[78 + i];
	for (i = 0; i < 26; i++)
		p6->unused_7[i] = tmp.s[94 + i];
	p6->pett_number = tmp.s[120];
	p6->model_number = tmp.s[121];

	file->p6 = p6;
	return (OK);
}
@


2.3
log
@Feb 18 (interfile)
@
text
@d1 1
a1 1
/*  $Id: get_hp6.c,v 2.2 2004/02/12 22:04:10 tom Exp tom $
d3 3
d37 1
a37 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/get_hp6.c,v 2.2 2004/02/12 22:04:10 tom Exp tom $";
@


2.2
log
@sync Feb 2004
@
text
@d1 1
a1 1
/*  $Id: get_hp6.c,v 2.0 2004/01/02 18:40:48 tom Exp tom $
d3 3
d34 1
a34 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/get_hp6.c,v 2.0 2004/01/02 18:40:48 tom Exp tom $";
@


2.0
log
@splint cleanup
@
text
@d1 1
a1 1
/*  $Id: get_hp6.c,v 1.5 2003/07/01 19:14:19 tom Exp tom $
d3 3
d31 1
a31 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/get_hp6.c,v 1.5 2003/07/01 19:14:19 tom Exp tom $";
@


1.5
log
@*** empty log message ***
@
text
@d1 1
a1 1
/*  $Id: get_hp6.c,v 1.4 1999/12/13 17:45:50 tom Exp $
d3 3
d26 1
d28 1
a28 1
static char     rcsid[] = "$Header: /home/tom/src/libimage/RCS/get_hp6.c,v 1.4 1999/12/13 17:45:50 tom Exp $";
@


1.4
log
@tov revision
@
text
@d1 1
a1 1
/*  $Id: get_hp6.c,v 1.3 1997/12/02 22:55:59 tom Exp tom $
d3 3
d18 1
a18 1
 *  Date:           Mar-96
d24 1
a24 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/get_hp6.c,v 1.3 1997/12/02 22:55:59 tom Exp tom $";
d31 1
d37 13
d51 1
d54 2
a55 2
		if ((file->p6 = (PETT6HDR *) malloc (sizeof (PETT6HDR))) == NULL) {
			(void) fprintf (stderr, "ERROR [get_hp6]: Could not malloc memory for PETT VI header\n");
d58 8
a65 6
	}
    slices = file->p6->number_of_slices;
    if (slices == 0)
        slices = 7;
    n = (long) ((indx->frm) - 1) * slices;
    offset = (n + (long) indx->pln - 1) * PETT6_SLICE_BYTES;
d67 3
a69 2
	if ((fread (file->p6, 1, RECLEN, file->fp)) != RECLEN) {
		(void) fprintf (stderr, "ERROR [get_hp6]: reading PETT VI header for %s\n", file->name);
d72 84
@


1.3
log
@add unistd.h
@
text
@d1 1
a1 1
/*  $Id: get_hp6.c,v 1.2 1997/12/02 22:46:21 tom Exp tom $
d3 3
d21 1
a21 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/get_hp6.c,v 1.2 1997/12/02 22:46:21 tom Exp tom $";
a27 1
#include <libimage.h>
d37 1
a37 1
			fprintf (stderr, "ERROR [get_hp6]: Could not malloc memory for PETT VI header\n");
d46 1
a46 1
	fseek (file->fp, offset, SEEK_SET);
d48 1
a48 1
		fprintf (stderr, "ERROR [get_hp6]: reading PETT VI header for %s\n", file->name);
@


1.2
log
@modify for dynamic
@
text
@d1 1
a1 1
/*  $Id: get_hp6.c,v 1.1 1996/04/19 19:33:20 tom Exp tom $
d3 3
d18 1
a18 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/get_hp6.c,v 1.1 1996/04/19 19:33:20 tom Exp tom $";
d23 1
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
/*  $Id$
 *  $Log$
d15 1
a15 1
static char     rcsid[] = "$Header$";
d27 1
a27 1
	long            offset;
d35 6
a40 2
	offset = (long) (((indx->pln) - 1)) * PETT6_SLICE_BYTES;
	fseek (file->fp, offset, 0);
@
