head	2.4;
access;
symbols;
locks; strict;
comment	@ * @;


2.4
date	2004.02.20.16.06.24;	author tom;	state Exp;
branches;
next	2.3;

2.3
date	2004.02.18.19.56.33;	author tom;	state Exp;
branches;
next	2.2;

2.2
date	2004.02.12.22.04.10;	author tom;	state Exp;
branches;
next	2.0;

2.0
date	2004.01.02.18.40.48;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	99.12.13.17.45.50;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	96.07.19.14.17.18;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	96.04.19.19.33.20;	author tom;	state Exp;
branches;
next	;


desc
@@


2.4
log
@Feb 2004
@
text
@/*  $Id: put_sh.c,v 2.3 2004/02/18 19:56:33 tom Exp tom $
    $Log: put_sh.c,v $
 * Revision 2.3  2004/02/18  19:56:33  tom
 * Feb 18 (interfile)
 *
 * Revision 2.2  2004/02/12  22:04:10  tom
 * sync Feb 2004
 *
 * Revision 2.0  2004/01/02  18:40:48  tom
 * splint cleanup
 *
 * Revision 1.3  1999/12/13  17:45:50  tom
 * tov revision
 *
 * Revision 1.2  1996/07/19  14:17:18  tom
 * fix bug in dtype checking
 *
 * Revision 1.1  1996/04/19  19:33:20  tom
 * Initial revision
 *
 */
/* =============================================================================
 *	Function:		put_sh
 *  Date:           Mar 1996
 *  Author:         Tom Videen
 *	Description:	Write image subheader.
 * =============================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/put_sh.c,v 2.3 2004/02/18 19:56:33 tom Exp tom $";
#endif

#include <stdio.h>
#include <image.h>
#include <libimage.h>

int             put_sh (file, indx)
	ImageFile      *file;
	Index          *indx;
{
	DataSetType     dtype;
	int             fformat;

	fformat = file->mh->file_format;
	dtype = (DataSetType) file->mh->filetype;

	if (update_sh (file, indx) == ERROR) {
		fprintf (stderr, "ERROR [put_sh]: Error updating subheader of %s\n", file->name);
		return (ERROR);
	}
	if (fformat == MATRIX_REV7) {
		if (dtype != PetVolume) {
			fprintf (stderr, "ERROR [put_sh]: Unsupported data type %d in %s\n", dtype, file->name);
			return (ERROR);
		}
		if ((use_sh7 (file)) == ERROR) {
			fprintf (stderr, "ERROR [put_sh]: Error converting %s\n", file->name);
			return (ERROR);
		}
		if ((put_sh7 (file, indx)) == ERROR) {
			fprintf (stderr, "ERROR [put_sh]: Error writing subheader for plane %d of %s\n",
				 indx->pln, file->name);
			return (ERROR);
		}
	} else if (fformat == MATRIX_REV6) {
		if (dtype != PetImage) {
			fprintf (stderr, "ERROR [put_sh]: Unsupported data type %d in %s\n", dtype, file->name);
			return (ERROR);
		}
		if ((use_sh6 (file)) == ERROR) {
			fprintf (stderr, "ERROR [put_sh]: Error converting %s\n", file->name);
			return (ERROR);
		}
		if ((put_sh6 (file, indx)) == ERROR) {
			fprintf (stderr, "ERROR [put_sh]: Error writing subheader for plane %d of %s\n",
				 indx->pln, file->name);
			return (ERROR);
		}
#ifdef UNDEF
	} else if (fformat == INTERFILE) {
		if ((use_shif (file)) == ERROR) {
			fprintf (stderr, "ERROR [put_sh]: Error converting %s\n", file->name);
			return (ERROR);
		}
		if ((put_shif (file, indx)) == ERROR) {
			fprintf (stderr, "ERROR [put_sh]: Error writing subheader for plane %d of %s\n",
				 indx->pln, file->name);
			return (ERROR);
		}
#endif
	} else {

		fprintf (stderr, "ERROR [put_sh]: Unsupported file format %d in %s\n",
			 fformat, file->name);
		return (ERROR);
	}
	return (OK);
}
@


2.3
log
@Feb 18 (interfile)
@
text
@d1 1
a1 1
/*  $Id: put_sh.c,v 2.2 2004/02/12 22:04:10 tom Exp tom $
d3 3
d31 1
a31 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/put_sh.c,v 2.2 2004/02/12 22:04:10 tom Exp tom $";
@


2.2
log
@sync Feb 2004
@
text
@d1 1
a1 1
/*  $Id: put_sh.c,v 2.0 2004/01/02 18:40:48 tom Exp tom $
d3 3
d28 1
a28 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/put_sh.c,v 2.0 2004/01/02 18:40:48 tom Exp tom $";
@


2.0
log
@splint cleanup
@
text
@d1 1
a1 1
/*  $Id: put_sh.c,v 1.3 1999/12/13 17:45:50 tom Exp tom $
d3 3
d25 1
a25 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/put_sh.c,v 1.3 1999/12/13 17:45:50 tom Exp tom $";
@


1.3
log
@tov revision
@
text
@d1 1
a1 1
/*  $Id: put_sh.c,v 1.2 1996/07/19 14:17:18 tom Exp tom $
d3 3
d15 1
a15 1
 *  Date:           Mar-96
d20 1
d22 1
a22 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/put_sh.c,v 1.2 1996/07/19 14:17:18 tom Exp tom $";
@


1.2
log
@fix bug in dtype checking
@
text
@d1 1
a1 1
/*  $Id: put_sh.c,v 1.1 1996/04/19 19:33:20 tom Exp tom $
d3 3
d18 1
a18 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/put_sh.c,v 1.1 1996/04/19 19:33:20 tom Exp tom $";
d35 1
a35 1
	if (update_sh (file) == ERROR) {
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
/*  $Id$
    $Log$
d15 1
a15 1
static char     rcsid[] = "$Header: /home/petsun19/tom/src/libimg/RCS/cti.c,v 1.15 1996/03/12 22:43:02 tom Exp $";
d37 1
a37 1
		if (dtype == PetVolume) {
d51 1
a51 1
		if (dtype == PetImage) {
@
