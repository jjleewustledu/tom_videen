head	2.4;
access;
symbols;
locks; strict;
comment	@ * @;


2.4
date	2004.02.20.16.06.24;	author tom;	state Exp;
branches;
next	2.3;

2.3
date	2004.02.18.19.56.33;	author tom;	state Exp;
branches;
next	2.2;

2.2
date	2004.02.12.22.04.10;	author tom;	state Exp;
branches;
next	2.0;

2.0
date	2004.01.02.18.40.48;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	2001.11.21.17.01.28;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	2000.09.28.17.17.31;	author tom;	state Exp;
branches;
next	;


desc
@@


2.4
log
@Feb 2004
@
text
@/*  $Id: get_sa.c,v 2.3 2004/02/18 19:56:33 tom Exp tom $
    $Log: get_sa.c,v $
 * Revision 2.3  2004/02/18  19:56:33  tom
 * Feb 18 (interfile)
 *
 * Revision 2.2  2004/02/12  22:04:10  tom
 * sync Feb 2004
 *
 * Revision 2.0  2004/01/02  18:40:48  tom
 * splint cleanup
 *
 * Revision 1.2  2001/11/21  17:01:28  tom
 * elim param
 *
 * Revision 1.1  2000/09/28  17:17:31  tom
 * Initial revision
 * */
/* =============================================================================
 *	Function:		get_sa
 *  Date:           Sep 2000
 *  Author:         Tom Videen
 *	Description:	Read attenuation subheader.
 * =============================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/get_sa.c,v 2.3 2004/02/18 19:56:33 tom Exp tom $";
#endif

#include <stdio.h>
#include <stdlib.h>
#include <image.h>
#include <libimage.h>

int             get_sa (file, indx)
	ImageFile      *file;
	Index          *indx;
{
	int             fformat;
	DataSetType     datatype;

	fformat = file->mh->file_format;
	datatype = (DataSetType) file->mh->filetype;

	if (datatype != AttenCor){
		(void) fprintf (stderr, "ERROR [get_sa]: Unsupported file type: %s\n", file->name);
		return (ERROR);
	} else if (fformat == MATRIX_REV7) {
		if (get_sa7 (file, indx) == ERROR) {
			(void) fprintf (stderr, "ERROR [get_sa]: Cannot read subheader in %s\n", file->name);
			return (ERROR);
		}
		if (use_sa7 (file) == ERROR) {
			(void) fprintf (stderr, "ERROR [get_sa]: Cannot convert subheader in %s\n", file->name);
			return (ERROR);
		}
	} else if (fformat == MATRIX_REV6) {
		if (get_sa6 (file, indx) == ERROR) {
			(void) fprintf (stderr, "ERROR [get_sa]: Cannot read subheader in %s\n", file->name);
			return (ERROR);
		}
		if (use_sa6 (file) == ERROR) {
			(void) fprintf (stderr, "ERROR [get_sa]: Cannot convert subheader in %s\n", file->name);
			return (ERROR);
		}
	} else {
		(void) fprintf (stderr, "ERROR [get_sa]: Unsupported file type: %s\n", file->name);
		return (ERROR);
	}
	return (OK);
}
@


2.3
log
@Feb 18 (interfile)
@
text
@d1 1
a1 1
/*  $Id: get_sa.c,v 2.2 2004/02/12 22:04:10 tom Exp tom $
d3 3
d27 1
a27 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/get_sa.c,v 2.2 2004/02/12 22:04:10 tom Exp tom $";
@


2.2
log
@sync Feb 2004
@
text
@d1 1
a1 1
/*  $Id: get_sa.c,v 2.0 2004/01/02 18:40:48 tom Exp tom $
d3 3
d24 1
a24 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/get_sa.c,v 2.0 2004/01/02 18:40:48 tom Exp tom $";
@


2.0
log
@splint cleanup
@
text
@d1 1
a1 1
/*  $Id: get_sa.c,v 1.2 2001/11/21 17:01:28 tom Exp tom $
d3 3
d21 1
a21 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/get_sa.c,v 1.2 2001/11/21 17:01:28 tom Exp tom $";
@


1.2
log
@elim param
@
text
@d1 1
a1 1
/*  $Id: get_sa.c,v 1.1 2000/09/28 17:17:31 tom Exp tom $
d3 3
d11 1
a11 1
 *  Date:           Sep-2000
d16 1
d18 1
a18 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/get_sa.c,v 1.1 2000/09/28 17:17:31 tom Exp tom $";
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
/*  $Id$
    $Log$ */
d14 1
a14 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/get_sa.c,v 1.1 2000/03/13 18:23:14 tom Exp $";
d40 1
a40 1
		if (use_sa7 (file, indx) == ERROR) {
@
