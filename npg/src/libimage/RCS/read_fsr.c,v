head	2.4;
access;
symbols;
locks; strict;
comment	@ * @;


2.4
date	2004.02.20.16.06.24;	author tom;	state Exp;
branches;
next	2.3;

2.3
date	2004.02.18.19.56.33;	author tom;	state Exp;
branches;
next	2.2;

2.2
date	2004.02.12.22.04.10;	author tom;	state Exp;
branches;
next	2.0;

2.0
date	2004.01.02.18.40.48;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	2003.07.01.19.14.19;	author tom;	state Exp;
branches;
next	;


desc
@@


2.4
log
@Feb 2004
@
text
@/*  $Id: read_fsr.c,v 2.3 2004/02/18 19:56:33 tom Exp tom $
    $Log: read_fsr.c,v $
 * Revision 2.3  2004/02/18  19:56:33  tom
 * Feb 18 (interfile)
 *
 * Revision 2.2  2004/02/12  22:04:10  tom
 * sync Feb 2004
 *
 * Revision 2.0  2004/01/02  18:40:48  tom
 * splint cleanup
 *
 * Revision 1.1  2003/07/01  19:14:19  tom
 * Initial revision
 * */
/* =============================================================================
 *	Function:		read_fsr
 *  Date:           Mar 2003
 *  Author:         Tom Videen
 *	Description:	Read file structure
 * =============================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/read_fsr.c,v 2.3 2004/02/18 19:56:33 tom Exp tom $";
#endif

#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <image.h>
#include <endian.h>

int             read_fsr (fd, dir, recnum)
	FILE           *fd;
	struct directory *dir;
	int             recnum;
{
	long            dskptr;
	long            buf[LENREC_L];
	int             stat, i, j;
	long            nbytes = LENREC;

	dskptr = (recnum - 1) * LENREC;
	stat = fseek (fd, dskptr, SEEK_SET);
	if (stat != 0) {
		(void) fprintf (stderr, "ERROR [read_fsr]: fseek %d\n", stat);
		return (ERROR);
	}
	stat = fread (buf, sizeof (long), LENREC_L, fd);
	if (stat != LENREC_L) {
		(void) fprintf (stderr, "ERROR [read_fsr]: fread %d\n", stat);
		return (ERROR);
	}
	/* CONSTCOND */
	if (__BYTE_ORDER == __LITTLE_ENDIAN) {
		swap_byte ((char *) buf, nbytes);
		swap_word ((short *) buf, nbytes / 2);
	}
	dir->hdr.numfree = buf[0];
	dir->hdr.forptr = buf[1];
	dir->hdr.bakptr = buf[2];
	dir->hdr.numused = buf[3];
	j = 4;
	for (i = 0; i < DNOD_REC; i++) {
		dir->entry[i].matnum = buf[j++];
		dir->entry[i].begrec = buf[j++];
		dir->entry[i].endrec = buf[j++];
		dir->entry[i].flag = buf[j++];
	}
	return (OK);
}
@


2.3
log
@Feb 18 (interfile)
@
text
@d1 1
a1 1
/*  $Id: read_fsr.c,v 2.2 2004/02/12 22:04:10 tom Exp tom $
d3 3
d24 1
a24 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/read_fsr.c,v 2.2 2004/02/12 22:04:10 tom Exp tom $";
@


2.2
log
@sync Feb 2004
@
text
@d1 1
a1 1
/*  $Id: read_fsr.c,v 2.0 2004/01/02 18:40:48 tom Exp tom $
d3 3
d21 1
a21 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/read_fsr.c,v 2.0 2004/01/02 18:40:48 tom Exp tom $";
@


2.0
log
@splint cleanup
@
text
@d1 1
a1 1
/*  $Id: read_fsr.c,v 1.1 2003/07/01 19:14:19 tom Exp tom $
d3 3
d18 1
a18 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/read_fsr.c,v 1.1 2003/07/01 19:14:19 tom Exp tom $";
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
/*  $Id$
    $Log$ */
d13 1
d15 1
a15 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/rdrec.c,v 1.3 2002/12/19 17:37:41 tom Exp tom $";
@
