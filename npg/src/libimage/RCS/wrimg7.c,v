head	2.6;
access;
symbols;
locks; strict;
comment	@ * @;


2.6
date	2008.08.07.19.51.46;	author tom;	state Exp;
branches;
next	2.5;

2.5
date	2004.08.31.14.44.06;	author tom;	state Exp;
branches;
next	2.4;

2.4
date	2004.02.20.16.06.24;	author tom;	state Exp;
branches;
next	2.3;

2.3
date	2004.02.18.19.56.33;	author tom;	state Exp;
branches;
next	2.2;

2.2
date	2004.02.12.22.04.10;	author tom;	state Exp;
branches;
next	2.0;

2.0
date	2004.01.02.18.40.48;	author tom;	state Exp;
branches;
next	1.12;

1.12
date	2003.07.01.19.14.19;	author tom;	state Exp;
branches;
next	1.11;

1.11
date	2002.12.17.21.55.15;	author tom;	state Exp;
branches;
next	1.10;

1.10
date	2002.05.30.13.58.03;	author tom;	state Exp;
branches;
next	1.9;

1.9
date	2001.10.04.14.23.46;	author tom;	state Exp;
branches;
next	1.8;

1.8
date	2000.09.27.19.03.28;	author tom;	state Exp;
branches;
next	1.7;

1.7
date	2000.07.12.19.51.08;	author tom;	state Exp;
branches;
next	1.6;

1.6
date	99.12.13.17.45.50;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	97.05.12.20.11.35;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	96.08.26.17.47.44;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	96.08.22.17.29.13;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	96.08.05.14.13.54;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	96.04.19.19.33.20;	author tom;	state Exp;
branches;
next	;


desc
@@


2.6
log
@*** empty log message ***
@
text
@/*  $Id: wrimg7.c,v 2.5 2004/08/31 14:44:06 tom Exp tom $
    $Log: wrimg7.c,v $
 * Revision 2.5  2004/08/31  14:44:06  tom
 * Focus 220
 *
 * Revision 2.4  2004/02/20  16:06:24  tom
 * Feb 2004
 *
 * Revision 2.3  2004/02/18  19:56:33  tom
 * Feb 18 (interfile)
 *
 * Revision 2.2  2004/02/12  22:04:10  tom
 * sync Feb 2004
 *
 * Revision 2.0  2004/01/02  18:40:48  tom
 * splint cleanup
 *
 * Revision 1.12  2003/07/01  19:14:19  tom
 * *** empty log message ***
 *
 * Revision 1.11  2002/12/17  21:55:15  tom
 * fix pointer/cast errors found with gcc
 *
    Revision 1.10  2002/05/30 13:58:03  tom
    use REVNSCALE for non-calibrated images

 * Revision 1.9  2001/10/04  14:23:46  tom
 * prevent zero divide
 *
 * Revision 1.8  2000/09/27  19:03:28  tom
 * *** empty log message ***
 *
 * Revision 1.7  2000/07/12  19:51:08  tom
 * *** empty log message ***
 *
 * Revision 1.6  1999/12/13  17:45:50  tom
 * tov revision
 *
 * Revision 1.5  1997/05/12  20:11:35  tom
 * fix error in computing reclen
 *
 * Revision 1.4  1996/08/26  17:47:44  tom
 * fix scaling
 * >> .
 *
 * Revision 1.3  1996/08/22  17:29:13  tom
 * correct scaling min/max
 *
 * Revision 1.2  1996/08/05  14:13:54  tom
 * move scaling from writetensor & wrtensor to this function
 *
 * Revision 1.1  1996/04/19  19:33:20  tom
 * Initial revision
 *
 */
/* =============================================================================
 *	Function:		wrimg7
 *  Date:           Mar 2003
 *  Author:         Tom Videen
 *	Description:	Write image data for Version 7 file.
 *	Notes:
 *			Writes one frame with a subheader.
 *			If (sh7->scale_factor = 0) or (mh7->calibration_factor = 0) or (indx->pln = 0)
 *			a sh7->scale_factor will be recomputed.
 * =============================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/wrimg7.c,v 2.5 2004/08/31 14:44:06 tom Exp tom $";
#endif

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <image.h>
#include <libimage.h>
#include <endian.h>

#define MAXSCL 16383.0

int             wrimg7 (file, indx, img)
	ImageFile      *file;
	Index          *indx;
	float          *img;
{
	Main_header7   *mh7;
	Image_subheader7 *sh7;
	DataSetType     dtype;
	char           *fname;
	short          *simg;
	float           scaler, max, min;
	int             xdim, ydim, zdim;
	int             begrec, endrec;
	int             matnum, i;
	int             status;
	int             nrec;
    int             scatter_corrected;
	long            len;
	int             pln1 = 1;

	fname = file->name;
	if (file->m7 == NULL) {
		(void) fprintf (stderr, "ERROR [wrimg7]: Version 7 header is not defined for %s\n", fname);
		return (ERROR);
	}
	if (file->m7->mh == NULL) {
		(void) fprintf (stderr, "ERROR [wrimg7]: Version 7 mainheader is not defined for %s\n", fname);
		return (ERROR);
	}
	mh7 = file->m7->mh;
	if (file->m7->sh == NULL) {
		(void) fprintf (stderr, "ERROR [wrimg7]: Version 7 subheader is not defined for %s\n", fname);
		return (ERROR);
	}
	sh7 = file->m7->sh;
	dtype = (DataSetType) mh7->file_type;
	if (dtype != PetVolume) {
		(void) fprintf (stderr, "ERROR [wrimg7]: Unsupported file type %d in %s\n", dtype, fname);
		return (ERROR);
	}
	xdim = sh7->x_dimension;
	ydim = sh7->y_dimension;
	zdim = sh7->z_dimension;
	len = xdim * ydim * zdim;

	if ((matnum = numcode7 (indx->frm, pln1, indx->gate, indx->data, indx->bed)) == 0) {
		(void) fprintf (stderr, "ERROR [wrimg7]: Could not get matrix number for %s\n", fname);
		return (ERROR);
	}

/*	Scale the data */

    if ((sh7->filter_scatter_fraction > 0) && (sh7->filter_scatter_slope > 0)
        || ((sh7->processing_code & 64) > 0) || ((sh7->processing_code & 128) > 0))
        scatter_corrected = 1;
    else
        scatter_corrected = 0;

	if (mh7->system_type == 220)
		scaler = 1.0;
	else if (sh7->frame_duration == 0)
		scaler = 1.0 / ATNSCALER;
	else if (strncmp (mh7->data_units, "1/cm", 4) == 0)
		scaler = 1.0 / ATNSCALER;
	else if (mh7->calibration_factor == 1 || scatter_corrected == 0)	/* non-quantitative 7.0 image */
		scaler = 1.0 / (REV7NSCALE * (float) file->sh->duration);
	else	/* quantitative image */
		scaler = 1.0 / (REV7SCALER * (float) file->sh->duration);
	if (sh7->decay_corr_fctr > 1)
		scaler *= sh7->decay_corr_fctr;

	min = 0;
	max = 0;
	for (i = 0; i < len; i++) {
		img[i] *= scaler;
		if (img[i] > max)
			max = img[i];
		if (img[i] < min)
			min = img[i];
	}
	if (max > -min)
		scaler = MAXSCL / max;
	else if (min != 0)
		scaler = -MAXSCL / min;
	else
		scaler = 0;
	max = max * scaler;
	min = min * scaler;
	sh7->image_max = (short) max;
	sh7->image_min = (short) min;
	if (scaler != 0)
		sh7->scale_factor = 1.0 / (scaler * mh7->calibration_factor);
	else
		sh7->scale_factor = 1.0;

	simg = (short *) calloc (len, sizeof (short));
	if (simg == NULL) {
		(void) fprintf (stderr, "ERROR [wrimg7]: Could not calloc memory for img\n");
		return (ERROR);
	}
	for (i = 0; i < len; i++)
		simg[i] = scaler * img[i];

	if (len % LENREC_S == 0)
		nrec = len / LENREC_S;
	else
		nrec = len / LENREC_S + 1;

	if ((begrec = getmatpos (file, matnum, &endrec)) == ERROR) {
		if ((begrec = create_dir7 (file, matnum, nrec)) < 0) {
			(void) fprintf (stderr, "ERROR [wrimg7]: Could not create entry for matrix #%x in %s\n",
					(unsigned) matnum, fname);
			free (simg);
			return (ERROR);
		}
	}
	if (put_sh7 (file, indx) == ERROR) {
		(void) fprintf (stderr, "ERROR [wrimg7]: Could not write subheader to %s frame %d\n",
				fname, indx->frm);
		free (simg);
		return (ERROR);
	}
	/* CONSTCOND  */
	if (__BYTE_ORDER == __LITTLE_ENDIAN)
		swap_byte ((char *) simg, len * (long) sizeof (short));

	status = wrtrec (file->fp, (char *) simg, begrec + NUMREC_ISHDR, nrec);
	free (simg);
	return (status);
}
@


2.5
log
@Focus 220
@
text
@d1 1
a1 1
/*  $Id: wrimg7.c,v 2.4 2004/02/20 16:06:24 tom Exp tom $
d3 3
d69 1
a69 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/wrimg7.c,v 2.4 2004/02/20 16:06:24 tom Exp tom $";
d140 1
a140 1
		scaler = 1;
d142 1
a142 1
		scaler = 1. / ATNSCALER;
d144 1
a144 1
		scaler = 1. / ATNSCALER;
d146 1
a146 1
		scaler = 1. / (REV7NSCALE * (float) file->sh->duration);
d148 3
a150 1
		scaler = 1. / (REV7SCALER * (float) file->sh->duration);
@


2.4
log
@Feb 2004
@
text
@d1 1
a1 1
/*  $Id: wrimg7.c,v 2.3 2004/02/18 19:56:33 tom Exp tom $
d3 3
d66 1
a66 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/wrimg7.c,v 2.3 2004/02/18 19:56:33 tom Exp tom $";
d88 1
a88 1
	float           scaler, scl, max, min;
d136 3
a138 6
	if (mh7->calibration_factor == 1 || scatter_corrected == 0)
		scl = REV7NSCALE;		 /* non-quantitative image and 7.0 release file */
	else
		scl = REV7SCALER;		 /* quantitative image */

	if (sh7->frame_duration == 0)
d142 4
a145 2
	else
		scaler = 1. / (scl * (float) file->sh->duration);
@


2.3
log
@Feb 18 (interfile)
@
text
@d1 1
a1 1
/*  $Id: wrimg7.c,v 2.2 2004/02/12 22:04:10 tom Exp tom $
d3 3
d63 1
a63 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/wrimg7.c,v 2.2 2004/02/12 22:04:10 tom Exp tom $";
@


2.2
log
@sync Feb 2004
@
text
@d1 1
a1 1
/*  $Id: wrimg7.c,v 2.0 2004/01/02 18:40:48 tom Exp tom $
d3 3
d60 1
a60 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/wrimg7.c,v 2.0 2004/01/02 18:40:48 tom Exp tom $";
@


2.0
log
@splint cleanup
@
text
@d1 1
a1 1
/*  $Id: wrimg7.c,v 1.12 2003/07/01 19:14:19 tom Exp tom $
d3 3
d57 1
a57 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/wrimg7.c,v 1.12 2003/07/01 19:14:19 tom Exp tom $";
d85 1
d121 7
a127 2
	if (mh7->calibration_factor == 1 || sh7->filter_scatter_fraction == 0
	    || sh7->filter_scatter_slope == 0)
@


1.12
log
@*** empty log message ***
@
text
@d1 1
a1 1
/*  $Id: wrimg7.c,v 1.11 2002/12/17 21:55:15 tom Exp tom $
d3 3
d52 1
a52 1

d54 1
a54 2
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/wrimg7.c,v 1.11 2002/12/17 21:55:15 tom Exp tom $";

d170 1
a170 1
					matnum, fname);
@


1.11
log
@fix pointer/cast errors found with gcc
@
text
@d1 1
a1 1
/*  $Id: wrimg7.c,v 1.10 2002/05/30 13:58:03 tom Exp tom $
d3 3
d40 1
a40 1
 *  Date:           Mar-96
d51 1
a51 1
static char     rcsid[] = "$Header: /home/tom/src/libimage/RCS/wrimg7.c,v 1.10 2002/05/30 13:58:03 tom Exp tom $";
a57 1
#include <values.h>
d60 1
d76 2
a77 2
	int             begrec, endrec, nrec_shdr;
	int             matnum, len, reclen, i;
d79 2
a106 1
	nrec_shdr = NUMREC_ISHDR;
d112 1
d128 2
a129 2
	min = MAXFLOAT;
	max = -MAXFLOAT;
d137 1
a137 1
	if (max > -min) {
d139 1
a139 3
		max = MAXSCL;
		min = min * scaler;
	} else if (min != 0) {
d141 1
a141 3
		max = max * scaler;
		min = -MAXSCL;
	} else {
d143 3
a145 3
		max = 0;
		min = 0;
	}
a146 1
	sh7->image_max = (short) max;
d161 1
a161 1
		reclen = len / LENREC_S;
d163 1
a163 1
		reclen = len / LENREC_S + 1;
d166 3
a168 3
		if ((begrec = create_dir7 (file, matnum, reclen)) < 0) {
			(void) fprintf (stderr, "ERROR [wrimg7]: Could not entry for matrix #%x in %s\n",
				 matnum, fname);
d175 1
a175 1
			 fname, indx->frm);
d179 3
d183 1
a183 3
/*	Write entire frame */

	status = wrtrec (file->fp, (char *) simg, begrec + nrec_shdr, reclen);
@


1.10
log
@use REVNSCALE for non-calibrated images
@
text
@d1 1
a1 1
/*  $Id: wrimg7.c,v 1.9 2001/10/04 14:23:46 tom Exp tom $
d3 3
d48 1
a48 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/wrimg7.c,v 1.9 2001/10/04 14:23:46 tom Exp tom $";
d104 1
a104 1
	if ((matnum = numcode7 (indx->frm, pln1, indx->gate, indx->data, indx->bed)) == NULL) {
@


1.9
log
@prevent zero divide
@
text
@d1 1
a1 1
/*  $Id: wrimg7.c,v 1.8 2000/09/27 19:03:28 tom Exp tom $
d3 3
d45 1
a45 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/wrimg7.c,v 1.8 2000/09/27 19:03:28 tom Exp tom $";
d107 2
a108 2
	if (mh7->calibration_factor == 1 && sh7->filter_scatter_fraction == 0
	    && sh7->filter_scatter_slope == 0)
@


1.8
log
@*** empty log message ***
@
text
@d1 1
a1 1
/*  $Id: wrimg7.c,v 1.7 2000/07/12 19:51:08 tom Exp tom $
d3 3
d42 1
a42 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/wrimg7.c,v 1.7 2000/07/12 19:51:08 tom Exp tom $";
d141 4
a144 1
	sh7->scale_factor = 1.0 / (scaler * mh7->calibration_factor);
@


1.7
log
@*** empty log message ***
@
text
@d1 1
a1 1
/*  $Id: wrimg7.c,v 1.6 1999/12/13 17:45:50 tom Exp tom $
d3 3
d39 1
a39 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/wrimg7.c,v 1.6 1999/12/13 17:45:50 tom Exp tom $";
d140 1
a140 1
	simg = (short *) malloc (len * sizeof (short));
d142 1
a142 1
		(void) fprintf (stderr, "ERROR [wrimg7]: Could not malloc memory for img\n");
@


1.6
log
@tov revision
@
text
@d1 1
a1 1
/*  $Id: wrimg7.c,v 1.5 1997/05/12 20:11:35 tom Exp tom $
d3 3
d36 1
a36 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/wrimg7.c,v 1.5 1997/05/12 20:11:35 tom Exp tom $";
d42 1
a42 1
#include <strings.h>
@


1.5
log
@fix error in computing reclen
@
text
@d1 1
a1 1
/*  $Id: wrimg7.c,v 1.4 1996/08/26 17:47:44 tom Exp tom $
d3 3
d33 1
a33 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/wrimg7.c,v 1.4 1996/08/26 17:47:44 tom Exp tom $";
d39 1
a39 1
#include <unistd.h>
d65 1
a65 1
		fprintf (stderr, "ERROR [wrimg7]: Version 7 header is not defined for %s\n", fname);
d69 1
a69 1
		fprintf (stderr, "ERROR [wrimg7]: Version 7 mainheader is not defined for %s\n", fname);
d74 1
a74 1
		fprintf (stderr, "ERROR [wrimg7]: Version 7 subheader is not defined for %s\n", fname);
d80 1
a80 1
		fprintf (stderr, "ERROR [wrimg7]: Unsupported file type %d in %s\n", dtype, fname);
d90 1
a90 1
		fprintf (stderr, "ERROR [wrimg7]: Could not get matrix number for %s\n", fname);
d136 1
a136 1
		fprintf (stderr, "ERROR [wrimg7]: Could not malloc memory for img\n");
d149 1
a149 1
			fprintf (stderr, "ERROR [wrimg7]: Could not entry for matrix #%x in %s\n",
d156 2
a157 2
		fprintf (stderr, "ERROR [wrimg7]: Could not write subheader to %s, ",
			 "frame %d\n", fname, indx->frm);
@


1.4
log
@fix scaling
>> .
@
text
@d1 1
a1 1
/*  $Id: wrimg7.c,v 1.3 1996/08/22 17:29:13 tom Exp tom $
d3 4
d30 1
a30 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/wrimg7.c,v 1.3 1996/08/22 17:29:13 tom Exp tom $";
d56 1
a56 1
	int             matnum, len, i;
d139 5
d145 1
a145 1
		if ((begrec = create_dir7 (file, matnum, len)) < 0) {
d158 1
d161 1
a161 6
	len *= sizeof (short);
	if (len % LENREC == 0)
		len /= LENREC;
	else
		len = len / LENREC + 1;
	status = wrtrec (file->fp, (char *) simg, begrec + nrec_shdr, len);
@


1.3
log
@correct scaling min/max
@
text
@d1 1
a1 1
/*  $Id: wrimg7.c,v 1.2 1996/08/05 14:13:54 tom Exp tom $
d3 3
d26 1
a26 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/wrimg7.c,v 1.2 1996/08/05 14:13:54 tom Exp tom $";
d114 1
a114 1
	} else if (min > 0) {
@


1.2
log
@move scaling from writetensor & wrtensor to this function
@
text
@d1 1
a1 1
/*  $Id: wrimg7.c,v 1.1 1996/04/19 19:33:20 tom Exp tom $
d3 3
d23 1
a23 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/wrimg7.c,v 1.1 1996/04/19 19:33:20 tom Exp tom $";
d99 1
a99 1
	max = MINFLOAT;
d111 1
a111 1
	} else {
d115 4
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
/*  $Id$
    $Log$
d18 1
d20 2
a21 1
static char     rcsid[] = "$Header: /home/petsun19/tom/src/libimg/RCS/cti7.c,v 1.11 1995/12/15 21:40:17 tom Exp $";
d43 1
a43 1
	float           scl, max, min;
a79 1

d82 13
a94 1
	scl = 0.;
d98 1
d105 1
a105 1
		scl = MAXSCL / max;
d107 1
a107 1
		min = min * scl;
d109 2
a110 2
		scl = -MAXSCL / min;
		max = max * scl;
d115 1
a115 1
	sh7->scale_factor = 1.0 / (scl * mh7->calibration_factor);
d123 1
a123 1
		simg[i] = scl * img[i];
a138 1

@
