head	2.4;
access;
symbols;
locks; strict;
comment	@ * @;


2.4
date	2004.02.20.16.06.24;	author tom;	state Exp;
branches;
next	2.3;

2.3
date	2004.02.18.19.56.33;	author tom;	state Exp;
branches;
next	2.2;

2.2
date	2004.02.12.22.04.10;	author tom;	state Exp;
branches;
next	2.0;

2.0
date	2004.01.02.18.40.48;	author tom;	state Exp;
branches;
next	1.6;

1.6
date	2003.07.01.19.14.19;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	2001.11.21.17.01.28;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	2000.10.12.15.41.39;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	2000.10.12.15.24.56;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	2000.07.18.20.09.18;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	2000.07.18.15.40.38;	author tom;	state Exp;
branches;
next	;


desc
@add Interfile compatibility
@


2.4
log
@Feb 2004
@
text
@/*  $Id: rdimgif.c,v 2.3 2004/02/18 19:56:33 tom Exp tom $
 *  $Log: rdimgif.c,v $
 * Revision 2.3  2004/02/18  19:56:33  tom
 * Feb 18 (interfile)
 *
 * Revision 2.2  2004/02/12  22:04:10  tom
 * sync Feb 2004
 *
 * Revision 2.0  2004/01/02  18:40:48  tom
 * splint cleanup
 *
 * Revision 1.6  2003/07/01  19:14:19  tom
 * *** empty log message ***
 *
 * Revision 1.5  2001/11/21  17:01:28  tom
 * *** empty log message ***
 *
 * Revision 1.4  2000/10/12  15:41:39  tom
 * use nbytes from ifh
 *
 * Revision 1.3  2000/10/12  15:24:56  tom
 * get correct frame offset
 *
 * Revision 1.2  2000/07/18  20:09:18  tom
 * *** empty log message ***
 *
 * Revision 1.1  2000/07/18  15:40:38  tom
 * Initial revision
 * */
/* =============================================================================
 *	Function:		rdimgif
 *  Date:           Mar 2003
 *  Author:         Tom Videen
 *	Description:	Get image data from Interfile
 * =============================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/rdimgif.c,v 2.3 2004/02/18 19:56:33 tom Exp tom $";
#endif

#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <image.h>
#include <libimage.h>
#include <endian.h>

float          *rdimgif (file, indx)
	ImageFile      *file;
	Index          *indx;
{
	MainHeader_if  *ifh;
	char           *bimg;
	short          *simg;
	float          *img;
	int             plane;
	long            frame, nbytes, i;
	long            offset, frm_offset, pln_offset;


	if (get_ifh (file, indx) == ERROR) {
		(void) fprintf (stderr, "ERROR [rdimgif]: reading header of %s\n", file->name);
		return (NULL);
	}
	ifh = (MainHeader_if *) file->ih->mh;
	nbytes = ifh->nbytes;
	plane = ifh->dim1 * ifh->dim2;
	frame = (long) ifh->dim3 * plane;
	frm_offset = (long) ((indx->frm) - 1) * frame * nbytes;
	pln_offset = (long) ((indx->pln) - 1) * plane * nbytes;
	offset = frm_offset + pln_offset;

	if (file->fp != NULL)
		if (ftell (file->fp) >= 0)
			(void) fclose (file->fp);
	file->fp = fopen (ifh->data_file, file->mode);
	if (file->fp == NULL) {
		(void) fprintf (stderr, "ERROR [rdimgif]: Could not open %s\n", ifh->data_file);
		return (NULL);
	}
	if ((fseek (file->fp, offset, SEEK_SET)) != 0) {
		(void) fprintf (stderr, "ERROR [rdimgif]: Reading %s plane %d\n", file->name, indx->pln);
		return (NULL);
	}
	if ((img = (float *) calloc (plane, sizeof (float))) == NULL) {
		(void) fprintf (stderr, "ERROR [rdimgif]: Could not calloc memory for img\n");
		return (NULL);
	}
	if (ifh->number_format == INT_DATA || ifh->number_format == SHORT_DATA) {
		simg = (short *) calloc (plane, sizeof (short));
		if (simg == NULL) {
			(void) fprintf (stderr, "ERROR [rdimgif]: calloc ximg\n");
			free (img);
			return (NULL);
		}
		if ((fread (simg, sizeof (short), plane, file->fp)) != plane) {
			(void) fprintf (stderr, "ERROR [rdimgif]: Reading %s plane %d\n", file->name, indx->pln);
			free (simg);
			free (img);
			return (NULL);
		}
		/* CONSTCOND  */
		if (__BYTE_ORDER == __LITTLE_ENDIAN)
			swap_byte ((char *) simg, (long) plane * (long) sizeof (short));
		for (i = 0; i < plane; i++)
			img[i] = (float) simg[i];
		free (simg);
	} else if (ifh->number_format == FLOAT_DATA) {
		if ((fread (img, sizeof (float), plane, file->fp)) != plane) {
			(void) fprintf (stderr, "ERROR [rdimgif]: Reading %s plane %d\n", file->name, indx->pln);
			free (img);
			return (NULL);
		}
		/* CONSTCOND  */
		if ((ifh->big_endian == 1 && __BYTE_ORDER != __BIG_ENDIAN) ||
		    (ifh->big_endian == 0 && __BYTE_ORDER != __LITTLE_ENDIAN)) {
			swap_byte ((char *) img, (long) plane * (long) sizeof (short));
			swap_word ((short *) img, (long) plane * (long) sizeof (float));
		}
	} else if (ifh->number_format == BYTE_DATA) {
		bimg = (char *) calloc (plane, nbytes);
		if (bimg == NULL) {
			(void) fprintf (stderr, "ERROR [rdimgif]: calloc bimg\n");
			free (img);
			return (NULL);
		}
		if ((fread (bimg, sizeof (char), plane, file->fp)) != plane) {
			(void) fprintf (stderr, "ERROR [rdimgif]: Reading %s plane %d\n", file->name, indx->pln);
			free (bimg);
			free (img);
			return (NULL);
		}
		for (i = 0; i < plane; i++)
			img[i] = (float) bimg[i];
		free (bimg);
	}

/*
	Deadtime, Decay and Scaling are already incorporated in FOCUS images

	FrameHeader_if *iff;
	iff = (FrameHeader_if *) file->ih->fh;
	for (i = 0; i < plane; i++)
		img[i] *= iff->scale_factor * iff->deadtime_correction * iff->decay_correction;
*/

	return (img);
}
@


2.3
log
@Feb 18 (interfile)
@
text
@d1 1
a1 1
/*  $Id: rdimgif.c,v 2.2 2004/02/12 22:04:10 tom Exp tom $
d3 3
d39 1
a39 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/rdimgif.c,v 2.2 2004/02/12 22:04:10 tom Exp tom $";
@


2.2
log
@sync Feb 2004
@
text
@d1 1
a1 1
/*  $Id: rdimgif.c,v 2.0 2004/01/02 18:40:48 tom Exp tom $
d3 3
d36 1
a36 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/rdimgif.c,v 2.0 2004/01/02 18:40:48 tom Exp tom $";
d59 2
a60 2
	if (get_ifh (file) == ERROR) {
		(void) fprintf (stderr, "ERROR [rdimgif]: Could not read header of %s\n", file->name);
d135 10
@


2.0
log
@splint cleanup
@
text
@d1 1
a1 1
/*  $Id: rdimgif.c,v 1.6 2003/07/01 19:14:19 tom Exp tom $
d3 3
d33 1
a33 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/rdimgif.c,v 1.6 2003/07/01 19:14:19 tom Exp tom $";
@


1.6
log
@*** empty log message ***
@
text
@d1 1
a1 1
/*  $Id: rdimgif.c,v 1.5 2001/11/21 17:01:28 tom Exp tom $
d3 3
d28 1
d30 1
a30 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/rdimgif.c,v 1.5 2001/11/21 17:01:28 tom Exp tom $";
d83 5
d90 2
d103 1
d114 5
d121 2
@


1.5
log
@*** empty log message ***
@
text
@d1 1
a1 1
/*  $Id: rdimgif.c,v 1.4 2000/10/12 15:41:39 tom Exp tom $
d3 3
d20 1
a20 1
 *  Date:           Jul 2000
d26 1
a26 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/rdimgif.c,v 1.4 2000/10/12 15:41:39 tom Exp tom $";
d34 1
d44 2
a45 1
	long            frame, plane, nbytes, i;
d55 1
a55 1
	plane = (long) ifh->dim1 * (long) ifh->dim2;
d57 3
a59 3
    frm_offset = (long) ((indx->frm) - 1) * frame * nbytes;
    pln_offset = (long) ((indx->pln) - 1) * plane * nbytes;
    offset = frm_offset + pln_offset;
d61 5
a65 5
    if (file->fp != NULL)
		if (ftell(file->fp) >= 0)
        	(void) fclose (file->fp);
    file->fp = fopen (ifh->data_file, file->mode);
    if (file->fp == NULL) {
d83 3
d94 6
@


1.4
log
@use nbytes from ifh
@
text
@d1 1
a1 1
/*  $Id: rdimgif.c,v 1.3 2000/10/12 15:24:56 tom Exp tom $
d3 3
d23 1
a23 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/rdimgif.c,v 1.3 2000/10/12 15:24:56 tom Exp tom $";
d94 1
a94 1
		free (simg);
@


1.3
log
@get correct frame offset
@
text
@d1 1
a1 1
/*  $Id: rdimgif.c,v 1.2 2000/07/18 20:09:18 tom Exp tom $
d3 3
d20 1
a20 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/rdimgif.c,v 1.2 2000/07/18 20:09:18 tom Exp tom $";
d46 1
a46 9
	if (ifh->number_format == INT_DATA)
		nbytes = sizeof (int);
	else if (ifh->number_format == SHORT_DATA)
		nbytes = sizeof (short);
	else if (ifh->number_format == FLOAT_DATA)
		nbytes = sizeof (float);
	else if (ifh->number_format == BYTE_DATA)
		nbytes = sizeof (char);

@


1.2
log
@*** empty log message ***
@
text
@d1 1
a1 1
/*  $Id: rdimgif.c,v 1.1 2000/07/18 15:40:38 tom Exp $
d3 3
d17 1
a17 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/rdimgif.c,v 1.1 2000/07/18 15:40:38 tom Exp $";
d34 2
a35 1
	long            offset, len, nbytes, i;
a42 1
	len = (long) ifh->dim1 * (long) ifh->dim2;
a50 1
	offset = (long) ((indx->frm) - 1) * len * nbytes;
d52 6
d70 1
a70 1
	if ((img = (float *) calloc (len, nbytes)) == NULL) {
d75 2
a76 2
		simg = (short *) calloc (len, sizeof (short));
		if ((fread (simg, sizeof (short), len, file->fp)) != len) {
d80 1
a80 1
		for (i = 0; i < len; i++)
d84 1
a84 1
		if ((fread (img, sizeof (float), len, file->fp)) != len) {
d89 2
a90 2
		bimg = (char *) calloc (len, nbytes);
		if ((fread (bimg, sizeof (char), len, file->fp)) != len) {
d94 1
a94 1
		for (i = 0; i < len; i++)
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
/*  $Id$
 *  $Log$ */
d14 1
a14 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/rdimgif.c,v 1.3 1999/12/13 17:45:50 tom Exp $";
d40 9
a48 2
	nbytes = len * (long) ifh->nbytes;
	offset = (long) ((indx->frm) - 1) * nbytes;
d51 2
a52 1
        (void) fclose (file->fp);
d62 2
a63 2
	if ((img = (float *) malloc (nbytes)) == NULL) {
		(void) fprintf (stderr, "ERROR [rdimgif]: Could not malloc memory for img\n");
d67 1
a67 1
		simg = (short *) malloc (nbytes);
d81 1
a81 1
		bimg = (char *) malloc (nbytes);
@
