head	2.4;
access;
symbols;
locks; strict;
comment	@ * @;


2.4
date	2004.02.20.16.06.24;	author tom;	state Exp;
branches;
next	2.3;

2.3
date	2004.02.18.19.56.33;	author tom;	state Exp;
branches;
next	2.2;

2.2
date	2004.02.12.22.04.10;	author tom;	state Exp;
branches;
next	2.0;

2.0
date	2004.01.02.18.40.48;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	2003.07.01.19.14.19;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	2003.02.14.21.03.44;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	2000.09.28.14.44.29;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	2000.01.20.21.29.59;	author tom;	state Exp;
branches;
next	;


desc
@@


2.4
log
@Feb 2004
@
text
@/*  $Log: put_sa7.c,v $
 * Revision 2.3  2004/02/18  19:56:33  tom
 * Feb 18 (interfile)
 *
 * Revision 2.2  2004/02/12  22:04:10  tom
 * sync Feb 2004
 *
 * Revision 2.0  2004/01/02  18:40:48  tom
 * splint cleanup
 *
 * Revision 1.4  2003/07/01  19:14:19  tom
 * *** empty log message ***
 *
 * Revision 1.3  2003/02/14  21:03:44  tom
 * fix storage_order, span
 *
 * Revision 1.2  2000/09/28  14:44:29  tom
 * calloc
 *
 * Revision 1.1  2000/01/20  21:29:59  tom
 * Initial revision
 * */
/* =============================================================================
 *	Function:		put_sa7
 *  Date:           Mar 2003
 *  Author:         Tom Videen
 *	Description:	Write attencor subheader for Version 7 file.
 * =============================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/put_sa7.c,v 2.3 2004/02/18 19:56:33 tom Exp tom $";
#endif

#include <stdio.h>
#include <stdlib.h>
#include <image.h>
#include <libimage.h>
#include <endian.h>

int             put_sa7 (file, indx)
	ImageFile      *file;
	Index          *indx;
{
	short           sbuf[NUMREC_ASHDR * LENREC_S];

	union temp_long {
		float           f;
		short           s[2];
	}               conv;

	Attn_subheader7 *atn;
	int             matnum, begrec, endrec;
	int             i, j;
	int             pln1 = 1;
	int             nrec = NUMREC_ASHDR;
	long            nbytes = nrec * LENREC;
	int             ALEN = 24183;

	if (file->m7->atn == NULL) {
		(void) fprintf (stderr, "ERROR [put_sa7]: Version 7 subheader undefined for %s\n", file->name);
		return (ERROR);
	}
	atn = file->m7->atn;

	/* Shorts  */
	/* CONSTCOND  */
	if (__BYTE_ORDER == __LITTLE_ENDIAN) {
		swap_byte ((char *) sbuf, nbytes);
		j = 1;
	} else
		j = 0;

	sbuf[0] = atn->data_type;
	sbuf[1] = atn->num_dimensions;
	sbuf[2] = atn->attenuation_type;
	sbuf[3] = atn->num_r_elements;
	sbuf[4] = atn->num_angles;
	sbuf[5] = atn->num_z_elements;
	sbuf[6] = atn->ring_difference;
	sbuf[35] = atn->num_additional_atten_coeff;
	sbuf[54] = atn->storage_order;
	sbuf[55] = atn->span;
	for (i = 0; i < 64; i++)
		sbuf[56 + i] = atn->z_elements[i];

	/* Longs and Floats	 */

	conv.f = atn->x_resolution;
	sbuf[7] = conv.s[0 + j];
	sbuf[8] = conv.s[1 + j];

	conv.f = atn->y_resolution;
	sbuf[9] = conv.s[0 + j];
	sbuf[10] = conv.s[1 + j];

	conv.f = atn->z_resolution;
	sbuf[11] = conv.s[0 + j];
	sbuf[12] = conv.s[1 + j];

	conv.f = atn->w_resolution;
	sbuf[13] = conv.s[0 + j];
	sbuf[14] = conv.s[1 + j];

	conv.f = atn->scale_factor;
	sbuf[15] = conv.s[0 + j];
	sbuf[16] = conv.s[1 + j];

	conv.f = atn->x_offset;
	sbuf[17] = conv.s[0 + j];
	sbuf[18] = conv.s[1 + j];

	conv.f = atn->y_offset;
	sbuf[19] = conv.s[0 + j];
	sbuf[20] = conv.s[1 + j];

	conv.f = atn->x_radius;
	sbuf[21] = conv.s[0 + j];
	sbuf[22] = conv.s[1 + j];

	conv.f = atn->y_radius;
	sbuf[23] = conv.s[0 + j];
	sbuf[24] = conv.s[1 + j];

	conv.f = atn->tilt_angle;
	sbuf[25] = conv.s[0 + j];
	sbuf[26] = conv.s[1 + j];

	conv.f = atn->attenuation_coeff;
	sbuf[27] = conv.s[0 + j];
	sbuf[28] = conv.s[1 + j];

	conv.f = atn->attenuation_min;
	sbuf[29] = conv.s[0 + j];
	sbuf[30] = conv.s[1 + j];

	conv.f = atn->attenuation_max;
	sbuf[31] = conv.s[0 + j];
	sbuf[32] = conv.s[1 + j];

	conv.f = atn->skull_thickness;
	sbuf[33] = conv.s[0 + j];
	sbuf[34] = conv.s[1 + j];

	for (i = 0; i < 8; i++)
		conv.f = atn->additional_atten_coeff[i];
	sbuf[36 + i] = conv.s[0 + j];
	sbuf[37 + i] = conv.s[1 - j];

	conv.f = atn->edge_finding_threshold;
	sbuf[52] = conv.s[0 + j];
	sbuf[53] = conv.s[1 - j];

	matnum = numcode7 (indx->frm, pln1, indx->gate, indx->data, indx->bed);
	if ((begrec = getmatpos (file, matnum, &endrec)) == ERROR) {
		if ((begrec = create_dir7 (file, matnum, ALEN)) < 0) {
			(void) fprintf (stderr, "ERROR [put_sa7]: Could not entry for matrix #%x\n", (unsigned) matnum);
			return (ERROR);
		}
	}
	if (wrtrec (file->fp, (char *) sbuf, begrec, nrec) == ERROR) {
		(void) fprintf (stderr, "ERROR [put_sa7]: writing subheader\n");
		return (ERROR);
	} else
		return (OK);
}
@


2.3
log
@Feb 18 (interfile)
@
text
@d2 3
d32 1
a32 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/put_sa7.c,v 2.2 2004/02/12 22:04:10 tom Exp tom $";
@


2.2
log
@sync Feb 2004
@
text
@d2 3
d29 1
a29 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/put_sa7.c,v 2.0 2004/01/02 18:40:48 tom Exp tom $";
@


2.0
log
@splint cleanup
@
text
@d2 3
d26 1
a26 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/put_sa7.c,v 1.4 2003/07/01 19:14:19 tom Exp tom $";
@


1.4
log
@*** empty log message ***
@
text
@d2 3
d21 1
d23 1
a23 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/put_sa7.c,v 1.3 2003/02/14 21:03:44 tom Exp tom $";
d148 1
a148 1
			(void) fprintf (stderr, "ERROR [put_sa7]: Could not entry for matrix #%x\n", matnum);
@


1.3
log
@fix storage_order, span
@
text
@d2 3
d13 1
a13 1
 *  Date:           Jan-00
d19 1
a19 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/put_sa7.c,v 1.2 2000/09/28 14:44:29 tom Exp tom $";
d26 1
d32 1
a32 4
	union temporary {
		float           f[NUMREC_ASHDR * LENREC_L];
		short           s[NUMREC_ASHDR * LENREC_S];
	}               tmp;
d34 4
a37 4
    union temp_long {
        float           f;
        short           s[2];
    }               tmpl;
d40 5
a44 2
	int             len, matnum, begrec, endrec;
	int             i, pln1 = 1;
a51 7
	tmp.s[0] = atn->data_type;
	tmp.s[1] = atn->num_dimensions;
	tmp.s[2] = atn->attenuation_type;
	tmp.s[3] = atn->num_r_elements;
	tmp.s[4] = atn->num_angles;
	tmp.s[5] = atn->num_z_elements;
	tmp.s[6] = atn->ring_difference;
d53 7
a59 3
	tmpl.f =atn->x_resolution;
    tmp.s[7] = tmpl.s[0];
    tmp.s[8] = tmpl.s[1];
d61 12
a72 3
	tmpl.f =atn->y_resolution;
    tmp.s[9] = tmpl.s[0];
    tmp.s[10] = tmpl.s[1];
d74 1
a74 3
	tmpl.f =atn->z_resolution;
    tmp.s[11] = tmpl.s[0];
    tmp.s[12] = tmpl.s[1];
d76 3
a78 3
	tmpl.f =atn->w_resolution;
    tmp.s[13] = tmpl.s[0];
    tmp.s[14] = tmpl.s[1];
d80 3
a82 3
	tmpl.f =atn->scale_factor;
    tmp.s[15] = tmpl.s[0];
    tmp.s[16] = tmpl.s[1];
d84 3
a86 3
	tmpl.f =atn->x_offset;
    tmp.s[17] = tmpl.s[0];
    tmp.s[18] = tmpl.s[1];
d88 3
a90 3
	tmpl.f =atn->y_offset;
    tmp.s[19] = tmpl.s[0];
    tmp.s[20] = tmpl.s[1];
d92 3
a94 3
	tmpl.f =atn->x_radius;
    tmp.s[21] = tmpl.s[0];
    tmp.s[22] = tmpl.s[1];
d96 3
a98 3
	tmpl.f =atn->y_radius;
    tmp.s[23] = tmpl.s[0];
    tmp.s[24] = tmpl.s[1];
d100 3
a102 3
	tmpl.f =atn->tilt_angle;
    tmp.s[25] = tmpl.s[0];
    tmp.s[26] = tmpl.s[1];
d104 3
a106 3
	tmpl.f =atn->attenuation_coeff;
    tmp.s[27] = tmpl.s[0];
    tmp.s[28] = tmpl.s[1];
d108 3
a110 3
	tmpl.f =atn->attenuation_min;
    tmp.s[29] = tmpl.s[0];
    tmp.s[30] = tmpl.s[1];
d112 3
a114 3
	tmpl.f =atn->attenuation_max;
    tmp.s[31] = tmpl.s[0];
    tmp.s[32] = tmpl.s[1];
d116 3
a118 3
	tmpl.f =atn->skull_thickness;
    tmp.s[33] = tmpl.s[0];
    tmp.s[34] = tmpl.s[1];
d120 3
a122 8
	tmp.s[35] = atn->num_additional_atten_coeff;
	for (i = 0; i < 8; i++) 
		tmp.f[18 + i] = atn->additional_atten_coeff[i];
	tmp.f[26] = atn->edge_finding_threshold;
	tmp.s[54] = atn->storage_order;
	tmp.s[55] = atn->span;
	for (i = 0; i < 64; i++)
		tmp.s[56 + i] = atn->z_elements[i];
d124 17
a141 1
	len = NUMREC_ASHDR;
d148 2
a149 1
	if (wrtrec (file->fp, (char *) tmp.s, begrec, len) == ERROR)
d151 1
a151 1
	else
@


1.2
log
@calloc
@
text
@d2 3
d16 1
a16 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/put_sa7.c,v 1.1 2000/01/20 21:29:59 tom Exp tom $";
d116 2
a117 2
	tmp.s[53] = atn->storage_order;
	tmp.s[54] = atn->span;
d119 1
a119 1
		tmp.s[55 + i] = atn->z_elements[i];
@


1.1
log
@Initial revision
@
text
@d1 4
a4 1
/*  $Log$ */
d13 1
a13 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/put_sa7.c,v 1.4 1999/12/13 17:45:50 tom Exp $";
d38 1
d121 1
a121 1
		if ((begrec = create_dir7 (file, matnum, len)) < 0) {
@
