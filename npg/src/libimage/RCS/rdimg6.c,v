head	2.5;
access;
symbols;
locks; strict;
comment	@ * @;


2.5
date	2008.08.07.19.51.46;	author tom;	state Exp;
branches;
next	2.4;

2.4
date	2004.02.20.16.06.24;	author tom;	state Exp;
branches;
next	2.3;

2.3
date	2004.02.18.19.56.33;	author tom;	state Exp;
branches;
next	2.2;

2.2
date	2004.02.12.22.04.10;	author tom;	state Exp;
branches;
next	2.0;

2.0
date	2004.01.02.18.40.48;	author tom;	state Exp;
branches;
next	1.8;

1.8
date	2002.12.17.21.55.15;	author tom;	state Exp;
branches;
next	1.7;

1.7
date	99.12.13.17.45.50;	author tom;	state Exp;
branches;
next	1.6;

1.6
date	97.11.24.17.57.04;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	97.06.02.21.04.55;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	97.06.02.20.55.11;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	96.08.05.14.12.51;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	96.04.24.22.36.52;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	96.04.19.19.33.20;	author tom;	state Exp;
branches;
next	;


desc
@@


2.5
log
@*** empty log message ***
@
text
@/*  $Id: rdimg6.c,v 2.4 2004/02/20 16:06:24 tom Exp tom $
    $Log: rdimg6.c,v $
 * Revision 2.4  2004/02/20  16:06:24  tom
 * Feb 2004
 *
 * Revision 2.3  2004/02/18  19:56:33  tom
 * Feb 18 (interfile)
 *
 * Revision 2.2  2004/02/12  22:04:10  tom
 * sync Feb 2004
 *
 * Revision 2.0  2004/01/02  18:40:48  tom
 * splint cleanup
 *
 * Revision 1.8  2002/12/17  21:55:15  tom
 * fix pointer/cast errors found with gcc
 *
    Revision 1.7  1999/12/13 17:45:50  tom
    tov revision

 * Revision 1.6  1997/11/24  17:57:04  tom
 * update sh start_time and duration
 *
 * Revision 1.5  1997/06/02  21:04:55  tom
 * MAXFLOAT
 *
 * Revision 1.4  1997/06/02  20:55:11  tom
 * check quant_scale for Inf
 *
 * Revision 1.3  1996/08/05  14:12:51  tom
 * move scaling from readtensor & rdtensor to this function
 *
 * Revision 1.2  1996/04/24  22:36:52  tom
 * make sure sh6->ecat_calibration_fctr is not zero
 *
 * Revision 1.1  1996/04/19  19:33:20  tom
 * Initial revision
 *
 */
/* =============================================================================
 *	Function:		rdimg6
 *  Date:           Mar 1996
 *  Author:         Tom Videen
 *	Description:	Get image data from Version 6 file.
 * =============================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/rdimg6.c,v 2.4 2004/02/20 16:06:24 tom Exp tom $";
#endif

#include <stdio.h>
#include <stdlib.h>
#include <values.h>
#include <image.h>

float          *rdimg6 (file, indx)
	ImageFile      *file;
	Index          *indx;
{
	Image_subheader *sh6;
	DataSetType     dtype;
	MatrixData     *mdata;
	float          *img;
	float           scaler;
	short          *simg;
	int             xdim, ydim;
	int             data_type;
	int             matnum;
	int             i;

	dtype = (DataSetType) file->m6->mh->file_type;
	if (dtype != PetVolume && dtype != PetImage) {
		(void) fprintf (stderr, "ERROR [rdimg6]: Unsupported file type %d for %s\n", dtype, file->name);
		return (NULL);
	}
	if (file->m6->mfp == NULL) {
		(void) fprintf (stderr, "ERROR [rdimg6]: Could not get file pointer for %s\n", file->name);
		return (NULL);
	}
	if ((matnum = mat_numcod (indx->frm, indx->pln, indx->gate, indx->data, indx->bed)) == 0) {
		(void) fprintf (stderr, "ERROR [rdimg6]: Could not get matrix number for %s\n", file->name);
		return (NULL);
	}
	mdata = matrix_read (file->m6->mfp, matnum);
	if (mdata == NULL) {
		(void) fprintf (stderr, "ERROR [rdimg6]: Could not read mdata for %s\n", file->name);
		return (NULL);
	}
	file->m6->sh = (Image_subheader *) mdata->shptr;
	sh6 = file->m6->sh;

	if (sh6->frame_duration == 0)
		scaler = ATNSCALER;
	else
		scaler = (float) sh6->frame_duration;
	if (sh6->quant_scale > 0)
		scaler *= sh6->quant_scale;
	if (sh6->ecat_calibration_fctr > 0)
		scaler *= sh6->ecat_calibration_fctr;
	else
		sh6->ecat_calibration_fctr = 1.0;
	if (scaler >= MAXFLOAT)
		scaler = 0.;
	if (sh6->decay_corr_fctr > 1)
		scaler = scaler/sh6->decay_corr_fctr;

	xdim = sh6->dimension_1;
	ydim = sh6->dimension_2;
	data_type = sh6->data_type;
	file->sh->start_time = sh6->frame_start_time;
	file->sh->duration = sh6->frame_duration;

	if ((data_type == SUN_I2) | (data_type == VAX_I2)) {
		img = (float *) calloc (xdim * ydim, sizeof (float));
		if (img == NULL) {
			(void) fprintf (stderr, "ERROR [rdimg6]: calloc img\n");
			return (NULL);
		}
		simg = (short *) mdata->data_ptr;
		for (i = 0; i < xdim * ydim; i++)
			img[i] = scaler * simg[i];
		free (simg);
	} else if (data_type == IEEE_R4) {
		img = (float *) mdata->data_ptr;
		for (i = 0; i < xdim * ydim; i++)
			img[i] *= scaler;
	} else {
		img = NULL;
		(void) fprintf (stderr, "ERROR [rdimg6]: Unsupported data type in %s plane %d\n",
			 file->name, indx->pln);
		(void) free_matrix_data (mdata);
	}
	return (img);
}
@


2.4
log
@Feb 2004
@
text
@d1 1
a1 1
/*  $Id: rdimg6.c,v 2.3 2004/02/18 19:56:33 tom Exp tom $
d3 3
d49 1
a49 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/rdimg6.c,v 2.3 2004/02/18 19:56:33 tom Exp tom $";
d105 2
@


2.3
log
@Feb 18 (interfile)
@
text
@d1 1
a1 1
/*  $Id: rdimg6.c,v 2.2 2004/02/12 22:04:10 tom Exp $
d3 3
d46 1
a46 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/rdimg6.c,v 2.2 2004/02/12 22:04:10 tom Exp $";
@


2.2
log
@sync Feb 2004
@
text
@d1 1
a1 1
/*  $Id: rdimg6.c,v 2.0 2004/01/02 18:40:48 tom Exp tom $
d3 3
d43 1
a43 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/rdimg6.c,v 2.0 2004/01/02 18:40:48 tom Exp tom $";
d121 1
@


2.0
log
@splint cleanup
@
text
@d1 1
a1 1
/*  $Id: rdimg6.c,v 1.8 2002/12/17 21:55:15 tom Exp tom $
d3 3
d40 1
a40 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/rdimg6.c,v 1.8 2002/12/17 21:55:15 tom Exp tom $";
d55 1
a55 1
	float          *img = NULL;
d104 1
a104 1
		img = (float *) malloc (xdim * ydim * sizeof (float));
d106 1
a106 1
			(void) fprintf (stderr, "ERROR [rdimg6]: Could not malloc memory for img\n");
@


1.8
log
@fix pointer/cast errors found with gcc
@
text
@d1 1
a1 1
/*  $Id: rdimg6.c,v 1.7 1999/12/13 17:45:50 tom Exp tom $
d3 3
d30 1
a30 1
 *  Date:           Mar-96
d35 1
a35 1

d37 1
a37 2
static char     rcsid[] = "$Header: /home/tom/src/libimage/RCS/rdimg6.c,v 1.7 1999/12/13 17:45:50 tom Exp tom $";

d117 1
a117 1
		free_matrix_data (mdata);
@


1.7
log
@tov revision
@
text
@d1 1
a1 1
/*  $Id: rdimg6.c,v 1.6 1997/11/24 17:57:04 tom Exp tom $
d3 3
d34 1
a34 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/rdimg6.c,v 1.6 1997/11/24 17:57:04 tom Exp tom $";
d67 1
a67 1
	if ((matnum = mat_numcod (indx->frm, indx->pln, indx->gate, indx->data, indx->bed)) == NULL) {
@


1.6
log
@update sh start_time and duration
@
text
@d1 1
a1 1
/*  $Id: rdimg6.c,v 1.5 1997/06/02 21:04:55 tom Exp tom $
d3 3
d31 1
a31 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/rdimg6.c,v 1.5 1997/06/02 21:04:55 tom Exp tom $";
a38 1
#include <libimage.h>
d47 2
a48 1
	float          *img, scaler;
d57 1
a57 1
		fprintf (stderr, "ERROR [rdimg6]: Unsupported file type %d for %s\n", dtype, file->name);
d61 1
a61 1
		fprintf (stderr, "ERROR [rdimg6]: Could not get file pointer for %s\n", file->name);
d65 1
a65 1
		fprintf (stderr, "ERROR [rdimg6]: Could not get matrix number for %s\n", file->name);
d70 1
a70 1
		fprintf (stderr, "ERROR [rdimg6]: Could not read mdata for %s\n", file->name);
d95 1
a95 1
	if (data_type == SUN_I2 | data_type == VAX_I2) {
d98 1
a98 1
			fprintf (stderr, "ERROR [rdimg6]: Could not malloc memory for img\n");
d110 1
a110 1
		fprintf (stderr, "ERROR [rdimg6]: Unsupported data type in %s plane %d\n",
@


1.5
log
@MAXFLOAT
@
text
@d1 1
a1 1
/*  $Id: rdimg6.c,v 1.4 1997/06/02 20:55:11 tom Exp tom $
d3 3
d28 1
a28 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/rdimg6.c,v 1.4 1997/06/02 20:55:11 tom Exp tom $";
d89 2
@


1.4
log
@check quant_scale for Inf
@
text
@d1 1
a1 1
/*  $Id: rdimg6.c,v 1.3 1996/08/05 14:12:51 tom Exp tom $
d3 3
d25 1
a25 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/rdimg6.c,v 1.3 1996/08/05 14:12:51 tom Exp tom $";
d31 1
a31 1
#include <float.h>
d80 1
a80 1
	if (scaler >= FLT_MAX)
@


1.3
log
@move scaling from readtensor & rdtensor to this function
@
text
@d1 1
a1 1
/*  $Id: rdimg6.c,v 1.2 1996/04/24 22:36:52 tom Exp tom $
d3 3
d22 1
a22 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/rdimg6.c,v 1.2 1996/04/24 22:36:52 tom Exp tom $";
d28 1
d77 2
@


1.2
log
@make sure sh6->ecat_calibration_fctr is not zero
@
text
@d1 1
a1 1
/*  $Id: rdimg6.c,v 1.1 1996/04/19 19:33:20 tom Exp tom $
d3 3
d17 1
d19 2
a20 1
static char     rcsid[] = "$Header: /home/petsun19/tom/src/libimage/RCS/rdimg6.c,v 1.1 1996/04/19 19:33:20 tom Exp tom $";
d35 1
a35 1
	float          *img, scl;
d62 5
d68 1
a68 3
		scl = sh6->quant_scale;
	else
		scl = 1.;
d70 1
a70 1
		scl *= sh6->ecat_calibration_fctr;
d73 1
d86 1
a86 1
			img[i] = scl * simg[i];
d91 1
a91 1
			img[i] *= scl;
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
/*  $Id$
    $Log$
d15 1
a15 1
static char     rcsid[] = "$Header: /home/petsun19/tom/src/libimg/RCS/cti7.c,v 1.11 1995/12/15 21:40:17 tom Exp $";
d63 2
@
