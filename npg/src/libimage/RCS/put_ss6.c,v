head	2.4;
access;
symbols;
locks; strict;
comment	@ * @;


2.4
date	2004.02.20.16.06.24;	author tom;	state Exp;
branches;
next	2.3;

2.3
date	2004.02.18.19.56.33;	author tom;	state Exp;
branches;
next	2.2;

2.2
date	2004.02.12.22.04.10;	author tom;	state Exp;
branches;
next	2.0;

2.0
date	2004.01.02.18.40.48;	author tom;	state Exp;
branches;
next	1.7;

1.7
date	2003.07.01.19.14.19;	author tom;	state Exp;
branches;
next	1.6;

1.6
date	2002.12.17.21.55.15;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	2002.03.13.21.56.41;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	2000.03.13.20.41.04;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	2000.03.13.20.26.05;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.13.20.18.09;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	2000.03.13.18.23.14;	author tom;	state Exp;
branches;
next	;


desc
@@


2.4
log
@Feb 2004
@
text
@/*  $Id: put_ss6.c,v 2.3 2004/02/18 19:56:33 tom Exp tom $
 *	$Log: put_ss6.c,v $
 * Revision 2.3  2004/02/18  19:56:33  tom
 * Feb 18 (interfile)
 *
 * Revision 2.2  2004/02/12  22:04:10  tom
 * sync Feb 2004
 *
 * Revision 2.0  2004/01/02  18:40:48  tom
 * splint cleanup
 *
 * Revision 1.7  2003/07/01  19:14:19  tom
 * *** empty log message ***
 *
 * Revision 1.6  2002/12/17  21:55:15  tom
 * fix pointer/cast errors found with gcc
 *
 *	Revision 1.5  2002/03/13 21:56:41  tom
 *	lint cleaning
 *
 * Revision 1.4  2000/03/13  20:41:04  tom
 * fix MatDir alloc
 *
 * Revision 1.3  2000/03/13  20:26:05  tom
 * declare matrix functions (in libcti)
 *
 * Revision 1.2  2000/03/13  20:18:09  tom
 * create MatDir if necessary
 *
 * Revision 1.1  2000/03/13  18:23:14  tom
 * Initial revision
 * */
/* =============================================================================
 *	Function:		put_ss6
 *  Date:           Feb 2000
 *  Author:         Tom Videen
 *	Description:	Write Version 6 ECAT sinogram subheader
 * =============================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/put_ss6.c,v 2.3 2004/02/18 19:56:33 tom Exp tom $";
#endif

#include <stdio.h>
#include <stdlib.h>
#include <image.h>

int             put_ss6 (file, indx)
	ImageFile      *file;
	Index          *indx;
{
	MatrixFile     *mfp;
	DataSetType     dtype;
	MatDirEntry    *matdir;
	int             matnum, blkno, nblks, xdim, ydim;
	int             status = OK;

	mfp = file->m6->mfp;
	if (mfp == NULL) {
		(void) fprintf (stderr, "ERROR [put_ss6]: Could not get file pointer for %s\n", file->name);
		return (ERROR);
	}
	if ((matnum = mat_numcod (indx->frm, indx->pln, indx->gate, indx->data, indx->bed)) == 0) {
		(void) fprintf (stderr, "ERROR [put_ss6]: Could not get matrix number for %s\n", file->name);
		return (ERROR);
	}
	if ((matdir = matrix_find (matnum, mfp)) == NULL) {
		xdim = file->sh->dim1;
		ydim = file->sh->dim2;
		nblks = xdim * ydim * sizeof (short) / 512;
		blkno = mat_enter (mfp->fptr, matnum, nblks);
		matdir = (MatDirEntry *) calloc (1, sizeof (MatDirEntry));
		matdir->matnum = matnum;
		matdir->strtblk = blkno;
		matdir->endblk = matdir->strtblk + nblks - 1;
		matdir->matstat = 1;
		(void) insert_mdir (matdir, mfp->dirlist);
	}
	dtype = (DataSetType) file->m6->mh->file_type;
	if (dtype == Sinogram || dtype == Short3dSinogram) {
		if ((mat_write_scan_subheader (mfp->fptr, matdir->strtblk, file->m6->scn)) == ERROR) {
			(void) fprintf (stderr, "ERROR [put_ss6]: Writing subheader for %s\n", file->name);
			status = ERROR;
		}
	} else if (dtype == AttenCor) {
		if ((mat_write_attn_subheader (mfp->fptr, matdir->strtblk, file->m6->atn)) == ERROR) {
			(void) fprintf (stderr, "ERROR [put_ss6]: Writing subheader for %s\n", file->name);
			status = ERROR;
		}
	} else {
		(void) fprintf (stderr, "ERROR [put_ss6]: Unsupported data type %d for %s\n", dtype, file->name);
		status = ERROR;
	}
	free (matdir);
	return (status);
}
@


2.3
log
@Feb 18 (interfile)
@
text
@d1 1
a1 1
/*  $Id: put_ss6.c,v 2.2 2004/02/12 22:04:10 tom Exp tom $
d3 3
d42 1
a42 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/put_ss6.c,v 2.2 2004/02/12 22:04:10 tom Exp tom $";
@


2.2
log
@sync Feb 2004
@
text
@d1 1
a1 1
/*  $Id: put_ss6.c,v 2.0 2004/01/02 18:40:48 tom Exp tom $
d3 3
d39 1
a39 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/put_ss6.c,v 2.0 2004/01/02 18:40:48 tom Exp tom $";
@


2.0
log
@splint cleanup
@
text
@d1 1
a1 1
/*  $Id: put_ss6.c,v 1.7 2003/07/01 19:14:19 tom Exp tom $
d3 3
d36 1
a36 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/put_ss6.c,v 1.7 2003/07/01 19:14:19 tom Exp tom $";
d49 1
a49 1
	struct MatDir  *matdir;
d67 1
a67 1
		matdir = (struct MatDir *) malloc (sizeof (struct MatDir));
@


1.7
log
@*** empty log message ***
@
text
@d1 1
a1 1
/*  $Id: put_ss6.c,v 1.6 2002/12/17 21:55:15 tom Exp tom $
d3 3
d26 1
a26 1
 *  Date:           Feb-2000
d31 1
d33 1
a33 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/put_ss6.c,v 1.6 2002/12/17 21:55:15 tom Exp tom $";
a43 2
	int             mat_enter ();
	int             insert_mdir ();
d69 1
a69 1
		insert_mdir (matdir, mfp->dirlist);
@


1.6
log
@fix pointer/cast errors found with gcc
@
text
@d1 1
a1 1
/*  $Id: put_ss6.c,v 1.5 2002/03/13 21:56:41 tom Exp tom $
d3 3
d29 1
a29 1
static char     rcsid[] = "$Header: /home/tom/src/libimage/RCS/put_ss6.c,v 1.5 2002/03/13 21:56:41 tom Exp tom $";
a33 1
#include <matrix.h>
@


1.5
log
@lint cleaning
@
text
@d1 1
a1 1
/*  $Id: put_ss6.c,v 1.4 2000/03/13 20:41:04 tom Exp tom $
d3 3
d26 1
a26 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/put_ss6.c,v 1.4 2000/03/13 20:41:04 tom Exp tom $";
d51 1
a51 1
	if ((matnum = mat_numcod (indx->frm, indx->pln, indx->gate, indx->data, indx->bed)) == NULL) {
@


1.4
log
@fix MatDir alloc
@
text
@d1 1
a1 1
/*  $Id: put_ss6.c,v 1.3 2000/03/13 20:26:05 tom Exp $
d3 3
d23 1
a23 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/put_ss6.c,v 1.3 2000/03/13 20:26:05 tom Exp $";
d35 3
a37 3
	int				mat_enter ();
	int				insert_mdir ();
	MatrixFile	   *mfp;
d41 1
d53 4
a56 4
    	xdim = file->sh->dim1;
    	ydim = file->sh->dim2;
    	nblks = xdim * ydim * sizeof (short) / 512;
        blkno = mat_enter (mfp->fptr, matnum, nblks);
d58 5
a62 5
        matdir->matnum = matnum;
        matdir->strtblk = blkno;
        matdir->endblk = matdir->strtblk + nblks - 1;
        matdir->matstat = 1;
        insert_mdir (matdir, mfp->dirlist);
d68 1
a68 2
			free (matdir);
			return (ERROR);
d73 1
a73 2
			free (matdir);
			return (ERROR);
d77 1
a77 2
		free (matdir);
		return (ERROR);
d80 1
a80 1
	return (OK);
@


1.3
log
@declare matrix functions (in libcti)
@
text
@d1 1
a1 1
/*  $Id: put_ss6.c,v 1.2 2000/03/13 20:18:09 tom Exp tom $
d3 3
d20 1
a20 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/put_ss6.c,v 1.2 2000/03/13 20:18:09 tom Exp tom $";
d36 1
a36 1
	struct MatDir  *matdir, dir_entry;
d53 6
a58 6
        dir_entry.matnum = matnum;
        dir_entry.strtblk = blkno;
        dir_entry.endblk = dir_entry.strtblk + nblks - 1;
        dir_entry.matstat = 1;
        insert_mdir (dir_entry, mfp->dirlist);
        matdir = &dir_entry;
@


1.2
log
@create MatDir if necessary
@
text
@d1 1
a1 1
/*  $Id: put_ss6.c,v 1.1 2000/03/13 18:23:14 tom Exp tom $
d3 3
d17 1
a17 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/put_ss6.c,v 1.1 2000/03/13 18:23:14 tom Exp tom $";
d22 1
d29 2
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
/*  $Id$
 *	$Log$ */
d14 1
a14 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/put_ss6.c,v 1.1 2000/02/18 21:49:13 tom Exp $";
d25 1
d27 2
a28 2
	struct MatDir  *matdir;
	int             matnum;
d30 2
a31 1
	if (file->m6->mfp == NULL) {
d39 11
a49 3
	if ((matdir = matrix_find (matnum, file->m6->mfp)) == NULL) {
		(void) fprintf (stderr, "ERROR [put_ss6]: Could not find matrix directory for %s\n", file->name);
		return (ERROR);
d53 1
a53 1
		if ((mat_write_image_subheader (file->m6->mfp->fptr, matdir->strtblk, file->m6->scn)) == ERROR) {
d59 1
a59 1
		if ((mat_write_image_subheader (file->m6->mfp->fptr, matdir->strtblk, file->m6->atn)) == ERROR) {
@
