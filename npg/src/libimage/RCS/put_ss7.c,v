head	2.6;
access;
symbols;
locks; strict;
comment	@ * @;


2.6
date	2008.01.14.18.13.34;	author tom;	state Exp;
branches;
next	2.5;

2.5
date	2007.09.10.21.14.47;	author tom;	state Exp;
branches;
next	2.4;

2.4
date	2004.02.20.16.06.24;	author tom;	state Exp;
branches;
next	2.3;

2.3
date	2004.02.18.19.56.33;	author tom;	state Exp;
branches;
next	2.2;

2.2
date	2004.02.12.22.04.10;	author tom;	state Exp;
branches;
next	2.0;

2.0
date	2004.01.02.18.40.48;	author tom;	state Exp;
branches;
next	1.6;

1.6
date	2003.07.01.19.14.19;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	2000.09.27.19.03.28;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	99.12.13.17.45.50;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	98.12.16.21.50.00;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	98.12.15.14.52.22;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	98.12.10.18.41.53;	author tom;	state Exp;
branches;
next	;


desc
@@


2.6
log
@increase uncor_singles to 192
@
text
@/*  $Log: put_ss7.c,v $
 * Revision 2.5  2007/09/10  21:14:47  tom
 * uncor_singles increased from 128 to 190
 *
 * Revision 2.4  2004/02/20  16:06:24  tom
 * Feb 2004
 *
 * Revision 2.3  2004/02/18  19:56:33  tom
 * Feb 18 (interfile)
 *
 * Revision 2.2  2004/02/12  22:04:10  tom
 * sync Feb 2004
 *
 * Revision 2.0  2004/01/02  18:40:48  tom
 * splint cleanup
 *
 * Revision 1.6  2003/07/01  19:14:19  tom
 * *** empty log message ***
 *
 * Revision 1.5  2000/09/27  19:03:28  tom
 * *** empty log message ***
 *
 * Revision 1.4  1999/12/13  17:45:50  tom
 * tov revision
 *
 * Revision 1.3  1998/12/16  21:50:00  tom
 * *** empty log message ***
 *
 * Revision 1.2  1998/12/15  14:52:22  tom
 * debugged version
 *
 * Revision 1.1  1998/12/10  18:41:53  tom
 * Initial revision
 * */
/* =============================================================================
 *	Function:		put_ss7
 *  Date:           Mar 2003
 *  Author:         Tom Videen (from JMO)
 *	Description:	Write scan subheader for Version 7 file.
 * =============================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/put_ss7.c,v 2.5 2007/09/10 21:14:47 tom Exp tom $";
#endif

#include <stdio.h>
#include <stdlib.h>
#include <image.h>
#include <libimage.h>
#include <endian.h>

int             put_ss7 (file, indx)
	ImageFile      *file;
	Index          *indx;
{
	union temp_long {
		float           f;
		int             l;
		short           s[2];
	}               conv;

	Scan3D_subheader7 *s3d;

	short           sbuf[NUMREC_SSHDR * LENREC_S];
	int             matnum, begrec, endrec;
	int             i, j;
	int             pln1 = 1;
	int             nrec = NUMREC_SSHDR;
	long            nbytes = nrec * LENREC;
	int             VLEN = 12093;

	if (file->m7->s3d == NULL) {
		(void) fprintf (stderr, "ERROR [put_ss7]: Version 7 subheader undefined for %s\n", file->name);
		return (ERROR);
	}
	s3d = file->m7->s3d;

	/* Shorts  */
	/* CONSTCOND  */
	if (__BYTE_ORDER == __LITTLE_ENDIAN) {
		swap_byte ((char *) sbuf, nbytes);
		j = 1;
	} else
		j = 0;

	sbuf[0] = s3d->data_type;
	sbuf[1] = s3d->num_dimensions;
	sbuf[2] = s3d->num_r_elements;
	sbuf[3] = s3d->num_angles;
	sbuf[4] = s3d->corrections_applied;
	for (i = 0; i < 64; i++)
		sbuf[5 + i] = s3d->num_z_elements[i];
	sbuf[69] = s3d->ring_difference;
	sbuf[70] = s3d->storage_order;
	sbuf[71] = s3d->axial_compression;
	for (i = 0; i < 6; i++)
		sbuf[80 + i] = s3d->reserved_gating[i];
	sbuf[94] = s3d->scan_min;
	sbuf[95] = s3d->scan_max;
	for (i = 0; i < 90; i++)
		sbuf[116 + i] = s3d->reserved_cti[i];
	for (i = 0; i < 50; i++)
		sbuf[206 + i] = s3d->reserved_cti[i];

	/* Longs and Floats	 */

	conv.f = s3d->x_resolution;
	sbuf[72] = conv.s[0 + j];
	sbuf[73] = conv.s[1 + j];

	conv.f = s3d->v_resolution;
	sbuf[74] = conv.s[0 + j];
	sbuf[75] = conv.s[1 + j];

	conv.f = s3d->z_resolution;
	sbuf[76] = conv.s[0 + j];
	sbuf[77] = conv.s[1 + j];

	conv.f = s3d->w_resolution;
	sbuf[78] = conv.s[0 + j];
	sbuf[79] = conv.s[1 + j];

	conv.l = s3d->gate_duration;
	sbuf[86] = conv.s[0 + j];
	sbuf[87] = conv.s[1 + j];

	conv.l = s3d->r_wave_offset;
	sbuf[88] = conv.s[0 + j];
	sbuf[89] = conv.s[1 + j];

	conv.l = s3d->num_accepted_beats;
	sbuf[90] = conv.s[0 + j];
	sbuf[91] = conv.s[1 + j];

	conv.f = s3d->scale_factor;
	sbuf[92] = conv.s[0 + j];
	sbuf[93] = conv.s[1 + j];

	conv.l = s3d->prompts;
	sbuf[96] = conv.s[0 + j];
	sbuf[97] = conv.s[1 + j];

	conv.l = s3d->delayed;
	sbuf[98] = conv.s[0 + j];
	sbuf[99] = conv.s[1 + j];

	conv.l = s3d->multiples;
	sbuf[100] = conv.s[0 + j];
	sbuf[101] = conv.s[1 + j];

	conv.l = s3d->net_trues;
	sbuf[102] = conv.s[0 + j];
	sbuf[103] = conv.s[1 + j];

	conv.f = s3d->tot_avg_cor;
	sbuf[104] = conv.s[0 + j];
	sbuf[105] = conv.s[1 + j];

	conv.f = s3d->tot_avg_uncor;
	sbuf[106] = conv.s[0 + j];
	sbuf[107] = conv.s[1 + j];

	conv.l = s3d->total_coin_rate;
	sbuf[108] = conv.s[0 + j];
	sbuf[109] = conv.s[1 + j];

	conv.l = s3d->frame_start_time;
	sbuf[110] = conv.s[0 + j];
	sbuf[111] = conv.s[1 + j];

	conv.l = s3d->frame_duration;
	sbuf[112] = conv.s[0 + j];
	sbuf[113] = conv.s[1 + j];

	conv.f = s3d->deadtime_correction_fctr;
	sbuf[114] = conv.s[0 + j];
	sbuf[115] = conv.s[1 + j];

	for (i = 0; i < 192; i++) {
		conv.f = s3d->uncor_singles[i];
		sbuf[256 + i] = conv.s[0 + j];
		sbuf[257 + i] = conv.s[1 + j];
	}

	matnum = numcode7 (indx->frm, pln1, indx->gate, indx->data, indx->bed);
	if ((begrec = getmatpos (file, matnum, &endrec)) == ERROR) {
		if ((begrec = create_dir7 (file, matnum, VLEN)) < 0) {
			(void) fprintf (stderr, "ERROR [put_ss7]: Could not entry for matrix #%x\n", (unsigned) matnum);
			return (ERROR);
		}
	}
	if (wrtrec (file->fp, (char *) sbuf, begrec, nrec) == ERROR)
		return (ERROR);
	else
		return (OK);
}
@


2.5
log
@uncor_singles increased from 128 to 190
@
text
@d2 3
d44 1
a44 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/put_ss7.c,v 2.4 2004/02/20 16:06:24 tom Exp tom $";
d180 1
a180 1
	for (i = 0; i < 190; i++) {
@


2.4
log
@Feb 2004
@
text
@d2 3
d41 1
a41 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/put_ss7.c,v 2.3 2004/02/18 19:56:33 tom Exp tom $";
d177 1
a177 1
	for (i = 0; i < 128; i++) {
@


2.3
log
@Feb 18 (interfile)
@
text
@d2 3
d38 1
a38 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/put_ss7.c,v 2.2 2004/02/12 22:04:10 tom Exp tom $";
@


2.2
log
@sync Feb 2004
@
text
@d2 3
d35 1
a35 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/put_ss7.c,v 2.0 2004/01/02 18:40:48 tom Exp tom $";
@


2.0
log
@splint cleanup
@
text
@d2 3
d32 1
a32 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/put_ss7.c,v 1.6 2003/07/01 19:14:19 tom Exp tom $";
@


1.6
log
@*** empty log message ***
@
text
@d2 3
d27 1
d29 1
a29 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/put_ss7.c,v 1.5 2000/09/27 19:03:28 tom Exp tom $";
d174 1
a174 1
			(void) fprintf (stderr, "ERROR [put_ss7]: Could not entry for matrix #%x\n", matnum);
@


1.5
log
@*** empty log message ***
@
text
@d2 3
d19 1
a19 1
 *  Date:           Dec-98
d25 1
a25 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/put_ss7.c,v 1.4 1999/12/13 17:45:50 tom Exp tom $";
d32 1
d38 5
a42 6
	union temporary {
		float           f[NUMREC_SSHDR * LENREC_L];
		long            l[NUMREC_SSHDR * LENREC_L];
		short           s[NUMREC_SSHDR * LENREC_S];
		char            c[NUMREC_SSHDR * LENREC];
	}               tmp;
d45 7
a51 2
	int             len, matnum, begrec, endrec;
	int             i, pln1 = 1;
d59 14
a72 5
	tmp.s[0] = s3d->data_type;
	tmp.s[1] = s3d->num_dimensions;
	tmp.s[2] = s3d->num_r_elements;
	tmp.s[3] = s3d->num_angles;
	tmp.s[4] = s3d->corrections_applied;
d74 4
a77 8
		tmp.s[5 + i] = s3d->num_z_elements[i];
	tmp.s[69] = s3d->ring_difference;
	tmp.s[70] = s3d->storage_order;
	tmp.s[71] = s3d->axial_compression;
	tmp.f[36] = s3d->x_resolution;
	tmp.f[37] = s3d->v_resolution;
	tmp.f[38] = s3d->z_resolution;
	tmp.f[39] = s3d->w_resolution;
d79 3
a81 17
		tmp.s[80 + i] = s3d->reserved_gating[i];
	tmp.l[43] = s3d->gate_duration;
	tmp.l[44] = s3d->r_wave_offset;
	tmp.l[45] = s3d->num_accepted_beats;
	tmp.f[46] = s3d->scale_factor;
	tmp.s[94] = s3d->scan_min;
	tmp.s[95] = s3d->scan_max;
	tmp.l[48] = s3d->prompts;
	tmp.l[49] = s3d->delayed;
	tmp.l[50] = s3d->multiples;
	tmp.l[51] = s3d->net_trues;
	tmp.f[52] = s3d->tot_avg_cor;
	tmp.f[53] = s3d->tot_avg_uncor;
	tmp.l[54] = s3d->total_coin_rate;
	tmp.l[55] = s3d->frame_start_time;
	tmp.l[56] = s3d->frame_duration;
	tmp.f[57] = s3d->deadtime_correction_fctr;
d83 1
a83 1
		tmp.s[116 + i] = s3d->reserved_cti[i];
d85 1
a85 3
		tmp.s[206 + i] = s3d->reserved_cti[i];
	for (i = 0; i < 128; i++)
		tmp.f[128 + i] = s3d->uncor_singles[i];
d87 80
a167 1
	len = NUMREC_SSHDR;
d174 1
a174 1
	if (wrtrec (file->fp, (char *) tmp.s, begrec, len) == ERROR)
@


1.4
log
@tov revision
@
text
@d2 3
d22 1
a22 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/put_ss7.c,v 1.3 1998/12/16 21:50:00 tom Exp tom $";
d44 1
d93 1
a93 1
		if ((begrec = create_dir7 (file, matnum, len)) < 0) {
@


1.3
log
@*** empty log message ***
@
text
@d2 3
d19 1
a19 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/put_ss7.c,v 1.2 1998/12/15 14:52:22 tom Exp tom $";
d43 1
a43 1
		fprintf (stderr, "ERROR [put_ss7]: Version 7 subheader undefined for %s\n", file->name);
d90 1
a90 1
			fprintf (stderr, "ERROR [put_ss7]: Could not entry for matrix #%x\n", matnum);
@


1.2
log
@debugged version
@
text
@d2 3
d12 1
a12 1
 *	Description:	Write scan subheader and data for Version 7 file.
d16 1
a16 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/put_ss7.c,v 1.1 1998/12/10 18:41:53 tom Exp $";
d81 1
a81 1
		tmp.s[256 + i] = s3d->uncor_singles[i];
@


1.1
log
@Initial revision
@
text
@d1 4
a4 1
/*  $Log$ */
d9 1
a9 1
 *	Description:	Write scan subheader for Version 7 file.
d13 1
a13 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/put_ss7.c,v 1.1 1996/04/19 19:33:20 tom Exp $";
d26 4
a29 4
		float           f[NUMREC_ISHDR * LENREC_S / 2];
		long            l[NUMREC_ISHDR * LENREC_S / 2];
		short           s[NUMREC_ISHDR * LENREC_S];
		char            c[NUMREC_ISHDR * LENREC];
a31 6
	union temp_long {
		float           f;
		long            l;
		short           s[2];
	}               tmpl;

d45 1
a45 1
	tmp.s[69] = s3d->ring_difference;
d48 3
a50 1

d52 1
a52 1
	tmp.f[37] = s3d->y_resolution;
d54 7
a60 5

	tmpl.f = s3d->scale_factor;
	tmp.s[92] = tmpl.s[0];
	tmp.s[93] = tmpl.s[1];

a62 1

d67 12
a79 7
	tmp.l[54] = s3d->frame_start_time;
	tmp.l[55] = s3d->frame_duration;

	tmp.f[57] = s3d->loss_correction_fctr;
	tmp.s[178] = tmpl.s[0];
	tmp.s[179] = tmpl.s[1];

@
