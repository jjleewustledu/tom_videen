head	2.4;
access;
symbols;
locks; strict;
comment	@ * @;


2.4
date	2004.02.20.16.06.24;	author tom;	state Exp;
branches;
next	2.3;

2.3
date	2004.02.18.19.56.33;	author tom;	state Exp;
branches;
next	2.2;

2.2
date	2004.02.12.22.04.10;	author tom;	state Exp;
branches;
next	2.0;

2.0
date	2004.01.02.18.40.48;	author tom;	state Exp;
branches;
next	1.7;

1.7
date	2003.07.01.19.14.19;	author tom;	state Exp;
branches;
next	1.6;

1.6
date	2002.12.17.21.55.15;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	2000.01.20.21.29.59;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	99.12.13.17.45.50;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	98.12.18.15.21.14;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	98.12.15.14.52.22;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	98.12.10.18.42.07;	author tom;	state Exp;
branches;
next	;


desc
@@


2.4
log
@Feb 2004
@
text
@/*  $Id: wrscan7.c,v 2.3 2004/02/18 19:56:33 tom Exp tom $
    $Log: wrscan7.c,v $
 * Revision 2.3  2004/02/18  19:56:33  tom
 * Feb 18 (interfile)
 *
 * Revision 2.2  2004/02/12  22:04:10  tom
 * sync Feb 2004
 *
 * Revision 2.0  2004/01/02  18:40:48  tom
 * splint cleanup
 *
 * Revision 1.7  2003/07/01  19:14:19  tom
 * *** empty log message ***
 *
 * Revision 1.6  2002/12/17  21:55:15  tom
 * fix pointer/cast errors found with gcc
 *
    Revision 1.5  2000/01/20 21:29:59  tom
    *** empty log message ***

 * Revision 1.4  1999/12/13  17:45:50  tom
 * tov revision
 *
 * Revision 1.3  1998/12/18  15:21:14  tom
 * omit writing subheader
 *
 * Revision 1.2  1998/12/15  14:52:22  tom
 * debugged version
 *
 * Revision 1.1  1998/12/10  18:42:07  tom
 * Initial revision
 * */
/* =============================================================================
 *	Function:		wrscan7
 *  Date:           Mar 2003
 *  Author:         Tom Videen (from JMO)
 *	Description:	Write scan data for 1 plane of a Version 7 file.
 * =============================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/wrscan7.c,v 2.3 2004/02/18 19:56:33 tom Exp tom $";
#endif

#include <stdio.h>
#include <stdlib.h>
#include <image.h>
#include <libimage.h>
#include <endian.h>

int             wrscan7 (file, indx, matrix)
	ImageFile      *file;
	Index          *indx;
	short          *matrix;
{
	Main_header7   *mh7;
	Scan3D_subheader7 *s3d;
	DataSetType     dtype;
	char           *fname;
	int             xdim, ydim;
	int             begrec, endrec;
	int             matnum, len, i, j;
	int             z_elements, joff, dskptr, group, segment;
	int             slice, stat;
	long            nbytes;
	int             pln1 = 1;
	int             reclen = 1;

	fname = file->name;
	if (file->m7 == NULL) {
		(void) fprintf (stderr, "ERROR [wrscan7]: Version 7 header is not defined for %s\n", fname);
		return (ERROR);
	}
	if (file->m7->mh == NULL) {
		(void) fprintf (stderr, "ERROR [wrscan7]: Version 7 mainheader is not defined for %s\n", fname);
		return (ERROR);
	}
	mh7 = file->m7->mh;
	if (file->m7->s3d == NULL) {
		(void) fprintf (stderr, "ERROR [wrscan7]: Version 7 subheader is not defined for %s\n", fname);
		return (ERROR);
	}
	dtype = (DataSetType) mh7->file_type;
	if (dtype != Short3dSinogram) {
		(void) fprintf (stderr, "ERROR [wrscan7]: Unsupported file type %d in %s\n", dtype, fname);
		return (ERROR);
	}
	s3d = file->m7->s3d;
	xdim = s3d->num_r_elements;
	ydim = s3d->num_angles;
	slice = indx->pln - 1;
	len = xdim * ydim;
	nbytes = len * sizeof (short);
	if ((matnum = numcode7 (indx->frm, pln1, indx->gate, indx->data, indx->bed)) == 0) {
		(void) fprintf (stderr, "ERROR [wrscan7]: Could not get matrix number for %s\n", fname);
		return (ERROR);
	}
	if ((begrec = getmatpos (file, matnum, &endrec)) == ERROR) {
		if ((begrec = create_dir7 (file, matnum, reclen)) < 0) {
			(void) fprintf (stderr, "ERROR [wrscan7]: Could not entry for matrix #%x in %s\n",
					(unsigned) matnum, fname);
			return (ERROR);
		}
	}
	/* CONSTCOND  */
	if (__BYTE_ORDER == __LITTLE_ENDIAN)
		swap_byte ((char *) matrix, nbytes);


/*	VIEW MODE */

	if (s3d->storage_order == 0) {
		for (group = 0; s3d->num_z_elements[group] > 0; group++) {
			if ((slice - s3d->num_z_elements[group]) >= 0)
				slice -= s3d->num_z_elements[group];
			else
				break;
		}
		segment = group;
		z_elements = s3d->num_z_elements[group];
		if (group > 0 && slice >= (z_elements / 2)) {
			segment = -segment;
			slice -= z_elements / 2;
		}
		if (group > 0)
			z_elements /= 2;
		if (slice >= z_elements) {
			(void) fprintf (stderr, "ERROR [wrscan7]: slice > z_elements (%d > %d)\n",
					slice, z_elements);
			return (ERROR);
		}
		dskptr = (begrec + NUMREC_SSHDR - 1) * LENREC + slice * xdim * sizeof (short);

/* Point to correct ring difference group */

		for (i = 0; i < group; i++)
			dskptr += s3d->num_z_elements[i] * nbytes;

/* Point to correct ring difference sign. */

		if (segment < 0)
			dskptr += z_elements * nbytes;

/* Write a line for each planar view. */

		for (j = 0, joff = 0; j < ydim; j++, joff += xdim) {
			if ((stat = fseek (file->fp, (long) dskptr, SEEK_SET)) != 0) {
				(void) fprintf (stderr, "ERROR [wrscan7]: during seek; status = %d\n", stat);
				return (ERROR);
			}
			if ((stat = fwrite (&matrix[joff], sizeof (short), xdim, file->fp)) != xdim) {
				(void) fprintf (stderr, "ERROR [wrscan7]: during write; status = %d\n", stat);
				return (ERROR);
			}
			dskptr += xdim * sizeof (short) * s3d->num_z_elements[group];
		}

/*	SINOGRAM MODE */

	} else {
		dskptr = (begrec + NUMREC_SSHDR - 1) * LENREC + slice * nbytes;
		if ((stat = fseek (file->fp, (long) dskptr, SEEK_SET)) != 0) {
			(void) fprintf (stderr, "ERROR [wrscan7]: during seek; status = %d\n", stat);
			return (ERROR);
		}
		if ((stat = fwrite (matrix, sizeof (short), len, file->fp)) != len) {
			(void) fprintf (stderr, "ERROR [wrscan7]: during write; status = %d\n", stat);
			return (ERROR);
		}
	}
	return (OK);
}
@


2.3
log
@Feb 18 (interfile)
@
text
@d1 1
a1 1
/*  $Id: wrscan7.c,v 2.2 2004/02/12 22:04:10 tom Exp tom $
d3 3
d42 1
a42 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/wrscan7.c,v 2.2 2004/02/12 22:04:10 tom Exp tom $";
@


2.2
log
@sync Feb 2004
@
text
@d1 1
a1 1
/*  $Id: wrscan7.c,v 2.0 2004/01/02 18:40:48 tom Exp tom $
d3 3
d39 1
a39 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/wrscan7.c,v 2.0 2004/01/02 18:40:48 tom Exp tom $";
@


2.0
log
@splint cleanup
@
text
@d1 1
a1 1
/*  $Id: wrscan7.c,v 1.7 2003/07/01 19:14:19 tom Exp tom $
d3 3
d36 1
a36 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/wrscan7.c,v 1.7 2003/07/01 19:14:19 tom Exp tom $";
@


1.7
log
@*** empty log message ***
@
text
@d1 1
a1 1
/*  $Id: wrscan7.c,v 1.6 2002/12/17 21:55:15 tom Exp tom $
d3 3
d31 1
d33 1
a33 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/wrscan7.c,v 1.6 2002/12/17 21:55:15 tom Exp tom $";
d92 1
a92 1
					matnum, fname);
@


1.6
log
@fix pointer/cast errors found with gcc
@
text
@d1 1
a1 1
/*  $Id: wrscan7.c,v 1.5 2000/01/20 21:29:59 tom Exp tom $
d3 3
d23 1
a23 1
 *  Date:           Dec-98
d29 1
a29 1
static char     rcsid[] = "$Header: /home/tom/src/libimage/RCS/wrscan7.c,v 1.5 2000/01/20 21:29:59 tom Exp tom $";
d36 1
d52 1
d80 1
d88 1
a88 1
				 matnum, fname);
d92 3
d96 1
d116 1
a116 1
				slice, z_elements);
d124 1
a124 1
			dskptr += s3d->num_z_elements[i] * len * sizeof (short);
d129 1
a129 1
			dskptr += z_elements * len * sizeof (short);
d139 1
a139 1
				(void) fprintf (stderr,"ERROR [wrscan7]: during write; status = %d\n", stat);
d148 1
a148 1
		dskptr = (begrec + NUMREC_SSHDR - 1) * LENREC + slice * len * sizeof (short);
d150 1
a150 1
			(void) fprintf (stderr,"ERROR [wrscan7]: during seek; status = %d\n", stat);
d154 1
a154 1
			(void) fprintf (stderr,"ERROR [wrscan7]: during write; status = %d\n", stat);
@


1.5
log
@*** empty log message ***
@
text
@d1 1
a1 1
/*  $Id: wrscan7.c,v 1.4 1999/12/13 17:45:50 tom Exp tom $
d3 3
d26 1
a26 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/wrscan7.c,v 1.4 1999/12/13 17:45:50 tom Exp tom $";
d75 1
a75 1
	if ((matnum = numcode7 (indx->frm, pln1, indx->gate, indx->data, indx->bed)) == NULL) {
d124 1
a124 1
			if ((stat = fseek (file->fp, (long) dskptr, SEEK_SET)) != NULL) {
d139 1
a139 1
		if ((stat = fseek (file->fp, (long) dskptr, SEEK_SET)) != NULL) {
@


1.4
log
@tov revision
@
text
@d1 1
a1 1
/*  $Id: wrscan7.c,v 1.3 1998/12/18 15:21:14 tom Exp tom $
d3 3
a21 1

d23 1
a23 2
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/wrscan7.c,v 1.3 1998/12/18 15:21:14 tom Exp tom $";

@


1.3
log
@omit writing subheader
@
text
@d1 1
a1 1
/*  $Id: wrscan7.c,v 1.2 1998/12/15 14:52:22 tom Exp tom $
d3 3
d21 1
a21 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/wrscan7.c,v 1.2 1998/12/15 14:52:22 tom Exp tom $";
a26 2
#include <unistd.h>
#include <values.h>
d41 1
a41 1
	int             matnum, len, reclen, i, j;
d43 3
a45 1
	int             slice, stat, pln1 = 1;
d49 1
a49 1
		fprintf (stderr, "ERROR [wrscan7]: Version 7 header is not defined for %s\n", fname);
d53 1
a53 1
		fprintf (stderr, "ERROR [wrscan7]: Version 7 mainheader is not defined for %s\n", fname);
d58 1
a58 1
		fprintf (stderr, "ERROR [wrscan7]: Version 7 subheader is not defined for %s\n", fname);
d63 1
a63 1
		fprintf (stderr, "ERROR [wrscan7]: Unsupported file type %d in %s\n", dtype, fname);
d72 1
a72 1
		fprintf (stderr, "ERROR [wrscan7]: Could not get matrix number for %s\n", fname);
d77 1
a77 1
			fprintf (stderr, "ERROR [wrscan7]: Could not entry for matrix #%x in %s\n",
d101 1
a101 1
			printf ("ERROR [wrscan7]: slice > z_elements (%d > %d)\n",
d121 1
a121 1
				printf ("ERROR [wrscan7]: during seek; status = %d\n", stat);
d125 1
a125 1
				printf ("ERROR [wrscan7]: during write; status = %d\n", stat);
d136 1
a136 1
			printf ("ERROR [wrscan7]: during seek; status = %d\n", stat);
d140 1
a140 1
			printf ("ERROR [wrscan7]: during write; status = %d\n", stat);
@


1.2
log
@debugged version
@
text
@d1 1
a1 1
/*  $Id: wrscan7.c,v 1.1 1998/12/10 18:42:07 tom Exp tom $
d3 3
d13 1
a13 2
 *	Description:	Write scan data for Version 7 file.
 *	Notes:			Writes one frame with a subheader.
d18 1
a18 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/wrscan7.c,v 1.1 1998/12/10 18:42:07 tom Exp tom $";
a40 2
	int             slice;
	int             stat;
d42 1
a42 1
	int             pln1 = 1;
a71 5
	if (put_ss7 (file, indx) == ERROR) {
		fprintf (stderr, "ERROR [wrscan7]: Could not write subheader to %s, ",
			 "frame %d\n", fname, indx->frm);
		return (ERROR);
	}
d107 1
a107 1
			dskptr += s3d->num_z_elements[i] * xdim * ydim * sizeof (short);
d112 1
a112 1
			dskptr += z_elements * xdim * ydim * sizeof (short);
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
/*  $Id$
    $Log$ */
d16 1
a16 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimage/RCS/wrscan7.c,v 1.5 1997/05/12 20:11:35 tom Exp $";
d27 1
a27 3
#define MAXSCL 16383.0

int             wrscan7 (file, indx, scale_factor, matrix)
d30 1
a30 2
	float           scale_factor;
	float          *matrix;
d36 6
a41 6
	short          *smatrix;
	float           scl, max, min;
	int             xdim, ydim, zdim;
	int             begrec, endrec, nrec_shdr;
	int             matnum, len, reclen, i;
	int             status;
d66 2
a67 5
	for (i = 0, zdim = 0; i < s3d->ring_difference; i++)
		zdim += s3d->num_z_elements[i];
	pln1 = 1;
	nrec_shdr = NUMREC_ISHDR;

d72 3
a74 3
	smatrix = (short *) malloc (len * sizeof (short));
	if (smatrix == NULL) {
		fprintf (stderr, "ERROR [wrscan7]: Could not malloc memory for img\n");
d77 7
a83 1
/*	Scale the data */
d85 8
a92 13
	if (scale_factor > 0.)
		scl = scale_factor;
	else
		scl = get_sf (file->fp);
	if (indx->pln <= 0 || scl == 0.) {
		min = MAXFLOAT;
		max = -MAXFLOAT;
		len = xdim * ydim * zdim;
		for (i = 0; i < len; i++) {
			if (matrix[i] > max)
				max = matrix[i];
			if (matrix[i] < min)
				min = matrix[i];
d94 5
a98 12
		if (max > -min) {
			scl = MAXSCL / max;
			max = MAXSCL;
			min = min * scl;
		} else if (min != 0) {
			scl = -MAXSCL / min;
			max = max * scl;
			min = -MAXSCL;
		} else {
			scl = 0;
			max = 0;
			min = 0;
d100 8
a107 13
		put_sf (file->fp, scl);
	} else {
		if (indx->pln <= 0)
			len = xdim * ydim * zdim;
		else
			len = xdim * ydim;
	}
	if (NULL == (smatrix = (short *) malloc (len * sizeof (short)))) {
		fprintf (stderr, "Could not malloc memory for matrix, \"wrscan7\".\n");
		return (NULL);
	}
	for (i = 0; i < len; i++)
		smatrix[i] = scl * matrix[i];
d109 1
a109 3
	s3d->scan_min = (short) min;
	s3d->scan_max = (short) max;
	s3d->scale_factor = 1.0 / scl;
d111 2
a112 4
	if (len % LENREC_S == 0)
		reclen = len / LENREC_S;
	else
		reclen = len / LENREC_S + 1;
d114 25
a138 5
	if ((begrec = getmatpos (file, matnum, &endrec)) == ERROR) {
		if ((begrec = create_dir7 (file, matnum, reclen)) < 0) {
			fprintf (stderr, "ERROR [wrscan7]: Could not entry for matrix #%x in %s\n",
				 matnum, fname);
			free (smatrix);
d141 4
d146 1
a146 11
	if (put_ss7 (file, indx) == ERROR) {
		fprintf (stderr, "ERROR [wrscan7]: Could not write subheader to %s, ",
			 "frame %d\n", fname, indx->frm);
		free (smatrix);
		return (ERROR);
	}
/*	Write entire frame */

	status = wrtrec (file->fp, (char *) smatrix, begrec + nrec_shdr, reclen);
	free (smatrix);
	return (status);
@
