head	1.5;
access;
symbols;
locks; strict;
comment	@ * @;


1.5
date	2004.02.16.17.27.40;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.26.19.33.06;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	2001.09.06.14.36.12;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	2000.02.03.16.48.10;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	98.02.19.17.12.30;	author tom;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Feb 2004
@
text
@/* $Log: imgfrms.c,v $
 * Revision 1.4  2002/03/26  19:33:06  tom
 * 1 decimal place for frametime
 *
 * Revision 1.3  2001/09/06  14:36:12  tom
 * loop from frm1
 *
 * Revision 1.2  2000/02/03  16:48:10  tom
 * change printout of starttime
 *
 * Revision 1.1  1998/02/19  17:12:30  tom
 * Initial revision
 * */
/*	===============================================================================
 *	Module:			imgfrms.c
 *	Date:			Feb 1998
 *	Author:			Tom Videen
 *	Description:	Read frame lengths from headers from ECAT, PETT VI or Interfiles
 *	===============================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Id: imgfrms.c,v 1.4 2002/03/26 19:33:06 tom Exp tom $";
#endif

#include <stdio.h>
#include <stdlib.h>
#include <image.h>
#include <image.h>
#include <libimage.h>
#include <pettable.h>

main (argc, argv)
	int             argc;
	char           *argv[];
{
	ImageFile      *file;
	Index           indx;
	int             frm, frm1;
	float           start = -1;
	char           *fname;
	MainHeader     *mh;

/*
 *	Get command line arguments.
 */

	if (argc != 2) {
		fprintf (stderr, "Usage: imgfrms filename\n");
		return (ERROR);
	}
	fname = argv[1];
	indx.pln = 1;
	indx.gate = 1;
	indx.data = 0;
	indx.bed = 0;

	file = make_imgfile (fname);
	if (open_imgfile (file) == ERROR) {
		fprintf (stderr, "ERROR [imgfrms]: Could not open %s\n", fname);
		return (ERROR);
	}
	if (get_mh (file) == ERROR) {
		fprintf (stderr, "ERROR [imgfrms]: Could not get MainHeader from %s\n", fname);
		return (ERROR);
	}
	indx.frm = firstimgfrm (file);
	if (indx.frm <= 0) {
		fprintf (stderr, "ERROR [imgfrms]: cannot find %s frame 1-%d\n", fname, -indx.frm);
		return (ERROR);
	}
	mh = file->mh;
	frm1 = indx.frm;

	for (frm = frm1; frm <= mh->nframe; frm++) {
		indx.frm = frm;
		if (get_sh (file, &indx) == OK) {
			if (start < 0) {
				start = (float) file->sh->start_time / 1000;
				printf ("------------------------------------------------------------------\n");
				printf ("%s     %s  %d slices   %d frames  (%s)\n", file->name, mh->date_time,
					mh->nplane, mh->nframe, mh->isotope);
				printf ("Frame  Start  Duration (sec)\n");
				printf ("-----  -----  --------\n");
			}
			printf ("%3d  %7.0f %7.1f\n", frm, ((float) file->sh->start_time / 1000.) - start,
				(float) file->sh->duration / 1000.);
		}
	}
	free (file->name);
	free_imgfile (file);
	return (OK);
}
@


1.4
log
@1 decimal place for frametime
@
text
@d2 3
d16 1
a16 1
 *	Date:			Feb-98
d21 1
d23 1
a23 1
static char     rcsid[] = "$Id: imgfrms.c,v 1.3 2001/09/06 14:36:12 tom Exp tom $";
@


1.3
log
@loop from frm1
@
text
@d2 3
d19 1
a19 1
static char     rcsid[] = "$Id: imgfrms.c,v 1.2 2000/02/03 16:48:10 tom Exp tom $";
a23 2
#include <string.h>
#include <math.h>
a37 1
	char           *str;
d45 1
a45 1
		printf ("Usage: imgfrms filename\n");
a48 1
	indx.frm = 0;
d82 1
a82 1
			printf ("%3d  %7.0f %6.0f\n", frm, ((float) file->sh->start_time / 1000.) - start,
@


1.2
log
@change printout of starttime
@
text
@d2 3
d16 1
a16 1
static char     rcsid[] = "$Id: imgfrms.c,v 1.1 1998/02/19 17:12:30 tom Exp tom $";
d34 1
a34 1
	int             frm;
d70 1
d72 1
a72 1
	for (frm = 1; frm <= mh->nframe; frm++) {
@


1.1
log
@Initial revision
@
text
@d1 4
a4 1
/* $Log$ */
d13 1
a13 1
static char     rcsid[] = "$Id: imgfrms.c,v 2.10 1997/05/13 16:33:11 tom Exp $";
d32 1
a32 1
	float           start = 0.;
d71 1
a71 1
			if (start <= 0.) {
@
