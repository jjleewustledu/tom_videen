head	1.5;
access;
symbols;
locks; strict;
comment	@ * @;


1.5
date	2004.02.19.22.27.02;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	99.12.03.20.56.47;	author tom;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Feb 2004
@
text
@/*$Log: setanapixsize.c,v $
 * Revision 1.1  1999/12/03  20:56:47  tom
 * Initial revision
 * */
/*	===============================================================================
 *	Module:			setanapixsize.c
 *	Date:			Dec 1999
 *	Author:			Tom Videen
 *	Description:	Set pixel sizes in an Analyze header.
 *	===============================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/setanapixsize/RCS/setanapixsize.c,v 1.1 1999/12/03 20:56:47 tom Exp tom $";
#endif

#include <stdio.h>
#include <stdlib.h>
#include <ANALYZE.h>			 /* dsr */

main (argc, argv)
	int             argc;
	char           *argv[];
{

	struct dsr      hdr;			 /* header for ANALYZE */
	FILE           *fd_hdr;			 /* file for ANALYZE hdr */
	char           *ANALYZE_hdr;	 /* output Analyze header filename  */

	if (argc != 5) {
		(void) printf ("Usage: setanapixsize ANALYZE_hdr x y z\n");
		return -1;
	}
	ANALYZE_hdr = argv[1];

	if ((fd_hdr = fopen (ANALYZE_hdr, "r+")) == 0) {
		(void) printf ("Unable to open ANALYZE header %s\n", ANALYZE_hdr);
		return -1;
	}
	if ((fread (&hdr, sizeof (struct dsr), 1, fd_hdr)) != 1) {
		(void) printf ("Error reading: %s\n", ANALYZE_hdr);
		return -1;
	}

	hdr.dime.pixdim[1] = atof (argv[2]);
	hdr.dime.pixdim[2] = atof (argv[3]);
	hdr.dime.pixdim[3] = atof (argv[4]);

	rewind (fd_hdr);
	if ((fwrite (&hdr, sizeof (struct dsr), 1, fd_hdr)) != 1) {
		(void) printf ("Error writing: %s\n", ANALYZE_hdr);
		return -1;
	}
	(void) fclose (fd_hdr);
	return 0;
}
@


1.1
log
@Initial revision
@
text
@d1 4
a4 1
/*$Log$ */
d7 1
a7 1
 *	Date:			Dec-99
d12 1
d14 1
a14 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/setanapixsize/RCS/setanapixsize.c,v 1.4 1998/10/13 15:11:22 tom Exp $";
@
