head	2.0;
access;
symbols;
locks; strict;
comment	@ * @;


2.0
date	2004.02.13.16.10.12;	author tom;	state Exp;
branches;
next	1.6;

1.6
date	99.12.14.17.40.41;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	96.01.04.22.12.28;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	95.09.24.22.48.58;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	95.07.26.18.13.56;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	95.07.25.19.11.23;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	95.07.25.14.52.12;	author tom;	state Exp;
branches;
next	;


desc
@@


2.0
log
@Feb 2004
@
text
@/*	$Log: matdist.c,v $
 * Revision 1.6  1999/12/14  17:40:41  tom
 * lint cleaning
 *
 * Revision 1.5  1996/01/04  22:12:28  tom
 * change include paths
 *
 * Revision 1.4  1995/09/24  22:48:58  tom
 * fixed but in least squares matrix
 *
 * Revision 1.3  1995/07/26  18:13:56  tom
 * lint
 *
 * Revision 1.2  1995/07/25  19:11:23  tom
 * fixed AIR matrix
 *
 * Revision 1.1  1995/07/25  14:52:12  tom
 * Initial revision
 *
	$Id: matdist.c,v 1.6 1999/12/14 17:40:41 tom Exp tom $ */
/*  ========================================================================
 *  Module:         matdist.c
 *  Date:           25-Jul-95
 *  Author:         Tom Videen
 *  Description:    Compute mean vector distance between transformed fiducial points.
 *  ========================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/airerr/RCS/matdist.c,v 1.6 1999/12/14 17:40:41 tom Exp tom $";
#endif

#include <nrutil.h>

#define NP 4

float           matdist (x)
	float          *x;
{
	float         **mat;
	float           dist;

	mat = matrix (1, NP, 1, NP);
	matcreate (mat, x);
	dist = matrix_dist (mat);
	free_matrix (mat, 1, NP, 1, NP);
	return (dist);
}
@


1.6
log
@lint cleaning
@
text
@d2 3
d20 1
a20 1
	$Id: matdist.c,v 1.5 1996/01/04 22:12:28 tom Exp tom $ */
d28 1
d30 1
a30 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/airerr/RCS/matdist.c,v 1.5 1996/01/04 22:12:28 tom Exp tom $";
a39 2
	float           matrix_dist ();
	void            matcreate ();
@


1.5
log
@change include paths
@
text
@d2 3
d17 1
a17 1
	$Id: matdist.c,v 1.4 1995/09/24 22:48:58 tom Exp tom $ */
d26 1
a26 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/airerr/RCS/matdist.c,v 1.4 1995/09/24 22:48:58 tom Exp tom $";
a28 2
#include <math.h>
#include <nr.h>
a29 1
#include <matrixlib.h>
@


1.4
log
@fixed but in least squares matrix
@
text
@d2 3
d14 1
a14 1
	$Id: matdist.c,v 1.3 1995/07/26 18:13:56 tom Exp tom $ */
d22 3
d27 3
a29 3
#include <nrecipes/kr/nr.h>
#include <nrecipes/kr/nrutil.h>
#include <petutil/matrixlib.h>
a31 5

#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/airerr/RCS/matdist.c,v 1.3 1995/07/26 18:13:56 tom Exp tom $";

#endif
@


1.3
log
@lint
@
text
@d2 3
d11 1
a11 1
	$Id: matdist.c,v 1.2 1995/07/25 19:11:23 tom Exp tom $ */
d28 1
a28 1
static char     rcsid[] = "$Header: /export/home/npggw/tom/src/airerr/RCS/matdist.c,v 1.2 1995/07/25 19:11:23 tom Exp tom $";
a30 4

extern float  **fixed;
extern float  **reslice;
extern          nfid;
@


1.2
log
@fixed AIR matrix
@
text
@d2 3
d8 1
a8 1
	$Id: matdist.c,v 1.1 1995/07/25 14:52:12 tom Exp tom $ */
d24 2
a25 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/airerr/RCS/matdist.c,v 1.1 1995/07/25 14:52:12 tom Exp tom $";
d27 2
a28 1
float           matrix_dist ();
d36 2
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
/*	$Log$
	$Id$ */
d8 1
a8 1
 *  Date:           24-Jul-95
d21 3
a23 1
static char     rcsid[] = "$Header$";
d32 1
a32 3
	float          *c;
	float           sumdif;
	int             i, j;
a34 1
	c = vector (1, NP);
d36 1
a36 6

	for (sumdif = 0, i = 1; i <= nfid; i++) {
		matrix_mult (mat, reslice[i], c, NP, NP, 1);
		sumdif += vector_dist (fixed[i], c);
	}

d38 1
a38 2
	free_vector (c, 1, NP);
	return (sumdif / (float) nfid);
@
