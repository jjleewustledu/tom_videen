head	2.0;
access;
symbols;
locks; strict;
comment	@ * @;


2.0
date	2004.02.13.16.10.12;	author tom;	state Exp;
branches;
next	1.7;

1.7
date	99.12.14.17.40.41;	author tom;	state Exp;
branches;
next	1.6;

1.6
date	96.04.30.13.20.07;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	96.01.04.22.12.37;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	95.09.24.22.48.58;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	95.07.26.18.13.56;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	95.07.25.19.11.23;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	95.07.25.14.52.12;	author tom;	state Exp;
branches;
next	;


desc
@@


2.0
log
@Feb 2004
@
text
@/*	$Log: matrix_dist.c,v $
 * Revision 1.7  1999/12/14  17:40:41  tom
 * lint cleaning
 *
 * Revision 1.6  1996/04/30  13:20:07  tom
 * new libmatrix.a
 *
 * Revision 1.5  1996/01/04  22:12:37  tom
 * change include paths
 *
 * Revision 1.4  1995/09/24  22:48:58  tom
 * fixed but in least squares matrix
 *
 * Revision 1.3  1995/07/26  18:13:56  tom
 * lint
 *
 * Revision 1.2  1995/07/25  19:11:23  tom
 * fixed AIR matrix
 *
 * Revision 1.1  1995/07/25  14:52:12  tom
 * Initial revision
 *
	$Id: matrix_dist.c,v 1.7 1999/12/14 17:40:41 tom Exp tom $ */
/*  ========================================================================
 *  Module:         matrix_dist.c
 *  Date:           25-Jul-95
 *  Author:         Tom Videen
 *  Description:
 *  	Compute mean vector distance between transformed fiducial points.
 *  ========================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/airerr/RCS/matrix_dist.c,v 1.7 1999/12/14 17:40:41 tom Exp tom $";
#endif

#include <nrutil.h>
#include <matrixlib.h>

#define NP 4

extern float  **fixed;
extern float  **reslice;
extern float   *rscale;				 /* reslice or PET pixel scale factor (mm/pixel) */
extern float   *fscale;				 /* reslice or PET pixel scale factor (mm/pixel) */
extern          nfid;

float           matrix_dist (mat)
	float         **mat;
{
	float          *a, *b, *c;
	float           sumdif;
	int             i, j;

	a = vector (1, NP);			 /* scaled reslice pt */
	b = vector (1, NP);			 /* transformed fixed pt */
	c = vector (1, NP);			 /* scaled, transformed fixed pt */
	a[NP] = 1.0;
	c[NP] = 1.0;

/*
 *	The matrix multiplication transforms MRI (fixed) pixels to PET (reslice) pixels.
 *	PET pixels are then scaled to mm (multiplying by mm/pixel) before the vector distance is computed.
 */

	sumdif = 0.0;
	for (i = 1; i <= nfid; i++) {
		vector_mult (mat, fixed[i], b, NP, NP, 1);
		for (j = 1; j < NP; j++) {
			a[j] = (rscale[j]) * reslice[i][j];
			c[j] = (rscale[j]) * b[j];
		}
		sumdif += vector_dist (a, c);
	}

	free_vector (a, 1, NP);
	free_vector (b, 1, NP);
	free_vector (c, 1, NP);
	return (sumdif / (float) nfid);
}
@


1.7
log
@lint cleaning
@
text
@d2 3
d23 1
a23 1
	$Id: matrix_dist.c,v 1.6 1996/04/30 13:20:07 tom Exp tom $ */
d32 1
d34 1
a34 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/airerr/RCS/matrix_dist.c,v 1.6 1996/04/30 13:20:07 tom Exp tom $";
@


1.6
log
@new libmatrix.a
@
text
@d2 3
d20 1
a20 1
	$Id: matrix_dist.c,v 1.5 1996/01/04 22:12:37 tom Exp tom $ */
d30 1
a30 1
static char     rcsid[] = "$Header: /home/petsun19/tom/src/airerr/RCS/matrix_dist.c,v 1.5 1996/01/04 22:12:37 tom Exp tom $";
a32 2
#include <math.h>
#include <nr.h>
@


1.5
log
@change include paths
@
text
@d2 3
d17 1
a17 1
	$Id: matrix_dist.c,v 1.4 1995/09/24 22:48:58 tom Exp tom $ */
d27 1
a27 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/airerr/RCS/matrix_dist.c,v 1.4 1995/09/24 22:48:58 tom Exp tom $";
d63 1
a63 1
		matrix_mult (mat, fixed[i], b, NP, NP, 1);
@


1.4
log
@fixed but in least squares matrix
@
text
@d2 3
d14 1
a14 1
	$Id: matrix_dist.c,v 1.3 1995/07/26 18:13:56 tom Exp $ */
d23 4
d28 3
a30 3
#include <nrecipes/kr/nr.h>
#include <nrecipes/kr/nrutil.h>
#include <petutil/matrixlib.h>
a32 5

#ifndef lint
static char     rcsid[] = "$Header: /export/home/npggw/tom/src/airerr/RCS/matrix_dist.c,v 1.3 1995/07/26 18:13:56 tom Exp $";

#endif
@


1.3
log
@lint
@
text
@d2 3
d11 1
a11 1
	$Id: matrix_dist.c,v 1.2 1995/07/25 19:11:23 tom Exp tom $ */
d28 1
a28 1
static char     rcsid[] = "$Header: /export/home/npggw/tom/src/airerr/RCS/matrix_dist.c,v 1.2 1995/07/25 19:11:23 tom Exp tom $";
a33 1
extern float   *fscale;				 /* fixed or MRI pixel scale factor (mm/pixel) */
d35 1
d45 3
a47 3
	a = vector (1, NP);
	b = vector (1, NP);
	c = vector (1, NP);
d49 1
a49 1
	b[NP] = 1.0;
d53 1
a53 1
 *	Points are then scaled to mm (multiplying by mm/pixel) before the vector distance is computed.
d58 1
a58 1
		matrix_mult (mat, fixed[i], c, NP, NP, 1);
d60 2
a61 2
			a[j] = rscale[j] * c[j];
			b[j] = rscale[j] * reslice[i][j];
d63 1
a63 1
		sumdif += vector_dist (a, b);
@


1.2
log
@fixed AIR matrix
@
text
@d2 3
d8 1
a8 1
	$Id: matrix_dist.c,v 1.1 1995/07/25 14:52:12 tom Exp tom $ */
a16 1

d24 5
a28 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/airerr/RCS/matrix_dist.c,v 1.1 1995/07/25 14:52:12 tom Exp tom $";
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
/*	$Log$
	$Id$ */
d8 1
a8 1
 *  Date:           21-Jul-95
d10 2
a11 1
 *  Description:    Compute mean vector distance between transformed fiducial points.
d22 1
a22 1
static char     rcsid[] = "$Header$";
d25 2
d32 1
a32 1
	float          *c;
d36 2
d39 2
d42 13
a54 3
	for (sumdif = 0, i = 1; i <= nfid; i++) {
		matrix_mult (mat, reslice[i], c, NP, NP, 1);
		sumdif += vector_dist (fixed[i], c);
d57 2
@
