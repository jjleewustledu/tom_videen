head	2.0;
access;
symbols;
locks; strict;
comment	@ * @;


2.0
date	2004.02.13.16.10.12;	author tom;	state Exp;
branches;
next	1.7;

1.7
date	2002.11.26.19.43.41;	author tom;	state Exp;
branches;
next	1.6;

1.6
date	96.01.04.22.12.14;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	95.09.24.22.48.58;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	95.07.26.18.13.56;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	95.07.25.21.02.25;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	95.07.25.19.11.23;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	95.07.25.14.52.12;	author tom;	state Exp;
branches;
next	;


desc
@@


2.0
log
@Feb 2004
@
text
@/*	$Log: matcreate.c,v $
 * Revision 1.7  2002/11/26  19:43:41  tom
 * *** empty log message ***
 *
 * Revision 1.6  1996/01/04  22:12:14  tom
 * change include paths
 *
 * Revision 1.5  1995/09/24  22:48:58  tom
 * fixed but in least squares matrix
 *
 * Revision 1.4  1995/07/26  18:13:56  tom
 * lint
 *
 * Revision 1.3  1995/07/25  21:02:25  tom
 * free mem
 *
 * Revision 1.2  1995/07/25  19:11:23  tom
 * fixed AIR matrix
 *
 * Revision 1.1  1995/07/25  14:52:12  tom
 * Initial revision
 *
	$Id: matcreate.c,v 1.7 2002/11/26 19:43:41 tom Exp tom $ */
/*  ========================================================================
 *  Module:         matcreate.c
 *  Date:           25-Jul-95
 *  Author:         Tom Videen
 *  Description:    Return a matrix created from 9 parameters:
 *		x[1],x[2],x[3] = translation (x,y,z)
 *		x[4],x[5],x[6] = rotation in degrees (x,y,z)
 *		fscale[1]/rscale[1],fscale[2]/rscale[2],fscale[3]/rscale[3], = scale (x,y,z)
 *  ========================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/airerr/RCS/matcreate.c,v 1.7 2002/11/26 19:43:41 tom Exp tom $";
#endif

#include <math.h>
#include <nrutil.h>
#include <matrixlib.h>

#define NP 4
#define DEGTORAD 3.14159265/180.

extern float   *fscale;
extern float   *rscale;

void            matcreate (mat, x)
	float         **mat;
	float          *x;
{
	float         **tmp1, **tmp2;
	float         **s1, **s2;
	float         **tr, **rx, **ry, **rz;
	int             i, j;

	tmp1 = matrix (1, NP, 1, NP);
	tmp2 = matrix (1, NP, 1, NP);
	tr = matrix (1, NP, 1, NP);
	rx = matrix (1, NP, 1, NP);
	ry = matrix (1, NP, 1, NP);
	rz = matrix (1, NP, 1, NP);
	s1 = matrix (1, NP, 1, NP);
	s2 = matrix (1, NP, 1, NP);

	for (i = 1; i <= NP; i++) {
		for (j = 1; j <= NP; j++) {
			if (i == j) {
				mat[i][j] = 1.0;
			} else
				mat[i][j] = 0.0;
			tr[i][j] = mat[i][j];
			rx[i][j] = mat[i][j];
			ry[i][j] = mat[i][j];
			rz[i][j] = mat[i][j];
			s1[i][j] = mat[i][j];
			s2[i][j] = mat[i][j];
		}
	}

/*	Scale */

	for (i = 1; i < NP; i++) {
		s1[i][i] = fscale[i];
		s2[i][i] = 1.0 / rscale[i];
	}

/* Translation  & Rotation */

	tr[1][NP] = x[1];
	tr[2][NP] = x[2];
	tr[3][NP] = x[3];

	rx[2][2] = cos (DEGTORAD * x[4]);
	rx[2][3] = sin (DEGTORAD * x[4]);
	rx[3][2] = -sin (DEGTORAD * x[4]);
	rx[3][3] = cos (DEGTORAD * x[4]);

	ry[1][1] = cos (DEGTORAD * x[5]);
	ry[1][3] = -sin (DEGTORAD * x[5]);
	ry[3][1] = sin (DEGTORAD * x[5]);
	ry[3][3] = cos (DEGTORAD * x[5]);

	rz[1][1] = cos (DEGTORAD * x[6]);
	rz[1][2] = sin (DEGTORAD * x[6]);
	rz[2][1] = -sin (DEGTORAD * x[6]);
	rz[2][2] = cos (DEGTORAD * x[6]);

	matrix_mult (tr, s1, tmp1, NP, NP, NP);
	matrix_mult (tr, tmp1, tmp2, NP, NP, NP);
	matrix_mult (rx, tmp2, tmp1, NP, NP, NP);
	matrix_mult (ry, tmp1, tmp2, NP, NP, NP);
	matrix_mult (rz, tmp2, tmp1, NP, NP, NP);
	matrix_mult (s2, tmp1, mat, NP, NP, NP);

	free_matrix (tmp1, 1, NP, 1, NP);
	free_matrix (tmp2, 1, NP, 1, NP);
	free_matrix (tr, 1, NP, 1, NP);
	free_matrix (rx, 1, NP, 1, NP);
	free_matrix (ry, 1, NP, 1, NP);
	free_matrix (rz, 1, NP, 1, NP);
	free_matrix (s1, 1, NP, 1, NP);
	free_matrix (s2, 1, NP, 1, NP);
}
@


1.7
log
@*** empty log message ***
@
text
@d2 3
d23 1
a23 1
	$Id: matcreate.c,v 1.6 1996/01/04 22:12:14 tom Exp tom $ */
d34 1
d36 1
a36 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/airerr/RCS/matcreate.c,v 1.6 1996/01/04 22:12:14 tom Exp tom $";
@


1.6
log
@change include paths
@
text
@d2 3
d20 1
a20 1
	$Id: matcreate.c,v 1.5 1995/09/24 22:48:58 tom Exp tom $ */
d32 1
a32 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/airerr/RCS/matcreate.c,v 1.5 1995/09/24 22:48:58 tom Exp tom $";
a35 1
#include <nr.h>
@


1.5
log
@fixed but in least squares matrix
@
text
@d2 3
d17 1
a17 1
	$Id: matcreate.c,v 1.4 1995/07/26 18:13:56 tom Exp tom $ */
d28 4
d33 3
a35 3
#include <nrecipes/kr/nr.h>
#include <nrecipes/kr/nrutil.h>
#include <petutil/matrixlib.h>
a38 5

#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/airerr/RCS/matcreate.c,v 1.4 1995/07/26 18:13:56 tom Exp tom $";

#endif
@


1.4
log
@lint
@
text
@d2 3
d14 1
a14 1
	$Id: matcreate.c,v 1.3 1995/07/25 21:02:25 tom Exp tom $ */
d34 1
a34 1
static char     rcsid[] = "$Header: /export/home/npggw/tom/src/airerr/RCS/matcreate.c,v 1.3 1995/07/25 21:02:25 tom Exp tom $";
d45 2
a46 1
	float         **tmp1, **tmp2, **tmp3;
a51 1
	tmp3 = matrix (1, NP, 1, NP);
d56 2
d69 2
d76 4
a79 2
	for (i = 1; i < NP; i++)
		mat[i][i] = fscale[i] / rscale[i];
a80 1

d102 6
a107 4
	matrix_mult (tr, mat, tmp1, NP, NP, NP);
	matrix_mult (rx, tmp1, tmp2, NP, NP, NP);
	matrix_mult (ry, tmp2, tmp3, NP, NP, NP);
	matrix_mult (rz, tmp3, mat, NP, NP, NP);
a110 1
	free_matrix (tmp3, 1, NP, 1, NP);
d115 2
@


1.3
log
@free mem
@
text
@d2 3
d11 1
a11 1
	$Id: matcreate.c,v 1.2 1995/07/25 19:11:23 tom Exp tom $ */
a21 1

d30 2
a31 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/airerr/RCS/matcreate.c,v 1.2 1995/07/25 19:11:23 tom Exp tom $";
d33 2
d38 1
a38 1
float           matcreate (mat, x)
d40 1
a40 1
	float           x[];
@


1.2
log
@fixed AIR matrix
@
text
@d2 3
d8 1
a8 1
	$Id: matcreate.c,v 1.1 1995/07/25 14:52:12 tom Exp $ */
d28 1
a28 1
static char     rcsid[] = "$Header: /export/home/npggw/tom/src/airerr/RCS/matcreate.c,v 1.1 1995/07/25 14:52:12 tom Exp $";
d93 8
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
/*	$Log$
	$Id$ */
d8 1
a8 1
 *  Date:           24-Jul-95
d11 3
a13 3
 *					x[1]-x[3] = translation (x,y,z)
 *					x[4]-x[6] = rotation in degrees (x,y,z)
 *					scale[1]-scale[3] = scale (x,y,z)
d25 1
a25 1
static char     rcsid[] = "$Header$";
d27 2
a28 1
extern float   *scale;
d62 1
a62 1
		mat[i][i] = scale[i];
@
