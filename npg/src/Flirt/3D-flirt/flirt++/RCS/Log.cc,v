head	1.4;
access;
symbols;
locks; strict;
comment	@// @;


1.4
date	2008.05.22.14.56.51;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	2008.05.20.16.52.28;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	2008.05.13.13.53.57;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	2008.05.07.14.41.45;	author tom;	state Exp;
branches;
next	;


desc
@@


1.4
log
@*** empty log message ***
@
text
@#include <Log.h>
#include <stdio.h>
#include <stdarg.h>
#include <fstream>

using namespace std;

namespace flirt
{

	namespace Log
	{
		ostream         log (cerr.rdbuf ());
		logmask_t       logmask = all;

		void setOutput (streambuf * sb) {
			log.rdbuf (sb);
		};

		void setLogmask (logmask_t mask) {
			logmask = mask;
		};

		void printf (logmask_t mask, const char *fmt,...) {
			va_list         args;
			char            buf[10240];

			if (mask & logmask) {
				va_start (args, fmt);
				vsprintf (buf, fmt, args);
				va_end (args);
				log << buf;
			};
		};
	};
}


int mainlog ()
{
	// Example: file output
	filebuf         fb;
	fb.open ("test.txt", ios::out);
	flirt :: Log :: setOutput (&fb);

	flirt :: Log :: printf (flirt:: Log::all, "Hallo Welt, %6.3f", 3.14158242323);
	return (0);
}
@


1.3
log
@May 20 version
@
text
@@


1.2
log
@*** empty log message ***
@
text
@d8 2
a9 1
namespace       flirt {
d11 2
a12 1
	namespace       Log {
d16 1
a16 1
		void            setOutput (streambuf * sb) {
d18 1
a18 1
		}
d20 1
a20 1
		void            setLogmask (logmask_t mask) {
d22 1
a22 1
		}
d24 1
a24 1
		void            printf (logmask_t mask, const char *fmt,...) {
d33 3
a35 3
			}
		}
	}
d38 2
a39 1
int             mainlog ()
d41 1
a41 1
	/* Example: file output */
d44 1
a44 1
	flirt:: Log:: setOutput (&fb);
d46 1
a46 4
	/* Example: logmask */
	/* Log::setLogmask( Log::none); */

	flirt:: Log:: printf (flirt:: Log::all, "Hallo Welt, %6.3f", 3.14158242323);
@


1.1
log
@Initial revision
@
text
@d8 1
a8 1
namespace flirt {
d10 3
a12 7
namespace Log {
  ostream log( cerr.rdbuf());
  logmask_t logmask = all;
  
  void setOutput( streambuf* sb) {
    log.rdbuf(sb);
  }
d14 3
a16 3
  void setLogmask ( logmask_t mask) {
    logmask = mask;
  }
d18 3
a20 3
  void printf( logmask_t mask, const char* fmt, ...){
    va_list args;
    char buf[10240];
d22 3
a24 9
    if ( mask & logmask){
      va_start( args, fmt);
      vsprintf( buf, fmt, args);
      va_end(args);
      
      log << buf;
    }
  }
}
d26 8
d36 6
a41 5
int mainlog() {
  /* Example: file output */
  filebuf fb;
  fb.open ("test.txt",ios::out);
  flirt::Log::setOutput( &fb);
d43 2
a44 2
  /* Example: logmask */
  /* Log::setLogmask( Log::none); */
d46 2
a47 2
  flirt::Log::printf( flirt::Log::all, "Hallo Welt, %6.3f", 3.14158242323);
  return(0);
@
