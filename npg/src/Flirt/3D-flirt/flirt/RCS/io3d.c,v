head	1.4;
access;
symbols;
locks; strict;
comment	@ * @;


1.4
date	2008.05.22.14.56.14;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	2008.05.20.16.49.51;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	2008.05.13.13.53.19;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	2008.05.06.21.18.40;	author tom;	state Exp;
branches;
next	;


desc
@@


1.4
log
@*** empty log message ***
@
text
@#include <flirt.h>
#include <io3d.h>


void            read3D (char *name, double *out, int m1, int m2, int m3)
{
	int             k1, k2, k3;
	FILE           *tif;
	int             imgSize = m1 * m2 * m3;

	if (NULL == (tif = fopen (name, "rb"))) {
		fprintf (stderr, "ERROR [read3D]: opening %s\n", name);
		exit (1);
	}

	if (!out) {
		free (out);
		fclose (tif);
	}
	fprintf (stdout, "Reading %s\n", name);
	fread (out, 8, imgSize, tif);
	fclose (tif);
}


void            read3Dsize (char *fileName, int *m1, int *m2, int *m3)
{
	FILE           *tif;
	char            buffer[255];
	char           *varName, *varValue;

	strncpy (fileName, fileName, strlen (fileName) - 1);

	if ((tif = fopen (fileName, "rt")) == NULL) {
		fprintf (stderr, "ERROR [read3Dsize]: opening %s\n", fileName);
		exit (1);
	}
	fprintf (stdout, "Reading %s\n", fileName);

	while (fgets (buffer, 255, tif)) {
		if (buffer[0] != '%') {
			varName = strtok (buffer, " \t=:\n");
			if (varName != NULL) {
				varValue = strtok (NULL, " \t=:\n");
				if (varValue != NULL) {
					if (!strncmp (varName, "m1", strlen (varName)))
						*m1 = string2double (varValue);
					else if (!strncmp (varName, "m2", strlen (varName)))
						*m2 = string2double (varValue);
					else if (!strncmp (varName, "m3", strlen (varName)))
						*m3 = string2double (varValue);
				}
			}
		}
	}
	fclose (tif);
}


void            write3D (char *name, double *in, int m1, int m2, int m3)
{
	FILE           *out;

	out = fopen (name, "wb");
	if (out == NULL) {
		fprintf (stderr, "ERROR [write3D]: opening %s\n", name);
		return;
	}
	fprintf (stdout, "Writing %s\n", name);
	fwrite (in, sizeof(double), m1 * m2 * m3, out);
	fclose (out);
}


int             string2int (char *digit)
{
	int             result = 0;

	//  Convert each digit char and add into result.
	while (*digit >= '0' && *digit <= '9') {
		result = (result * 10) + (*digit - '0');
		digit++;
	}
	return (result);
}


double          string2double (char *digit)
{
	double          result = 0;
	double          factor = 1.0;

	// Convert each digit char and add into result.
	while (*digit >= '0' && *digit <= '9') {
		result = (result * 10) + (*digit - '0');
		digit++;
	}

	// Convert each digit chad and add into result
	if (*digit == '.') {
		digit++;
		while (*digit >= '0' && *digit <= '9') {
			factor *= 0.1;
			result += factor * (*digit - '0');
			digit++;
		}
	}
	return (result);
}


void            getMainParameters3D (char *fileName, int *m1, int *m2, int *m3, double *h1, double *h2, double *h3,
							char *fileNameT, char *fileNameR, char *fileNameOut, char *fileNameU, char *smootherName,
							int *maxIter, double *alpha, double *tau, double *mu, double *lambda)
{
	FILE           *ptr;
	char            buffer[255];
	char           *varName, *varValue;

	strncpy (fileName, fileName, strlen (fileName) - 1);

	if ((ptr = fopen (fileName, "rt")) == NULL) {
		fprintf (stderr, "ERROR [getMainParameters3D]: opening %s\n", fileName);
		exit (1);
	}
	printf ("Reading %s\n", fileName);

	while (fgets (buffer, 255, ptr)) {
		if (buffer[0] != '%') {
			varName = strtok (buffer, " \t=:\n");

			if (varName != NULL) {
				varValue = strtok (NULL, " \t=:\n");
				if (varValue != NULL) {
					if (!strncmp (varName, "h1", strlen (varName)))
						*h1 = string2double (varValue);
					else if (!strncmp (varName, "h2", strlen (varName)))
						*h2 = string2double (varValue);
					else if (!strncmp (varName, "h3", strlen (varName)))
						*h3 = string2double (varValue);
					else if (!strncmp (varName, "m1", strlen (varName)))
						*m1 = string2int (varValue);
					else if (!strncmp (varName, "m2", strlen (varName)))
						*m2 = string2int (varValue);
					else if (!strncmp (varName, "m3", strlen (varName)))
						*m3 = string2int (varValue);
					else if (!strncmp (varName, "fileNameT", strlen (varName)))
						strncpy (fileNameT, varValue, strlen (varValue));
					else if (!strncmp (varName, "fileNameR", strlen (varName)))
						strncpy (fileNameR, varValue, strlen (varValue));
					else if (!strncmp (varName, "fileNameOut", strlen (varName)))
						strncpy (fileNameOut, varValue, strlen (varValue));
					else if (!strncmp (varName, "fileNameU", strlen (varName)))
						strncpy (fileNameU, varValue, strlen (varValue));
					else if (!strncmp (varName, "regType", strlen (varName)))
						strncpy (smootherName, varValue, strlen (varValue));
					else if (!strncmp (varName, "maxIter", strlen (varName)))
						*maxIter = string2int (varValue);
					else if (!strncmp (varName, "alpha", strlen (varName)))
						*alpha = string2double (varValue);
					else if (!strncmp (varName, "tau", strlen (varName)))
						*tau = string2double (varValue);
					else if (!strncmp (varName, "mu", strlen (varName)))
						*mu = string2double (varValue);
					else if (!strncmp (varName, "lambda", strlen (varName)))
						*lambda = string2double (varValue);
					else
						fprintf (stderr, "Warning [getMainParameters3D]: unknown parameter %s\n", varName);
				};
			};
		};
	};
	fclose (ptr);
}


void            getWarp3DParm (char *fileName,
									int *m1,
									int *m2,
									int *m3,
									double *h1,
									double *h2,
									double *h3,
									char *fileNameT,
									char *fileNameOut,
									char *fileNameU)
{
	FILE           *ptr;
	char            buffer[255];
	char           *varName, *varValue;

	strncpy (fileName, fileName, strlen (fileName) - 1);

	if ((ptr = fopen (fileName, "rt")) == NULL) {
		fprintf (stderr, "ERROR [getWarp3DParm]: opening %s\n", fileName);
		exit (1);
	}
	fprintf (stdout, "Reading %s\n", fileName);

	while (fgets (buffer, 255, ptr)) {
		if (buffer[0] != '%') {
			varName = strtok (buffer, " \t=:\n");
			if (varName != NULL) {
				varValue = strtok (NULL, " \t=:\n");
				if (varValue != NULL) {
					if (!strncmp (varName, "h1", strlen (varName)))
						*h1 = string2double (varValue);
					else if (!strncmp (varName, "h2", strlen (varName)))
						*h2 = string2double (varValue);
					else if (!strncmp (varName, "h3", strlen (varName)))
						*h3 = string2double (varValue);
					else if (!strncmp (varName, "m1", strlen (varName)))
						*m1 = string2int (varValue);
					else if (!strncmp (varName, "m2", strlen (varName)))
						*m2 = string2int (varValue);
					else if (!strncmp (varName, "m3", strlen (varName)))
						*m3 = string2int (varValue);
					else if (!strncmp (varName, "fileNameT", strlen (varName)))
						strncpy (fileNameT, varValue, strlen (varValue));
					else if (!strncmp (varName, "fileNameOut", strlen (varName)))
						strncpy (fileNameOut, varValue, strlen (varValue));
					else if (!strncmp (varName, "fileNameU", strlen (varName)))
						strncpy (fileNameU, varValue, strlen (varValue));
					else
						fprintf (stderr, "Warning [getWarp3DParm]: unknown parameter %s\n", varName);
				}
			}
		}
	}
	fclose (ptr);
}
@


1.3
log
@May 20 version
@
text
@@


1.2
log
@*** empty log message ***
@
text
@d4 1
a4 1
/* -------------------------------------------------------------------------- */
a6 5

	/* int j=0; int k1,k2;
	 * uint32 w, h; uint16 orient; size_t npixels; uint32 *raster;
	 */

a10 5
	// printf ("readFromFile %s\n", name);
	// memory is allocated outside
	// out = createArray3D (m1, m2, m3);
	// out = (double *) malloc (sizeof (double) * imgSize);

d12 2
a13 2
		fprintf (stderr, "ERROR [read3D]: could not open %s\n", name);
		exit (EXIT_FAILURE);
d20 1
a20 3
	// read image data
	// printf ("point %d\n", imgSize);
	// fread (out, sizeof (double), imgSize, tif);
a22 1
	// return out;
d25 1
a25 1
/* -------------------------------------------------------------------------- */
d29 1
a29 1
	char            puffer[255];
a30 1
	int             pf = 0;		/* print flag */
a32 1
	printf ("Reading image file %s\n", fileName);
d35 2
a36 2
		fprintf (stderr, "ERROR [read3Dsize]: can't open %s\n", fileName);
		exit (0);
d38 1
a38 1
	printf ("Reading image file for size...");
d40 3
a42 10
	if (pf)
		printf ("\n");

	while (fgets (puffer, 255, tif)) {
		if (pf)
			printf ("puffer=\"%s\"\n", puffer);
		if (puffer[0] != '%') {

			varName = strtok (puffer, " \t=:\n");

d46 1
a46 4
					if (pf)
						printf ("varName=\"%s\", varValue=\"%s\"\n", varName, varValue);

					if (!strncmp (varName, "m1", strlen (varName))) {
d48 1
a48 3
						if (pf)
							printf ("m1 -- %f\n", *m1);
					} else if (!strncmp (varName, "m2", strlen (varName))) {
d50 1
a50 3
						if (pf)
							printf ("m2 -- %f\n", *m2);
					} else if (!strncmp (varName, "m3", strlen (varName))) {
a51 3
						if (pf)
							printf ("m3 -- %f\n", *m3);
					}
a55 1
	printf ("Closing image file...");
d59 1
a59 1
/* -------------------------------------------------------------------------- */
a62 1
	int             j1, j2, j3, tmp = 0;
d66 1
a66 1
		fprintf (stderr, "ERROR [write3D]: could not open %s for writing\n", name);
d69 2
a70 1
	fwrite (in, 8, m1 * m2 * m3, out);
d74 1
a74 1
/* -------------------------------------------------------------------------- */
d87 1
a87 1
/* -------------------------------------------------------------------------- */
d98 1
d111 4
a114 17
/* -------------------------------------------------------------------------- */
void            getMainParameters3D (char *fileName,
				                     int *m1,
				                     int *m2,
				                     int *m3,
				                     double *h1,
				                     double *h2,
				                     double *h3,
				                     char *fileNameT,
				                     char *fileNameR,
				                     char *fileNameOut,
				                     char *smootherName,
				                     int *maxIter,
				                     double *alpha,
				                     double *tau,
				                     double *mu,
				                     double *lambda)
d117 1
a117 1
	char            puffer[255];
a118 1
	int             pf = 0;		/* print flag */
a120 1
	printf ("Reading parameter file %s\n", fileName);
d123 2
a124 2
		fprintf (stderr, "ERROR [getMainParameters3D]: can't open %s\n", fileName);
		exit (0);
d126 1
d128 3
a130 2
	if (pf)
		printf ("\n");
a131 7
	while (fgets (puffer, 255, ptr)) {
		if (pf)
			printf ("puffer=\"%s\"\n", puffer);
		if (puffer[0] != '%') {

			varName = strtok (puffer, " \t=:\n");

d135 1
a135 4
					if (pf)
						printf ("varName=\"%s\", varValue=\"%s\"\n", varName, varValue);

					if (!strncmp (varName, "h1", strlen (varName))) {
d137 1
a137 3
						if (pf)
							printf ("h1 -- %f\n", *h1);
					} else if (!strncmp (varName, "h2", strlen (varName))) {
d139 1
a139 3
						if (pf)
							printf ("h2 -- %f\n", *h2);
					} else if (!strncmp (varName, "h3", strlen (varName))) {
d141 1
a141 3
						if (pf)
							printf ("h3 -- %f\n", *h3);
					} else if (!strncmp (varName, "m1", strlen (varName))) {
d143 1
a143 3
						if (pf)
							printf ("m1 -- %d\n", *m1);
					} else if (!strncmp (varName, "m2", strlen (varName))) {
d145 1
a145 3
						if (pf)
							printf ("m2 -- %d\n", *m2);
					} else if (!strncmp (varName, "m3", strlen (varName))) {
d147 1
a147 3
						if (pf)
							printf ("m3 -- %d\n", *m3);
					} else if (!strncmp (varName, "fileNameT", strlen (varName))) {
d149 1
a149 3
						if (pf)
							printf ("fileNameT -- \"%s\"\n", fileNameT);
					} else if (!strncmp (varName, "fileNameR", strlen (varName))) {
d151 1
a151 3
						if (pf)
							printf ("fileNameR -- \"%s\"\n", fileNameR);
					} else if (!strncmp (varName, "fileNameOut", strlen (varName))) {
d153 3
a155 3
						if (pf)
							printf ("fileNameOut -- \"%s\"\n", fileNameOut);
					} else if (!strncmp (varName, "regType", strlen (varName))) {
d157 1
a157 3
						if (pf)
							printf ("regType -- \"%s\"\n", smootherName);
					} else if (!strncmp (varName, "maxIter", strlen (varName))) {
d159 1
a159 3
						if (pf)
							printf ("maxIter -- %i\n", *maxIter);
					} else if (!strncmp (varName, "alpha", strlen (varName))) {
d161 1
a161 3
						if (pf)
							printf ("alpha -- %f\n", *alpha);
					} else if (!strncmp (varName, "tau", strlen (varName))) {
d163 1
a163 3
						if (pf)
							printf ("tau -- %f\n", *tau);
					} else if (!strncmp (varName, "mu", strlen (varName))) {
d165 1
a165 3
						if (pf)
							printf ("mu -- %f\n", *mu);
					} else if (!strncmp (varName, "lambda", strlen (varName))) {
d167 59
a225 4
						if (pf)
							printf ("lambda -- %f\n", *lambda);
					} else
						printf ("Warning [getMainParameters3D]: unknown parameter <%s>\n", varName);
a229 1

@


1.1
log
@Initial revision
@
text
@d8 1
a8 4
	/*
	 * int j=0; int k1,k2;
	 * 
	 * 
a13 1
	//printf ("readFromFile");
a14 3
	//memory is allocated outside
		// out = createArray3D (m1, m2, m3);
	//out = (double *) malloc (sizeof (double) * imgSize);
d16 4
a19 1
	//printf ("%s\n", name);
d22 1
a22 1
		fprintf (stderr, "could not open '%s'\n", name);
d25 2
a26 2
	//verify memory allocation
		if (!out) {
a28 1
		//return NULL;
d30 3
a32 4
	//read image data

		// printf ("point %d\n", imgSize);
	//fread (out, sizeof (double), imgSize, tif);
d35 1
a35 2
	//return out;

a38 1

a40 1

d44 1
a44 2
	int             pf = 0;
	//printflag
d46 2
a48 3
		strncpy (fileName, fileName, strlen (fileName) - 1);
	printf (" opening/reading image file '%s'...", fileName);

d50 1
a50 1
		fprintf (stderr, "can't open file '%s'\n", fileName);
d53 1
a53 1
	printf ("done.\n");
a54 2
	printf ("reading image file for size...");

d88 1
a88 3

	//printf (" done.\n");
	printf ("closing image file...");
a94 1

a95 1

a98 1

d100 1
a100 1
		printf ("Could not open file %s for writing\n", name);
a106 2


d112 2
a113 2
	//-- -Convert each digit char and add into result.
	while           (*digit >= '0' && *digit <= '9') {
d117 1
a117 2

	                return (result);
a119 1

d126 2
a127 2
	//-- -Convert each digit char and add into result.
	while           (*digit >= '0' && *digit <= '9') {
d131 2
a132 2
	              //-- -convert each digit chad and add into result
	if              (*digit == '.') {
a142 1

d164 1
a164 2
	int             pf = 0;
	//printflag
d166 2
a167 2
		strncpy (fileName, fileName, strlen (fileName) - 1);
	printf ("opening/reading parameter file '%s'...", fileName);
d170 1
a170 1
		fprintf (stderr, "can't open file '%s'\n", fileName);
a172 1
	//printf ("done.\n");
a173 2
	//printf ("reading parameter file...");

d251 1
a251 1
						printf ("\n\nunknown parameter <<%s>>\n\n", varName);
a257 2
	printf (" done.\n");

@
