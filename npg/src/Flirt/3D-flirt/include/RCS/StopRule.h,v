head	1.2;
access;
symbols;
locks
	tom:1.2; strict;
comment	@ * @;


1.2
date	2008.05.13.13.54.33;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	2008.05.07.14.32.33;	author tom;	state Exp;
branches;
next	;


desc
@@


1.2
log
@*** empty log message ***
@
text
@#ifndef _CLASS_STOPRULE_H_
#define _CLASS_STOPRULE_H_

#include <stdio.h>

#include "DistanceMeasure.h"
#include "Smoother.h"
#include "Array.h"
#include "Displacement.h"

namespace flirt {

/** \brief Check for terminition,  */
class StopRule {
  DistanceMeasure& D;
  Smoother&        S;
  int              maxIter;
  
 public:

  /** \brief Constructor */
  StopRule(DistanceMeasure& DM, 
	   Smoother&        SM,
           int MaxIter)
    : D(DM), S(SM), maxIter(MaxIter) {
      //printf("StopRule (%p) :: Constructor\n",this);
    };

  virtual ~StopRule() {
      //printf("StopRule (%p) :: Destructor\n",this);
  };
  
  /** \brief update u; e.g. by linesarch u = u + lambda*opti.getUpdate() */
  virtual bool stopIteration(Displacement& u, int iter) 
  {
      if (iter >= maxIter) return 1; else return 0;
  };
  
  
};


}

#endif
@


1.1
log
@Initial revision
@
text
@@
