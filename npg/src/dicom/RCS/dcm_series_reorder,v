head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2003.10.01.16.40.50;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	2002.04.10.14.39.02;	author tom;	state Exp;
branches;
next	;


desc
@use REL Image Position for ordering
@


1.2
log
@*** empty log message ***
@
text
@#!/usr/local/bin/perl
# Author:	Tom Videen
# Date:		May 2003
# Purpose:	Rename .dcm files in temporal order (assending ID Series Time)
# -----------------------------------------------
if ($#ARGV != 1) {
	print STDERR "Usage: dcm_series_reorder <first> <last>\n";
	print STDERR " e.g.: dcm_series_reorder 129 256\n";
	exit(1);
}

$first = $ARGV[0];
$last = $ARGV[1];
if ($first > $last) {
	$first = $ARGV[1];
	$last = $ARGV[0];
}
$tmp = dcm_series_reorder.tmp;

# Add prefix to first file number and check DICOM format
# -----------------------------------------------------
if ($first < 10 ) {
	$prefix = "0000";
} elsif ($first < 100) {
	$prefix = "000";
} elsif ($first < 1000) {
	$prefix = "00";
} elsif ($first < 10000) {
	$prefix = "0";
}
$file = $prefix . $first . ".dcm";
`dcm_dump_element -t 0020 1041 $file $tmp 2> /dev/null`;
if (!$?) {	  # DICOM Part 10 format
	$type = "-t";
} else {
	`dcm_dump_element 0020 1041 $file $tmp 2> /dev/null`;
	if (!$?) {
		$type = '';
	} else {
		print STDERR "$file is not DICOM format\n";
		exit(1);
	}
}

# For each file, get "ID Series Time"
# ------------------------------------
foreach $fileno ($first..$last) {
	if ($fileno < 10 ) {
		$prefix = "0000";
	} elsif ($fileno < 100) {
		$prefix = "000";
	} elsif ($fileno < 1000) {
		$prefix = "00";
	} elsif ($fileno < 10000) {
		$prefix = "0";
	} 
	$file = $prefix . $fileno . ".dcm";
	`dcm_dump_element $type 0008 0031 $file $tmp`;
	open(OUTFILE, "$tmp");
	@@out = <OUTFILE>;
	$series_time{$fileno} = $out[0];
	$newno{$fileno} = $fileno;
}

# Sort files by series number
# ---------------------------
$switch = 1;
while ($switch) {
	$switch = 0;
	foreach $n ($first+1..$last) {
		if ($series_time{$newno{$n}} < $series_time{$newno{$n-1}}) {
			$switch = 1;
			$temp = $newno{$n};
			$newno{$n} = $newno{$n-1};
			$newno{$n-1} = $temp;
		}
	}
}

# Rename files to tmp...
# ---------------------------
foreach $fileno ($first..$last) {
	if ($fileno < 10 ) {
		$prefix = "0000";
	} elsif ($fileno < 100) {
		$prefix = "000";
	} elsif ($fileno < 1000) {
		$prefix = "00";
	} elsif ($fileno < 10000) {
		$prefix = "0";
	} 
	$oldname = $prefix . $fileno . ".dcm";
	$tmpname = "tmp" . $fileno . ".dcm";
	`mv $oldname $tmpname`;
}

# Rename tmp files to new names
# ---------------------------
foreach $fileno ($first..$last) {
	$newnum = $newno{$fileno};
	if ($fileno < 10 ) {
		$prefix = "0000";
	} elsif ($fileno < 100) {
		$prefix = "000";
	} elsif ($fileno < 1000) {
		$prefix = "00";
	} elsif ($fileno < 10000) {
		$prefix = "0";
	} 
	$tmpname = "tmp" . $newnum . ".dcm";
	$newname = $prefix . $fileno . ".dcm";
	`mv $tmpname $newname`;
}

# Remove temporary file and exit
# ---------------------------
`rm $tmp`;
exit(0);

@


1.1
log
@Initial revision
@
text
@d3 2
a4 4
# Date:		Apr 2002
# Purpose:	Rename .dcm files in temporal order (assending REL Image Number)
#			Used to separate a reordered pair of TSE scans;
# Creates:	dcm_series_reorder.log
d45 2
a46 9
# Open log file
# ---------------------------
open(LOGFILE, ">dcm_series_reorder.log");
print LOGFILE `date`;
print LOGFILE `pwd`;
print LOGFILE "\n";

# Get time of each file
# ---------------------------
d58 1
a58 1
	`dcm_dump_element $type 0020 0013 $file $tmp`;
d65 1
a65 1
# Sort files by series time 
a93 1
	print LOGFILE "mv $oldname $tmpname\n";
a111 1
	print LOGFILE "mv $tmpname $newname\n";
@
