head	1.4;
access;
symbols;
locks; strict;
comment	@# @;


1.4
date	2003.12.10.21.04.17;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	2003.10.01.16.40.50;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	2002.03.13.15.45.40;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	2002.03.12.21.37.55;	author tom;	state Exp;
branches;
next	;


desc
@@


1.4
log
@check 2 keys for order
@
text
@#!/usr/local/bin/perl
# Author:	Tom Videen
# Date:		Dec 2003
# Purpose:	Rename .ima files in sequential order by slice position.
# -----------------------------------------------
if ($#ARGV != 1) {
	print STDERR "Usage: dcm_slice_reorder <first> <last>\n";
	print STDERR " e.g.: dcm_slice_reorder 129 256\n";
	exit(0);
}

$first = $ARGV[0];
$last = $ARGV[1];
if ($first > $last) {
	print STDERR "Usage: dcm_slice_reorder <first> <last>\n";
	print STDERR " e.g.: dcm_slice_reorder 129 256\n";
	exit(0);
}
$tmp = dcm_slice_reorder.tmp;

# Add prefix to first file number and check DICOM format
# -----------------------------------------------------
if ($first < 10 ) {
	$prefix = "0000";
} elsif ($first < 100) {
	$prefix = "000";
} elsif ($first < 1000) {
	$prefix = "00";
} elsif ($first < 10000) {
	$prefix = "0";
}
$file = $prefix . $first . ".dcm";

# Sort on:  0020 1041 = REL Slice Location
#      or:  0020 0013 = REL Image Number

$key = "1041";
`dcm_dump_element -t 0020 $key $file $tmp 2> /dev/null`;
if (!$?) {	  # DICOM Part 10 format
	$type = "-t";
} else {
	`dcm_dump_element 0020 $key $file $tmp 2> /dev/null`;
	if (!$?) {
		$type = '';
	} else {
        $key = "0013";
        `dcm_dump_element -t 0020 $key $file $tmp 2> /dev/null`;
        if (!$?) {      # DICOM Part 10 format
            $type = "-t";
        } else {
            `dcm_dump_element 0020 $key $file $tmp 2> /dev/null`;
            if (!$?) {
                $type = "";
            } else {
                print STDERR "$file is not DICOM format\n";
                exit (1)
            }
        }
	}
}

# Get slice location of each file
# ---------------------------
foreach $fileno ($first..$last) {
	if ($fileno < 10 ) {
		$prefix = "0000";
	} elsif ($fileno < 100) {
		$prefix = "000";
	} elsif ($fileno < 1000) {
		$prefix = "00";
	} elsif ($fileno < 10000) {
		$prefix = "0";
	} 
	$file = $prefix . $fileno . ".dcm";
	`dcm_dump_element $type 0020 $key $file $tmp`;
	open(OUTFILE, "$tmp");
	@@out = <OUTFILE>;
	$slice_loc{$fileno} = $out[0];
	$newno{$fileno} = $fileno;
}

# Sort files by slice location (negative->positive or low->high)
# ---------------------------
$switch = 1;
while ($switch) {
	$switch = 0;
	foreach $n ($first+1..$last) {
		if ($slice_loc{$newno{$n}} < $slice_loc{$newno{$n-1}}) {
			$switch = 1;
			$temp = $newno{$n};
			$newno{$n} = $newno{$n-1};
			$newno{$n-1} = $temp;
		}
	}
}

# Rename files to tmp...
# ---------------------------
foreach $fileno ($first..$last) {
	if ($fileno < 10 ) {
		$prefix = "0000";
	} elsif ($fileno < 100) {
		$prefix = "000";
	} elsif ($fileno < 1000) {
		$prefix = "00";
	} elsif ($fileno < 10000) {
		$prefix = "0";
	} 
	$oldname = $prefix . $fileno . ".dcm";
	$tmpname = "tmp" . $fileno . ".dcm";
	`mv $oldname $tmpname`;
}

# Rename tmp files to new names
# ---------------------------
foreach $fileno ($first..$last) {
	$newnum = $newno{$fileno};
	if ($fileno < 10 ) {
		$prefix = "0000";
	} elsif ($fileno < 100) {
		$prefix = "000";
	} elsif ($fileno < 1000) {
		$prefix = "00";
	} elsif ($fileno < 10000) {
		$prefix = "0";
	} 
	$tmpname = "tmp" . $newnum . ".dcm";
	$newname = $prefix . $fileno . ".dcm";
	`mv $tmpname $newname`;
}

# Remove temporary file and exit
# ---------------------------
`rm $tmp`;
exit(0);

@


1.3
log
@*** empty log message ***
@
text
@d3 1
a3 1
# Date:		Mar 2002
d33 6
a38 1
`dcm_dump_element -t 0020 1041 $file $tmp 2> /dev/null`;
d42 1
a42 1
	`dcm_dump_element 0020 1041 $file $tmp 2> /dev/null`;
d46 13
a58 2
		print STDERR "$file is not DICOM format\n";
		exit(1);
d75 1
a75 1
	`dcm_dump_element $type 0020 1041 $file $tmp`;
@


1.2
log
@*** empty log message ***
@
text
@a4 1
# Creates:	dcm_slice_reorder.log
a45 7
# Open log file
# ---------------------------
open(LOGFILE, ">dcm_slice_reorder.log");
print LOGFILE `date`;
print LOGFILE `pwd`;
print LOGFILE "\n";

a94 1
	print LOGFILE "mv $oldname $tmpname\n";
a112 1
	print LOGFILE "mv $tmpname $newname\n";
@


1.1
log
@Initial revision
@
text
@d3 2
a4 5
# Date:		Jan 2002
# Purpose:	Rename files from a pair of 3D TSE scans
# 			Given a dir. with sequential DICOM files, rename them
#		   00001.dcm - 000xx.dcm, maintaining original sequence.
#		   Record of file renaming is saved to "dcm_slice_reorder.log".
a5 1
# Usage:	dcm_slice_reorder <firstfile> <lastfile>
a6 2

# Get command-line arguments
d8 2
a9 1
	&printusage;
d15 5
d22 2
a23 2
# Check DICOM format
# ---------------------------
d111 1
a111 1
	if ($newnum < 10 ) {
d113 1
a113 1
	} elsif ($newnum < 100) {
d115 1
a115 1
	} elsif ($newnum < 1000) {
d117 1
a117 1
	} elsif ($newnum < 10000) {
a129 16

# =====
# Subroutines
# ===
sub printusage {
	$~ = USAGE;
	write STDOUT;
}

# =====
# Formats
# =====
format USAGE =
   Usage: dcm_slice_reorder <firstfile> <lastfile>
 Example: dcm_slice_reorder 129 256
.
@
