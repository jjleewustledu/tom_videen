head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2002.03.13.15.45.40;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	2002.01.18.21.32.34;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	98.12.30.19.37.57;	author tom;	state Exp;
branches;
next	;


desc
@Jane's version
@


1.3
log
@*** empty log message ***
@
text
@#!/usr/local/bin/perl
# Date:     27feb98
# Author:   Jane Dunford-Shore
# Purpose:  Given a dir. with sequential DICOM files, rename them
#           00001.dcm - 000nn.dcm, maintaining original sequence.
#           Record of file renaming is saved to "dcm_rename.log".
# Files created: dcm_rename.log
# Modified: 10july98
# Modified: 16-Jan-2001 (pass root as input parameter instead of number of scans)
# ------------------------------------------------------------------
if ($#ARGV != 0) {
    &printusage;
    exit(0);
}

$root = $ARGV[0];
$dcm_ct = `ls $root* | wc -l`;
$tmp = dcm_rename_tmp.log

# Open log file
open(LOGFILE, ">dcm_rename.log");
print LOGFILE `date`;
print LOGFILE `pwd`;
print LOGFILE "\n";

# Read filenames into dcm_names
# ------------------------------------
@@out = `ls -1 $root*`;
(@@out) || die "No DICOM files found\n";
(($#out + 1) == $dcm_ct) || die "Incorrect number of DICOM files specified\n";

foreach $line (@@out) {
    chomp($line);
    push(@@dcm_names, $line);
} 

# Check first file for DICOM format
# ------------------------------------
`dcm_dump_element -t 0008 0032 @@dcm_names[0] $tmp 2> /dev/null`;
if (!$?) {		# DICOM Part 10 format
	$type = "-t";
} else {
	`dcm_dump_element 0008 0032 @@dcm_names[0] $tmp 2> /dev/null`;
	if (!$?) {
		$type = '';
	} else {
		print STDERR "@@dcm_names[0] is not DICOM format\n";
		exit(1);
	}
}

# Rename files to 000nn.dcm and write rename command to log file
# ------------------------------------
foreach $num (1..$dcm_ct) {
    if ($num < 10 ) {
        $prefix = "0000";
    } elsif ($num < 100) {
        $prefix = "000";
    } elsif ($num < 1000) {
        $prefix = "00";
    } else {
        $prefix = "0";
	}
    $newname = $prefix . $num . ".dcm";
    print STDOUT "mv $dcm_names[$num-1] $newname\n";
    print LOGFILE "mv $dcm_names[$num-1] $newname\n";
    `mv $dcm_names[$num-1] $newname`;
}

`rm $tmp`;
exit(0);

# =====
# Subroutines
# ===

sub printusage {
    $~ = USAGE;
    write STDOUT;
}

# =====
# Formats
# =====

format USAGE =
   Usage: dcm_rename <root>
 Example: dcm_rename 1.
      or: dcm_rename MR
      or: dcm_rename .MR
   Notes: Renames Dicom files to 000nn.dcm by sorting Dicom filenames alphabetically.
          Log file "dcm_rename.log" contains original and new filenames.
.
    
    
@


1.2
log
@*** empty log message ***
@
text
@d5 1
a5 1
#           00001.dcm - 000xx.dcm, maintaining original sequence.
a7 1
# Usage:    dcm_rename <number_of_DICOM_files>
d10 1
a10 3
# -----

# Get command-line argument - should be exactly one argument
d26 5
a30 2
# Get current names of DICOM files
@@out = `ls -1 $root*`;		# DICOM CT file names begin with "$root"
a31 7
# Error if
# 1. no files named "$root*"
# 2. number of "$root*" files does not match number specified
(@@out) || die "No DICOM files present.\n";
(($#out + 1) == $dcm_ct) || die "Incorrect number of DICOM files specified.\n";

# Remove newline character at end of each line
d37 2
a38 1
# Check DICOM format
d52 4
a55 15
# Order files by acquisition time

foreach $file (@@dcm_names) {
    `dcm_dump_element $type 0008 0032 $file $tmp`;
    open(OUTFILE, "$tmp");
    @@out = <OUTFILE>;
    #print STDERR @@out, "\n";
    $acq_time{$file} = $out[0];
    #print STDERR $acq_time{$file}, "\n";
}

# Rename files to 000xx.dcm
# Write log file "dcm_rename.log" to document old/new filenames
foreach $fileno (1..$dcm_ct) {
    if ($fileno < 10 ) {
d57 1
a57 1
    } elsif ($fileno < 100) {
d59 1
a59 1
    } elsif ($fileno < 1000) {
d64 4
a67 4
    $newname = $prefix . $fileno . ".dcm";
    print STDOUT "mv $dcm_names[$fileno-1] $newname\n";
    print LOGFILE "mv $dcm_names[$fileno-1] $newname\n";
    `mv $dcm_names[$fileno-1] $newname`;
a69 1
# Remove temporary file
a70 1

d89 1
d91 1
a91 1
   Notes: Renames Dicom files to 000xx.dcm by sorting Dicom filenames alphabetically.
@


1.1
log
@Initial revision
@
text
@a1 2
# $Log$
# -----
a2 1
# Modified: 10july98
d9 2
d19 3
a21 1
$dcm_ct = $ARGV[0];
d30 1
a30 1
@@out = `ls -1 1.*`;    # DICOM CT file names begin with "1."
d33 2
a34 2
# 1. no files named "1.*"
# 2. number of "1.*" files does not match number specified
d40 1
a40 1
    chop($line);
d44 14
d61 2
a62 2
    `dcm_dump_element 0008 0032 $file tmp.txt`;
    open(OUTFILE, "tmp.txt");
d74 1
a74 2
    }
    elsif ($fileno < 100) {
d76 1
a76 2
    }
    elsif ($fileno < 1000) {
d78 3
a80 1
    } 
d88 1
a88 1
`rm tmp.txt`;
d106 5
a110 5
   Usage: dcm_rename <number_of_DICOM_files>
 Example: dcm_rename 44
   Notes: Renames Dicom files to 000xx.dcm by sorting Dicom filenames
          alphabetically. Log file "dcm_rename.log" contains original and 
          new filenames.
@
