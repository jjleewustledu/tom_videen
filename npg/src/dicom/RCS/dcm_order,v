head	1.6;
access;
symbols;
locks; strict;
comment	@# @;


1.6
date	2003.12.10.21.04.17;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	2003.10.01.18.02.33;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	2003.10.01.16.40.50;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	2002.04.10.14.39.02;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	2002.03.13.15.45.40;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	2002.01.18.21.34.14;	author tom;	state Exp;
branches;
next	;


desc
@@


1.6
log
@check 2 keys for order
@
text
@#!/usr/local/bin/perl
# Author:	Tom Videen
# Date:		Dec 2003
# Purpose:	Get slice position of a list of sequential DICOM files (.ima).
# -----------------------------------------------
if ($#ARGV != 1) {
	print STDERR "Usage: dcm_order <first> <last>\n";
	print STDERR " e.g.: dcm_order 129 256\n";
	exit(0);
}

$first = $ARGV[0];
$last = $ARGV[1];
$tmp = "dcm_order$$.tmp";

if ($first > $last) {
	print STDERR "Usage: dcm_order <first> <last>\n";
	print STDERR " e.g.: dcm_order 129 256\n";
	exit(0);
}

# Add prefix to file numbers and check DICOM format
# -------------------------------------------------
if ($first < 10 ) {
	$prefix = "0000";
} elsif ($first < 100) {
	$prefix = "000";
} elsif ($first < 1000) {
	$prefix = "00";
} elsif ($first < 10000) {
	$prefix = "0";
} 
$file = $prefix . $first . ".dcm";

# Sort on:  0020 1041 = REL Slice Location
#      or:  0020 0013 = REL Image Number

$key = "1041";
`dcm_dump_element -t 0020 $key $file $tmp 2> /dev/null`;
if (!$?) {		# DICOM Part 10 format
	$type = "-t";
} else {
	`dcm_dump_element 0020 $key $file $tmp 2> /dev/null`;
	if (!$?) {
		$type = "";
	} else {
		$key = "0013";
		`dcm_dump_element -t 0020 $key $file $tmp 2> /dev/null`;
		if (!$?) {		# DICOM Part 10 format
			$type = "-t";
		} else {
			`dcm_dump_element 0020 $key $file $tmp 2> /dev/null`;
			if (!$?) {
				$type = "";
			} else {
				print STDERR "$file is not DICOM format\n";
				exit (1)
			}
		}
	}
}

# Get slice location of each file
# Note:     0018 0024 = REL Sequence Name
#  and      0018 0086 = REL Echo Number
# ---------------------------------------
print STDOUT " File  Slice   Step  Echo#  Name\n";
foreach $fileno ($first..$last) {
	if ($fileno < 10 ) {
		$prefix = "0000";
	} elsif ($fileno < 100) {
		$prefix = "000";
	} elsif ($fileno < 1000) {
		$prefix = "00";
	} elsif ($fileno < 10000) {
		$prefix = "0";
	} 
	$file = $prefix . $fileno . ".dcm";

	`dcm_dump_element $type 0020 $key $file $tmp`;
	open(OUTFILE, "$tmp");
	@@out = <OUTFILE>;
	$slice_loc{$fileno} = $out[0];
	$last_loc = $out[0];

    `dcm_dump_element $type 0018 0086 $file $tmp`;
    open(OUTFILE, "$tmp");
    @@out = <OUTFILE>;
    $echo_num = $out[0];

    `dcm_dump_element $type 0018 0024 $file $tmp`;
    open(OUTFILE, "$tmp");
    @@out = <OUTFILE>;
    $acq_nam = $out[0];

	if ($fileno > $first) {
	    if ($echo_num == $last_echo) {
			$incr = $slice_loc{$fileno} - $slice_loc{($fileno - 1)};
	  	} else {
			$incr = 0;
			print STDOUT "\n";
		}
	} else {
		$incr = 0;
	}
	$last_echo = $echo_num;
	printf STDOUT "%5d %6.2f %6.2f %4d  %s\n", $fileno, $slice_loc{$fileno}, $incr, $echo_num, $acq_nam;
}

# Remove temporary file and exit
# ---------------------------
`rm $tmp`;
exit(0);
@


1.5
log
@*** empty log message ***
@
text
@d3 1
a3 1
# Date:		Oct 2003
d34 6
a39 1
`dcm_dump_element -t 0020 1041 $file $tmp 2> /dev/null`;
d43 1
a43 1
	`dcm_dump_element 0020 1041 $file $tmp 2> /dev/null`;
d47 13
a59 2
		print STDERR "$file is not DICOM format\n";
		exit(1);
d64 3
a66 1
# ---------------------------
d80 1
a80 1
	`dcm_dump_element $type 0020 1041 $file $tmp`;
@


1.4
log
@*** empty log message ***
@
text
@d3 1
a3 1
# Date:		Dec 2002
d49 1
a49 1
print STDOUT " File  Slice   Step  Echo#\n";
d73 5
d89 1
a89 1
	printf STDOUT "%5d %6.2f %6.2f %4d\n", $fileno, $slice_loc{$fileno}, $incr, $echo_num;
@


1.3
log
@add slice spacing
@
text
@d3 1
a3 1
# Date:		Apr 2002
a4 2
#			Record of file renaming is saved to "dcm_order.log"
#			along with spacing from previous slice.
a46 7
# Open log file
# ---------------------------
open(LOGFILE, ">dcm_order.log");
print LOGFILE `date`;
print LOGFILE `pwd`;
print LOGFILE "\n";

d49 1
d61 1
d67 6
d74 6
a79 1
		$incr = $slice_loc{$fileno} - $slice_loc{($fileno - 1)};
d83 2
a84 2
	printf STDERR  "%5d %6.2f %6.2f\n", $fileno, $slice_loc{$fileno}, $incr;
	printf LOGFILE "%5d %6.2f %6.2f\n", $fileno, $slice_loc{$fileno}, $incr;
@


1.2
log
@*** empty log message ***
@
text
@d3 1
a3 1
# Date:		Mar 2002
d5 2
a6 1
#			Record of file renaming is saved to "dcm_order.log".
d73 8
a80 2
	printf STDERR  "%5d %6.2f\n", $fileno, $slice_loc{$fileno};
	printf LOGFILE "%5d %6.2f\n", $fileno, $slice_loc{$fileno};
@


1.1
log
@Initial revision
@
text
@d3 2
a4 4
# Date:		Jan 2002
# Purpose:	Rename files from a pair of 3D TSE scans
# 			Given a dir. with sequential DICOM files, rename them
#			00001.dcm - 000xx.dcm, maintaining original sequence.
a5 2
# Creates:	dcm_order.log
# Usage:	dcm_order <firstfile> <lastfile>
a6 2

# Get command-line arguments
d8 2
a9 1
	&printusage;
d17 8
a24 2
# Check DICOM format
# ---------------------------
a79 17

# =====
# Subroutines
# ===
sub printusage {
	$~ = USAGE;
	write STDOUT;
}

# =====
# Formats
# =====
format USAGE =
       Usage: dcm_order <firstfile> <lastfile>
     Example: dcm_order 129 256
.

@
