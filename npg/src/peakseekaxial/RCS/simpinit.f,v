head	1.4;
access;
symbols;
locks; strict;
comment	@c @;


1.4
date	2004.02.17.15.04.28;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	98.12.18.17.13.55;	author tom;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Feb 2004
@
text
@CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  Subroutine:   SIMPINIT.FTN
C  Author:       Tom O. Videen
C  Date:         05-Jan-89
C  Written For:  PEAKSEK4 (Simplex fit to 2D gaussian)
C                Test of Simplex Algorithm
C
C  Intent:
C     Initialize simplex prior to calling SIMPLEX.
C
C  References:
C     S.L.S. Jacoby, J.S. Kowalik & J.T. Pizzo (1972) Iterative Methods
C       for Nonlinear Optimization Problems, Prentice-Hall, p.80-81.
C
C  Subroutines:
C     FUNC - function declared EXTERNAL in calling program;
C
C  Called by:  WOODTEST, GAUSFIT3, GAUSS22D, GAUS2DGB
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

      SUBROUTINE SIMPINIT (P, Y, MPTS, NPARM, SCALE, FUNC)

      PARAMETER (NMAX  = 10)    ! maximum number of function parameters

C  Variables Passed:

      REAL*4     P(MPTS,NPARM)  ! input:  initial point in P(1,NPARM)
C                               ! output: initialized simplex
      REAL*4     Y(MPTS)        ! output: initial functional values of simplex
      REAL*4     SCALE          ! input:  scale to used for initialization

      INTEGER*4  MPTS           ! no. of points in simplex (NPARM+1)
      INTEGER*4  NPARM          ! no. of parameters in function (<= NMAX))

C  Other variables

      REAL*4     PR(NMAX)       ! single point of sinplex
      REAL*4     NP, NQ         ! increments to first point
      REAL*4     PARMS

      PARMS = FLOAT(NPARM)
      NP = SCALE* (SQRT(PARMS+1.) + 1. + PARMS) / (SQRT(2.)*PARMS)
      NQ = SCALE* (SQRT(PARMS+1.) - 1.) / (SQRT(2.)*PARMS)

C  Form the initial simplex points using NP and NQ

      DO 200 I=2,NPARM+1
        DO 100 J=1,NPARM
          IF (J+1.EQ.I) THEN
            P(I,J) = P(1,J) + NP
          ELSE
            P(I,J) = P(1,J) + NQ
          END IF
100     CONTINUE
200   CONTINUE

C  Evaluate the function for each of the initial points

      DO 400 I=1,MPTS
        DO 300 J=1,NPARM
          PR(J) = P(I,J)
300     CONTINUE
        Y(I) = FUNC(PR)
400   CONTINUE

      RETURN
      END
@


1.1
log
@Initial revision
@
text
@@
