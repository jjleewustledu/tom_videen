head	1.4;
access;
symbols;
locks; strict;
comment	@c @;


1.4
date	2004.02.17.15.04.28;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	98.12.18.17.13.55;	author tom;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Feb 2004
@
text
@CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  Function:     FCHI2DGB.FTN
C  Author:       Tom O. Videen
C  Date:         20-Sep-89
C  Written For:  Curve fitting
C
C  Intent:
C     Evaluate reduced chi square for fit to data using a single
C     2-dimensional gaussian function.
C     Use statistical weighting of each squared valued in computation.
C
C  Notes:
C     X and Y are rotated and translated from initial raw data.
C     Therefore, there are 2 indices for each array instead of 1.
C     (each column has a unique set of row coordinates)
C
C  Uses Function:
C     FUNC2DGB - evaluate single 2D-gaussian
C
C  Called by:  SIMPINIT, SIMPLEX3
C
C  Compiling Instructions:
C     Check name of compiled function;
C     Check parameters NDIM; then compile.
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

      FUNCTION FUNC (A)

      PARAMETER (NDIM = 100)    ! max. number of points
      PARAMETER (NPARM = 6)     ! number of parameters

C  Passed Variables:

      REAL*4    A(NPARM)        ! function parameters

C  Internal Variables:

      DOUBLE PRECISION  CHISQR  ! chi square
      DOUBLE PRECISION  WEIGHT  ! weight factor

      REAL*4    ZFIT            ! computed function value
      REAL*4    FREE            ! degrees of freedom

      INTEGER*4 I, J            ! indices to arrays

C  Common Block Variables

      REAL*4    X(NDIM,NDIM)    ! 1st indep. variable
      REAL*4    Y(NDIM,NDIM)    ! 2nd indep. variable
      REAL*4    Z(NDIM,NDIM)    ! value of input data at point X,Y

      INTEGER*4 NPTS            ! number of points in X, Y

      COMMON /RAWDATA/ X,Y,Z,NPTS

      WEIGHT = 1.               ! avoid compiler warning
      CHISQR = 0.
      FREE = FLOAT(NPTS*NPTS - NPARM - 1)
      IF (FREE.LE.0.) THEN
        FUNC = 0.

C  Accumulate chi square and divide by degrees of freedom

      ELSE
        DO 30 J=1,NPTS
          DO 20 I=1,NPTS
            IF (Z(I,J).NE.0.) THEN          ! statistical weighting
              WEIGHT = 1./ABS(Z(I,J))
            ELSE
              WEIGHT = 1.
            END IF
            ZFIT = FUNC2DGB(X,Y,I,J,A)
            CHISQR = CHISQR + WEIGHT*(Z(I,J)-ZFIT)**2
20        CONTINUE
30      CONTINUE
        FUNC = CHISQR/FREE
      END IF

      RETURN
      END
@


1.1
log
@Initial revision
@
text
@@
