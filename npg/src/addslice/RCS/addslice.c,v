head	1.5;
access;
symbols;
locks; strict;
comment	@ * @;


1.5
date	2004.02.13.15.31.35;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	2002.11.26.19.35.47;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	2000.09.06.19.19.36;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	99.12.30.16.13.30;	author tom;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Feb 2004
@
text
@/* $Log: addslice.c,v $
 * Revision 1.3  2002/11/26  19:35:47  tom
 * *** empty log message ***
 *
 * Revision 1.2  2000/09/06  19:19:36  tom
 * strcpy filename
 *
 * Revision 1.1  1999/12/30  16:13:30  tom
 * Initial revision
 * */
/*	=========================================================================
 *	Module:			addslice.c
 *	Author:			Tom Videen
 *					Threshold is reduced by 0.0001.
 *	=================================================================================
 */
#ifndef lint
static char     rcsid[] = "$Id: addslice.c,v 1.3 2002/11/26 19:35:47 tom Exp tom $";
#endif

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <image.h>
#include <libimage.h>
#include <nrutil.h>
#include <libnrimg.h>

main (argc, argv)
	int             argc;
	char           *argv[];
{
	ImageFile      *file;
	Index           indx;
	char           *imgname;		 /* input image filename */
	char           *outname;		 /* output image filename */
	long            dim1, dim2;		 /* dimensions of tensors */
	long            i, j;
	float        ***image = NULL;	 /* input image tensor */

/*
 *	Get command line arguments.
 */
	imgname = argv[1];
	outname = argv[2];

	indx.frm = 1;
	indx.pln = 1;
	indx.gate = 1;
	indx.data = 0;
	indx.bed = 0;

    file = make_imgfile (imgname);
	if (open_imgfile (file) == ERROR) {
		fprintf (stderr, "ERROR [addslice]: Cannot open %s\n", imgname);
		return (ERROR);
	}
	if (get_mh (file) == ERROR) {
		fprintf (stderr, "ERROR [addslice]: Cannot get MainHeader from %s\n", imgname);
		return (ERROR);
	}
	indx.frm = firstimgfrm (file);
	if (indx.frm <= 0) {
		fprintf (stderr, "ERROR [addslice]: Cannot find %s frame 1-%d\n", imgname, -indx.frm);
		return (ERROR);
	}
	if (existimgfrm (file, &indx) == ERROR) {
		fprintf (stderr, "ERROR [addslice]: Cannot find %s frame %d\n", imgname, indx.frm);
		return (ERROR);
	}
	if (get_sh (file, &indx) == ERROR) {
		fprintf (stderr, "ERROR [addslice]: Cannot read file subheader in %s\n", imgname);
		return (ERROR);
	}
	dim1 = (long) file->sh->dim1;
	dim2 = (long) file->sh->dim2;
	printf ("[addslice]: reading %s\n", imgname);
	if ((image = readtensor (file, &indx)) == NULL) {
		fprintf (stderr, "ERROR [addslice]: Cannot read %s\n", imgname);
		return (ERROR);
	}
	close_imgfile (file);
	
	for (j = 1; j <= dim2; j++) {
		for (i = 1; i <= dim1; i++) {
			image[47][j][i] = image[46][j][i];
		}
	}

	strcpy (file->name, outname);
	strcpy (file->mode, "w");
	if (open_imgfile (file) == ERROR) {
		fprintf (stderr, "ERROR [addslice]: Cannot open %s\n", outname);
		return (ERROR);
	}
	if (put_mh (file) == ERROR) {
		fprintf (stderr, "ERROR [addslice]: Cannot write %s\n", outname);
		return (ERROR);
	}
	if (writetensor (file, &indx, image) == ERROR) {
		fprintf (stderr, "ERROR [addslice]: Cannot write %s\n", outname);
		return (ERROR);
	}
	free_imgfile (file);
	return (OK);
}
@


1.3
log
@*** empty log message ***
@
text
@d2 3
d18 1
a18 1
static char     rcsid[] = "$Id: addslice.c,v 1.2 2000/09/06 19:19:36 tom Exp tom $";
@


1.2
log
@strcpy filename
@
text
@d2 3
d15 1
a15 1
static char     rcsid[] = "$Id: addslice.c,v 1.1 1999/12/30 16:13:30 tom Exp tom $";
a20 1
#include <floatingpoint.h>
a22 1
#include <nr.h>
a24 1
#include <imgutil.h>
@


1.1
log
@Initial revision
@
text
@d1 4
a4 1
/* $Log$ */
d12 1
a12 1
static char     rcsid[] = "$Id: addslice.c,v 2.8 1997/05/20 13:20:52 tom Exp $";
d87 1
a87 2
	free (file->name);
	file->name = outname;
@
