head	1.4;
access;
symbols;
locks; strict;
comment	@ * @;


1.4
date	2004.02.17.14.56.06;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	2002.11.27.16.56.16;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	2000.09.06.19.41.22;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	99.12.30.16.56.02;	author tom;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Feb 2004
@
text
@/* $Log: padimg.c,v $
 * Revision 1.3  2002/11/27  16:56:16  tom
 * *** empty log message ***
 *
 * Revision 1.2  2000/09/06  19:41:22  tom
 * strcpy filename
 *
 * Revision 1.1  1999/12/30  16:56:02  tom
 * Initial revision
 * */
/*	=========================================================================
 *	Module:			padimg.c
 *	Author:			Tom Videen
 *	Description:	Add zero pixels to the edges of an image.
 *	=================================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Id: padimg.c,v 1.3 2002/11/27 16:56:16 tom Exp tom $";
#endif

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <image.h>
#include <libimage.h>
#include <nrutil.h>
#include <libnrimg.h>

main (argc, argv)
/*@@unused@@*/
	int             argc;
	char           *argv[];
{
	ImageFile      *file;
	Index           indx;
	char           *imgname;		 /* input image filename */
	long			dim1=0;
	long			dim2=0;
	long			dim3=0;
	long			ndim1, ndim2, ndim3;
	float        ***img;		 	 /* input image tensor */
	float        ***image;			 /* output image tensor */

/*
 *	Get command line arguments.
 */
	imgname = argv[1];
	ndim1 = atoi (argv[2]);
	ndim2 = atoi (argv[3]);
	ndim3 = atoi (argv[4]);

	indx.frm = 1;
	indx.pln = 1;
	indx.gate = 1;
	indx.data = 0;
	indx.bed = 0;

/*	Read image */

	file = make_imgfile (imgname);
	if (open_imgfile (file) == ERROR) {
		fprintf (stderr, "ERROR [padimg]: Cannot open %s\n", imgname);
		return (ERROR);
	}
	if (get_mh (file) == ERROR) {
		fprintf (stderr, "ERROR [padimg]: Cannot get MainHeader from %s\n", imgname);
		return (ERROR);
	}
	if (get_sh (file, &indx) == ERROR) {
		fprintf (stderr, "ERROR [padimg]: Cannot read file subheader in %s\n", imgname);
		return (ERROR);
	}
	if ((img = readtensor (file, &indx)) == NULL) {
		fprintf (stderr, "ERROR [padimg]: Cannot read %s\n", imgname);
		return (ERROR);
	}
/*	Add pixels */

	image = padtensor (img, dim1, dim2, dim3, ndim1, ndim2, ndim3);

/*	Write the padded image */

	fprintf (stdout, "Writing padded image %s\n", imgname);
	close_imgfile (file);
	(void) strcpy (file->name, imgname);
	(void) strcpy (file->mode, "w");
	if (open_imgfile (file) == ERROR) {
		fprintf (stderr, "ERROR [padimg]: Cannot open %s\n", imgname);
		return (ERROR);
	}
	if (put_mh (file) == ERROR) {
		fprintf (stderr, "ERROR [padimg]: Cannot write %s\n", imgname);
		return (ERROR);
	}
	if (writetensor (file, &indx, image) == ERROR) {
		fprintf (stderr, "ERROR [padimg]: Cannot write %s\n", imgname);
		return (ERROR);
	}
	free_imgfile (file);
	return (OK);
}
@


1.3
log
@*** empty log message ***
@
text
@d2 3
d17 1
d19 1
a19 1
static char     rcsid[] = "$Id: padimg.c,v 1.2 2000/09/06 19:41:22 tom Exp tom $";
d31 1
@


1.2
log
@strcpy filename
@
text
@d2 3
d15 1
a15 1
static char     rcsid[] = "$Id: padimg.c,v 1.1 1999/12/30 16:56:02 tom Exp tom $";
d33 3
a35 1
	long			dim1, dim2, dim3;
d37 2
a38 2
	float        ***img = NULL;	 	 /* input image tensor */
	float        ***image = NULL;	 /* output image tensor */
@


1.1
log
@Initial revision
@
text
@d1 4
a4 1
/* $Log$ */
d12 1
a12 1
static char     rcsid[] = "$Id: padimg.c,v 1.1 1996/05/24 17:54:26 tom Exp $";
d76 1
a76 2
	free (file->name);
	file->name = imgname;
@
