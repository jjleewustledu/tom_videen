head	1.4;
access;
symbols;
locks; strict;
comment	@ * @;


1.4
date	2004.02.16.19.25.40;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	2002.11.26.22.29.01;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	98.03.05.14.55.17;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	98.03.04.22.13.59;	author tom;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Feb 2004
@
text
@/* $Log: imgscale.c,v $
 * Revision 1.3  2002/11/26  22:29:01  tom
 * *** empty log message ***
 *
 * Revision 1.2  1998/03/05  14:55:17  tom
 * math
 *
 * Revision 1.1  1998/03/04  22:13:59  tom
 * Initial revision
 * */
/*	===============================================================================
 *	Module:			imgscale.c
 *	Author:			Tom Videen
 *	Date:			Mar 1998
 *	Description:	Scale images in a list
 *	===============================================================================
 */
/*@@unused@@*/
static char     rcsid[] = "$Header: /home/npggw/tom/src/imgscale/RCS/imgscale.c,v 1.3 2002/11/26 22:29:01 tom Exp tom $";

#include <stdio.h>
#include <stdlib.h>
#include <imgutil.h>

main (argc, argv)
	int             argc;
	char           *argv[];
{
	FILE           *cmdfp;
	IMAGE_LIST_DATA *imglist;
	PARAMETER_DATA  prm;

	char         ***imgname;
	char           *lstfile;
	char           *prmfile;
	char           *cmdfile;
	char           *scan1, *scan2;
	float           scaler;
	float           norm;
	int             listtype;
	int             lstsize = 0;
	int             filtmode = IMGFILTER_MODE;
	int             i, j;

/*
 *	Read command line arguments and initialize filenames.
 */

	if (argc != 6) {
		printf ("Usage: imgscale prmlist imglist norm listtype cmdfile\n");
		return (ERROR);
	}
	prmfile = argv[1];
	lstfile = argv[2];
	norm = atof (argv[3]);
	listtype = atoi (argv[4]);
	cmdfile = argv[5];
    cmdfp = fopen (cmdfile, "a");
    if (cmdfp == (FILE *) NULL) {
        fprintf (stderr, "ERROR [imgscale]: cannot open %s\n", cmdfile);
        return (ERROR);
    }


/*  Read prms */

	if (readprm (prmfile, &prm) == ERROR) {
		fprintf (stderr, "ERROR [imgscale]: reading %s\n", prmfile);
		return (ERROR);
	}
/*  Read imagelist */

	imglist = (IMAGE_LIST_DATA *) malloc (MAX_IMAGE_LIST_SIZE * sizeof (IMAGE_LIST_DATA));
	if (readimglist (lstfile, imglist, &lstsize) == ERROR) {
		fprintf (stderr, "ERROR [imgscale]: Cannot read %s\n", lstfile);
		return (ERROR);
	}
	if (lstsize > MAX_IMAGE_LIST_SIZE) {
		fprintf (stderr, "ERROR [imgscale]: imglist size %d > %d\n", lstsize, MAX_IMAGE_LIST_SIZE);
		return (ERROR);
	}
/*  Complete filenames */

	imgname = (char ***) malloc (lstsize * sizeof (char **));
	for (i = 0; i < lstsize; i++) {
		imgname[i] = (char **) malloc (6 * sizeof (char *));
		for (j = 0; j < 6; j++)
			imgname[i][j] = (char *) malloc (MAXPATH);
	}
	if ((fillimglist (&prm, imglist, lstsize, filtmode, imgname)) == ERROR) {
		fprintf (stderr, "ERROR [imgscale]: Reading input list files\n");
		return (ERROR);
	}
/* Initializations based on selected parameters */

	for (i = 0; i < lstsize; ++i) {
		scan1 = imgname[i][0];
		if (norm == 0) {
			fprintf (stderr, "ERROR [imgscale]: norm = 0\n");
			return (ERROR);
		} else if (imglist[i].mean1 == 0) {
			fprintf (stderr, "ERROR [imgscale]: Normalization factor in image list is 0\n");
			return (ERROR);
		} else
			scaler = norm / imglist[i].mean1;
		fprintf (cmdfp, "scaleimage %s %f\n", scan1, scaler);

		if (listtype != 0) {
			scan2 = imgname[i][1];
			if (norm == 0) {
				fprintf (stderr, "ERROR [imgscale]: norm = 0\n");
				return (ERROR);
			} else if (imglist[i].mean2 == 0) {
				fprintf (stderr, "ERROR [imgscale]: Normalization factor in image list is 0\n");
				return (ERROR);
			} else
				scaler = norm / imglist[i].mean2;
			fprintf (cmdfp, "scaleimage %s %f\n", scan2, scaler);
		}
	}

	for (i = 0; i < lstsize; i++) {
		for (j = 0; j < 6; j++)
			free (imgname[i][j]);
		free (imgname[i]);
	}
	free (imgname);
	free (imglist);
	(void) fclose (cmdfp);
	return (0);
}
@


1.3
log
@*** empty log message ***
@
text
@d2 3
d14 1
a14 1
 *	Date:			Mar-98
d18 2
a19 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/imgscale/RCS/imgscale.c,v 1.2 1998/03/05 14:55:17 tom Exp tom $";
d129 1
a129 1
	fclose (cmdfp);
@


1.2
log
@math
@
text
@d2 3
d15 1
a15 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/imgscale/RCS/imgscale.c,v 1.1 1998/03/04 22:13:59 tom Exp tom $";
d18 1
a18 1
#include <math.h>
d37 1
a37 1
	int             lstsize;
@


1.1
log
@Initial revision
@
text
@d1 4
a4 1
/* $Log$ */
d12 1
a12 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/imgscale/RCS/imgscale.c,v 2.20 1997/01/08 22:47:32 tom Exp $";
d15 1
a111 1

@
