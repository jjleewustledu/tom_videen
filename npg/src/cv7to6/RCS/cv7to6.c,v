head	2.20;
access;
symbols;
locks; strict;
comment	@ * @;


2.20
date	2004.02.13.21.42.22;	author tom;	state Exp;
branches;
next	2.16;

2.16
date	2000.09.06.19.26.05;	author tom;	state Exp;
branches;
next	2.15;

2.15
date	2000.01.21.21.09.47;	author tom;	state Exp;
branches;
next	2.14;

2.14
date	99.05.17.14.20.55;	author tom;	state Exp;
branches;
next	2.13;

2.13
date	99.05.17.14.15.18;	author tom;	state Exp;
branches;
next	2.12;

2.12
date	99.05.17.14.13.42;	author tom;	state Exp;
branches;
next	2.11;

2.11
date	99.05.14.21.29.18;	author tom;	state Exp;
branches;
next	2.10;

2.10
date	97.03.10.16.10.36;	author tom;	state Exp;
branches;
next	2.9;

2.9
date	97.03.10.16.01.20;	author tom;	state Exp;
branches;
next	2.8;

2.8
date	96.12.12.18.05.46;	author tom;	state Exp;
branches;
next	2.7;

2.7
date	96.10.30.23.32.13;	author tom;	state Exp;
branches;
next	2.6;

2.6
date	96.10.16.16.29.35;	author tom;	state Exp;
branches;
next	2.4;

2.4
date	96.08.15.18.37.27;	author tom;	state Exp;
branches;
next	2.3;

2.3
date	96.08.12.16.58.12;	author tom;	state Exp;
branches;
next	2.2;

2.2
date	96.08.12.16.55.34;	author tom;	state Exp;
branches;
next	2.1;

2.1
date	96.07.17.17.39.06;	author tom;	state Exp;
branches;
next	2.0;

2.0
date	96.05.01.22.43.33;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	96.03.14.18.07.37;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	96.03.12.22.57.03;	author tom;	state Exp;
branches;
next	;


desc
@@


2.20
log
@Feb 2004
@
text
@/*	$Log: cv7to6.c,v $
 * Revision 2.16  2000/09/06  19:26:05  tom
 * strcpy filename
 *
 * Revision 2.15  2000/01/21  21:09:47  tom
 * lint
 *
 * Revision 2.14  1999/05/17  14:20:55  tom
 * change message
 *
 * Revision 2.13  1999/05/17  14:15:18  tom
 * condense messages
 *
 * Revision 2.12  1999/05/17  14:13:42  tom
 * remove warning
 *
 * Revision 2.11  1999/05/14  21:29:18  tom
 * remove message
 *
 * Revision 2.10  1997/03/10  16:10:36  tom
 * change error message
 *
 * Revision 2.9  1997/03/10  16:01:20  tom
 * read frame 1,2 or 3
 *
 * Revision 2.8  1996/12/12  18:05:46  tom
 * set system_type to 0 in main header (for view25d2)
 *
 * Revision 2.7  1996/10/30  23:32:13  tom
 * new wrimg6.c in libimage
 *
 * Revision 2.6  1996/10/16  16:29:35  tom
 * sync with Version
 * new libimage
 *
 * Revision 2.4  1996/08/15  18:37:27  tom
 * new libimage which fills more field
 *
 * Revision 2.3  1996/08/12  16:58:12  tom
 * change wording of warning
 *
 * Revision 2.2  1996/08/12  16:55:34  tom
 * issue a warning instead of a termination error if scanner is not 961
 *
 * Revision 2.1  1996/07/17  17:39:06  tom
 * set sw_version = 6
 *
 * Revision 2.0  1996/05/01  22:43:33  tom
 * new libraries
 *
 * Revision 1.2  1996/03/14  18:07:37  tom
 * write output as frame 1
 *
 * Revision 1.1  1996/03/12  22:57:03  tom
 * Initial revision
 *
 *	$Id: cv7to6.c,v 2.16 2000/09/06 19:26:05 tom Exp tom $
 */
/*	===============================================================================
 *	Module:			cv7to6.c
 *	Date:			Mar 1996
 *	Author:			Tom Videen
 *	Description:
 *		Read Matrix 7 image files and write them as Matrix 6 image files.
 *	===============================================================================
 */
static char     rcsid[] = "$Header: /home/npggw/tom/src/cv7to6/RCS/cv7to6.c,v 2.16 2000/09/06 19:26:05 tom Exp tom $";

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <image.h>
#include <libimage.h>
#include <nrutil.h>
#include <libnrimg.h>				 /* freetensor, readtensor, writetensor6 */
#include <imgutil.h>				 /* recout */

/*	----------------------------
 *	Function:	cv7to6
 *	----------------------------
 */
main (argc, argv)
	int             argc;
	char           *argv[];
{
	ImageFile      *file;
	Index           indx;
	FILE           *recfp;			 /* rec file */
	MainHeader     *mh;
	SubHeader      *sh;
	char           *infile;
	char           *outfile;
	char           *recfile;
	char            runstamp[40];		 /* version, date and userid info */
	float        ***image;			 /* PET image */
	int             nx, ny, nz;		 /* array dimensions */
	int             frm;

/*
 *	Read command line arguments and initialize filenames.
 */
	if (argc != 11) {
		fprintf (stderr, "Usage: cv7to6 infile frame outfile recfile date\n");
		return (ERROR);
	}
	infile = argv[1];
	frm = atoi (argv[2]);
	outfile = argv[3];
	recfile = argv[4];
	(void) sprintf (runstamp, "%s %s %s %s %s %s", argv[5], argv[6], argv[7], argv[8], argv[9], argv[10]);

	indx.frm = frm;
	indx.pln = 1;
	indx.gate = 1;
	indx.data = 0;
	indx.bed = 0;

	recfp = fopen (recfile, "a");
	if (recfp == (FILE *) NULL) {
		fprintf (stderr, "ERROR [cv7to6]: cannot open %s\n", recfile);
		return (ERROR);
	}
	file = make_imgfile (infile);
	(void) strcpy (file->mode, "r");
	if (open_imgfile (file) == ERROR) {
		fprintf (stderr, "ERROR [cv7to6]: Cannot open %s\n", infile);
		return (ERROR);
	}
	if (get_mh (file) == ERROR) {
		fprintf (stderr, "ERROR [cv7to6]: Cannot get MainHeader from %s\n", infile);
		return (ERROR);
	}
	if (existimgfrm (file, &indx) == ERROR) {
		if (frm == 1) {
			indx.frm = 2;
			if (existimgfrm (file, &indx) == ERROR) {
				indx.frm = 3;
				if (existimgfrm (file, &indx) == ERROR) {
					fprintf (stderr, "ERROR [cv7to6]: cannot find %s frame 1, 2 or 3\n", infile);
					return (ERROR);
				}
			}
		} else {
			fprintf (stderr, "ERROR [cv7to6]: cannot find %s frame %d\n", infile, frm);
			return (ERROR);
		}
	}
	if (get_sh (file, &indx) == ERROR) {
		fprintf (stderr, "ERROR [cv7to6]: Cannot read file subheader in %s\n", infile);
		return (ERROR);
	}
	mh = file->mh;
	sh = file->sh;
	nx = sh->dim1;
	ny = sh->dim2;
	nz = sh->dim3;

	mh->number_format = sh->number_format;
	if ((image = readtensor (file, &indx)) == NULL) {
		fprintf (stderr, "ERROR [cv7to6] reading %s\n", infile);
		return (ERROR);
	}
	recout (recfp, infile);
	(void) save_rcs (file, rcsid, runstamp);
	close_imgfile (file);

	(void) strcpy (file->name, outfile);
	(void) strcpy (file->mode, "w");
	mh->file_format = MATRIX_REV6;
	mh->sw_version = 6;
	indx.frm = 1;
	mh->nframe = indx.frm;

	if ((file->m6 = (M6header *) malloc (sizeof (M6header))) == NULL) {
		fprintf (stderr, "ERROR [cv7to6]: malloc m6 error for %s\n", infile);
		return (ERROR);
	}
	file->m6->mfp = NULL;
	file->m6->sh = NULL;
	if ((file->m6->mh = (Main_header *) malloc (sizeof (Main_header))) == NULL) {
		fprintf (stderr, "ERROR [open_m6]: malloc m6->mh error for %s\n", infile);
		return (ERROR);
	}
	if (fill_mh6 (file) == ERROR)
		return (ERROR);
	if (fill_sh6 (file) == ERROR)
		return (ERROR);

	if (open_imgfile (file) == ERROR) {
		fprintf (stderr, "ERROR [cv7to6]: Cannot open %s\n", outfile);
		return (ERROR);
	}
	file->m6->mh->system_type = 0;
	if (put_mh (file) == ERROR)
		return (ERROR);
	if (writetensor (file, &indx, image) == ERROR)
		return (ERROR);
	fprintf (stdout,"ECAT 6 format:  %s\n", outfile);
	free_f3tensor (image, 1, nz, 1, ny, 1, nx);
	free_imgfile (file);
	(void) fclose (recfp);
	return (OK);
}
@


2.16
log
@strcpy filename
@
text
@d2 3
d57 1
a57 1
 *	$Id: cv7to6.c,v 2.15 2000/01/21 21:09:47 tom Exp tom $
d61 1
a61 1
 *	Date:			Mar-96
d67 1
a67 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/cv7to6/RCS/cv7to6.c,v 2.15 2000/01/21 21:09:47 tom Exp tom $";
d110 1
a110 1
	sprintf (runstamp, "%s %s %s %s %s %s", argv[5], argv[6], argv[7], argv[8], argv[9], argv[10]);
d124 1
a124 1
	strcpy (file->mode, "r");
d164 1
a164 1
	save_rcs (file, rcsid, runstamp);
d167 2
a168 2
	strcpy (file->name, outfile);
	strcpy (file->mode, "w");
d201 1
a201 1
	fclose (recfp);
@


2.15
log
@lint
@
text
@d2 3
d54 1
a54 1
 *	$Id: cv7to6.c,v 2.14 1999/05/17 14:20:55 tom Exp tom $
d64 1
a64 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/cv7to6/RCS/cv7to6.c,v 2.14 1999/05/17 14:20:55 tom Exp tom $";
d164 1
a164 1
	file->name = outfile;
@


2.14
log
@change message
@
text
@d2 3
d51 1
a51 1
 *	$Id: cv7to6.c,v 2.13 1999/05/17 14:15:18 tom Exp tom $
d61 1
a61 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/cv7to6/RCS/cv7to6.c,v 2.13 1999/05/17 14:15:18 tom Exp tom $";
a67 1
#include <nr.h>
a91 1
	int             scanner;		 /* 6, 953, 961 */
d97 1
a97 1
		printf ("Usage: cv7to6 infile frame outfile recfile date\n");
a151 1
	scanner = mh->scanner_type;
d192 1
a192 1
	printf ("ECAT 6 format:  %s\n", outfile);
@


2.13
log
@condense messages
@
text
@d2 3
d48 1
a48 1
 *	$Id: cv7to6.c,v 2.12 1999/05/17 14:13:42 tom Exp tom $
d58 1
a58 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/cv7to6/RCS/cv7to6.c,v 2.12 1999/05/17 14:13:42 tom Exp tom $";
d192 1
a192 1
	printf ("Converted = %s to %s\n", infile, outfile);
@


2.12
log
@remove warning
@
text
@d2 3
d45 1
a45 1
 *	$Id: cv7to6.c,v 2.11 1999/05/14 21:29:18 tom Exp tom $
d55 1
a55 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/cv7to6/RCS/cv7to6.c,v 2.11 1999/05/14 21:29:18 tom Exp tom $";
a149 1
	printf ("Reading  = %s\n", infile);
a157 1
	printf ("Writing  = %s\n", outfile);
d189 1
@


2.11
log
@remove message
@
text
@d2 3
d42 1
a42 1
 *	$Id: cv7to6.c,v 2.10 1997/03/10 16:10:36 tom Exp tom $
d52 1
a52 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/cv7to6/RCS/cv7to6.c,v 2.10 1997/03/10 16:10:36 tom Exp tom $";
a145 2
	if (scanner != 961)
		fprintf (stderr, "Warning: scanner type is not 961\n");
@


2.10
log
@change error message
@
text
@d2 3
d39 1
a39 1
 *	$Id: cv7to6.c,v 2.9 1997/03/10 16:01:20 tom Exp tom $
d49 1
a49 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/cv7to6/RCS/cv7to6.c,v 2.9 1997/03/10 16:01:20 tom Exp tom $";
a85 2
	printf ("Copyright 1996, Washington University\n");
	printf ("All rights reserved. Unauthorized reproduction prohibited.\n");
@


2.9
log
@read frame 1,2 or 3
@
text
@d2 3
d36 1
a36 1
 *	$Id: cv7to6.c,v 2.8 1996/12/12 18:05:46 tom Exp tom $
d46 1
a46 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/cv7to6/RCS/cv7to6.c,v 2.8 1996/12/12 18:05:46 tom Exp tom $";
d122 1
a122 1
					fprintf (stderr, "ERROR [gauss]: cannot find %s frame 1, 2 or 3\n", infile);
@


2.8
log
@set system_type to 0 in main header (for view25d2)
@
text
@d2 3
d33 1
a33 1
 *	$Id: cv7to6.c,v 2.7 1996/10/30 23:32:13 tom Exp tom $
d43 1
a43 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/cv7to6/RCS/cv7to6.c,v 2.7 1996/10/30 23:32:13 tom Exp tom $";
d71 1
a71 1
	char            runstamp[40];	 /* version, date and userid info */
d117 5
a121 2
				fprintf (stderr, "ERROR [cv7to6]: cannot find %s frame %d\n", infile, frm);
				return (ERROR);
@


2.7
log
@new wrimg6.c in libimage
@
text
@d2 3
d30 1
a30 1
 *	$Id: cv7to6.c,v 2.6 1996/10/16 16:29:35 tom Exp tom $
d40 1
a40 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/cv7to6/RCS/cv7to6.c,v 2.6 1996/10/16 16:29:35 tom Exp tom $";
d172 1
@


2.6
log
@sync with Version
new libimage
@
text
@d2 4
d27 1
a27 1
 *	$Id: cv7to6.c,v 2.4 1996/08/15 18:37:27 tom Exp tom $
d37 1
a37 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/cv7to6/RCS/cv7to6.c,v 2.4 1996/08/15 18:37:27 tom Exp tom $";
@


2.4
log
@new libimage which fills more field
@
text
@d2 3
d23 1
a23 1
 *	$Id: cv7to6.c,v 2.3 1996/08/12 16:58:12 tom Exp tom $
d33 1
a33 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/cv7to6/RCS/cv7to6.c,v 2.3 1996/08/12 16:58:12 tom Exp tom $";
@


2.3
log
@change wording of warning
@
text
@d2 3
d20 1
a20 1
 *	$Id: cv7to6.c,v 2.2 1996/08/12 16:55:34 tom Exp tom $
d30 1
a30 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/cv7to6/RCS/cv7to6.c,v 2.2 1996/08/12 16:55:34 tom Exp tom $";
@


2.2
log
@issue a warning instead of a termination error if scanner is not 961
@
text
@d2 3
d17 1
a17 1
 *	$Id: cv7to6.c,v 2.1 1996/07/17 17:39:06 tom Exp tom $
d27 1
a27 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/cv7to6/RCS/cv7to6.c,v 2.1 1996/07/17 17:39:06 tom Exp tom $";
d121 1
a121 1
		fprintf (stderr, "Warning [cv7to6]: file is not a 961 PET image\n");
@


2.1
log
@set sw_version = 6
@
text
@d2 3
d14 1
a14 1
 *	$Id: cv7to6.c,v 2.0 1996/05/01 22:43:33 tom Exp tom $
d24 1
a24 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/cv7to6/RCS/cv7to6.c,v 2.0 1996/05/01 22:43:33 tom Exp tom $";
d117 2
a118 4
	if (scanner != 961) {
		fprintf (stderr, "ERROR [cv7to6]: file is not a 961 PET image\n");
		return (ERROR);
	}
@


2.0
log
@new libraries
@
text
@d2 3
d11 1
a11 1
 *	$Id: cv7to6.c,v 1.2 1996/03/14 18:07:37 tom Exp tom $
d21 1
a21 1
static char     rcsid[] = "$Header: /home/petsun19/tom/src/cv7to6/RCS/cv7to6.c,v 1.2 1996/03/14 18:07:37 tom Exp tom $";
d132 1
@


1.2
log
@write output as frame 1
@
text
@d2 3
d8 1
a8 1
 *	$Id: cv7to6.c,v 1.1 1996/03/12 22:57:03 tom Exp tom $
d15 1
a15 1
 *		Read Matrix 6 image files and write them as Matrix 7 image files.
d18 2
d23 2
a24 3
#include <myvalues.h>				 /* OK, ERROR */
#include <imagio.h>
#include <libimg.h>
a29 2
static char     rcsid[] = "$Header: /home/petsun19/tom/src/cv7to6/RCS/cv7to6.c,v 1.1 1996/03/12 22:57:03 tom Exp tom $";

d38 2
d46 1
a46 1
	char            runstamp[40];		 /* version, date and userid info */
d48 2
a50 2
	int             frm = 1, plane = 1, gate = 1, data = 0, bed = 0;
	int				frame1 = 1;
d57 3
a59 3
	if (argc != 10) {
		printf ("Usage: cv7to6 infile outfile recfile date\n");
		exit (ERROR);
d62 4
a65 3
	outfile = argv[2];
	recfile = argv[3];
	sprintf (runstamp, "%s %s %s %s %s %s", argv[4], argv[5], argv[6], argv[7], argv[8], argv[9]);
d67 6
d76 1
a76 1
		exit (ERROR);
d78 5
a82 3
	if ((mh = getmhdr (infile)) == NULL) {
		fprintf (stderr, "ERROR [cv7to6] reading mainheader of %s\n", infile);
		exit (ERROR);
d84 14
a97 5
	if (existimgfrm (mh, infile, plane, frm, gate, data, bed) == ERROR) {
		frm = 2;
		if (existimgfrm (mh, infile, plane, frm, gate, data, bed) == ERROR) {
			fprintf (stderr, "ERROR [cv7to6]: Cannot find %s frame 1 or 2\n",infile);
			exit (ERROR);
d100 3
a102 3
	if ((sh = getsbhdr (mh, infile, plane, frm, gate, data, bed)) == NULL) {
		fprintf (stderr, "ERROR [cv7to6] reading subheader of %s\n", infile);
		exit (ERROR);
d104 6
d113 1
a113 1
		exit (ERROR);
d117 1
a117 1
	if ((image = readtensor (infile, frm, mh, sh)) == NULL) {
d119 1
a119 1
		exit (ERROR);
d122 3
a124 1
	save_rcs (mh, rcsid, runstamp);
d126 9
a134 4
	mh->nframe = 1;
	if (writetensor6 (outfile, frame1, mh, sh, image) == ERROR) {
		fprintf (stderr, "ERROR [cv7to6] writing %s\n", outfile);
		exit (ERROR);
d136 21
d158 1
a158 2
	freetensor (mh, sh, image);
	exit (OK);
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
/*	$Log$
 *	$Id$
d26 1
a26 1
static char     rcsid[] = "$Header$";
d46 1
d96 2
a97 1
	if (writetensor6 (outfile, frm, mh, sh, image) == ERROR) {
@
