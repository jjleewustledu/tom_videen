rdtensor.c,v:	reverse = file->mh->orientation;
rdtensor.c,v:	fformat = file->mh->file_format;
rdtensor.c,v:		else if (strncmp (file->m7->mh->data_units, "1/cm", 4) == 0)
readtensor.c,v:	reverse = file->mh->orientation;
readtensor.c,v:	fformat = file->mh->file_format;
readtensor.c,v:        else if (strncmp (file->m7->mh->data_units, "1/cm", 4) == 0)
readtensor.c,v:	fformat = mh->file_format;
readtensor.c,v:	reverse = mh->orientation;
readtensor.c,v:    fformat = mh->file_format;
readtensor7.c,v:	fformat = mh->file_format;
readtensor7.c,v:	reverse = mh->orientation;
writetensor.c,v:	fformat = file->mh->file_format;
writetensor.c,v:		else if (strncmp (file->m7->mh->data_units, "1/cm", 4) == 0)
writetensor.c,v:	fformat = mh->file_format;
writetensor.c,v:    fformat = mh->file_format;
writetensor6.c,v:	else if (mh->version == 70)		 /* Version 7 does not scale by duration */
wrtensor.c,v:	fformat = file->mh->file_format;
wrtensor.c,v:		file->mh->file_format = MATRIX_REV7;
wrtensor.c,v:	file->m7->mh->file_type = (short) PetVolume;
wrtensor.c,v:	else if (strncmp (file->m7->mh->data_units, "1/cm", 4) == 0)
wrtensor.c,v:	file->m7->mh->file_type = PetVolume;
