head	3.2;
access;
symbols;
locks; strict;
comment	@ * @;


3.2
date	2008.01.07.16.51.03;	author tom;	state Exp;
branches;
next	3.1;

3.1
date	2004.02.20.16.12.26;	author tom;	state Exp;
branches;
next	3.0;

3.0
date	2004.02.12.22.15.39;	author tom;	state Exp;
branches;
next	2.8;

2.8
date	2003.12.23.17.45.49;	author tom;	state Exp;
branches;
next	2.7;

2.7
date	2000.07.18.15.54.05;	author tom;	state Exp;
branches;
next	2.6;

2.6
date	2000.07.18.15.44.15;	author tom;	state Exp;
branches;
next	2.5;

2.5
date	99.12.13.18.21.08;	author tom;	state Exp;
branches;
next	2.4;

2.4
date	99.07.15.20.58.40;	author tom;	state Exp;
branches;
next	2.3;

2.3
date	96.08.05.14.15.06;	author tom;	state Exp;
branches;
next	2.2;

2.2
date	96.05.24.17.33.35;	author tom;	state Exp;
branches;
next	2.1;

2.1
date	96.05.15.14.33.32;	author tom;	state Exp;
branches;
next	2.0;

2.0
date	96.04.24.23.00.22;	author tom;	state Exp;
branches;
next	;


desc
@new release
@


3.2
log
@add messages
@
text
@/* =============================================================================
 *	Function:		rdtensor
 *  Date:           Apr 1996
 *  Author:         Tom Videen
 *  Description:    Read one frame of an image into a Numerical Recipes 3-D tensor
 *					and scale it appropriately.
 *					Expand input array dimension to "odim" (for PETT VI)
 *	Assumption:		file is open; main and subheaders have been read
 * =============================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/libnrimg/RCS/rdtensor.c,v 3.1 2004/02/20 16:12:26 tom Exp tom $";
#endif

#include <stdio.h>
#include <stdlib.h>
#include <image.h>
#include <libimage.h>
#include <nrutil.h>

float        ***rdtensor (file, indx, odim)
	ImageFile      *file;
	Index          *indx;
	long           *odim;			 /* output image dimensions */
{
	float        ***image;
	float          *img;
	int             reverse;
	long            idim[3];		 /* input image dimensions */
	long            i0, j0;			 /* offset to slice dimensions on input */
	long            i, j, ix, pln;		 /* indices in loops */

	if (file->fp == NULL) {
		fprintf (stderr, "ERROR [rdtensor]: null fp %s\n", file->name);
		return (NULL);
	}
	if (file->mh == NULL) {
		fprintf (stderr, "ERROR [rdtensor]: null mh %s\n", file->name);
		return (NULL);
	}
	if (file->sh == NULL) {
		fprintf (stderr, "ERROR [rdtensor]: null sh %s\n", file->name);
		return (NULL);
	}

	reverse = file->mh->orientation;
	idim[0] = (long) file->sh->dim1;
	idim[1] = (long) file->sh->dim2;
	idim[2] = (long) file->sh->dim3;
	i0 = (odim[0] - idim[0]) / 2;
	j0 = (odim[1] - idim[1]) / 2;

	if ((image = f3tensor (1, idim[2], 1, odim[1], 1, odim[0])) == NULL) {
		fprintf (stderr, "ERROR [rdtensor]: Cannot malloc image for %s\n", file->name);
		free_imgfile (file);
		return (NULL);
	}
	for (pln = 1; pln <= idim[2]; pln++) {
		for (j = 1; j <= odim[1]; j++) {
			for (i = 1; i <= odim[0]; i++) {
				image[pln][j][i] = 0.;
			}
		}
	}

	for (pln = 1; pln <= idim[2]; pln++) {
		indx->pln = pln;
		if ((img = rdimg (file, indx)) == NULL) {
			fprintf (stderr, "ERROR [rdtensor]: Cannot read frame %d plane %d of %s\n",
				 indx->frm, (int) pln, file->name);
			free_f3tensor (image, 1, idim[2], 1, odim[1], 1, odim[0]);
			free (image);
			free_imgfile (file);
			return (NULL);
		}
		if (reverse != 0)
			img = flipimg (file, img);
		ix = 0;
		for (j = 1; j <= idim[1]; j++) {
			for (i = 1; i <= idim[0]; i++) {
				image[pln][j + j0][i + i0] = img[ix];
				ix++;
			}
		}
		free (img);
	}
	if (reverse != 0)
		file->mh->orientation = 0;
	return (image);
}
@


3.1
log
@Feb 2004
@
text
@d13 1
a13 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libnrimg/RCS/rdtensor.c,v 3.0 2004/02/12 22:15:39 tom Exp tom $";
d34 2
a35 1
	if (file->fp == NULL)
d37 3
a39 1
	if (file->mh == NULL)
d41 3
a43 1
	if (file->sh == NULL)
d45 1
@


3.0
log
@Feb 2004
@
text
@d13 1
a13 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libnrimg/RCS/rdtensor.c,v 2.8 2003/12/23 17:45:49 tom Exp tom $";
@


2.8
log
@fix flipimg
@
text
@d3 1
a3 1
 *  Date:           Apr-96
d8 1
d11 1
a11 1

d13 1
a13 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libnrimg/RCS/rdtensor.c,v 2.7 2000/07/18 15:54:05 tom Exp tom $";
d22 3
a24 3
float        ***rdtensor (fname, indx, odim)
	char           *fname;			 /* filename of image to read */
	Index          *indx;			 /* frame, plane, gate, data, bed */
a26 2
	ImageFile      *file;
	Index           indx2;
d34 1
a34 3
	file = make_imgfile (fname);
	if (open_imgfile (file) == ERROR) {
		fprintf (stderr, "ERROR [rdtensor]: Cannot open %s\n", fname);
d36 1
a36 3
	}
	if (get_mh (file) == ERROR) {
		fprintf (stderr, "ERROR [rdtensor]: Cannot get MainHeader from %s\n", fname);
d38 1
a38 15
	}
	indx2.frm = indx->frm;
	indx2.pln = indx->pln;
	indx2.gate = indx->gate;
	indx2.data = indx->data;
	indx2.bed = indx->bed;
	if (existimgfrm (file, indx2) == ERROR) {
		indx2.frm = firstimgfrm (file);
		if (existimgfrm (file, indx2) == ERROR) {
			fprintf (stderr, "ERROR [rdtensor]: Cannot read frame %d from %s\n", indx2.frm, fname);
			return (NULL);
		}
	}
	if (get_sh (file, indx2) == ERROR) {
		fprintf (stderr, "ERROR [rdtensor]: Cannot read file subheader in %s\n", fname);
d40 1
a40 1
	}
d49 2
a50 1
		fprintf (stderr, "ERROR [rdtensor]: Cannot malloc image for %s\n", fname);
d62 2
a63 2
		indx2.pln = pln;
		if ((img = rdimg (file, &indx2)) == NULL) {
d65 4
a68 1
				 indx2.frm, (int) pln, fname);
@


2.7
log
@*** empty log message ***
@
text
@d12 1
a12 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libnrimg/RCS/rdtensor.c,v 2.6 2000/07/18 15:44:15 tom Exp tom $";
d50 1
a50 1
		indx2.frm = firstimgfrm(file);
d97 2
a98 1
	free_imgfile (file);
@


2.6
log
@Interfile
@
text
@d12 1
a12 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libnrimg/RCS/rdtensor.c,v 2.5 1999/12/13 18:21:08 tom Exp tom $";
a65 1
	printf ("rdtensor: %d %d %d %d %d\n", idim[0],idim[1],idim[2],i0,j0);
@


2.5
log
@tov revision
@
text
@d12 1
a12 2
static char     rcsid[] = "$Header: /home/npggw/tom/src/libnrimg/RCS/rdtensor.c,v 2.4 1999/07/15 20:58:40 tom Exp tom $";

d66 1
@


2.4
log
@check first frame
@
text
@d12 1
a12 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libnrimg/RCS/rdtensor.c,v 2.3 1996/08/05 14:15:06 tom Exp tom $";
a17 1
#include <string.h>
a19 1
#include <nr.h>
d82 1
a82 1
		if ((img = rdimg (file, indx2)) == NULL) {
d84 1
a84 1
				 indx2.frm, pln, fname);
@


2.3
log
@move scaling to rdimg6 & rdimg7
@
text
@d12 1
a12 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libnrimg/RCS/rdtensor.c,v 2.2 1996/05/24 17:33:35 tom Exp tom $";
d30 1
d47 13
a59 1
	if (get_sh (file, indx) == ERROR) {
d83 2
a84 2
		indx->pln = pln;
		if ((img = rdimg (file, indx)) == NULL) {
d86 1
a86 1
				 indx->frm, pln, fname);
@


2.2
log
@additional check for version 7 attenuation images
@
text
@d10 1
d12 2
a13 1
static char     rcsid[] = "$Header: /home/petsun19/tom/src/libnrimg/RCS/rdtensor.c,v 2.1 1996/05/15 14:33:32 tom Exp tom $";
a31 2
	float           scaler;
	int             fformat;
d35 1
a35 1
	long            i, j, ix, pln;	 /* indices in loops */
a49 1
	fformat = file->mh->file_format;
a68 20
	if (fformat == MATRIX_REV7) {
		if (file->sh->duration == 0)	 /* Attenuation images have duration = 0 */
			scaler = ATNSCALER;
		else if (strncmp (file->m7->mh->data_units, "1/cm", 4) == 0)
			scaler = ATNSCALER;
		else
			scaler = REV7SCALER * (float) file->sh->duration;
	} else if (fformat == MATRIX_REV6) {
		if (file->sh->duration == 0)	 /* Attenuation images have duration = 0 */
			scaler = ATNSCALER;
		else
			scaler = (float) file->sh->duration;
	} else if (fformat == PETT6) {
		scaler = 1.0;

/*	else if (fformat == INTERFILE)  */

	} else
		return (NULL);

d81 1
a81 1
				image[pln][j + j0][i + i0] = scaler * img[ix];
@


2.1
log
@initialize image to 0
@
text
@d11 1
a11 1
static char     rcsid[] = "$Header: /home/petsun19/tom/src/libnrimg/RCS/rdtensor.c,v 2.0 1996/04/24 23:00:22 tom Exp tom $";
d16 1
d72 2
@


2.0
log
@new release
@
text
@d11 1
a11 1
static char     rcsid[] = "$Header: /home/petsun19/tom/src/libnrimg/RCS/rdtensor7.c,v 1.1 1996/03/12 22:47:08 tom Exp tom $";
d61 8
@
