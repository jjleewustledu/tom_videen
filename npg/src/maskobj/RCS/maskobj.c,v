head	1.6;
access;
symbols;
locks; strict;
comment	@ * @;


1.6
date	2004.02.16.20.53.15;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	2002.11.27.15.43.18;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	2000.09.06.19.36.08;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	98.12.02.21.05.19;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	98.11.16.16.00.45;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	98.11.13.15.17.17;	author tom;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Feb 2004
@
text
@/* $Log: maskobj.c,v $
 * Revision 1.5  2002/11/27  15:43:18  tom
 * *** empty log message ***
 *
 * Revision 1.4  2000/09/06  19:36:08  tom
 * strcpy filename
 *
 * Revision 1.3  1998/12/02  21:05:19  tom
 * change to define object by a range (min to max)
 *
 * Revision 1.2  1998/11/16  16:00:45  tom
 * check that seed pixel is in image and above threshold
 *
 * Revision 1.1  1998/11/13  15:17:17  tom
 * Initial revision
 * */
/*	=========================================================================
 *	Module:			maskobj.c
 *	Author:			Tom Videen
 *	Description:	Create a masked object defined by all points connected to [x,y,z]
 *					which are >= min AND <= max.
 *					All pixels in object = 1; all others = 0.
 *	=================================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Id: maskobj.c,v 1.5 2002/11/27 15:43:18 tom Exp tom $";
#endif

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <image.h>
#include <libimage.h>
#include <nrutil.h>
#include <libnrimg.h>

main (argc, argv)
/*@@unused@@*/
	int             argc;
	char           *argv[];
{
	ImageFile      *file;
	Index           indx;
	char           *imgname;		 /* image filenames */
	char           *mskname;		 /* mask image filename */
	int             min, max;		 /* include all >= and <= these pixel values */
	long			x, y, z;
	long            npixels = 0;
	long            dim[3];			 /* dimensions of tensors */
	float        ***image = NULL;	 /* primary image tensor */

/*
 *	Initializations
 */
	imgname = argv[1];
	mskname = argv[2];
	min = atoi (argv[3]);
	max = atoi (argv[4]);
	x = atoi (argv[5]);
	y = atoi (argv[6]);
	z = atoi (argv[7]);

	indx.frm = 1;
	indx.pln = 1;
	indx.gate = 1;
	indx.data = 0;
	indx.bed = 0;

/*
 *	Read image and generate mask
 */

	file = make_imgfile (imgname);
	if (open_imgfile (file) == ERROR) {
		fprintf (stderr, "ERROR [maskobj]: Cannot open %s\n", imgname);
		return (ERROR);
	}
	if (get_mh (file) == ERROR) {
		fprintf (stderr, "ERROR [maskobj]: Cannot get MainHeader from %s\n", imgname);
		return (ERROR);
	}
	if (get_sh (file, &indx) == ERROR) {
		fprintf (stderr, "ERROR [maskobj]: Cannot read file subheader in %s\n", imgname);
		return (ERROR);
	}
	dim[0] = (long) file->sh->dim1;
	dim[1] = (long) file->sh->dim2;
	dim[2] = (long) file->sh->dim3;
	if (x > dim[0] || y > dim[1] || z > dim[2] || x < 1 || y < 1 || z < 1) {
		fprintf (stderr, "ERROR [maskobj]: seed point not in image: [%ld %ld %ld]\n", x,y,z);
		return (ERROR);
	}

	if ((image = readtensor (file, &indx)) == NULL) {
		fprintf (stderr, "ERROR [maskobj]: Cannot read %s\n", imgname);
		return (ERROR);
	}
	if (image[z][y][x] < (float) min || image[z][y][x] > max) {
		fprintf (stderr, "ERROR [maskobj]: seed point value (%f) not in range (%f - %f)\n",
			image[z][y][x], (float) min, (float) max);
		return (ERROR);
	}
	maskobjtensor (file, image, min, max, x, y, z, &npixels);

/*	Write the masked object */

	printf ("Writing masked object %s\n", mskname);
	printf ("Pixels in object = %ld\n", npixels);
	close_imgfile (file);
	(void) strcpy (file->name, mskname);
	(void) strcpy (file->mode, "w");
	if (open_imgfile (file) == ERROR) {
		fprintf (stderr, "ERROR [maskobj]: Cannot open %s\n", mskname);
		return (ERROR);
	}
	if (put_mh (file) == ERROR) {
		fprintf (stderr, "ERROR [maskobj]: Cannot write %s\n", mskname);
		return (ERROR);
	}
	if (writetensor (file, &indx, image) == ERROR) {
		fprintf (stderr, "ERROR [maskobj]: Cannot write %s\n", mskname);
		return (ERROR);
	}
	free_imgfile (file);
	return (OK);
}
@


1.5
log
@*** empty log message ***
@
text
@d2 3
d25 1
d27 1
a27 1
static char     rcsid[] = "$Id: maskobj.c,v 1.4 2000/09/06 19:36:08 tom Exp tom $";
d39 1
d111 2
a112 2
	strcpy (file->name, mskname);
	strcpy (file->mode, "w");
@


1.4
log
@strcpy filename
@
text
@d2 3
d23 1
a23 1
static char     rcsid[] = "$Id: maskobj.c,v 1.3 1998/12/02 21:05:19 tom Exp tom $";
a30 1
#include <nr.h>
a32 1
#include <imgutil.h>
a41 1
	char           *range;		  	 /* slice range to use for peak */
d86 1
a86 1
		fprintf (stderr, "ERROR [maskobj]: seed point not in image: [%d %d %d]\n", x,y,z);
d104 1
a104 1
	printf ("Pixels in object = %d\n", npixels);
@


1.3
log
@change to define object by a range (min to max)
@
text
@d2 3
d20 1
a20 1
static char     rcsid[] = "$Id: maskobj.c,v 1.2 1998/11/16 16:00:45 tom Exp tom $";
d106 1
a106 2
	free (file->name);
	file->name = mskname;
@


1.2
log
@check that seed pixel is in image and above threshold
@
text
@d2 3
d12 1
a12 1
 *					which are >= a specified pixel value.
d17 1
a17 1
static char     rcsid[] = "$Id: maskobj.c,v 1.1 1998/11/13 15:17:17 tom Exp tom $";
d39 1
a39 1
	int             thresh;			 /* include all >= this pixel value */
d50 5
a54 4
	thresh = atoi (argv[3]);
	x = atoi (argv[4]);
	y = atoi (argv[5]);
	z = atoi (argv[6]);
d91 3
a93 3
	if (image[z][y][x] < (float) thresh) {
		fprintf (stderr, "ERROR [maskobj]: seed point value (%f) < threshold (%f)\n",
			image[z][y][x], (float) thresh);
d96 1
a96 1
	maskobjtensor (file, image, thresh, x, y, z, &npixels);
@


1.1
log
@Initial revision
@
text
@d1 4
a4 1
/* $Log$ */
d14 1
a14 1
static char     rcsid[] = "$Id: maskobj.c,v 2.10 1996/10/16 16:47:45 tom Exp $";
d78 5
d87 5
@
