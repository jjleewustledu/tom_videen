head	1.7;
access;
symbols;
locks; strict;
comment	@ * @;


1.7
date	2006.08.23.16.37.13;	author tom;	state Exp;
branches;
next	1.6;

1.6
date	2004.02.16.22.06.11;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	2001.08.13.18.21.47;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	2000.09.06.19.40.12;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	97.05.14.16.01.26;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	97.05.13.17.42.47;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	97.05.13.15.09.33;	author tom;	state Exp;
branches;
next	;


desc
@@


1.7
log
@fix orientation and error for new file
@
text
@/* $Log: mergefrm.c,v $
 * Revision 1.6  2004/02/16  22:06:11  tom
 * Feb 2004
 *
 * Revision 1.5  2001/08/13  18:21:47  tom
 * fix image-flip problem
 *
 * Revision 1.4  2000/09/06  19:40:12  tom
 * strcpy filename
 *
 * Revision 1.3  1997/05/14  16:01:26  tom
 * add standard ref image
 *
 * Revision 1.2  1997/05/13  17:42:47  tom
 * use an existing mainheader
 *
 * Revision 1.1  1997/05/13  15:09:33  tom
 * Initial revision
 * */
/*	===============================================================================
 *	Module:			mergefrm.c
 *	Date:			Aug 2006
 *	Author:			Tom Videen
 *	===============================================================================
 */
/*@@unused@@*/
static char     rcsid[] = "$Header: /home/npggw/tom/src/mergefrm/RCS/mergefrm.c,v 1.6 2004/02/16 22:06:11 tom Exp tom $";

#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <fcntl.h>
#include <image.h>
#include <libimage.h>
#include <libnrimg.h>

main (argc, argv)
	int             argc;
	char           *argv[];
{

	ImageFile      *file;
	Index           indx;
	char           *imgin, *imgout, *std;
	int             frmin, frmout, frmstd;
	float        ***image;
	FILE           *fp;

	indx.frm = 1;
	indx.pln = 1;
	indx.gate = 1;
	indx.data = 0;
	indx.bed = 0;

	if (argc != 7) {
		fprintf (stderr, "Usage: mergefrm imgin frmin imgout frmout stdfile frmstd\n");
		return (ERROR);
	}
	imgin = argv[1];
	frmin = atoi (argv[2]);
	imgout = argv[3];
	frmout = atoi (argv[4]);
	std = argv[5];
	frmstd = atoi (argv[6]);

	fprintf (stdout, "Merging:  %s,%d --> %s,%d\n", imgin, frmin, imgout, frmout);
	file = make_imgfile (imgin);
	if (open_imgfile (file) == ERROR) {
		fprintf (stderr, "ERROR [mergefrm]: Cannot open %s\n", imgin);
		return (ERROR);
	}
	if (get_mh (file) == ERROR) {
		fprintf (stderr, "ERROR [mergefrm]: Cannot get MainHeader from %s\n", imgin);
		return (ERROR);
	}
	indx.frm = frmin;
	if (existimgfrm (file, &indx) == ERROR) {
		fprintf (stderr, "ERROR [mergefrm]: cannot find %s frame %d\n", file->name, indx.frm);
		return (ERROR);
	}
	if (get_sh (file, &indx) == ERROR) {
		fprintf (stderr, "ERROR [mergefrm]: Cannot read file subheader in %s\n", imgin);
		return (ERROR);
	}
	if ((image = readtensor (file, &indx)) == NULL)
		return (ERROR);
	close_imgfile (file);

/* Use subheader values from standard image */

	(void) strcpy (file->name, std);
	if (open_imgfile (file) == ERROR) {
		fprintf (stderr, "ERROR [mergefrm]: Cannot open %s\n", std);
		return (ERROR);
	}
	if (get_mh (file) == ERROR) {
		fprintf (stderr, "ERROR [mergefrm]: Cannot get MainHeader from %s\n", std);
		return (ERROR);
	}
	indx.frm = frmstd;
	if (existimgfrm (file, &indx) == ERROR) {
		fprintf (stderr, "ERROR [mergefrm]: cannot find %s frame %d\n", file->name, indx.frm);
		return (ERROR);
	}
	if (get_sh (file, &indx) == ERROR) {
		fprintf (stderr, "ERROR [mergefrm]: Cannot read file subheader in %s\n", std);
		return (ERROR);
	}
	close_imgfile (file);

	(void) strcpy (file->name, imgout);
	fp = fopen (imgout, "r+");
	if (fp == NULL) {
		(void) strcpy (file->mode, "w");
		if (open_imgfile (file) == ERROR) {
			fprintf (stderr, "ERROR [mergefrm]: opening new %s\n", imgout);
			return (ERROR);
		}
		file->mh->nframe = 1;
		file->mh->orientation = 0;

/* if output file exists, use its calibration factor and orientation */

	} else {
		(void) fclose (fp);
		(void) strcpy (file->mode, "r+");
		if (open_imgfile (file) == ERROR) {
			fprintf (stderr, "ERROR [mergefrm]: opening existing %s\n", imgout);
			return (ERROR);
		}
		if (get_mh (file) == ERROR) {
			fprintf (stderr, "ERROR [mergefrm]: reading MainHeader from %s\n", imgout);
			return (ERROR);
		}
		file->mh->nframe += 1;
	}
	if (put_mh (file) == ERROR)
		return (ERROR);
	indx.frm = frmout;
	if (writetensor (file, &indx, image) == ERROR)
		return (ERROR);
	free (image);
	free_imgfile (file);
	return (OK);
}
@


1.6
log
@Feb 2004
@
text
@d2 3
d22 1
a22 1
 *	Date:			May 1997
d27 1
a27 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/mergefrm/RCS/mergefrm.c,v 1.5 2001/08/13 18:21:47 tom Exp tom $";
d47 1
a84 6
/* Prevent flipping image during readtensor;
 * Correct orientation in header will be set by get_mh just before writetensor.
 */

	file->mh->orientation = 0;

d112 2
a113 2
	(void) strcpy (file->mode, "r+");
	if (open_imgfile (file) == ERROR) {
d116 1
a116 1
			fprintf (stderr, "ERROR [mergefrm]: Could not open %s\n", imgout);
d120 1
d122 1
a122 1
/* if an output file exists, must use its calibration factor! */
d125 6
d132 1
a132 1
			fprintf (stderr, "ERROR [mergefrm]: Cannot get MainHeader from %s\n", imgout);
@


1.5
log
@fix image-flip problem
@
text
@d2 3
d19 1
a19 1
 *	Date:			May-97
d23 2
a24 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/mergefrm/RCS/mergefrm.c,v 1.4 2000/09/06 19:40:12 tom Exp tom $";
d74 1
a74 2
		fprintf (stderr, "ERROR [mergefrm]: cannot find %s frame %d\n",
			 file, indx.frm);
d93 1
a93 1
	strcpy (file->name, std);
d104 1
a104 2
		fprintf (stderr, "ERROR [mergefrm]: cannot find %s frame %d\n",
			 file, indx.frm);
d113 2
a114 2
	strcpy (file->name, imgout);
	strcpy (file->mode, "r+");
d116 1
a116 1
		strcpy (file->mode, "w");
@


1.4
log
@strcpy filename
@
text
@d2 3
d20 1
a20 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/mergefrm/RCS/mergefrm.c,v 1.3 1997/05/14 16:01:26 tom Exp tom $";
d24 1
d48 1
a48 1
		printf ("Usage: mergefrm imgin frmin imgout frmout stdfile frmstd\n");
d58 1
a58 1
	printf ("Merging:  %s,%d --> %s,%d\n", imgin, frmin, imgout, frmout);
d78 6
@


1.3
log
@add standard ref image
@
text
@d2 3
d17 1
a17 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/mergefrm/RCS/mergefrm.c,v 1.2 1997/05/13 17:42:47 tom Exp tom $";
a76 1
	free (file->name);
d80 1
a80 1
	file->name = std;
d101 1
a101 1
	file->name = imgout;
@


1.2
log
@use an existing mainheader
@
text
@d2 3
d14 1
a14 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/mergefrm/RCS/mergefrm.c,v 1.1 1997/05/13 15:09:33 tom Exp tom $";
d30 2
a31 2
	char           *imgin, *imgout;
	int             frmin, frmout;
d40 2
a41 2
	if (argc != 5) {
		printf ("Usage: mergefrm imgin frmin imgout frmout\n");
d48 2
d74 1
d76 23
a98 1
	free (file->name);
d107 1
d109 8
a116 4
	/* if an output file exists, must use its calibration factor! */
	} else if (get_mh (file) == ERROR) {
		fprintf (stderr, "ERROR [mergefrm]: Cannot get MainHeader from %s\n", imgout);
		return (ERROR);
a117 1
	file->mh->nframe = frmout;
@


1.1
log
@Initial revision
@
text
@d1 4
a4 1
/* $Log$ */
d11 1
a11 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/mergefrm/RCS/mergefrm.c,v 1.1 1997/05/13 14:53:04 tom Exp $";
d79 5
@
