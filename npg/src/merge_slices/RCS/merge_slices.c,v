head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	2004.02.16.21.48.55;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	2002.11.27.16.24.32;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	99.08.10.21.42.32;	author tom;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Feb 2004
@
text
@/*	$Log: merge_slices.c,v $
 * Revision 1.2  2002/11/27  16:24:32  tom
 * *** empty log message ***
 *
 * Revision 1.1  1999/08/10  21:42:32  tom
 * Initial revision
 * */
/*	===============================================================================
 *	Module:			merge_slices.c
 *	Date:			Aug 1999
 *	Author:			Tom Videen
 *	Description:	Merge single-slice files into an Analyze image 
 *	===============================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/merge_slices/RCS/merge_slices.c,v 1.2 2002/11/27 16:24:32 tom Exp tom $";
#endif

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <myvalues.h>
#include <ANALYZE.h>

main (argc, argv)
	int             argc;
	char           *argv[];
{
	struct dsr      hdr;			 /* ANALYZE.h */
	FILE           *fd_hdr;			 /* file for ANALYZE hdr */
	FILE           *fd_in;			 /* file for ANALYZE image */
	FILE           *fd_out;			 /* file for ANALYZE image */
	char           *in;				 /* input root */
	char            img1[256], hdr1[256];	 /* input file */
	char           *img2, *hdr2;	 /* input file */
	char            str[5];
	int				first, last;
	long            dim1, dim2, dim3; /* dimensions of image */
	long            z;
	long            pln=0;
	short          *img;

	if (argc != 6) {
		printf ("Usage: merge_slices in first last img2 hdr2\n");
		return (ERROR);
	}
	in  = argv[1];
	first = atoi(argv[2]);
	last = atoi(argv[3]);
	hdr2  = argv[4];
	img2  = argv[5];

/*	Read first image */

	for (z = last; z >= first; z--) {
		(void) strcpy (str, "");
		(void) sprintf(str,"%ld",z);
		(void) strcpy (img1, in);
		(void) strcat (img1, str);
		if (z == last) {
			(void) strcpy (hdr1, img1);
			(void) strcat (hdr1, ".hdr");
			if ((fd_hdr = fopen (hdr1, "r")) == 0) {
				fprintf (stderr, "ERROR [merge_slices]: Cannot open: %s\n", hdr1);
				return (ERROR);
			}
			if ((fread (&hdr, sizeof (struct dsr), 1, fd_hdr)) != 1) {
				fprintf (stderr, "ERROR [merge_slices]: Reading: %s\n", hdr1);
				return (ERROR);
			}
			dim1 = hdr.dime.dim[1];
			dim2 = hdr.dime.dim[2];
			(void) fclose (fd_hdr);
			dim3 = last-first+1;
			pln = dim1 * dim2;

			if ((fd_hdr = fopen (hdr2, "w")) == 0) {
				fprintf (stderr, "ERROR [merge_slices]: Unable to open %s\n", hdr2);
				return (ERROR);
			}
			hdr.dime.dim[3] = dim3;
			if ((fwrite (&hdr, sizeof (struct dsr), 1, fd_hdr)) != 1) {
				fprintf (stderr, "ERROR [merge_slices]: Error writing to: %s\n", hdr2);
				return (ERROR);
			}
			(void) fclose (fd_hdr);
			img = (short *) calloc (pln, sizeof (short));
			if (img == NULL) {
				fprintf (stderr, "ERROR [merge_slices]: Cannot calloc img\n");
				return (ERROR);
			}
			if ((fd_out = fopen (img2, "w")) == 0) {
				fprintf (stderr, "ERROR [merge_slices]: Unable to open %s\n", img2);
				return (ERROR);
			}
		}
		(void) strcat (img1, ".img");
		if ((fd_in = fopen (img1, "r")) == 0) {
			fprintf (stderr, "ERROR [merge_slices]: Cannot open: %s\n", img1);
			return (ERROR);
		}
		if ((fread (img, sizeof (short), pln, fd_in)) != pln) {
			fprintf (stderr, "ERROR [merge_slices]: Reading: %s\n", img1);
			return (ERROR);
		}
		(void) fclose (fd_in);
		fprintf (stdout, "Read %s\n", img1);
		if ((fwrite (img, sizeof (short), pln, fd_out)) != pln) {
			fprintf (stderr, "ERROR [merge_slices]: Error writing to: %s\n", img2);
			return (ERROR);
		}
	}
	(void) fclose (fd_out);
	free (img);
	return (OK);
}
@


1.2
log
@*** empty log message ***
@
text
@d2 3
d10 1
a10 1
 *	Date:			Aug-99
d15 1
d17 1
a17 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/merge_slices/RCS/merge_slices.c,v 1.1 1999/08/10 21:42:32 tom Exp tom $";
@


1.1
log
@Initial revision
@
text
@d1 4
a4 1
/*	$Log$ */
d13 1
a13 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/merge_slices/RCS/merge_slices.c,v 1.1 1999/08/10 17:35:40 tom Exp $";
d36 2
a37 1
	long            z, pln;
d53 4
a56 4
		strcpy (str, "");
		sprintf(str,"%d",z);
		strcpy (img1, in);
		strcat (img1, str);
d58 2
a59 2
			strcpy (hdr1, img1);
			strcat (hdr1, ".hdr");
d70 1
a70 1
			fclose (fd_hdr);
d83 1
a83 1
			fclose (fd_hdr);
d94 1
a94 1
		strcat (img1, ".img");
d103 1
a103 1
		fclose (fd_in);
d110 1
a110 1
	fclose (fd_out);
@
