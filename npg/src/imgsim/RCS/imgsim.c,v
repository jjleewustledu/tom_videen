head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	2004.02.16.19.26.49;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	2001.12.07.15.20.16;	author tom;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Feb 2004
@
text
@/* $Log: imgsim.c,v $
 * Revision 1.1  2001/12/07  15:20:16  tom
 * Initial revision
 * */
/*	===============================================================================
 *	Module:			imgsim.c
 *	Date:			Dec 2001
 *	Author:			Tom Videen
 *	Description:	Selectively alter voxels in an image file
 *	===============================================================================
 */
/*@@unused@@*/
static char     rcsid[] = "$Header: /home/npggw/tom/src/imgsim/RCS/imgsim.c,v 1.1 2001/12/07 15:20:16 tom Exp tom $";

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <libnrimg.h>
#include <image.h>
#include <libimage.h>
#include <nrutil.h>

main (argc, argv)
	int             argc;
	char           *argv[];
{
	ImageFile      *file;			 /* input image file structure */
	Index           indx;			 /* frame, plane, gate, data, bed */

	char           *infile;
	char           *outfile;
	int             pdim[3];
	int             x, y, z;
	int            	n;
	float           fact;
	float        ***img;

	if (argc != 4) {
		fprintf (stderr,"Usage: imgsim infile outfile factor\n");
		return (ERROR);
	}
	infile = argv[1];
	outfile = argv[2];
	fact = atof(argv[3]);

	indx.frm = 1;
	indx.pln = 1;
	indx.gate = 1;
	indx.data = 0;
	indx.bed = 0;

	file = make_imgfile (infile);
	if (open_imgfile (file) == ERROR) {
		fprintf (stderr, "ERROR [imgsim]: Cannot open %s\n", infile);
		return (ERROR);
	}
	if (get_mh (file) == ERROR) {
		fprintf (stderr, "ERROR [imgsim]: Cannot get MainHeader from %s\n", infile);
		return (ERROR);
	}
	if (existimgfrm (file, &indx) == ERROR) {
		indx.frm = 2;
		if (existimgfrm (file, &indx) == ERROR) {
			indx.frm = 3;
			if (existimgfrm (file, &indx) == ERROR) {
				fprintf (stderr, "ERROR [imgsim]: Cannot read scan %s frame %d\n", infile, indx.frm);
				return (ERROR);
			}
		}
	}
	if (get_sh (file, &indx) == ERROR) {
		fprintf (stderr, "ERROR [imgsim]: Cannot read file subheader in %s\n", infile);
		return (ERROR);
	}
	pdim[0] = file->sh->dim1;
	pdim[1] = file->sh->dim2;
	pdim[2] = file->sh->dim3;

	if ((img = rdtensor (file, &indx, pdim)) == NULL) {
		fprintf (stderr, "ERROR [imgsim]: Cannot read %s\n", infile);
		return (ERROR);
	}
	close_imgfile (file);

/*	Alter select voxels */

	n = 0;
   	for (x = 62; x <= 63; x++) 
    	for (y = 66; y <= 68; y++)
   			for (z = 40; z <= 42; z++) {
				img[z][y][x] *= fact;
				n += 1;
			}

	file->name = outfile;
	(void) strcpy (file->mode, "w");
	indx.frm = 1;
	if (open_imgfile (file) == ERROR) {
		fprintf (stderr, "ERROR [imgsim]: Cannot open %s\n", outfile);
		return (ERROR);
	}
	file->mh->nframe = indx.frm;
	file->mh->orientation = 0;
	if (put_mh (file) == ERROR) {
		fprintf (stderr, "ERROR [imgsim] writing %s\n", outfile);
		return (ERROR);
	}
	if (writetensor (file, &indx, img) == ERROR) {
		fprintf (stderr, "ERROR [imgsim] writing %s\n", outfile);
		return (ERROR);
	}
	close_imgfile (file);
	fprintf (stdout,"%d voxels changed by %.2f in %s\n", n, fact, outfile);
	free_f3tensor (img, 1, pdim[2], 1, pdim[1], 1, pdim[0]);
	return (0);
}
@


1.1
log
@Initial revision
@
text
@d1 4
a4 1
/* $Log$ */
d12 2
a13 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/imgsim/RCS/imgsim.c,v 1.2 2000/04/14 18:06:42 tom Exp $";
d79 1
a79 1
	if ((img = rdtensor (infile, &indx, pdim)) == NULL) {
d100 1
a100 1
		exit (ERROR);
d106 1
a106 1
		exit (ERROR);
d110 1
a110 1
		exit (ERROR);
@
