head	1.4;
access;
symbols;
locks; strict;
comment	@ * @;


1.4
date	2004.02.17.15.27.56;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	2002.11.27.17.15.34;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	2000.09.06.19.43.00;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	97.09.25.13.25.55;	author tom;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Feb 2004
@
text
@/*	$Log: removespike.c,v $
 * Revision 1.3  2002/11/27  17:15:34  tom
 * *** empty log message ***
 *
 * Revision 1.2  2000/09/06  19:43:00  tom
 * strcpy filename
 *
 * Revision 1.1  1997/09/25  13:25:55  tom
 * Initial revision
 * */
/* ===============================================================================
 *	Module:			removespike.c
 *	Date:			Sep 1997
 *	Author:			Tom Videen
 *	Description:	Remove spike artifact from 961 images.
 * ===============================================================================
 */
/*@@unused@@*/
static char     rcsid[] = "$Header: /home/npggw/tom/src/removespike/RCS/removespike.c,v 1.3 2002/11/27 17:15:34 tom Exp tom $";

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <image.h>
#include <libimage.h>
#include <libnrimg.h>
#include <nrutil.h>
#include <pettable.h>

main (argc, argv)
/*@@unused@@*/
	int             argc;
	char           *argv[];
{
	ImageFile      *file;
	Index           indx;
	MainHeader     *mh;
	SubHeader      *sh;
	float        ***img;
	float			sum;
	char           *fname1;
	char           *fname2;
	int             frm;
	unsigned long   dim1, dim2, dim3;
	long            i, j, k;

	fname1 = argv[1];
	fname2 = argv[2];

	frm = 1;
	indx.frm = frm;
	indx.pln = 1;
	indx.gate = 1;
	indx.data = 0;
	indx.bed = 0;
	file = make_imgfile (fname1);
	if (open_imgfile (file) == ERROR) {
		fprintf (stderr, "ERROR [removespike]: Could not open %s\n", fname1);
		return (ERROR);
	}
	if (get_mh (file) == ERROR) {
		fprintf (stderr, "ERROR [removespike]: Could not get MainHeader from %s\n", fname1);
		return (ERROR);
	}
	if (existimgfrm (file, &indx) == ERROR) {
		if (frm == 1) {
			indx.frm = 2;
			if (existimgfrm (file, &indx) == ERROR) {
				indx.frm = 3;
				if (existimgfrm (file, &indx) == ERROR) {
					fprintf (stderr, "ERROR [removespike]: cannot find %s frame 1, 2 or 3\n", fname1);
					return (ERROR);
				}
			}
		} else {
			fprintf (stderr, "ERROR [removespike]: cannot find %s frame %d\n",
				 fname1, frm);
			return (ERROR);
		}
	}
	if (get_sh (file, &indx) == ERROR) {
		fprintf (stderr, "ERROR [removespike]: Could not read file subheader in %s\n", fname1);
		return (ERROR);
	}
	mh = file->mh;
	sh = file->sh;
	dim1 = (unsigned long) sh->dim1;
	dim2 = (unsigned long) sh->dim2;
	dim3 = (unsigned long) sh->dim3;
	if ((img = readtensor (file, &indx)) == NULL)
		return (ERROR);

	for (i = 1; i <= dim3; i++) {
		sum = 0;
		j = 65;
		k = 64;
		sum += img[i][j-1][k-1];
		sum += img[i][j-1][k];
		sum += img[i][j-1][k+1];
		sum += img[i][j][k-1];
		sum += img[i][j][k+1];
		sum += img[i][j+1][k-1];
		sum += img[i][j+1][k];
		sum += img[i][j+1][k+1];
		img[i][j][k] = sum/8.;
	}

	indx.frm = 1;
	printf ("Writing image %s, frame %d\n", fname2, indx.frm);
	close_imgfile (file);
	(void) strcpy (file->name, fname2);
	(void) strcpy (file->mode, "w");
	if (open_imgfile (file) == ERROR) {
		fprintf (stderr, "ERROR [removespike]: Could not open %s\n", fname2);
		return (ERROR);
	}
	mh->nframe = indx.frm;
	if (put_mh (file) == ERROR)
		return (ERROR);
	if (writetensor (file, &indx, img) == ERROR)
		return (ERROR);
	free_f3tensor (img, 1, dim3, 1, dim2, 1, dim1);
	free_imgfile (file);
	return (OK);
}
@


1.3
log
@*** empty log message ***
@
text
@d2 3
d13 1
a13 1
 *	Date:			Sep-97
d18 2
a19 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/removespike/RCS/removespike.c,v 1.2 2000/09/06 19:43:00 tom Exp tom $";
d31 1
@


1.2
log
@strcpy filename
@
text
@d2 3
d15 1
a15 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/removespike/RCS/removespike.c,v 1.1 1997/09/25 13:25:55 tom Exp tom $";
d19 1
a19 1
#include <math.h>
a22 1
#include <nr.h>
d106 2
a107 2
	strcpy (file->name, fname2);
	strcpy (file->mode, "w");
@


1.1
log
@Initial revision
@
text
@d1 4
a4 1
/*	$Log$ */
d12 1
a12 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/removespike/RCS/removespike.c,v 2.14 1997/03/10 15:47:34 tom Exp $";
d104 1
a104 2
	free (file->name);
	file->name = fname2;
@
