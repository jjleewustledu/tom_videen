head	1.4;
access;
symbols;
locks; strict;
comment	@ * @;


1.4
date	2004.02.16.21.22.35;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	2002.11.27.16.07.35;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	99.02.01.20.26.58;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	99.01.12.15.44.41;	author tom;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Feb 2004
@
text
@/*  ================================================================================
 *  File Name:      maskskull.c
 *  Date:           Jan 1999
 *  Author:         Tom Videen
 *  Description:    Zero all pixels connected to [x,y,z] which are <= min OR >= max.
 *					Total pixels in the mask are returned in npixels.
 *  =============================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/maskull/RCS/maskskull.c,v 1.3 2002/11/27 16:07:35 tom Exp tom $";
#endif

#include <stdio.h>

void            maskskull (img, set, val, min, max, dim1, dim2, dim3, pln, xmin, xmax, ymin, ymax, npixels)
	short        ***img;			 /* masked image */
	short        ***set;			 /* pixels masked */
	short			val;			 /* set to this value */
	int             min, max;		 /* range to identify */
	long            dim1, dim2, dim3;	 /* dimensions of img and set */
	long            pln;
	int            *xmin, *xmax, *ymin, *ymax;	/* range to search */
	long           *npixels;		 /* total pixels within mask */
{
	long            lastpln;
	int             x1=0;			 /* first and last X-image elements in loop */
	int             x2=0;
	int             y1=0;			 /* first and last Y-image elements in loop */
	int             y2=0;
	int             i, j, k;
	int             more = 1;
	int             inc = 1;

	while (pln <= dim3) {
		printf ("%li %li\n", pln - 1, *npixels);
		while (more) {
			more = 0;
			x1 = *xmin;
			x2 = *xmax;
			y1 = *ymin;
			y2 = *ymax;
			for (j = y1; j <= y2; j++) {
				for (i = x1; i <= x2; i++) {
					if (set[pln][j][i]) {
						if (j > 1) {
							k = j - 1;
							if (set[pln][k][i]) {
								if (img[pln][k][i] <= min || img[pln][k][i] >= max) {
									set[pln][k][i] = 1;
									img[pln][k][i] = val;
									(*npixels)++;
									more = 1;
									if (k < *ymin)
										*ymin = k;
								}
							}
						}
						if (j < dim2) {
							k = j + 1;
							if (set[pln][k][i]) {
								if (img[pln][k][i] <= min || img[pln][k][i] >= max) {
									set[pln][k][i] = 1;
									img[pln][k][i] = val;
									(*npixels)++;
									more = 1;
									if (k > *ymax)
										*ymax = k;
								}
							}
						}
						if (i > 1) {
							k = i - 1;
							if (set[pln][j][k]) {
								if (img[pln][j][k] <= min || img[pln][j][k] >= max) {
									set[pln][j][k] = 1;
									img[pln][j][k] = val;
									(*npixels)++;
									more = 1;
									if (k < *xmin)
										*xmin = k;
								}
							}
						}
						if (i < dim1) {
							k = i + 1;
							if (set[pln][j][k]) {
								if (img[pln][j][k] <= min || img[pln][j][k] >= max) {
									set[pln][j][k] = 1;
									img[pln][j][k] = val;
									(*npixels)++;
									more = 1;
									if (k > *xmax)
										*xmax = k;
								}
							}
						}
					}
				}
			}
		}
		lastpln = pln;
		pln = pln + inc;
		if (pln <= dim3) {
			for (j = y1; j <= y2; j++) {
				for (i = x1; i <= x2; i++) {
					if (set[lastpln][j][i]) {
						if (set[pln][j][i]) {
							if (img[pln][j][i] <= min || img[pln][j][i] >= max) {
								set[pln][j][i] = 1;
								img[pln][j][i] = val;
								(*npixels)++;
								more = 1;
							}
						}
					}
				}
			}
		}
	}
}
@


1.3
log
@*** empty log message ***
@
text
@d3 1
a3 1
 *  Date:           Jan-99
d9 1
d11 1
a11 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/maskull/RCS/maskskull.c,v 1.2 1999/02/01 20:26:58 tom Exp tom $";
@


1.2
log
@*** empty log message ***
@
text
@d10 1
a10 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/maskull/RCS/maskskull.c,v 1.1 1999/01/12 15:44:41 tom Exp tom $";
d26 4
a29 2
	int             x1, x2;			 /* first and last X-image elements in loop */
	int             y1, y2;			 /* first and last Y-image elements to loop */
d35 1
a35 1
		printf ("%i %i\n", pln - 1, *npixels);
@


1.1
log
@Initial revision
@
text
@d10 1
a10 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libnrimg/RCS/maskskull.c,v 1.2 1998/12/02 20:59:17 tom Exp $";
d15 1
a15 1
void            maskskull (img, set, min, max, dim1, dim2, dim3, pln, xmin, xmax, ymin, ymax, npixels)
d18 1
a30 1
	int             notdone = 1;
d32 21
a52 23
	while (notdone) {
		while ((inc > 0 && pln <= dim3) || (inc < 0 && pln > 0)) {
			printf ("%i %i\n", pln, *npixels);
			while (more) {
				more = 0;
				x1 = *xmin;
				x2 = *xmax;
				y1 = *ymin;
				y2 = *ymax;
				for (j = y1; j <= y2; j++) {
					for (i = x1; i <= x2; i++) {
						if (set[pln][j][i]) {
							if (j > 1) {
								k = j - 1;
								if (set[pln][k][i] == 0) {
									if (img[pln][k][i] <= min || img[pln][k][i] >= max) {
										set[pln][k][i] = 1;
										img[pln][k][i] = 0.;
										(*npixels)++;
										more = 1;
										if (k < *ymin)
											*ymin = k;
									}
d55 11
a65 11
							if (j < dim2) {
								k = j + 1;
								if (set[pln][k][i] == 0) {
									if (img[pln][k][i] <= min || img[pln][k][i] >= max) {
										set[pln][k][i] = 1;
										img[pln][k][i] = 0.;
										(*npixels)++;
										more = 1;
										if (k > *ymax)
											*ymax = k;
									}
d68 11
a78 11
							if (i > 1) {
								k = i - 1;
								if (set[pln][j][k] == 0) {
									if (img[pln][j][k] <= min || img[pln][j][k] >= max) {
										set[pln][j][k] = 1;
										img[pln][j][k] = 0.;
										(*npixels)++;
										more = 1;
										if (k < *xmin)
											*xmin = k;
									}
d81 11
a91 11
							if (i < dim1) {
								k = i + 1;
								if (set[pln][j][k] == 0) {
									if (img[pln][j][k] <= min || img[pln][j][k] >= max) {
										set[pln][j][k] = 1;
										img[pln][j][k] = 0.;
										(*npixels)++;
										more = 1;
										if (k > *xmax)
											*xmax = k;
									}
d97 14
a110 19
			}			 /* end while (more) */

			if (inc > 0 && pln == dim3)
				inc = -1;
			lastpln = pln;
			pln = pln + inc;
			if (inc < 0 && pln == 0)
				notdone = 0;
			else {
				for (j = y1; j <= y2; j++) {
					for (i = x1; i <= x2; i++) {
						if (set[lastpln][j][i]) {
							if (set[pln][j][i] == 0) {
								if (img[pln][j][i] <= min || img[pln][j][i] >= max) {
									set[pln][j][i] = 1;
									img[pln][j][i] = 0.;
									(*npixels)++;
									more = 1;
								}
@
