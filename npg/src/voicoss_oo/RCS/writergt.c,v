head	1.1;
access;
symbols;
locks; strict;
comment	@ * @;


1.1
date	2008.03.18.21.07.59;	author tom;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/*	$Log: writergt.c,v $
 * Revision 1.1  2006/12/21  19:48:07  tom
 * Initial revision
 *
 * Revision 2.2  2006/02/16  20:34:59  tom
 * eliminate zero check while computing regional means
 *
 * Revision 2.1  2004/03/04  18:40:30  tom
 * always write both L/R and R/L ratios
 *
 * Revision 2.0  2004/02/20  16:20:40  tom
 * Feb 2004
 *
 * Revision 1.9  2003/11/25  20:09:13  tom
 * show both ratios for followup studies
 *
 * Revision 1.8  2003/11/13  14:26:39  tom
 * replace Surgery with Randomization
 *
 * Revision 1.7  2003/10/06  15:57:13  tom
 * add asterisk to individual regions with ratio > 1.13
 *
 * Revision 1.6  2003/03/31  16:23:03  tom
 * write left and right means as normalized values
 *
 * Revision 1.5  2002/08/15  16:36:47  tom
 * set criterion to greater than 1.160 (3 decimal places)
 *
 * Revision 1.4  2002/04/11  19:06:26  tom
 * spelling
 *
 * Revision 1.3  2002/04/11  16:55:19  tom
 * message with ratio
 *
 * Revision 1.2  2001/09/18  17:25:07  tom
 * change typo (radius -> diameter)
 *
 * Revision 1.1  2000/08/31  15:23:07  tom
 * Initial revision
 * */
/* ===============================================================================
 *	Module:			writergt.c
 *	Date:			Aug 2000
 *	Author:			Tom Videen
 *	Description:	Write rgt data from voicoss2.
 * ===============================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/voicoss_ho/RCS/writergt.c,v 1.1 2006/12/21 19:48:07 tom Exp $";
#endif

#include <stdio.h>
#include <string.h>
#include <math.h>
#include <imgutil.h>
#include <voistat.h>

int             writergt (rgtfile, prm, version, nvoi, voilist, rgtlist, date,
			                  uid, voifile, nvoxels, adim, hname)
	char           *rgtfile;		 /* output filename */
	PARAMETER_DATA  prm;			 /* processing parameters */
	char           *version;		 /* program version number */
	int             nvoi;			 /* number of VOIs */
	VOIDATA        *voilist;		 /* list of VOIs */
	RGTDATA         rgtlist;		 /* RGTDATA */
	char           *date;			 /* current date */
	char           *uid;			 /* user id */
	char           *voifile;		 /* region filename */
	int             nvoxels;		 /* number of voxels in VOI */
	float          *adim;			 /* voxel dimension (mm) */
	char           *hname;

{
	FILE           *rgtfp;
	double          left_mean, right_mean, ratio;
	double          left_sum, right_sum;
	double          left, right;
	int             left_n, right_n;
	int             k;

	if ((rgtfp = fopen (rgtfile, "w")) == NULL) {
		fprintf (stderr, "ERROR [writergt]: Cannot open file %s\n", rgtfile);
		return (ERROR);
	}
	left_n = 0;
	right_n = 0;
	left_sum = 0;
	right_sum = 0;
	for (k = 0; k < nvoi; k++) {
		if (strncmp (voilist[k].voiname, "l_", 2) == 0) {
			left_sum += rgtlist.mean[0][k];
			++left_n;
		} else if (strncmp (voilist[k].voiname, "r_", 2) == 0) {
			right_sum += rgtlist.mean[0][k];
			++right_n;
		}
	}
	left_mean = left_sum / left_n;
	right_mean = right_sum / right_n;
	for (k = 0; k < nvoi; k++) {
		if (fmod ((double) k, 2.0) == 0) {
			left = rgtlist.mean[0][k];
			right = rgtlist.mean[0][k + 1];
			if (left / right > 1.13)
				fprintf (rgtfp, "%10.3f  %s  *\n", rgtlist.mean[0][k], voilist[k].voiname);
			else
				fprintf (rgtfp, "%10.3f  %s\n", rgtlist.mean[0][k], voilist[k].voiname);
		} else {
			left = rgtlist.mean[0][k - 1];
			right = rgtlist.mean[0][k];
			if (right / left > 1.13)
				fprintf (rgtfp, "%10.3f  %s  *\n", rgtlist.mean[0][k], voilist[k].voiname);
			else
				fprintf (rgtfp, "%10.3f  %s\n", rgtlist.mean[0][k], voilist[k].voiname);
		}
	}

	fprintf (rgtfp, "\n%10.3f  Mean Left\n", left_mean);
	fprintf (rgtfp, "%10.3f  Mean Right\n\n", right_mean);

	ratio = left_mean / right_mean;
	fprintf (rgtfp, "%10.3f  Left/Right\n", ratio);
	ratio = right_mean / left_mean;
	fprintf (rgtfp, "%10.3f  Right/Left\n", ratio);

	fprintf (rgtfp, "\n%s   %s\n", hname, voifile);
	fprintf (rgtfp, "VOI sphere:  %.2f mm diameter, %.3f cc, %d voxels\n",
		 prm.voi_xdim, nvoxels * adim[0] * adim[1] * adim[2] / 1000., nvoxels);
	fprintf (rgtfp, "%s   %s   %s\n", version, date, uid);

	(void) fclose (rgtfp);
	return (OK);
}
@
