head	1.4;
access;
symbols;
locks; strict;
comment	@c @;


1.4
date	2004.02.17.15.06.13;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	97.01.06.22.36.41;	author tom;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Feb 2004
@
text
@C$Id: peakavg.f,v 1.1 1997/01/06 22:36:41 tom Exp tom $
C$Log: peakavg.f,v $
c Revision 1.1  1997/01/06  22:36:41  tom
c Initial revision
c
c Revision 2.0  1996/10/16  22:42:26  tom
c TOV libs
c
c Revision 1.2  1994/04/27  20:12:26  ty7777
c Added NUMSLICES to argument list.
c
c Revision 1.1  1994/01/19  20:15:49  ty7777
c Initial revision
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  Subroutine:   PEAKAVG
C  Author:       Tom O. Videen
C  Date:         05-Dec-90
C  Written For:  PEAKID
C
C  History:
C     Modified by Tom Yang on Jan-19-94 to port to UNIX environment.
C
C  Intent:
C     Generate averaged image for all pixels in 49 slice image
C     using spherical region defined in NPIX, XLOC, YLOC.
C
C  Uses Subroutines:
C     getimage
C
C  Called by:  PEAKID
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE PEAKAVG (REGRADIUS, FNAME, ERR, NUMSLICES)
C
      INTEGER*4    REGRADIUS     ! region radius (0,1,2,3, or 4)
      CHARACTER*20 FNAME         ! file name for image
      INTEGER*4    ERR           ! error reading image file
      INTEGER*4    NUMSLICES     ! number of slices in image
C
      INTEGER*2   IMG (128, 128, 75)  ! image array
      INTEGER*2   MASK (128, 128, 75) ! masking array
      LOGICAL*1   INC (128, 128, 75)  ! elements included in this peak
      LOGICAL*1   USED (128, 128, 75) ! elements included in other peaks
      INTEGER*4   XLOC(310,0:4)  ! locations of pixels for 2D section
      INTEGER*4   YLOC(310,0:4)  !    of a local region
      INTEGER*4   NPIX(0:4)      ! number of pixels in region for 2D section
      INTEGER*4   NSUM           ! total pixels within 3D region
C
      INTEGER*2   IN(128,128)    ! 1 slice for reading input files
      INTEGER*4   REGSUM(128,128)! sum of all values within region
      INTEGER*4   NSLICES        ! no. of slices
      INTEGER*4   SLICE          ! slice number
      INTEGER*4   FIRST          ! first row/col element to process
      INTEGER*4   LAST           ! last row/col element to process
      INTEGER*4   XX, YY         ! indices to regional locations for 1 pixel
      INTEGER*4   ZZ             ! local slice number
      INTEGER*4   Z              ! distance of slice from center of local region
C
      EXTERNAL     getimage
      external     getimage      !$pragma C (getimage)
C
      REAL*4      MEAN           ! temp for local mean
C
      CHARACTER*256 RCSHEADER
C
      COMMON /PEAKPARM/ IMG,MASK,INC,USED,XLOC,YLOC,NPIX,NSUM
C
      RCSHEADER = '$Header: /home/npggw/tom/src/peakstrip/RCS/peakavg.f,v 1.1 1997/01/06 22:36:41 tom Exp tom $'
C
C  Initializations
C
      ERR   = 0
      FIRST = REGRADIUS + 1
      LAST  = 128 - REGRADIUS
C
C  Process all slices
C
      DO 500 SLICE = 1, NUMSLICES
C
C  Slices too high or low for full average are zeroed
C
        IF (SLICE .LE. REGRADIUS .OR. SLICE .GT. (NUMSLICES - REGRADIUS)) THEN
          DO 110 J = 1, 128
            DO 100 I = 1, 128
              IMG (I, J, SLICE) = 0
100         CONTINUE
110       CONTINUE
C
C  For all other slices,
C  zero the array used to store sums of values within each region
C
        ELSE
          DO 130 J = 1, 128
            DO 120 I = 1, 128
              REGSUM (I, J) = 0
120         CONTINUE
130       CONTINUE
C
C  For each slice which contributes to the regional values for the
C  current slice, read the slice data...
C
          Z = -REGRADIUS
          DO 250 ZZ=SLICE-REGRADIUS,SLICE+REGRADIUS
            CALL getimage (IN, FNAME, %VAL(ZZ), NSLICES, ERR)
C
C  sum the pixels included in the region centered on each pixel...
C
            DO 220 J=FIRST,LAST
              DO 210 I=FIRST,LAST
                DO 200 K=1,NPIX(IABS(Z))
                  XX = I + XLOC(K,IABS(Z))
                  YY = J + YLOC(K,IABS(Z))
                  REGSUM(I,J) = REGSUM(I,J) + IN(XX,YY)
200             CONTINUE
210           CONTINUE
220         CONTINUE
            Z = Z + 1
250       CONTINUE
C
C  and divide the sums by the number of pixels per region.
C
          DO 320 J=1,128
            DO 300 I=1,128
			  IF (NSUM .GT. 0) THEN
              	MEAN = FLOAT(REGSUM(I,J))/FLOAT(NSUM)
              	IMG(I,J,SLICE) = INT(NINT(MEAN))
			  ELSE
              	IMG(I,J,SLICE) = 0
			  ENDIF
300         CONTINUE
320       CONTINUE
        END IF
C
500   CONTINUE
C
      RETURN
      END
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
C$Id: peakavg.f,v 2.0 1996/10/16 22:42:26 tom Exp $
d3 3
d71 1
a71 1
      RCSHEADER = '$Header: /home/npggw/tom/src/peakid/RCS/peakavg.f,v 2.0 1996/10/16 22:42:26 tom Exp $'
@
