head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	2010.10.20.13.56.40;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	2010.10.20.13.25.34;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.27.16.07.24;	author tom;	state Exp;
branches;
next	;


desc
@@


1.3
log
@insert program name (imgflip), version and date into image header
@
text
@/* $Log: imgflip.c,v $
 * Revision 1.2  2010/10/20  13:25:34  tom
 * leave orientation in header as is
 *
 * Revision 1.1  2006/11/27  16:07:24  tom
 * Initial revision
 * */
/*	===============================================================================
 *	Module:			imgflip.c
 *	Date:			Nov 2006
 *	Author:			Tom Videen
 *	Description:
 *		Flip ECAT image to restore factory default orientation.
 *	===============================================================================
 */
/*@@unused@@*/
static char     rcsid[] = "$Header: /home/npggw/tom/src/imgflip/RCS/imgflip.c,v 1.2 2010/10/20 13:25:34 tom Exp tom $";

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <libnrimg.h>
#include <image.h>
#include <libimage.h>
#include <nrutil.h>

int main (argc, argv)
	int             argc;
	char           *argv[];
{
	ImageFile      *file1;
	Index           indx;

	char           *scan1;
	int             pdim[3];
    char            runstamp[40];        /* version, date and userid info */
	int             i, j, k, n;
	float        ***img1, ***img2;

	if (argc != 8) {
		fprintf (stderr,"Usage: imgflip img\n");
		return (ERROR);
	}
	scan1 = argv[1];
    n = 2;
    (void) sprintf (runstamp, "%s %s %s %s %s %s", argv[n], argv[n + 1], argv[n + 2], argv[n + 4], argv[n + 5], argv[n + 7]);

	indx.frm = 1;
	indx.pln = 1;
	indx.gate = 1;
	indx.data = 0;
	indx.bed = 0;

	file1 = make_imgfile (scan1);
	if (open_imgfile (file1) == ERROR) {
		fprintf (stderr, "ERROR [imgflip]: opening %s\n", scan1);
		return (ERROR);
	}
	if (get_mh (file1) == ERROR) {
		fprintf (stderr, "ERROR [imgflip]: reading MainHeader %s\n", scan1);
		return (ERROR);
	}
	if (existimgfrm (file1, &indx) == ERROR) {
		indx.frm = 2;
		if (existimgfrm (file1, &indx) == ERROR) {
			fprintf (stderr, "ERROR [imgflip]: reading %s frame %d\n", scan1, indx.frm);
			return (ERROR);
		}
	}
	if (get_sh (file1, &indx) == ERROR) {
		fprintf (stderr, "ERROR [imgflip]: reading subheader %s\n", scan1);
		return (ERROR);
	}
	pdim[0] = file1->sh->dim1;
	pdim[1] = file1->sh->dim2;
	pdim[2] = file1->sh->dim3;

	if ((img1 = rdtensor (file1, &indx, pdim)) == NULL) {
		fprintf (stderr, "ERROR [imgflip]: reading %s\n", scan1);
		return (ERROR);
	}
	close_imgfile (file1);

    if ((img2 = f3tensor (1, pdim[2], 1, pdim[1], 1, pdim[0])) == NULL) {
        fprintf (stderr, "ERROR [imgflip]: malloc img2\n");
        return (ERROR);
    }

	for (i = 1; i <= pdim[2]; i++)
		for (j = 1; j <= pdim[1]; j++)
			for (k = 1; k <= pdim[0]; k++)
				img2[i][j][pdim[0]-k+1] = img1[i][j][k];

	(void) strcpy (file1->mode, "w");
	indx.frm = 1;
	fprintf (stdout, "Writing %s\n", scan1);
	if (open_imgfile (file1) == ERROR) {
		fprintf (stderr, "ERROR [imgflip]: opening %s\n", scan1);
		return (ERROR);
	}
	file1->mh->nframe = indx.frm;

	/*	modified 10/20/2010 to leave orientation as is 
	 *	file1->mh->orientation = 1;
	 */

    (void) save_rcs (file1, rcsid, runstamp);

	if (put_mh (file1) == ERROR) {
		fprintf (stderr, "ERROR [imgflip] writing %s\n", scan1);
		return (ERROR);
	}
	if (writetensor (file1, &indx, img2) == ERROR) {
		fprintf (stderr, "ERROR [imgflip] writing %s\n", scan1);
		return (ERROR);
	}
	close_imgfile (file1);
	free_f3tensor (img1, 1, pdim[2], 1, pdim[1], 1, pdim[0]);
	free_f3tensor (img2, 1, pdim[2], 1, pdim[1], 1, pdim[0]);
	return (0);
}
@


1.2
log
@leave orientation in header as is
@
text
@d2 3
d17 1
a17 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/imgflip/RCS/imgflip.c,v 1.1 2006/11/27 16:07:24 tom Exp tom $";
d36 2
a37 1
	int             i, j, k;
d40 1
a40 1
	if (argc != 2) {
d45 2
d107 2
@


1.1
log
@Initial revision
@
text
@d1 4
a4 1
/* $Log$ */
d14 1
a14 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/imgflip/RCS/imgflip.c,v 1.1 2006/08/21 14:22:57 tom Exp tom $";
d24 1
a24 1
main (argc, argv)
d96 5
a100 1
	file1->mh->orientation = 1;
@
