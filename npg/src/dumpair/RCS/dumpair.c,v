head	1.1;
access;
symbols;
locks; strict;
comment	@ * @;


1.1
date	2006.02.17.16.16.56;	author tom;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/* $Log$ */
/* ===============================================================================
 *  Program:	dumpair
 *  Date:		Feb 2006
 *  Author:		Tom Videen
 *	Intent:		Dump contents of an AIR file
 * ===============================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/dumpair/RCS/dumpair.c,v 2.9 2004/02/16 20:14:42 tom Exp $";
#endif

#include <stdio.h>
#include <nrutil.h>
#include <air.h>

int             read_air ();

main (argc, argv)
	int             argc;
	char          **argv;
{
	struct air2     air1;
	char           *fname;
	float         **mat;

	if (argc != 2) {
		(void) fprintf (stderr, "Usage: dumpair airfile\n");
		return 1;
	}
	fname = argv[1];

	mat = matrix (1, 4, 1, 4);

	if (read_air (fname, &air1, mat) != 0) {
		(void) fprintf (stderr, "ERROR: cannot read %s\n", fname);
		return 1;
	}
	printf ("comment: %s\n", air1.comment);
	printf ("std file: %s\n", air1.stdfile);
	printf ("std xdim: %d\n", air1.std.xdim);
	printf ("std ydim: %d\n", air1.std.ydim);
	printf ("std zdim: %d\n", air1.std.zdim);
	printf ("std xsize: %f\n", air1.std.xsize);
	printf ("std ysize: %f\n", air1.std.ysize);
	printf ("std zsize: %f\n", air1.std.zsize);
	printf ("std bits: %d\n", air1.std.bits);

	printf ("res file: %s\n", air1.resfile);
	printf ("res xdim: %d\n", air1.res.xdim);
	printf ("res ydim: %d\n", air1.res.ydim);
	printf ("res zdim: %d\n", air1.res.zdim);
	printf ("res xsize: %f\n", air1.res.xsize);
	printf ("res ysize: %f\n", air1.res.ysize);
	printf ("res zsize: %f\n", air1.res.zsize);
	printf ("res bits: %d\n", air1.res.bits);

	printf ("mat1: %f %f %f %f\n", mat[1][1], mat[1][2], mat[1][3], mat[1][4]);
	printf ("mat2: %f %f %f %f\n", mat[2][1], mat[2][2], mat[2][3], mat[2][4]);
	printf ("mat3: %f %f %f %f\n", mat[3][1], mat[3][2], mat[3][3], mat[3][4]);

	return 0;
}
@
