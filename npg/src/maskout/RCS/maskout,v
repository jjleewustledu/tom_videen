head	1.9;
access;
symbols;
locks; strict;
comment	@# @;


1.9
date	2004.02.16.20.57.40;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	2003.12.12.19.34.09;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	99.03.08.15.36.09;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	99.02.16.18.19.19;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	99.02.08.18.17.33;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	99.02.01.19.18.10;	author tom;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Feb 2004
@
text
@#!/bin/csh
#	Module:	maskout
#	Author:	Tom Videen
#	Date:	Jan 1999
#	Use:	Preserve all pixels connected to [x,y,z] which are >= min AND <= max
#			by setting to val all EXCLUDED pixels.
#			Print total pixels masked and total in object.

if ($#argv < 8) then
	echo "Usage:  maskout input output min max setval x y z [x2 y2 z2] [x3 y3 z3] ..."
	echo " e.g.:  maskout p5000ct_n p5000seg1_n 20 50 0 240 165 1"
	exit 1
endif

if (! $?NPG) setenv NPG /usr/local/npg

set hdr1 = $1.hdr
set img1 = $1.img
set hdr2 = $2.hdr
set img2 = $2.img
set min = $3
set max = $4
set val = $5

if (! -e $img1) then
	echo "ERROR [maskout]: cannot find $img1"
	exit 1
endif
if (-e $img2) echo "Warning: Replacing $img2"

set nseeds = `echo "($#argv - 5) / 3" | bc`
${NPG}/bin/maskout.bin $hdr1 $img1 $hdr2 $img2 $min $max $val $nseeds $argv[6*]
@


1.5
log
@NPG
@
text
@@


1.4
log
@unlimited seeds permitted
@
text
@d4 1
a4 1
#	Date:	Jan-99
d9 1
a9 4
set BINPATH = /usr/local/npg/bin

set argc = $#argv
if ($argc < 8) then
d12 1
a12 1
	exit
d15 2
d25 3
a27 3
if (!(-e $img1)) then
	echo "ERROR [maskout]: input image ${img1} does not exist."
	exit
d29 1
a29 3
if (-e $img2) then
	echo "Warning: Replacing $img2"
endif
d31 2
a32 2
set nseeds = `echo "($argc - 5) / 3" | bc`
${BINPATH}/maskout.bin $hdr1 $img1 $hdr2 $img2 $min $max $val $nseeds $argv[6*]
@


1.3
log
@permit multiple seed pixels
@
text
@a24 3
set x = $6
set y = $7
set z = $8
d34 2
a35 31
if ($argc == 8) then
	${BINPATH}/maskout.bin $hdr1 $img1 $hdr2 $img2 $min $max $val 1 $x $y $z
else if ($argc < 11) then
	echo "Usage:  maskout input output min max setval x y z [x2 y2 z2]"
	echo "ERROR [maskout]: You have not completely specified 2 pixels!
	exit
else if ($argc == 11) then
	${BINPATH}/maskout.bin $hdr1 $img1 $hdr2 $img2 $min $max $val 2 $x $y $z $9 $10 $11
else if ($argc < 14) then
	echo "Usage:  maskout input output min max setval x y z [x2 y2 z2] [x3 y3 z3]"
	echo "ERROR [maskout]: You have not completely specified 3 pixels!
	exit
else if ($argc == 14) then
	${BINPATH}/maskout.bin $hdr1 $img1 $hdr2 $img2 $min $max $val 3 $x $y $z $9 $10 $11 $12 $13 $14
else if ($argc < 17) then
	echo "Usage:  maskout input output min max setval x y z [x2 y2 z2] [x3 y3 z3] [x4 y4 z4]"
	echo "ERROR [maskout]: You have not completely specified 4 pixels!
	exit
else if ($argc == 17) then
	${BINPATH}/maskout.bin $hdr1 $img1 $hdr2 $img2 $min $max $val 4 $x $y $z $9 $10 $11 $12 $13 $14 $15 $16 $17
else if ($argc < 17) then
	echo "Usage:  maskout input output min max setval x y z [x2 y2 z2] [x3 y3 z3] [x4 y4 z4] [x5 y5 z5]"
	echo "ERROR [maskout]: You have not completely specified 5 pixels!
	exit
else if ($argc == 20) then
	${BINPATH}/maskout.bin $hdr1 $img1 $hdr2 $img2 $min $max $val 5 $x $y $z $9 $10 $11 $12 $13 $14 $15 $16 $17 $18 $19 $20
else
	echo "ERROR [maskout]: Limit your seeds to 5 pixels"
	exit
endif

@


1.2
log
@*** empty log message ***
@
text
@d11 3
a13 2
if ($#argv != 8) then
	echo "Usage:  maskout input output min max setval x y z"
d30 1
a30 1
	echo "ERROR: input image ${img1} does not exist."
d37 30
a66 1
${BINPATH}/maskout.bin $hdr1 $img1 $hdr2 $img2 $min $max $val $x $y $z
@


1.1
log
@Initial revision
@
text
@d6 1
a6 1
#			by setting to val all outside pixels.
d11 3
a13 5
if ($#argv != 9) then
	echo "Usage:  maskout input output x y z min max setval flag"
	echo " e.g.:  maskout p5000ct_n p5000seg1_n 240 165 1 20 50 0 0"
	echo " flag = 0  -> same seed [x,y,z] used in all planes"
	echo "        1  -> continue mask to next plane"
d21 6
a26 7
set x = $3
set y = $4
set z = $5
set min = $6
set max = $7
set val = $8
set flag = $9
d36 1
a36 1
${BINPATH}/maskout.bin $hdr1 $img1 $hdr2 $img2 $x $y $z $min $max $val $flag
@
