head	1.5;
access;
symbols;
locks; strict;
comment	@ * @;


1.5
date	2004.02.16.15.43.37;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	2003.02.10.20.22.15;	author tom;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Feb 2004
@
text
@/* $Log: ge_read_fields.c,v $
 * Revision 1.1  2003/02/10  20:22:15  tom
 * Initial revision
 *
 * Revision 1.2  2003/02/10  19:09:53  tom
 * debug
 *
 * Revision 1.1  2003/02/07  21:41:07  tom
 * Initial revision
 * */
/*	===============================================================================
 *	Module:			ge_read_fields.c
 *	Date:			Feb 2003
 *	Author:			Tom Videen
 *	Description:	Read field names from a GEMS PET Export file
 *	===============================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/gehdr/RCS/ge_read_fields.c,v 1.1 2003/02/10 20:22:15 tom Exp tom $";
#endif

#include <stdio.h>
#include <string.h>
#include <stdlib.h>

char          **ge_read_fields (fd, fnum, match, complete, init, debug)
	FILE           *fd;
	int            *fnum;
	char           *match;
	char           *complete;
	char           *init;
	int             debug;
{
	char          **fid;
	char           *line;
	char           *field;
	char           *str;
	char           *ptr;
	int             match_len;
	int             complete_len;
	int             nn;
	int             flen;
	int             i;
	int             maxlen = 256;
	int             fsize = 2000;

	match_len = strlen (match);
	complete_len = strlen (complete);
	line = (char *) calloc (maxlen + 1, sizeof (char));
	if (line == NULL) return (NULL);
	field = (char *) calloc (fsize, sizeof (char));
	if (field == NULL) return (NULL);
	(void) strcpy (line, init);

/*	Read the input string	*/

	while (strncmp (line, match, match_len) != 0) {
		if (fgets (line, maxlen, fd) == 0) {
			if (strncmp (match, "image|", 6) != 0)
				fprintf (stderr, "ERROR [ge_read_fields]: searching for %s\n", match);
			return (NULL);
		}
	}


	(void) strcpy (field, line);
	if (fgets (line, maxlen, fd) == 0) {
		fprintf (stderr, "ERROR [ge_read_fields]: reading fields after %s\n", match);
		return (NULL);
	}
	while (strncmp (line, complete, complete_len) != 0) {
		(void) strcat (field, line);
		if (fgets (line, maxlen, fd) == 0) {
			fprintf (stderr, "ERROR [ge_read_fields]: after %s searching for %s\n", match, complete);
			return (NULL);
		}
	}

/*	Determine the number of fields	*/

	nn = 0;
	ptr = strpbrk (field, "|");
	while (ptr != NULL) {
		nn++;
		ptr = strpbrk (ptr, "|");
		if (ptr != NULL)
			ptr++;
	}

/*	Copy the field names	*/

	fid = (char **) calloc (nn, sizeof (char *));
	if (fid == NULL) return (NULL);
	ptr = field;
	for (i = 0; i < nn; i++) {
		flen = strcspn (ptr, "|");
		str = (char *) calloc (flen + 1, sizeof (char));
		if (str == NULL) return (NULL);
		(void) strncpy (str, ptr, flen);
		fid[i] = (char *) calloc (flen + 1, sizeof (char));
		if (fid[i] == NULL) return (NULL);
		(void) strcpy (fid[i], str);
		if (debug > 0)
			fprintf (stderr, "%d %s\n", i, fid[i]);
		ptr = ptr + flen + 1;
		free (str);
	}

	*fnum = nn;
	(void) strcpy (init, line);
	free (line);
	free (field);
	return fid;
}
@


1.1
log
@Initial revision
@
text
@d2 3
d18 1
d20 1
a20 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/ge2if/RCS/ge_read_fields.c,v 1.2 2003/02/10 19:09:53 tom Exp $";
d51 1
d53 1
d94 1
d99 1
d102 1
@
