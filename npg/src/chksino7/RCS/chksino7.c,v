head	1.5;
access;
symbols;
locks; strict;
comment	@ * @;


1.5
date	2004.02.13.21.10.35;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	2002.11.04.20.24.41;	author tom;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Feb 2004
@
text
@/*	$Log: chksino7.c,v $
 * Revision 1.1  2002/11/04  20:24:41  tom
 * Initial revision
 * */
/* ===============================================================================
 *	Module:			chksino7.c
 *	Date:			Nov 2002
 *	Author:			Tom Videen
 *	Description:	Check ECAT Matrix 7 sinogram.
 * ===============================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/chksino7/RCS/chksino7.c,v 1.1 2002/11/04 20:24:41 tom Exp tom $";
#endif

#include <stdio.h>
#include <stdlib.h>
#include <strings.h>
#include <image.h>
#include <libimage.h>

main (argc, argv)
	int             argc;
	char           *argv[];
{
	ImageFile      *file1;
	Index           indx;
	short          *matrix;
	short          *sino;
	char           *fname;
	float           rate;
	short           pln, frm, nfrms;
	long            trues, sum;
	long            i, k;
	long            sizpln, sizsino;
	unsigned long   dim1, dim2, dim3;

	fname = argv[1];
	indx.frm = 1;
	indx.pln = 1;
	indx.gate = 1;
	indx.data = 0;
	indx.bed = 0;

	file1 = make_imgfile (fname);
	(void) strcpy (file1->mode, "r+");
	if (open_imgfile (file1) == ERROR) {
		fprintf (stdout, "ERROR [chksino7]: Cannot open %s\n", fname);
		return (ERROR);
	}
	if (get_mh (file1) == ERROR) {
		fprintf (stdout, "ERROR [chksino7]: Cannot get MainHeader from %s\n", fname);
		return (ERROR);
	}
	if (file1->mh->file_format != MATRIX_REV7) {
		fprintf (stdout, "ERROR [chksino7]: File is not type Matrix 7 %s\n", fname);
		return (ERROR);
	}
	if (existimgfrm (file1, &indx) == ERROR) {
		fprintf (stdout, "ERROR [chksino7]: Cannot find %s frame %d\n", fname, indx.frm);
		return (ERROR);
	}
	if (get_ss7 (file1, &indx) == ERROR) {
		fprintf (stdout, "ERROR [chksino7]: Cannot read file subheader in %s\n", fname);
		return (ERROR);
	}
	if (use_ss7 (file1, &indx) == ERROR) {
		fprintf (stdout, "ERROR [chksino7]: Cannot convert file subheader in %s\n", fname);
		return (ERROR);
	}
	dim1 = (unsigned long) file1->sh->dim1;
	dim2 = (unsigned long) file1->sh->dim2;
	dim3 = (unsigned long) file1->sh->dim3;
	nfrms = file1->mh->nframe;
	sizpln = dim1 * dim2;
	sizsino = dim1 * dim2 * dim3;
	sino = (short *) malloc (sizsino * sizeof (short));

	fprintf (stdout, "frm   msec  dtcor   prompts   net trues   summed trues   trues/sec\n");
	for (frm = 1; frm <= nfrms; frm++) {
		indx.frm = frm;
		if (existimgfrm (file1, &indx) == ERROR) {
			fprintf (stdout, "ERROR [chksino7]: Cannot find %s frame %d\n", fname, indx.frm);
			return (ERROR);
		}
		if (get_ss7 (file1, &indx) == ERROR) {
			fprintf (stdout, "ERROR [chksino7]: Cannot read file subheader in %s\n", fname);
			return (ERROR);
		}
		if (use_ss7 (file1, &indx) == ERROR) {
			fprintf (stdout, "ERROR [chksino7]: Cannot convert file subheader in %s\n", fname);
			return (ERROR);
		}
		for (pln = 0; pln < dim3; pln++) {
			k = pln * sizpln;
			indx.pln = pln + 1;
			if ((matrix = rdscan7 (file1, indx)) == NULL) {
				fprintf (stdout, "ERROR [chksino7]: Cannot read frame %d plane %d of %s\n",
					 indx.frm, pln + 1, fname);
				return (ERROR);
			}
			for (i = 0; i < sizpln; i++)
				sino[k + i] = matrix[i];
			free (matrix);
		}
		sum = 0;
		for (i = 0; i < sizsino; i++)
			sum += sino[i];
		trues = file1->sh->trues;
		rate = 1000.0 * trues / file1->sh->duration;
		if (trues == sum)
			fprintf (stdout, "%3d %6d %6.3f %9d %10ld %12ld   %12.1f\n", frm, file1->sh->duration,
				 file1->sh->deadtime_corr, file1->sh->total, trues, sum, rate);
		else
			fprintf (stdout, "%3d %6d %6.3f %9d %10ld %12ld **%12.1f\n", frm, file1->sh->duration,
				 file1->sh->deadtime_corr, file1->sh->total, trues, sum, rate);
	}

	close_imgfile (file1);
	free_imgfile (file1);
	free (sino);
	return (OK);
}
@


1.1
log
@Initial revision
@
text
@d1 4
a4 1
/*	$Log$ */
d12 1
d14 1
a14 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/chksino7/RCS/chksino7.c,v 1.6 2000/09/06 19:29:36 tom Exp $";
@
