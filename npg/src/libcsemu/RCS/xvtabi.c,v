head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	99.12.13.19.12.55;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	94.02.09.16.23.09;	author tom;	state Exp;
branches;
next	;


desc
@original
@


1.2
log
@clean with lint
@
text
@#ifdef EMUVERSION
void            emu_xvtabi_ (y, a, u, b, v, ny, nv)
#else
void            xvtabi_ (y, a, u, b, v, ny, nv)
#endif						 /* EMUVERSION */
	float           y[], *a, u[], *b, v[];
	long           *ny, *nv;
{
	long            i, j;
	float           p, f;
	float          *yy, *uu;

	yy = y - 1;
	uu = u - 1;

	for (i = 0; i < *ny; i++) {
		p = *a * *++uu + *b;
		if (p <= 0.0)
			*++yy = v[0];
		else if (p >= *nv - 1)
			*++yy = v[*nv - 1];
		else {
			j = (long) p;
			f = p - j;
			*++yy = (1.0 - f) * v[j] + f * v[j + 1];
		}
	}
}

/*********************************************************************/
@


1.1
log
@Initial revision
@
text
@a0 2
#include "qcemulib.h"

d2 1
a2 1
void emu_xvtabi_ (y, a, u, b, v, ny, nv)
d4 8
a11 8
void xvtabi_ (y, a, u, b, v, ny, nv)
#endif /* EMUVERSION */
    float y[], *a, u[], *b, v[];
    long *ny, *nv;
    {
    long i, j;
    float p, f;
    float *yy, *uu;
d13 2
a14 1
    yy = y - 1; uu = u - 1;
d16 11
a26 13
    for (i=0; i< *ny; i++)
	{
	p = *a * *++uu + *b;
	if (p <= 0.0) 
	    *++yy = v[0];
        else if (p >= *nv-1) 
	    *++yy = v[*nv-1];
	else
	    {
	    j = (long)p;
	    f = p - j;
	    *++yy = (1.0-f) * v[j] + f * v[j+1];
	    }
d28 2
a29 1
    }
a30 1

@
