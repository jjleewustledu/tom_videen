head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	99.12.13.19.12.55;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	94.02.09.16.23.09;	author tom;	state Exp;
branches;
next	;


desc
@original
@


1.2
log
@clean with lint
@
text
@#include "qcemulib.h"

static void	xfeof (y,a,ny)

complex y[];
float   *a;
long    *ny;
{
 float  ang, pi = atan(1.0)*4.0;
 complex temp1, temp2, w;
 complex cbuf, two; 
 long   i, ii;

 two.r = 2.0; two.i = 0.0;
 *a = 2.0 * (y[0].r - y[0].i);
 y[0].r = 2.0 * (y[0].r + y[0].i);
 y[0].i = 0.0;
 conjg(cbuf, y[*ny/2]);
 cmul(y[*ny/2], two, cbuf);

 for (i=0; i < *ny/2-1; i++) {
      ii = *ny - i - 2;
      conjg(cbuf, y[ii+1]);
      cadd(temp1, cbuf, y[i+1]);
      ang = (i+1) * pi / *ny;
      w.r = sin(ang);
      w.i = cos(ang);
      csub(temp2, cbuf, y[i+1]);
      cmul(temp2, w, temp2);
      csub(cbuf, temp1, temp2);
      conjg(y[ii+1], cbuf);
      cadd(y[i+1], temp1, temp2);
      }
}

/*********************************************************************/

#ifdef  EMUVERSION
void  emu_xfrf_ (y,a,u,ny)

complex y[];
float   *a, u[];
long    *ny;
{
 emu_xfcf_ (y,u,ny);
 xfeof (y,a,ny);
}
  
#else
void  xfrf_ (y,a,u,ny)

complex y[];
float   *a, u[];
long    *ny;
{
	void	xfcf_();
	xfcf_ (y,u,ny);
	xfeof (y,a,ny);
}
#endif /* EMUVERSION */

/*********************************************************************/

@


1.1
log
@Initial revision
@
text
@d3 1
a3 2
#ifdef  EMUVERSION
void  emu_xfrf_ (y,a,u,ny)
a5 24
float   *a, u[];
long    *ny;
{
 emu_xfcf_ (y,u,ny);
 xfeof (y,a,ny);
}
  
#else
void  xfrf_ (y,a,u,ny)

complex y[];
float   *a, u[];
long    *ny;
{
 xfcf_ (y,u,ny);
 xfeof (y,a,ny);
}
#endif /* EMUVERSION */

/*********************************************************************/

xfeof (y,a,ny)

complex y[];
d37 26
@
