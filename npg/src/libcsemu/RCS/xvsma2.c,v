head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	99.12.13.19.12.55;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	94.02.09.16.23.09;	author tom;	state Exp;
branches;
next	;


desc
@original
@


1.2
log
@clean with lint
@
text
@#ifdef  EMUVERSION
void            emu_xvsma2_ (y, a, u, b, v, c, ny)
#else
void            xvsma2_ (y, a, u, b, v, c, ny)
#endif						 /* EMUVERSION */

	float           y[], u[], v[], *a, *b, *c;
	long           *ny;
{
	register long   i;
	register float *yy;
	register float *uu;
	register float *vv;
	register float  aa = *a;
	register float  bb = *b;
	register float  cc = *c;
	register long   n = *ny / 2;

/* *ny must be even */
	for (i = 0, yy = y - 1, uu = u - 1, vv = v - 1; i < n; i++) {
		*++yy = (aa * *++uu) + (bb * *++vv) + cc;
		*++yy = (aa * *++uu) + (bb * *++vv) + cc;
	}
}

/*********************************************************************/
@


1.1
log
@Initial revision
@
text
@a0 2
#include "qcemulib.h"

d2 1
a2 1
void  emu_xvsma2_ (y,a,u,b,v,c,ny)
d4 2
a5 2
void  xvsma2_ (y,a,u,b,v,c,ny)
#endif /* EMUVERSION */
d7 2
a8 2
float   y[], u[], v[], *a, *b, *c;
long    *ny;
d10 8
a17 8
 register long   i;
 register float *yy;
 register float *uu;
 register float *vv;
 register float aa = *a;
 register float bb = *b;
 register float cc = *c;
 register long n = *ny / 2;
d20 4
a23 5
 for (i=0, yy=y - 1, uu=u - 1, vv=v - 1; i<n; i++)
      {
      *++yy = (aa * *++uu) + (bb * *++vv) + cc;
      *++yy = (aa * *++uu) + (bb * *++vv) + cc;
      }
a26 1

@
