head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	99.12.13.19.12.55;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	94.02.09.16.23.09;	author tom;	state Exp;
branches;
next	;


desc
@original
@


1.2
log
@clean with lint
@
text
@#include "qcemulib.h"

#ifdef  EMUVERSION
void            emu_xcrmai_ (y, a, u, iyu, ia, ni, n)
#else
void            xcrmai_ (y, a, u, iyu, ia, ni, n)
#endif						 /* EMUVERSION */

	long           *ni, *n;
	complex         y[], u[];
	float           a[];
	long            iyu[][2], ia[][2];
{
	long            i, k, iy, iu;
	float           aa;
	complex         t;

	for (i = 0; i < *ni; i++)
		for (k = 0, iy = iyu[i][0], iu = iyu[*ni + i][0], aa = a[ia[i][0]];
		     k < *n;
		     iy++, iu++, k++) {
			t.r = u[iu].r * aa;
			t.i = u[iu].i * aa;
			cadd (y[iy], y[iy], t);
		}
}

/*********************************************************************/
@


1.1
log
@Initial revision
@
text
@d4 1
a4 1
void  emu_xcrmai_ (y,a,u,iyu,ia,ni,n)
d6 2
a7 2
void  xcrmai_ (y,a,u,iyu,ia,ni,n)
#endif /* EMUVERSION */
d9 4
a12 4
long	*ni, *n;
complex y[], u[];
float	a[];
long    iyu[][2], ia[][2];
d14 3
a16 3
 long   i, k, iy, iu;
 float aa;
 complex t;
d18 8
a25 9
 for (i=0; i< *ni; i++)
     for (k=0, iy=iyu[i][0], iu=iyu[*ni+i][0], aa=a[ia[i][0]]; 
          k< *n; 
          iy++, iu++, k++)
         {
	 t.r = u[iu].r * aa;
	 t.i = u[iu].i * aa;
         cadd (y[iy], y[iy], t);
	 }
a28 1

@
