head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	99.12.13.19.12.55;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	94.02.09.16.23.09;	author tom;	state Exp;
branches;
next	;


desc
@original
@


1.2
log
@clean with lint
@
text
@#include "qcemulib.h"

#ifdef  EMUVERSION
void            emu_xcrma2_ (y, a, u, b, v, c, ny)
#else
void            xcrma2_ (y, a, u, b, v, c, ny)
#endif						 /* EMUVERSION */

	complex         y[], u[], v[];
	float          *a, *b, *c;
	long           *ny;
{
	register long   i;
	register complex *yy;
	register complex *uu;
	register complex *vv;
	register float  aa = *a;
	register float  bb = *b;
	register float  cc = *c;
	register long   n = *ny / 2;

	yy = y;
	uu = u;
	vv = v;

	for (i = 0, --yy, --uu, --vv; i < n; i++) {
		(++yy)->r = (aa * (++uu)->r) + (bb * (++vv)->r) + cc;
		yy->i = (aa * uu->i) + (bb * vv->i);
		(++yy)->r = (aa * (++uu)->r) + (bb * (++vv)->r) + cc;
		yy->i = (aa * uu->i) + (bb * vv->i);
	}
}

/*********************************************************************/
@


1.1
log
@Initial revision
@
text
@d4 1
a4 1
void  emu_xcrma2_ (y,a,u,b,v,c,ny)
d6 2
a7 2
void  xcrma2_ (y,a,u,b,v,c,ny)
#endif /* EMUVERSION */
d9 3
a11 3
complex y[], u[], v[];
float   *a, *b, *c;
long    *ny;
d13 8
a20 8
 register long   i;
 register complex *yy;
 register complex *uu;
 register complex *vv;
 register float aa = *a;
 register float bb = *b;
 register float cc = *c;
 register long   n = *ny / 2;
d22 3
a24 1
 yy = y; uu = u; vv = v;
d26 6
a31 7
 for (i=0, --yy, --uu, --vv; i<n; i++) 
      {
      (++yy)->r = (aa * (++uu)->r) + (bb * (++vv)->r) + cc;
      yy->i = (aa * uu->i) + (bb * vv->i);
      (++yy)->r = (aa * (++uu)->r) + (bb * (++vv)->r) + cc;
      yy->i = (aa * uu->i) + (bb * vv->i);
      }
a34 1

@
