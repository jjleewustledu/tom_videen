head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	99.12.13.19.12.55;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	94.02.09.16.23.09;	author tom;	state Exp;
branches;
next	;


desc
@original
@


1.2
log
@clean with lint
@
text
@#ifdef EMUVERSION
void            emu_xvmvgt_ (y, a, u, b, v, ny)
#else
void            xvmvgt_ (y, a, u, b, v, ny)
#endif						 /* EMUVERSION */
	float           y[], a[], u[], *b, v[];
	long           *ny;
{
	long            i;
	float          *yy, *uu, *vv;

	yy = y - 1;
	uu = u - 1;
	vv = v - 1;

	for (i = 0; i < *ny; i++)
		if (*++uu - *++vv > *b)
			*++yy = a[0] * *vv + a[1];
		else
			*++yy = a[2] * *uu + a[3];
}

/*********************************************************************/
@


1.1
log
@Initial revision
@
text
@a0 2
#include "qcemulib.h"

d2 1
a2 1
void emu_xvmvgt_ (y, a, u, b, v, ny)
d4 7
a10 7
void xvmvgt_ (y, a, u, b, v, ny)
#endif /* EMUVERSION */
    float y[], a[], u[], *b, v[];
    long *ny;
    {
    long i;
    float *yy, *uu, *vv;
d12 3
a14 1
    yy = y - 1; uu = u - 1; vv = v - 1;
d16 7
a22 6
    for (i=0; i< *ny; i++)
	if (*++uu - *++vv > *b)
	    *++yy = a[0]* *vv + a[1];
	else
	    *++yy = a[2]* *uu + a[3];
    }
a23 1

@
