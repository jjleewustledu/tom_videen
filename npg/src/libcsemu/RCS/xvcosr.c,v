head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	99.12.13.19.12.55;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	94.02.09.16.23.09;	author tom;	state Exp;
branches;
next	;


desc
@original
@


1.2
log
@clean with lint
@
text
@#include "qcemulib.h"

#ifdef  EMUVERSION
void            emu_xvcosr_ (y, a, u, b, ny)
#else
void            xvcosr_ (y, a, u, b, ny)
#endif						 /* EMUVERSION */

	float           y[], u[], *a, *b;
	long           *ny;
{
	long            i;
	double          twopi = atan (1.0) * 8.0;
	float           temp, frac;
	float          *yy, *uu;

	yy = y;
	uu = u;

	for (i = 0, --yy, --uu; i < *ny; i++) {
		temp = fabs ((*a * (*++uu) + *b) / twopi);
		frac = temp - (long) temp;
		if ((0.25 - frac) > (frac - 0.75))
			*++yy = 0.25 - frac;
		else
			*++yy = frac - 0.75;
	}
}

/*********************************************************************/
@


1.1
log
@Initial revision
@
text
@d4 1
a4 1
void  emu_xvcosr_ (y,a,u,b,ny)
d6 5
a10 5
void  xvcosr_ (y,a,u,b,ny)
#endif /* EMUVERSION */
     
     float   y[], u[], *a, *b;
     long    *ny;
d12 4
a15 4
  long   i;
  double twopi = atan (1.0) * 8.0;
  float temp, frac, w, z;
  float  *yy, *uu;
d17 11
a27 12
      yy = y;
      uu = u; 
  
  for (i=0, --yy, --uu; i < *ny; i++)
      {
      temp = fabs ((*a * (*++uu)+ *b) / twopi);
      frac = temp - (long)temp;
      if ((0.25-frac) > (frac-0.75))
	  *++yy = 0.25 - frac;
      else
	  *++yy = frac - 0.75;
      }
@
