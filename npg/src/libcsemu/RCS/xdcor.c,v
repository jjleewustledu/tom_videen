head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	99.12.13.19.12.55;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	94.02.09.16.23.09;	author tom;	state Exp;
branches;
next	;


desc
@original
@


1.2
log
@clean with lint
@
text
@#ifdef  EMUVERSION
void            emu_xdcor_ (y, u, v, ny, nv)
#else
void            xdcor_ (y, u, v, ny, nv)
#endif						 /* EMUVERSION */

	float           y[], u[], v[];
	long           *ny, *nv;
{
	long            i, j;

	for (i = 0; i < *ny; i++)
		for (j = 0, y[i] = 0; j < *nv; j++)
			y[i] = y[i] + (u[i + j] * v[j]);
}

/*********************************************************************/
@


1.1
log
@Initial revision
@
text
@a0 2
#include "qcemulib.h"

d2 1
a2 1
void  emu_xdcor_ (y,u,v,ny,nv)
d4 2
a5 2
void  xdcor_ (y,u,v,ny,nv)
#endif /* EMUVERSION */
d7 2
a8 2
float   y[], u[], v[];
long    *ny, *nv;
d10 1
a10 1
 long   i, j;
d12 3
a14 3
 for (i=0; i < *ny; i++)
      for (j=0, y[i]=0; j < *nv; j++) 
           y[i] = y[i] + (u[i+j] * v[j]);
a17 1

@
