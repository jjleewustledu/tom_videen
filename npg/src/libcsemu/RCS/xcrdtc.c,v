head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	99.12.13.19.12.55;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	94.02.09.16.23.09;	author tom;	state Exp;
branches;
next	;


desc
@original
@


1.2
log
@clean with lint
@
text
@#include "qcemulib.h"

#ifdef  EMUVERSION
void            emu_xcrdtc_ (a, u, b, v, nu)
#else
void            xcrdtc_ (a, u, b, v, nu)
#endif						 /* EMUVERSION */

	complex        *a, u[], v[];
	float          *b;
	long           *nu;
{
	complex         temp, t;
	long            i;

	a->r = 0.0;
	a->i = 0.0;
	for (i = 0; i < *nu; i++) {
		conjg (t, u[i]);
		cmul (temp, t, v[i]);
		cadd (*a, *a, temp);
	}
	a->r *= *b;
	a->i *= *b;
}

/*********************************************************************/
@


1.1
log
@Initial revision
@
text
@d4 1
a4 1
void  emu_xcrdtc_ (a,u,b,v,nu)
d6 2
a7 2
void  xcrdtc_ (a,u,b,v,nu)
#endif /* EMUVERSION */
d9 3
a11 3
complex *a, u[], v[];
float	*b;
long    *nu;
d13 2
a14 2
 complex temp, t;
 long   i;
d16 9
a24 9
 a->r = 0.0;
 a->i = 0.0;
 for (i=0; i < *nu; i++) {
      conjg(t, u[i]);
      cmul (temp, t, v[i]);
      cadd (*a, *a, temp);
    }
 a->r *= *b;
 a->i *= *b;
d26 1
a26 1
    
a27 1

@
