head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	99.12.13.19.12.55;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	94.02.09.16.23.09;	author tom;	state Exp;
branches;
next	;


desc
@original
@


1.2
log
@clean with lint
@
text
@#ifdef  EMUVERSION
void            emu_xdfl22_ (y, a, u, b, ny)
#else
void            xdfl22_ (y, a, u, b, ny)
#endif						 /* EMUVERSION */

	float           y[], u[], a[], b[];
	long           *ny;
{
	long            i;

	y[0] = u[0] + (float) ((float) ((float) (a[0] * b[3]) + (float) (a[1] * b[2])) -
			       (float) ((float) (a[2] * b[1]) + (float) (a[3] * b[0])));
	y[1] = u[1] + (float) ((float) ((float) (a[0] * u[0]) + (float) (a[1] * b[3])) -
			       (float) ((float) (a[2] * y[0]) + (float) (a[3] * b[1])));

	for (i = 2; i < *ny; i++)
		y[i] = u[i] + (float) ((float) ((float) (a[0] * u[i - 1]) + (float) (a[1] * u[i - 2])) -
				 (float) ((float) (a[2] * y[i - 1]) + (float) (a[3] * y[i - 2])));

	b[0] = y[*ny - 2];
	b[1] = y[*ny - 1];
	b[2] = u[*ny - 2];
	b[3] = u[*ny - 1];
}

/*********************************************************************/
@


1.1
log
@Initial revision
@
text
@a0 2
#include "qcemulib.h"

d2 1
a2 1
void  emu_xdfl22_ (y,a,u,b,ny)
d4 5
a8 5
     void  xdfl22_ (y,a,u,b,ny)
#endif /* EMUVERSION */
     
     float   y[], u[], a[], b[];
     long    *ny;
d10 1
a10 6
  long   i;
  
  y[0] = u[0] + (float)((float)((float)(a[0]*b[3]) + (float)(a[1]*b[2])) - 
	 	(float)((float)(a[2]*b[1]) + (float)(a[3]*b[0])));
  y[1] = u[1] + (float)((float)((float)(a[0]*u[0]) + (float)(a[1]*b[3])) - 
		(float)((float)(a[2]*y[0]) + (float)(a[3]*b[1])));
d12 4
a15 3
  for (i=2; i < *ny; i++)
   y[i] = u[i] + (float)((float)((float)(a[0]*u[i-1]) + (float)(a[1]*u[i-2])) - 
		  (float)((float)(a[2]*y[i-1]) + (float)(a[3]*y[i-2])));
d17 8
a24 4
  b[0] = y[*ny-2];
  b[1] = y[*ny-1];
  b[2] = u[*ny-2];
  b[3] = u[*ny-1];
a27 1

@
