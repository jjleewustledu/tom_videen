head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	99.12.13.19.12.55;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	94.02.09.16.23.09;	author tom;	state Exp;
branches;
next	;


desc
@original
@


1.2
log
@clean with lint
@
text
@#include "qcemulib.h"

#ifdef  EMUVERSION
void            emu_xvsinr_ (y, a, u, b, ny)
#else
void            xvsinr_ (y, a, u, b, ny)
#endif						 /* EMUVERSION */

	float           y[], u[], *a, *b;
	long           *ny;
{
	long            i;
	double          twopi = atan (1.0) * 8.0;
	float           temp, x1, w, z;
	float          *yy, *uu;

	yy = y - 1;
	uu = u - 1;

	for (i = 0; i < *ny; i++) {
		x1 = (*a * *++uu + *b) / twopi;
		temp = fabs (x1) - (long) (fabs (x1));
		if (temp < (.5 - temp))
			z = temp;
		else
			z = .5 - temp;
		if (z > (temp - 1.0))
			w = z;
		else
			w = temp - 1.0;
		if (x1 < 0)
			*++yy = -w;
		else
			*++yy = w;
	}
}

/*********************************************************************/
@


1.1
log
@Initial revision
@
text
@d4 1
a4 1
void  emu_xvsinr_ (y,a,u,b,ny)
d6 5
a10 5
void  xvsinr_ (y,a,u,b,ny)
#endif /* EMUVERSION */
     
     float   y[], u[], *a, *b;
     long    *ny;
d12 4
a15 6
  long   i;
  double twopi = atan (1.0) * 8.0;
  float temp, x1, w, z;
  float *yy, *uu;
  
  yy = y -1; uu = u -1;
d17 19
a35 17
  for (i=0; i < *ny; i++)
      {
      x1 = (*a * *++uu + *b) / twopi;
      temp = fabs (x1) - (long)(fabs (x1));
      if (temp < (.5-temp))
	  z = temp;
      else
	  z = .5 - temp;
      if (z > (temp-1.0))
	  w = z;
      else
	  w = temp - 1.0;
      if (x1 < 0)
	  *++yy = -w;
      else
	  *++yy = w;
      }
@
