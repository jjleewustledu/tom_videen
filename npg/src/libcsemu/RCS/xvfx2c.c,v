head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	99.12.13.19.12.55;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	94.02.09.16.23.09;	author tom;	state Exp;
branches;
next	;


desc
@original
@


1.2
log
@clean with lint
@
text
@#ifdef  EMUVERSION
void            emu_xvfx2c_ (y, a, u, b, ny)
#else
void            xvfx2c_ (y, a, u, b, ny)
#endif						 /* EMUVERSION */

	float           u[], *a, *b;
	short           y[];
	long           *ny;
{
	long            i, iy;
	float           c;

	for (i = 0, iy = 0; i < *ny; i += 2, iy += 2) {
		c = *a * u[i] + *b;
		y[iy] = c;
		if (c < 0 && y[iy] != c)
			y[iy] -= 1;

		c = *a * u[i + 1] + *b;
		y[iy + 1] = c;
		if (c < 0 && y[iy + 1] != c)
			y[iy + 1] -= 1;
	}
}
@


1.1
log
@Initial revision
@
text
@a0 2
#include "qcemulib.h"

d2 1
a2 1
void  emu_xvfx2c_ (y,a,u,b,ny)
d4 6
a9 6
     void  xvfx2c_ (y,a,u,b,ny)
#endif /* EMUVERSION */
     
     float   u[], *a, *b;
     short   y[];
     long    *ny;
d11 2
a12 7
  long   i, iy;
  float c;
  
  for (i=0, iy=0; i < *ny; i+=2, iy+=2)  {
    c = *a * u[i] + *b; 
    y[iy] = c;
    if (c < 0 && y[iy] != c) y[iy] -= 1;
d14 11
a24 4
    c = *a * u[i+1] + *b;
    y[iy+1] = c;
    if (c < 0 && y[iy+1] !=c) y[iy+1] -= 1;
  }
a25 2


@
