head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	99.12.13.19.12.55;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	94.02.09.16.23.09;	author tom;	state Exp;
branches;
next	;


desc
@original
@


1.2
log
@clean with lint
@
text
@#include "qcemulib.h"

#ifdef  EMUVERSION
void            emu_xvsinp_ (y, u, ny)
#else
void            xvsinp_ (y, u, ny)
#endif						 /* EMUVERSION */
	float           y[], u[];
	long           *ny;
{
	register long   i;
	register double twopi = atan (1.0) * 8.0;
	register float *yy;
	register float *uu;
	register long   n = *ny / 8;

	for (i = 0, yy = y - 1, uu = u - 1; i < n; i++) {
		*++yy = sin (twopi * *++uu);
		*++yy = sin (twopi * *++uu);
		*++yy = sin (twopi * *++uu);
		*++yy = sin (twopi * *++uu);

		*++yy = sin (twopi * *++uu);
		*++yy = sin (twopi * *++uu);
		*++yy = sin (twopi * *++uu);
		*++yy = sin (twopi * *++uu);
	}
}

/*********************************************************************/
@


1.1
log
@Initial revision
@
text
@d4 1
a4 1
void  emu_xvsinp_ (y,u,ny)
d6 4
a9 4
void  xvsinp_ (y,u,ny)
#endif /* EMUVERSION */
     float   y[], u[];
     long    *ny;
d11 5
a15 12
  register long   i;
  register double twopi = atan (1.0) * 8.0;
  register float *yy;
  register float *uu;
  register long n = *ny / 8;
  
  for (i=0, yy=y - 1, uu=u - 1; i<n; i++)
      {
      *++yy = sin (twopi * *++uu);
      *++yy = sin (twopi * *++uu);
      *++yy = sin (twopi * *++uu);
      *++yy = sin (twopi * *++uu);
d17 11
a27 5
      *++yy = sin (twopi * *++uu);
      *++yy = sin (twopi * *++uu);
      *++yy = sin (twopi * *++uu);
      *++yy = sin (twopi * *++uu);
      }
@
