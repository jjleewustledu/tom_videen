head	1.4;
access;
symbols;
locks; strict;
comment	@ * @;


1.4
date	2004.02.16.19.31.02;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	2002.11.26.22.34.41;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	2000.09.06.19.32.44;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	96.12.09.22.44.48;	author tom;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Feb 2004
@
text
@/* $Log: invertimg.c,v $
 * Revision 1.3  2002/11/26  22:34:41  tom
 * *** empty log message ***
 *
 * Revision 1.2  2000/09/06  19:32:44  tom
 * strcpy filename
 *
 * Revision 1.1  1996/12/09  22:44:48  tom
 * Initial revision
 * */
/*	=========================================================================
 *	Module:			invertimg.c
 *	Author:			Tom Videen
 *	Description:	Invert all pixel values in an image
 *	=========================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Id: invertimg.c,v 1.3 2002/11/26 22:34:41 tom Exp tom $";
#endif

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <image.h>
#include <libimage.h>
#include <nrutil.h>
#include <libnrimg.h>

main (argc, argv)
/*@@unused@@*/
	int             argc;
	char           *argv[];
{
	ImageFile      *file;
	Index           indx;
	char           *infilename;		 /* input filename */
	char           *outfilename;	 /* output filename */
	int             i, j, k;
	long            dim[3];			 /* dimensions of tensors */
	float        ***image = NULL;	 /* primary image tensor */

/*
 *	Get command line arguments.
 */
	infilename = argv[1];
	outfilename = argv[2];
	indx.frm = 1;
	indx.pln = 1;
	indx.gate = 1;
	indx.data = 0;
	indx.bed = 0;

/*
 *	Read image 
 */

	file = make_imgfile (infilename);
	if (open_imgfile (file) == ERROR) {
		fprintf (stderr, "ERROR [invertimg]: Cannot open %s\n", infilename);
		return (ERROR);
	}
	if (get_mh (file) == ERROR) {
		fprintf (stderr, "ERROR [invertimg]: Cannot get MainHeader from %s\n", infilename);
		return (ERROR);
	}
	if (get_sh (file, &indx) == ERROR) {
		fprintf (stderr, "ERROR [invertimg]: Cannot read file subheader in %s\n", infilename);
		return (ERROR);
	}
	dim[0] = (long) file->sh->dim1;
	dim[1] = (long) file->sh->dim2;
	dim[2] = (long) file->sh->dim3;
	if (dim[0] != dim[1]) {
		fprintf (stderr, "ERROR [invertimg]: X and Y dimensions are not equal\n");
		return (ERROR);
	}
	if ((image = readtensor (file, &indx)) == NULL) {
		fprintf (stderr, "ERROR [invertimg]: Cannot read %s\n", infilename);
		return (ERROR);
	}
	for (i = 1; i <= dim[2]; i++)
		for (j = 1; j <= dim[1]; j++)
			for (k = 1; k <= dim[0]; k++)
               	image[i][j][k] = -image[i][j][k];

/*	Write the inverted image */

	printf ("Writing inverted image %s\n", outfilename);
	close_imgfile (file);
	(void) strcpy (file->name, outfilename);
	(void) strcpy (file->mode, "w");
	if (open_imgfile (file) == ERROR) {
		fprintf (stderr, "ERROR [invertimg]: Cannot open %s\n", outfilename);
		return (ERROR);
	}
	if (put_mh (file) == ERROR) {
		fprintf (stderr, "ERROR [invertimg]: Cannot write %s\n", outfilename);
		return (ERROR);
	}
	if (writetensor (file, &indx, image) == ERROR) {
		fprintf (stderr, "ERROR [invertimg]: Cannot write %s\n", outfilename);
		return (ERROR);
	}
	free_imgfile (file);
	return (OK);
}
@


1.3
log
@*** empty log message ***
@
text
@d2 3
d17 1
d19 1
a19 1
static char     rcsid[] = "$Id: invertimg.c,v 1.2 2000/09/06 19:32:44 tom Exp tom $";
d31 1
d91 2
a92 2
	strcpy (file->name, outfilename);
	strcpy (file->mode, "w");
@


1.2
log
@strcpy filename
@
text
@d2 3
d15 1
a15 1
static char     rcsid[] = "$Id: invertimg.c,v 1.1 1996/12/09 22:44:48 tom Exp tom $";
a22 1
#include <nr.h>
a24 1
#include <imgutil.h>
@


1.1
log
@Initial revision
@
text
@d1 4
a4 1
/* $Log$ */
d12 1
a12 1
static char     rcsid[] = "$Id: invertimg.c,v 1.1 1996/11/14 21:18:55 tom Exp $";
d85 1
a85 2
	free (file->name);
	file->name = outfilename;
@
