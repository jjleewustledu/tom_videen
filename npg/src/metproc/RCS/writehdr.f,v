head	2.31;
access;
symbols;
locks; strict;
comment	@c @;


2.31
date	2008.09.04.14.59.31;	author tom;	state Exp;
branches;
next	2.27;

2.27
date	2005.08.08.16.27.56;	author tom;	state Exp;
branches;
next	2.26;

2.26
date	2004.11.03.15.31.15;	author tom;	state Exp;
branches;
next	2.25;

2.25
date	2004.11.03.14.20.17;	author tom;	state Exp;
branches;
next	2.24;

2.24
date	2004.11.02.16.37.24;	author tom;	state Exp;
branches;
next	2.21;

2.21
date	2004.07.08.14.41.37;	author tom;	state Exp;
branches;
next	2.20;

2.20
date	2004.02.17.14.13.40;	author tom;	state Exp;
branches;
next	2.8;

2.8
date	2004.02.17.14.11.41;	author tom;	state Exp;
branches;
next	2.5;

2.5
date	2002.12.02.17.09.24;	author tom;	state Exp;
branches;
next	2.4;

2.4
date	2001.06.01.18.48.41;	author tom;	state Exp;
branches;
next	2.3;

2.3
date	99.12.16.16.29.59;	author tom;	state Exp;
branches;
next	2.2;

2.2
date	99.12.16.15.27.47;	author tom;	state Exp;
branches;
next	2.1;

2.1
date	93.07.15.20.25.17;	author tom;	state Exp;
branches;
next	2.0;

2.0
date	93.07.12.23.13.24;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	92.10.19.15.56.10;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	92.10.16.22.32.51;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	92.05.12.21.33.47;	author tom;	state Exp;
branches;
next	;


desc
@Initial Unix version using libpetutil and libpe.
@


2.31
log
@no change
@
text
@c $Log: writehdr.f,v $
c Revision 2.27  2005/08/08  16:27:56  tom
c add pie Aug 2005
c
c Revision 2.26  2004/11/03  15:31:15  tom
c prompt with ho1 image
c
c Revision 2.25  2004/11/03  14:20:17  tom
c add getpie_961
c
c Revision 2.24  2004/11/02  16:37:24  tom
c select 961 pies from scandate, software version, acquisition
c
c Revision 2.21  2004/07/08  14:41:37  tom
c modify getpie for 961 versions
c
c Revision 2.20  2004/02/17  14:13:40  tom
c Feb 2004
c
c Revision 2.8  2004/02/17  14:11:41  tom
c Feb 2004
c
c Revision 2.5  2002/12/02  17:09:24  tom
c modifications for gcc
c
c Revision 2.4  2001/06/01  18:48:41  tom
c ntype = 7 for steady-state oxygen
c
c Revision 2.3  1999/12/16  16:29:59  tom
c fix date bug
c
c Revision 2.2  1999/12/16  15:27:47  tom
c clean up
c
c Revision 2.1  1993/07/15  20:25:17  tom
c Changed RCSHEADER to ID
c
c Revision 2.0  1993/07/12  23:13:24  tom
c Handles ECAT image format
c
c Revision 1.3  1992/10/19  15:56:10  tom
c modified RCSHEADER length
c
c Revision 1.2  1992/10/16  22:32:51  tom
c added RCSHEADER
c
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  Subroutine:   WRITEHDR.FTN
C  Author:       Tom O. Videen
C  Date:         14-May-87
C  Written for:  METPROC
C  Intent:
C     This subroutine writes creates an .HDR file with metabolic
C     constants.  See HDRFORM for values in this file.
C
C  History:
C     Modified 06-Dec-88 by TOV to correct bug in opening a non-default
C        HDR file.
C     Modified 27-Mar-89 by TOV to write PIESLOPE and EFACTOR to HDR file.
C     Modified for UNIX 6-Feb-92 TOV
C       RINDEX, LNBLNK used for string manipulation
C       HDRNAME changed to character*256 and passed
C       RECL=256 eliminated from OPEN
C       INTDATE replaced by IDATE
C       use ieee2pe to convert all real no's in header
C      Modified for fastproc 17-Feb-92 TOV to eliminate some user output.
C      Modified to run with libpetutil 11-May-92 TOV.
C      Modified May 2001 TOV for steady-state oxygen
C
C  Variables Passed:
C     DISK = logical unit assigned for scan file I/O;
C
C  Variables:
C     OUT = array used to write HDR files;
C     HEAD* = values equivalenced with elements in OUT array header;
C     HDRNAME = name of HDR file;
C
C  Common Blocks:
C     /USRIO/
C     /BLOOD/
C     /SCANS/
C
C  Uses Subroutines:
C     ieee2pe
C     GTSTRING
C     IDATE
C     
C  Called by:  METPROC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

      SUBROUTINE WRITEHDR(DISK,EFACTOR,HDRNAME)

      INTEGER*4     DISK,DATE(3),IOWRITE,NBYTES,L1,L2,I,RINDEX
      INTEGER*2     OUT(128),HEAD4,HEAD5,HEAD8,HEAD9,HEAD12,HEAD13
      INTEGER*4     HEAD15,HEAD16,HEAD17,HEAD18,HEAD19,HEAD20,HEAD21,
     &              HEAD22,HEAD23,HEAD24,HEAD25,HEAD26,HEAD27,HEAD28,
     &              HEAD29,HEAD30,HEAD31,HEAD32,HEAD33,HEAD34,HEAD35,
     &              HEAD36,HEAD37,HEAD38,HEAD39,HEAD40,HEAD41,HEAD42,
     &              HEAD43,HEAD44
      INTEGER*4     ieee2pe
      REAL*4        EFACTOR
      CHARACTER*2   DD,MM,YY
      CHARACTER*4   HEAD11
      CHARACTER*8   HEAD2,HEAD3,HEAD10,HEAD14,PROCDATE,SHORTDATE
      CHARACTER*10  HEAD6
      CHARACTER*12  HEAD7
      CHARACTER*14  HEAD1
      CHARACTER*256 HDRNAME
      CHARACTER*80  Q, STR
      CHARACTER*256 RCSHEADER

      EQUIVALENCE (OUT(1),  HEAD1),
     &            (OUT(8),  HEAD2),
     &            (OUT(12), HEAD3),
     &            (OUT(16), HEAD4),
     &            (OUT(17), HEAD5),
     &            (OUT(18), HEAD6),
     &            (OUT(23), HEAD7),
     &            (OUT(29), HEAD8),
     &            (OUT(30), HEAD9),
     &            (OUT(31), HEAD10)
      EQUIVALENCE (OUT(35), HEAD11),
     &            (OUT(37), HEAD12),
     &            (OUT(38), HEAD13),
     &            (OUT(39), HEAD14),
     &            (OUT(43), HEAD15),
     &            (OUT(45), HEAD16),
     &            (OUT(47), HEAD17),
     &            (OUT(49), HEAD18),
     &            (OUT(51), HEAD19)
      EQUIVALENCE (OUT(53), HEAD20),
     &            (OUT(55), HEAD21),
     &            (OUT(57), HEAD22),
     &            (OUT(59), HEAD23),
     &            (OUT(61), HEAD24),
     &            (OUT(63), HEAD25),
     &            (OUT(65), HEAD26),
     &            (OUT(67), HEAD27)
      EQUIVALENCE (OUT(69), HEAD28),
     &            (OUT(71), HEAD29),
     &            (OUT(73), HEAD30),
     &            (OUT(75), HEAD31),
     &            (OUT(77), HEAD32),
     &            (OUT(79), HEAD33),
     &            (OUT(81), HEAD34),
     &            (OUT(83), HEAD35),
     &            (OUT(85), HEAD36)
      EQUIVALENCE (OUT(87), HEAD37),
     &            (OUT(89), HEAD38),
     &            (OUT(91), HEAD39),
     &            (OUT(93), HEAD40),
     &            (OUT(95), HEAD41),
     &            (OUT(97), HEAD42),
     &            (OUT(99), HEAD43),
     &            (OUT(101),HEAD44)

      external ieee2pe !$pragma C (ieee2pe)

      INCLUDE 'metproc.inc'
      DATA IOWRITE,NBYTES  /56,256/
      RCSHEADER = "$Id: writehdr.f,v 2.27 2005/08/08 16:27:56 tom Exp tom $"

C  Open HDR file

      OPEN(DISK,FILE=HDRNAME,STATUS='OLD',ERR=110)
      WRITE(USEROUT,*) '>>> Replacing ',HDRNAME(:LNBLNK(HDRNAME))
      CLOSE(DISK,STATUS='DELETE')
110   OPEN(DISK,FILE=HDRNAME,STATUS='NEW',ERR=120)
      GO TO 200
120   WRITE(USEROUT,*) '>>> ERROR: Unable to open ',HDRNAME(:LNBLNK(HDRNAME))
      Q = 'File name to use (with extension)'
      STR = HDRNAME
      CALL GTSTRING(Q,STR)
      HDRNAME = STR
      GO TO 110

8000  FORMAT(I2)
200   CALL IDATE(DATE)
      WRITE(DD,8000) DATE(1)
      WRITE(MM,8000) DATE(2)
      WRITE(YY,8000) DATE(3) - ((DATE(3)/100)*100)
      PROCDATE = MM//'/'//DD//'/'//YY
      SHORTDATE = SCANDATE(1:6)//SCANDATE(9:10)

      DO 300 I=1,128
         OUT(I) = 0
300   CONTINUE

C  Insert Coefficients into Header

      HEAD1 = SCANNER
      HEAD2 = SCANNAME
      HEAD3 = SHORTDATE
      HEAD4 = SLICES
      HEAD5 = SCANTIME
      HEAD6 = COMPOUND
      HEAD7 = FILTER
      HEAD8 = INT(RCONTYPE)
      HEAD9 = INT(RESOLUTION)
      HEAD10 = PROCDATE
      HEAD11 = INITIALS
      HEAD12 = NTYPE
      HEAD13 = 0                  ! unused
      HEAD14 = ' '
      L1 = RINDEX(PIENAME,'/') + 1
      L2 = RINDEX(PIENAME,'.') - 1
      IF (L1.GT.1) THEN
         IF (L2.GT.L1) THEN
            HEAD14 = PIENAME(L1:L2)
         ELSE
            HEAD14 = PIENAME(L1:LNBLNK(PIENAME))
         END IF
      ELSE
         IF (L2.GT.0) THEN
            HEAD14 = PIENAME(1:L2)
         ELSE
            HEAD14 = PIENAME(1:LNBLNK(PIENAME))
         END IF
      END IF

      HEAD15 = ieee2pe(TOTALCNTS)
      HEAD16 = ieee2pe(SCANCNTS)
      HEAD17 = ieee2pe(SCANST)
      HEAD18 = ieee2pe(SCANLEN)
      HEAD19 = ieee2pe(FRAMELEN)
      HEAD20 = ieee2pe(TAU)
      HEAD21 = ieee2pe(PETTCONV(1))
      HEAD32 = ieee2pe(PETTCONV(2))
      IF (NTYPE.EQ.1 .OR. NTYPE.EQ.7) THEN
         HEAD25 = ieee2pe(AOXYGEN(1))
         HEAD26 = ieee2pe(BOXYGEN(1))
         HEAD27 = ieee2pe(AWATER(1))
         HEAD28 = ieee2pe(BWATER(1))
         HEAD29 = ieee2pe(O2CNTS(1))
         HEAD30 = ieee2pe(OXYCONT(1))
         HEAD36 = ieee2pe(AOXYGEN(2))
         HEAD37 = ieee2pe(BOXYGEN(2))
         HEAD38 = ieee2pe(AWATER(2))
         HEAD39 = ieee2pe(BWATER(2))
         HEAD40 = ieee2pe(O2CNTS(2))
         HEAD41 = ieee2pe(OXYCONT(2))
      ELSE IF (NTYPE.EQ.2 .OR. NTYPE.EQ.4) THEN
         HEAD22 = ieee2pe(AFLOW(1))
         HEAD23 = ieee2pe(BFLOW(1))
         HEAD33 = ieee2pe(AFLOW(2))
         HEAD34 = ieee2pe(BFLOW(2))
      ELSE IF (NTYPE.EQ.3) THEN
         HEAD24 = ieee2pe(BVFACTOR(1))
         HEAD35 = ieee2pe(BVFACTOR(2))
      ELSE IF (NTYPE.EQ.5 .OR. NTYPE.EQ.6) THEN
         HEAD31 = ieee2pe(PETTCONV(1)*EXP(TAU*0.5*(SCANST+SCANEND)))
         HEAD42 = ieee2pe(PETTCONV(2)*EXP(TAU*0.5*(SCANST+SCANEND)))
      ELSE IF (NTYPE.EQ.9) THEN
         HEAD29 = ieee2pe(O2CNTS(1))
         HEAD30 = ieee2pe(OXYCONT(1))
      END IF
      HEAD43 = ieee2pe(PIESLOPE)
      WRITE(USEROUT,*) 'EFACTOR = ',EFACTOR
      HEAD44 = ieee2pe(EFACTOR)
      CALL SYSIO(PB,IOWRITE,DISK,OUT,NBYTES,0)
      WRITE(USEROUT,*) 'HDR File = ',HDRNAME( : LNBLNK(HDRNAME))
      CLOSE(DISK)
      IF (NTYPE.EQ.9) CALL WRITETAB(DISK, HDRNAME)

      RETURN
      END
@


2.27
log
@add pie Aug 2005
@
text
@d2 3
d162 1
a162 1
      RCSHEADER = "$Id: writehdr.f,v 2.26 2004/11/03 15:31:15 tom Exp tom $"
@


2.26
log
@prompt with ho1 image
@
text
@d2 3
d159 1
a159 1
      RCSHEADER = "$Id: writehdr.f,v 2.25 2004/11/03 14:20:17 tom Exp tom $"
@


2.25
log
@add getpie_961
@
text
@d2 3
d156 1
a156 1
      RCSHEADER = "$Id: writehdr.f,v 2.24 2004/11/02 16:37:24 tom Exp tom $"
@


2.24
log
@select 961 pies from scandate, software version, acquisition
@
text
@d2 3
d153 1
a153 1
      RCSHEADER = "$Id: writehdr.f,v 2.21 2004/07/08 14:41:37 tom Exp tom $"
@


2.21
log
@modify getpie for 961 versions
@
text
@d2 3
d150 1
a150 1
      RCSHEADER = "$Id: writehdr.f,v 2.20 2004/02/17 14:13:40 tom Exp tom $"
@


2.20
log
@Feb 2004
@
text
@d2 3
d147 1
a147 1
      RCSHEADER = "$Id: writehdr.f,v 2.8 2004/02/17 14:11:41 tom Exp tom $"
@


2.8
log
@Feb 2004
@
text
@d2 3
d144 1
a144 1
      RCSHEADER = "$Id: writehdr.f,v 2.5 2002/12/02 17:09:24 tom Exp tom $"
@


2.5
log
@modifications for gcc
@
text
@d2 3
d141 1
a141 1
      RCSHEADER = "$Id: writehdr.f,v 2.4 2001/06/01 18:48:41 tom Exp tom $"
@


2.4
log
@ntype = 7 for steady-state oxygen
@
text
@d2 3
d138 1
a138 1
      RCSHEADER = "$Id: writehdr.f,v 2.3 1999/12/16 16:29:59 tom Exp tom $"
d230 3
d235 1
d240 2
@


2.3
log
@fix date bug
@
text
@d2 3
d34 6
a39 7
C
C      Modified for UNIX 6-Feb-92 TOV
C      	RINDEX, LNBLNK used for string manipulation
C      	HDRNAME changed to character*256 and passed
C      	RECL=256 eliminated from OPEN
C      	INTDATE replaced by IDATE
C      	use ieee2pe to convert all real no's in header
d42 1
d52 4
a55 1
C  Common Block Variables:
a56 29
C  /USRIO/
C     USEROUT = logical unit for user output;
C
C  /BLOOD/
C     OXYCONT = oxygen content of blood (ml/ml);
C
C  /SCANS/
C     NTYPE = type of scan file;
C     SCANST = start time of scan (sec);
C     SCANEND = end time of scan (sec);
C     SCANLEN = scan length (sec);
C     FRAMELEN = frame length (non-zero for 14-slice scans);
C     TAU = decay constant used for specified file (1/sec);
C     TOTALCNTS = Integral of blood counts from time of injection;
C     SCANCNTS = Integral of blood counts from start of scan;
C     O2CNTS = integral of blood oxygen counts from start of scan;
C     PETTCONV = PETT conversion factor;
C        (well counts * pixel)/(PETT no * ml)
C     INITIALS = initials of user;
C     SLICES = number of slices in image file;
C     SCANTIME = length of scan (seconds) read from file header;
C     RCONTYPE = reconstruction type;
C     SCANNAME = name of scan image file;
C     SCANDATE = date of scan (MM/DD/YY);
C     COMPOUND = compound used in scan;
C     FILTER = reconstruction filter;
C     SCANNER = scanner name (PETT VI, SUPER PETT IIH, etc);
C     RESOLUTION: 0 = low; 1 = high resolution scan;
C
d58 1
a58 5
C
C  C function:
C      ieee2pe
C
C  TERMINAL.LIB
a59 2
C
C  FORTRAN Runtime Library
d67 17
a83 17
      INTEGER*4    DISK,DATE(3),IOWRITE,NBYTES,L1,L2,I,RINDEX
      INTEGER*2    OUT(128),HEAD4,HEAD5,HEAD8,HEAD9,HEAD12,HEAD13
      INTEGER*4    HEAD15,HEAD16,HEAD17,HEAD18,HEAD19,HEAD20,HEAD21,
     2             HEAD22,HEAD23,HEAD24,HEAD25,HEAD26,HEAD27,HEAD28,
     3             HEAD29,HEAD30,HEAD31,HEAD32,HEAD33,HEAD34,HEAD35,
     4             HEAD36,HEAD37,HEAD38,HEAD39,HEAD40,HEAD41,HEAD42,
     5             HEAD43,HEAD44
      INTEGER*4	   ieee2pe
      REAL*4	   EFACTOR
      CHARACTER*2  DD,MM,YY
      CHARACTER*4  HEAD11
      CHARACTER*8  HEAD2,HEAD3,HEAD10,HEAD14,PROCDATE,SHORTDATE
      CHARACTER*10 HEAD6
      CHARACTER*12 HEAD7
      CHARACTER*14 HEAD1
      CHARACTER*256	HDRNAME
      CHARACTER*80 Q,STR
d87 9
a95 9
     2            (OUT(8),  HEAD2),
     3            (OUT(12), HEAD3),
     4            (OUT(16), HEAD4),
     5            (OUT(17), HEAD5),
     6            (OUT(18), HEAD6),
     7            (OUT(23), HEAD7),
     8            (OUT(29), HEAD8),
     9            (OUT(30), HEAD9),
     A            (OUT(31), HEAD10)
d97 8
a104 8
     2            (OUT(37), HEAD12),
     3            (OUT(38), HEAD13),
     4            (OUT(39), HEAD14),
     5            (OUT(43), HEAD15),
     6            (OUT(45), HEAD16),
     7            (OUT(47), HEAD17),
     8            (OUT(49), HEAD18),
     9            (OUT(51), HEAD19)
d106 7
a112 7
     2            (OUT(55), HEAD21),
     3            (OUT(57), HEAD22),
     4            (OUT(59), HEAD23),
     5            (OUT(61), HEAD24),
     6            (OUT(63), HEAD25),
     7            (OUT(65), HEAD26),
     8            (OUT(67), HEAD27)
d114 8
a121 8
     2            (OUT(71), HEAD29),
     3            (OUT(73), HEAD30),
     4            (OUT(75), HEAD31),
     5            (OUT(77), HEAD32),
     6            (OUT(79), HEAD33),
     7            (OUT(81), HEAD34),
     8            (OUT(83), HEAD35),
     9            (OUT(85), HEAD36)
d123 7
a129 7
     2            (OUT(89), HEAD38),
     3            (OUT(91), HEAD39),
     4            (OUT(93), HEAD40),
     5            (OUT(95), HEAD41),
     6            (OUT(97), HEAD42),
     7            (OUT(99), HEAD43),
     8            (OUT(101),HEAD44)
d135 1
a135 1
      RCSHEADER = "$Id: writehdr.f,v 2.2 1999/12/16 15:27:47 tom Exp tom $"
d160 1
a160 1
        OUT(I) = 0
d182 5
a186 5
      	IF (L2.GT.L1) THEN
      		HEAD14 = PIENAME(L1:L2)
      	ELSE
      		HEAD14 = PIENAME(L1:LNBLNK(PIENAME))
      	END IF
d188 5
a192 5
      	IF (L2.GT.0) THEN
      		HEAD14 = PIENAME(1:L2)
      	ELSE
      		HEAD14 = PIENAME(1:LNBLNK(PIENAME))
      	END IF
d203 13
a215 13
      IF (NTYPE.EQ.1) THEN
        HEAD25 = ieee2pe(AOXYGEN(1))
        HEAD26 = ieee2pe(BOXYGEN(1))
        HEAD27 = ieee2pe(AWATER(1))
        HEAD28 = ieee2pe(BWATER(1))
        HEAD29 = ieee2pe(O2CNTS(1))
        HEAD30 = ieee2pe(OXYCONT(1))
        HEAD36 = ieee2pe(AOXYGEN(2))
        HEAD37 = ieee2pe(BOXYGEN(2))
        HEAD38 = ieee2pe(AWATER(2))
        HEAD39 = ieee2pe(BWATER(2))
        HEAD40 = ieee2pe(O2CNTS(2))
        HEAD41 = ieee2pe(OXYCONT(2))
d217 4
a220 4
        HEAD22 = ieee2pe(AFLOW(1))
        HEAD23 = ieee2pe(BFLOW(1))
        HEAD33 = ieee2pe(AFLOW(2))
        HEAD34 = ieee2pe(BFLOW(2))
d222 2
a223 2
        HEAD24 = ieee2pe(BVFACTOR(1))
        HEAD35 = ieee2pe(BVFACTOR(2))
d225 2
a226 2
        HEAD31 = ieee2pe(PETTCONV(1)*EXP(TAU*0.5*(SCANST+SCANEND)))
        HEAD42 = ieee2pe(PETTCONV(2)*EXP(TAU*0.5*(SCANST+SCANEND)))
@


2.2
log
@clean up
@
text
@d2 3
a19 1
C
d23 3
a40 4
C  Intent:
C     This subroutine writes creates an .HDR file with metabolic
C     constants.  See HDRFORM for values in this file.
C
a91 1
C
d107 1
a107 1
      CHARACTER*8  HEAD2,HEAD3,HEAD10,HEAD14,PROCDATE
d164 1
a164 1
      RCSHEADER = "$Id: writehdr.f,v 2.1 1993/07/15 20:25:17 tom Exp tom $"
d186 1
d196 1
a196 1
      HEAD3 = SCANDATE
a202 1

a206 1

@


2.1
log
@Changed RCSHEADER to ID
@
text
@d2 3
d27 8
a34 8
C			Modified for UNIX 6-Feb-92 TOV
C				RINDEX, LNBLNK used for string manipulation
C				HDRNAME changed to character*256 and passed
C				RECL=256 eliminated from OPEN
C				INTDATE replaced by IDATE
C				use ieee2pe to convert all real no's in header
C			Modified for fastproc 17-Feb-92 TOV to eliminate some user output.
C			Modified to run with libpetutil 11-May-92 TOV.
d82 1
a82 1
C			ieee2pe
d93 1
a93 1
C
d95 1
a95 1
C
d103 3
a105 3
			INTEGER*4		 ieee2pe
			REAL*4			 EFACTOR
  		CHARACTER*2	 DD,MM,YY
d108 1
a108 1
			CHARACTER*10 HEAD6
d113 2
a114 2
			CHARACTER*256 RCSHEADER
C
d159 3
a161 3
C
			external ieee2pe !$pragma C (ieee2pe)
C
d164 2
a165 3
C
			RCSHEADER = "$Id$"
C
d167 1
a167 1
C
d169 1
a169 1
      WRITE(USEROUT,*) '*** Existing HDR file has been rewritten'
d173 1
a173 1
120   WRITE(USEROUT,*) '*** Unable to open file:  ',HDRNAME(:LNBLNK(HDRNAME))
d179 1
a179 1
C
d181 1
a181 1
200		CALL IDATE(DATE)
d186 1
a186 1
C
d190 1
a190 1
C
d192 1
a192 1
C
d202 1
a202 1
C
d207 1
a207 1
C
d209 16
a224 16
			L1 = RINDEX(PIENAME,'/') + 1
			L2 = RINDEX(PIENAME,'.') - 1
			IF (L1.GT.1) THEN
				IF (L2.GT.L1) THEN
					HEAD14 = PIENAME(L1:L2)
				ELSE
					HEAD14 = PIENAME(L1:LNBLNK(PIENAME))
				END IF
			ELSE
				IF (L2.GT.0) THEN
					HEAD14 = PIENAME(1:L2)
				ELSE
					HEAD14 = PIENAME(1:LNBLNK(PIENAME))
				END IF
			END IF
C
a260 1
C
a262 1
C
@


2.0
log
@Handles ECAT image format
@
text
@d2 3
d162 1
a162 1
			RCSHEADER = "$Header: /home/petsun2/tom/src/metproc/src/RCS/writehdr.f,v 1.3 1992/10/19 15:56:10 tom Exp tom $"
@


1.3
log
@modified RCSHEADER length
@
text
@d2 3
d159 1
a159 1
			RCSHEADER = "$Header$"
@


1.2
log
@added RCSHEADER
@
text
@d1 4
a4 1
c $Log$
d104 1
a104 1
			CHARACTER*100 RCSHEADER
d156 1
a156 1
			RCSHEADER = "$Header"
@


1.1
log
@Initial revision
@
text
@d1 1
d101 1
d152 2
@
