head	1.1;
access;
symbols;
locks; strict;
comment	@ * @;


1.1
date	2006.08.21.14.22.57;	author tom;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/* $Log$ */
/*	===============================================================================
 *	Module:			imgabs.c
 *	Date:			Aug 2006
 *	Author:			Tom Videen
 *	Description:
 *		Create absolute value of voxels for an image (PETT VI or ECAT).
 *	===============================================================================
 */
/*@@unused@@*/
static char     rcsid[] = "$Header: /home/npggw/tom/src/imgabs/RCS/imgabs.c,v 1.5 2004/02/16 19:27:51 tom Exp $";

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>
#include <libnrimg.h>
#include <image.h>
#include <libimage.h>
#include <nrutil.h>

main (argc, argv)
	int             argc;
	char           *argv[];
{
	ImageFile      *file1;			 /* input image file structure */
	Index           indx;			 /* frame, plane, gate, data, bed */

	char           *scan1;
	char           *outfile;
	int             pdim[3];
	int             i, j, k;
	float        ***img1;

	if (argc != 3) {
		fprintf (stderr,"Usage: imgabs img out\n");
		return (ERROR);
	}
	scan1 = argv[1];
	outfile = argv[2];

	indx.frm = 1;
	indx.pln = 1;
	indx.gate = 1;
	indx.data = 0;
	indx.bed = 0;

	file1 = make_imgfile (scan1);
	if (open_imgfile (file1) == ERROR) {
		fprintf (stderr, "ERROR [imgabs]: Cannot open %s\n", scan1);
		return (ERROR);
	}
	if (get_mh (file1) == ERROR) {
		fprintf (stderr, "ERROR [imgabs]: Cannot get MainHeader from %s\n", scan1);
		return (ERROR);
	}
	if (existimgfrm (file1, &indx) == ERROR) {
		indx.frm = 2;
		if (existimgfrm (file1, &indx) == ERROR) {
			fprintf (stderr, "ERROR [imgabs]: Cannot read scan %s frame %d\n", scan1, indx.frm);
			return (ERROR);
		}
	}
	if (get_sh (file1, &indx) == ERROR) {
		fprintf (stderr, "ERROR [imgabs]: Cannot read file subheader in %s\n", scan1);
		return (ERROR);
	}
	pdim[0] = file1->sh->dim1;
	pdim[1] = file1->sh->dim2;
	pdim[2] = file1->sh->dim3;

	if ((img1 = rdtensor (file1, &indx, pdim)) == NULL) {
		fprintf (stderr, "ERROR [imgabs]: Cannot read %s\n", scan1);
		return (ERROR);
	}
	close_imgfile (file1);

	for (i = 1; i <= pdim[2]; i++)
		for (j = 1; j <= pdim[1]; j++)
			for (k = 1; k <= pdim[0]; k++)
				img1[i][j][k] = fabs(img1[i][j][k]);

	file1->name = outfile;
	(void) strcpy (file1->mode, "w");
	indx.frm = 1;
	fprintf (stdout, "Writing %s\n", outfile);
	if (open_imgfile (file1) == ERROR) {
		fprintf (stderr, "ERROR [imgabs]: Cannot open %s\n", outfile);
		return (ERROR);
	}
	file1->mh->nframe = indx.frm;
	file1->mh->orientation = 0;
	if (put_mh (file1) == ERROR) {
		fprintf (stderr, "ERROR [imgabs] writing %s\n", outfile);
		return (ERROR);
	}
	if (writetensor (file1, &indx, img1) == ERROR) {
		fprintf (stderr, "ERROR [imgabs] writing %s\n", outfile);
		return (ERROR);
	}
	close_imgfile (file1);
	free_f3tensor (img1, 1, pdim[2], 1, pdim[1], 1, pdim[0]);
	return (0);
}
@
