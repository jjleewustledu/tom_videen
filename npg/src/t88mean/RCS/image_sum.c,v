head	1.7;
access;
symbols;
locks; strict;
comment	@ * @;


1.7
date	93.08.26.17.26.35;	author tom;	state Exp;
branches;
next	1.6;

1.6
date	93.08.20.20.24.07;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	93.08.19.22.55.48;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	93.08.12.22.58.02;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	93.08.06.15.16.49;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	93.06.24.18.57.01;	author tom;	state Exp;
branches;
next	;


desc
@Initial test version of tal88 reproduces the output of the current hd6mean
everywhere within the 100x100 inner array of pixels.
Tested by TOV 24-Jun-93 using p2000ho1 (PETT VI image)
@


1.7
log
@changed atlas y-dim to used 5 mm between brain and skull
@
text
@/* $Log: image_sum.c,v $
 * Revision 1.6  1993/08/20  20:24:07  tom
 * first version with Talairach 1988 atlas
 *
 * Revision 1.5  1993/08/19  22:55:48  tom
 * a corrected hd6mean-atlas version of t88mean
 *
 * Revision 1.4  1993/08/12  22:58:02  tom
 * equivalent to hd6mean
 *
 * Revision 1.3  1993/08/06  15:16:49  tom
 * reads prm and list files
 *
 * Revision 1.1  1993/06/24  18:57:01  tom
 * Initial revision
 *
 */
/*	========================================================================
 *	Module:				image_sum.c
 *	Date:					28-Apr-93
 *	Author:				Tom Videen
 *	Description:	Compute sum of 2 images
 *	History:
 *		11-Aug-93:	Compute sum-of-squares image (sd) for all pixels within a mask
 *				(if a mask is specified)
 *	========================================================================
 */

#include <stdio.h>
#include <petutil/petutil.h>
#include "atlas.h"

static char rcsid []= "$Id: image_sum.c,v 1.6 1993/08/20 20:24:07 tom Exp tom $";

/*	-----------------------
 *	Function image_sum
 *	-----------------------
 */
void image_sum (a, b, nz, use_mask, mask, compute_sd, sd)
	REAL_SLICE	*a, *b, *mask, *sd;
	int		nz;
	BOOLEAN use_mask, compute_sd;

{
	int		i, j, k;

	for (i = 0; i < nz; ++i) {
		for (j = 0 ; j < DIM; ++j) {
			for (k = 0; k < DIM; ++k) {
				a[i][j][k] += b[i][j][k];
				if (compute_sd && (!(use_mask) || (mask[i][j][k] > 0)))
					sd[i][j][k] += b[i][j][k] * b[i][j][k];
			}
		}
	}
}
@


1.6
log
@first version with Talairach 1988 atlas
@
text
@d2 3
d33 1
a33 1
static char rcsid []= "$Id: image_sum.c,v 1.5 1993/08/19 22:55:48 tom Exp tom $";
@


1.5
log
@a corrected hd6mean-atlas version of t88mean
@
text
@d2 3
d30 1
a30 1
static char rcsid []= "$Id: image_sum.c,v 1.4 1993/08/12 22:58:02 tom Exp tom $";
@


1.4
log
@equivalent to hd6mean
@
text
@d2 3
d27 1
a27 1
static char rcsid []= "$Id: image_sum.c,v 1.3 1993/08/06 15:16:49 tom Exp tom $";
@


1.3
log
@reads prm and list files
@
text
@d2 3
d15 2
d21 1
d24 1
a24 1
static char rcsid []= "$Id: image_sum.c,v 1.1 1993/06/24 18:57:01 tom Exp tom $";
d30 5
a34 3
void image_sum (a, b, nz)
	REAL_SLICE	*a, *b;
	int	nz;
d40 1
a40 1
			for (k = 0; k < DIM; ++k)
d42 3
@


1.1
log
@Initial revision
@
text
@d1 4
a4 1
/* $Log$
d18 1
a18 1
static char rcsid []= "$Id$";
d30 1
a30 1
	for (k = 0; k < nz; ++k) {
d32 2
a33 2
			for (i = 0; i < DIM; ++i)
				a[k][j][i] += b[k][j][i];
@
