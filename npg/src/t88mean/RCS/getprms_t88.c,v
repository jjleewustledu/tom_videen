head	2.2;
access;
symbols;
locks; strict;
comment	@ * @;


2.2
date	2004.02.20.16.15.35;	author tom;	state Exp;
branches;
next	2.1;

2.1
date	99.12.17.16.06.32;	author tom;	state Exp;
branches;
next	2.0;

2.0
date	96.05.10.21.58.47;	author tom;	state Exp;
branches;
next	1.85;

1.85
date	95.11.10.18.48.00;	author tom;	state Exp;
branches;
next	1.84;

1.84
date	95.08.31.21.59.04;	author tom;	state Exp;
branches;
next	1.83;

1.83
date	95.01.19.19.17.33;	author tom;	state Exp;
branches;
next	1.82;

1.82
date	94.10.03.16.17.13;	author tom;	state Exp;
branches;
next	1.81;

1.81
date	94.09.14.14.41.33;	author tom;	state Exp;
branches;
next	1.80;

1.80
date	94.05.18.15.53.30;	author tom;	state Exp;
branches;
next	1.79;

1.79
date	94.05.10.15.32.59;	author tom;	state Exp;
branches;
next	1.78;

1.78
date	94.04.28.22.09.25;	author tom;	state Exp;
branches;
next	1.77;

1.77
date	94.04.12.22.12.29;	author tom;	state Exp;
branches;
next	1.76;

1.76
date	93.09.29.16.01.52;	author tom;	state Exp;
branches;
next	1.75;

1.75
date	93.08.27.20.43.55;	author tom;	state Exp;
branches;
next	1.7;

1.7
date	93.08.26.17.26.35;	author tom;	state Exp;
branches;
next	1.6;

1.6
date	93.08.20.20.24.07;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	93.08.19.22.55.48;	author tom;	state Exp;
branches;
next	;


desc
@a corrected hd6mean-atlas version of t88mean
@


2.2
log
@Feb 2004
@
text
@/* $Log: getprms_t88.c,v $
 * Revision 2.1  1999/12/17  16:06:32  tom
 * lint cleaning
 *
 * Revision 2.0  1996/05/10  21:58:47  tom
 * new libimage
 * indexing from 1 on images and atlas
 *
 * Revision 1.85  1995/11/10  18:48:00  tom
 * remove petutil parent directory from include statements
 *
 * Revision 1.84  1995/08/31  21:59:04  tom
 * add atlas
 *
 * Revision 1.83  1995/01/19  19:17:33  tom
 * smg_divisor = none
 *
 * Revision 1.82  1994/10/03  16:17:13  tom
 * standard format with indent
 *
 * Revision 1.81  1994/09/14  14:41:33  tom
 * add z0 and zmax
 *
 * Revision 1.80  1994/05/18  15:53:30  tom
 * changed $Id: getprms_t88.c,v 2.1 1999/12/17 16:06:32 tom Exp tom $ to $Header: /home/npggw/tom/src/t88mean/RCS/getprms_t88.c,v 2.1 1999/12/17 16:06:32 tom Exp tom $
 * */
/*	===============================================================================
 *	Module:			getprms_t88.c
 *	Date:			10-Aug 1993
 *	Author:			Tom Videen
 *	Description:	Read program-specific parameters from the parameter file.
 *
 *	Input:
 *		prmfile	-	name of parameter file
 *
 *	Output (parameters assigned values):
 *	Required:
 *		smg_norm
 *		smg_mode
 *		smg_divisor
 *		smg_included
 *		processing
 *	Optional:
 *		smg_mask
 *		smg_sdimage
 *		smg_nimage
 *		smg_symmetry
 *		smg_mskpct
 *		smg_compute
 *		pixel_size
 *		plane_separation
 *		first_slice
 *		last_slice
 *		zorigin
 *		zmax
 *
 *	History:
 *		Aug 1993	added smg_symmetry, smg_mskpct, smg_scaletopet, pixel_size, plane_separation
 *		Apr 1994	additional option in smg_include; first_slice and last_slice
 *		May 1994	eliminated smg_scaletopet
 *		Sep 1994	added zorigin and zmax; added smg_compute
 *		Aug 1995	add atlas_name
 *	===============================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/t88mean/RCS/getprms_t88.c,v 2.1 1999/12/17 16:06:32 tom Exp tom $";
#endif

#include <stdio.h>
#include <stdlib.h>					/* atof, atoi */
#include <string.h>
#include <imgutil.h>
#include <myvalues.h>				/* ERROR */

int        getprms_t88 (prmfile, smg_norm, smg_divisor, smg_included, processing, smg_mode, smg_mask,
                smg_sdimage, smg_nimage, smg_symmetry, smg_mskpct, smg_compute, pixel_size,
	            plane_separation, first_slice, last_slice, zorigin, zmax, atlas_name)
	char           *prmfile;
	float          *smg_norm;
	char           *smg_divisor;
	char           *smg_included;
	int            *processing;
	char           *smg_mode;
	char           *smg_mask;
	char           *smg_compute;
	char           *smg_sdimage;
	char           *smg_nimage;
	char           *smg_symmetry;
	float          *smg_mskpct;
	float          *pixel_size;
	float          *plane_separation;
	int            *first_slice;
	int            *last_slice;
	int            *zorigin;
	int            *zmax;
	char           *atlas_name;

{
	FILE           *fp;
	char            line[MAXLINE];
	char            label[MAXLINE];
	char            parameter[MAXLINE];
	int             slice1 = 0;
	int             slice2 = 0;

	*smg_norm = 0;
	*smg_mskpct = 0;
	*pixel_size = 0;
	*plane_separation = 0;
	*first_slice = 1;
	*last_slice = 1;
	*zorigin = 0;
	*zmax = 0;
	*processing = -1;
	strcpy (smg_divisor, "NONE");
	strcpy (smg_included, "NONE");
	strcpy (smg_mode, "NONE");
	strcpy (smg_mask, "no");
	strcpy (smg_compute, "yes");
	strcpy (smg_sdimage, "no");
	strcpy (smg_nimage, "no");
	strcpy (smg_symmetry, "no");
	strcpy (atlas_name, "t88");

	fp = fopen (prmfile, "r");
	if (fp == (FILE *) NULL) {
		printf ("Error opening parameter file %s\n", prmfile);
		return (ERROR);
	}
/*
 *	Read each line of parameter file.
 *	If the line has 2 strings, compare the label with the list of eligible keys:
 *	and if the key is found, set the appropriate parameter.
 */

	while (fgets (line, MAXLINE, fp) != NULL) {
		if (sscanf (line, "%s %s", label, parameter) == 2) {

/*
 *	Get smg_norm
 */

			if (strcmp (label, "smg_norm:") == 0) {
				if (stringtype (parameter) == TYPE_REAL ||
				    stringtype (parameter) == TYPE_INTEGER)
					*smg_norm = atof (parameter);
				else {
					printf ("Error reading smg_norm from %s\n", prmfile);
					return (ERROR);
				}
/*
 *	Get smg_mode
 */
			} else if (strcmp (label, "smg_mode:") == 0) {
				if (strcmp (parameter, "single") == 0 ||
				    strcmp (parameter, "paired") == 0 ||
				    strcmp (parameter, "diff") == 0)
					strcpy (smg_mode, parameter);
				else {
					printf ("Error reading smg_mode from %s\n", prmfile);
					return (ERROR);
				}
/*
 *	Get smg_divisor
 */
			} else if (strcmp (label, "smg_divisor:") == 0) {
				if (strcmp (parameter, "global") == 0 ||
				    strcmp (parameter, "local") == 0 ||
				    strcmp (parameter, "none") == 0)
					strcpy (smg_divisor, parameter);
				else {
					printf ("Error reading smg_divisor from %s\n", prmfile);
					return (ERROR);
				}
/*
 *	Get smg_included
 */
			} else if (strcmp (label, "smg_included:") == 0) {
				if (strcmp (parameter, "all") == 0 ||
				    strcmp (parameter, "sampled") == 0 ||
				    strncmp (parameter, "n=", 2) == 0)
					strcpy (smg_included, parameter);
				else {
					printf ("Error reading smg_included from %s\n", prmfile);
					return (ERROR);
				}
/*
 *	Get processing
 */
			} else if (strcmp (label, "processing:") == 0) {
                if (strncmp (parameter, "none", 4) == 0)
                    *processing = PROC_NONE;
                else if (strncmp (parameter, "cbf", 3) == 0)
                    *processing = PROC_CBF;
                else if (strncmp (parameter, "cbv", 3) == 0)
                    *processing = PROC_CBV;
                else if (strncmp (parameter, "tissue_activity", 15) == 0)
                    *processing = PROC_DECAYCOR;
                else if (strncmp (parameter, "decay-corrected", 15) == 0)
                    *processing = PROC_DECAYCOR;
                else if (strncmp (parameter, "wellcounts", 10) == 0)
                    *processing = PROC_UNCORRECTED;
                else if (strncmp (parameter, "uncorrected", 11) == 0)
                    *processing = PROC_UNCORRECTED;
                else if (strncmp (parameter, "oef", 3) == 0)
                    *processing = PROC_OEF;
                else if (strncmp (parameter, "cmro2", 5) == 0)
                    *processing = PROC_CMRO2;
				else {
					printf ("Error reading processing from %s\n", prmfile);
					return (ERROR);
				}
/*
 *	Get smg_mask
 */
			} else if (strcmp (label, "smg_mask:") == 0) {
				strcpy (smg_mask, parameter);
/*
 *	Get smg_compute
 */
			} else if (strcmp (label, "smg_compute:") == 0) {
				strcpy (smg_compute, parameter);
/*
 *	Get smg_sdimage
 */
			} else if (strcmp (label, "smg_sdimage:") == 0) {
				strcpy (smg_sdimage, parameter);
/*
 *	Get smg_nimage
 */
			} else if (strcmp (label, "smg_nimage:") == 0) {
				strcpy (smg_nimage, parameter);
/*
 *	Get smg_symmetry
 */
			} else if (strcmp (label, "smg_symmetry:") == 0) {
				strcpy (smg_symmetry, parameter);
/*
 *	Get pixel_size
 */
			} else if (strcmp (label, "pixel_size:") == 0) {
				if (stringtype (parameter) == TYPE_REAL ||
				    stringtype (parameter) == TYPE_INTEGER)
					*pixel_size = atof (parameter);
				else {
					printf ("Error reading pixel_size from %s\n", prmfile);
					return (ERROR);
				}
/*
 *	Get plane_separation
 */
			} else if (strcmp (label, "plane_separation:") == 0) {
				if (stringtype (parameter) == TYPE_REAL ||
				    stringtype (parameter) == TYPE_INTEGER)
					*plane_separation = atof (parameter);
				else {
					printf ("Error reading plane_separation from %s\n", prmfile);
					return (ERROR);
				}
/*
 *	Get first_slice and last_slice
 */
			} else if (strcmp (label, "slices:") == 0) {
				if (sscanf (parameter, "%dto%d", &slice1, &slice2) == 2) {
					if (slice1 <= slice2) {
						*first_slice = slice1;
						*last_slice = slice2;
					} else {
						*first_slice = slice2;
						*last_slice = slice1;
					}
				}
/*
 *	Get zorigin
 */
			} else if (strcmp (label, "z0:") == 0) {
				if (stringtype (parameter) == TYPE_INTEGER)
					*zorigin = atoi (parameter);
				else {
					printf ("Error reading z0 from %s\n", prmfile);
					return (ERROR);
				}
/*
 *	Get zmax
 */
			} else if (strcmp (label, "zmax:") == 0) {
				if (stringtype (parameter) == TYPE_INTEGER)
					*zmax = atoi (parameter);
				else {
					printf ("Error reading zmax from %s\n", prmfile);
					return (ERROR);
				}
/*
 *	Get smg_mskpct
 */
			} else if (strcmp (label, "smg_mskpct:") == 0) {
				if (stringtype (parameter) == TYPE_REAL ||
				    stringtype (parameter) == TYPE_INTEGER)
					*smg_mskpct = atof (parameter);
				else {
					printf ("Error reading smg_mskpct from %s\n", prmfile);
					return (ERROR);
				}
/*
 *	Get atlas_name
 */
			} else if (strcmp (label, "atlas:") == 0) {
				if (strcmp (parameter, "none") == 0 ||
				    strcmp (parameter, "t88") == 0)
					strcpy (atlas_name, parameter);
				else {
					printf ("Error reading atlas_name from %s\n", prmfile);
					return (ERROR);
				}
			}
		}
	}
/*
 *	Check that all required parameters have been assigned new values before exiting.
 */

	if (strcmp (smg_compute, "yes") == 0) {
		if (*smg_norm == 0) {
			printf ("Error:  smg_norm not found in %s\n", prmfile);
			return (ERROR);
		}
		if (strcmp (smg_divisor, "NONE") == 0) {
			printf ("Error:  smg_divisor not found in %s\n", prmfile);
			return (ERROR);
		}
		if (strcmp (smg_included, "NONE") == 0) {
			printf ("Error:  smg_included not found in %s\n", prmfile);
			return (ERROR);
		}
		if (strcmp (smg_mode, "NONE") == 0) {
			printf ("Error:  smg_mode not found in %s\n", prmfile);
			return (ERROR);
		}
		if (*processing < 0) {
			printf ("Error:  processing not found in %s\n", prmfile);
			return (ERROR);
		}
	}
	return (OK);
}
@


2.1
log
@lint cleaning
@
text
@d2 3
d25 1
a25 1
 * changed $Id: getprms_t88.c,v 2.0 1996/05/10 21:58:47 tom Exp tom $ to $Header: /home/npggw/tom/src/t88mean/RCS/getprms_t88.c,v 2.0 1996/05/10 21:58:47 tom Exp tom $
d29 1
a29 1
 *	Date:			10-Aug-93
d58 5
a62 9
 *		19-Aug-93	added smg_symmetry and smg_mskpct
 *		24-Aug-93	added smg_scaletopet
 *		27-Aug-93	added pixel_size and plane_separation
 *		12-Apr-94	additional option in smg_include
 *		28-Apr-94	added first_slice and last_slice
 *		10-May-94	eliminated smg_scaletopet
 *		13-Sep-94	added zorigin and zmax
 *		27-Sep-94	added smg_compute
 *		23-Aug-95	add atlas_name
d65 5
a75 4
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/t88mean/RCS/getprms_t88.c,v 2.0 1996/05/10 21:58:47 tom Exp tom $";
#endif

@


2.0
log
@new libimage
indexing from 1 on images and atlas
@
text
@d2 4
d22 1
a22 1
 * changed $Id: getprms_t88.c,v 1.85 1995/11/10 18:48:00 tom Exp tom $ to $Header: /home/npggw/tom/src/t88mean/RCS/getprms_t88.c,v 1.85 1995/11/10 18:48:00 tom Exp tom $
d73 1
a73 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/t88mean/RCS/getprms_t88.c,v 1.85 1995/11/10 18:48:00 tom Exp tom $";
d104 2
a105 1
	int             slice1, slice2;
a274 1
/*
@


1.85
log
@remove petutil parent directory from include statements
@
text
@d2 3
d18 1
a18 1
 * changed $Id: getprms_t88.c,v 1.84 1995/08/31 21:59:04 tom Exp tom $ to $Header: /export/home/npggw/tom/src/t88mean/RCS/getprms_t88.c,v 1.84 1995/08/31 21:59:04 tom Exp tom $
a61 1

d63 1
d65 2
a66 1
#include <petutil.h>
d68 3
a70 1
static char     rcsid[] = "$Header: /export/home/npggw/tom/src/t88mean/RCS/getprms_t88.c,v 1.84 1995/08/31 21:59:04 tom Exp tom $";
d72 3
a74 3
int             getprms_t88 (prmfile, smg_norm, smg_divisor, smg_included, processing, smg_mode, smg_mask,
                       smg_sdimage, smg_nimage, smg_symmetry, smg_mskpct, smg_compute, pixel_size,
	                     plane_separation, first_slice, last_slice, zorigin, zmax, atlas_name)
d79 1
a79 1
	char           *processing;
d106 2
a107 2
	*first_slice = 0;
	*last_slice = 0;
d110 1
a113 1
	strcpy (processing, "NONE");
d124 1
a124 1
		return FAIL;
d140 2
a141 2
				if (DetermineType (parameter) == DATA_TYPE_REAL ||
				    DetermineType (parameter) == DATA_TYPE_INTEGER)
d145 1
a145 1
					return FAIL;
a146 1

a149 1

d157 1
a157 1
					return FAIL;
a158 1

a161 1

d169 1
a169 1
					return FAIL;
a170 1

a173 1

d181 1
a181 1
					return FAIL;
a182 1

a185 1

d187 18
a204 6
				if (strcmp (parameter, "none") == 0 ||
				    strcmp (parameter, "cbf") == 0 ||
				    strcmp (parameter, "cbv") == 0 ||
				    strcmp (parameter, "oef") == 0 ||
				    strcmp (parameter, "cmro2") == 0)
					strcpy (processing, parameter);
d207 1
a207 1
					return FAIL;
a208 1

a211 1

a213 1

a216 1

a218 1

a221 1

a223 1

a226 1

a228 1

a231 1

a233 1

a236 1

d238 2
a239 2
				if (DetermineType (parameter) == DATA_TYPE_REAL ||
				    DetermineType (parameter) == DATA_TYPE_INTEGER)
d243 1
a243 1
					return FAIL;
a244 1

a247 1

d249 2
a250 2
				if (DetermineType (parameter) == DATA_TYPE_REAL ||
				    DetermineType (parameter) == DATA_TYPE_INTEGER)
d254 1
a254 1
					return FAIL;
a255 1

a258 1

d262 2
a263 2
						*first_slice = slice1 - 1;
						*last_slice = slice2 - 1;
d265 2
a266 2
						*first_slice = slice2 - 1;
						*last_slice = slice1 - 1;
a272 1

d274 1
a274 1
				if (DetermineType (parameter) == DATA_TYPE_INTEGER)
d278 1
a278 1
					return FAIL;
a279 1

a282 1

d284 1
a284 1
				if (DetermineType (parameter) == DATA_TYPE_INTEGER)
d288 1
a288 1
					return FAIL;
a289 1

a292 1

d294 2
a295 2
				if (DetermineType (parameter) == DATA_TYPE_REAL ||
				    DetermineType (parameter) == DATA_TYPE_INTEGER)
d299 1
a299 1
					return FAIL;
a303 1

d310 1
a310 1
					return FAIL;
a314 1

d322 1
a322 1
			return FAIL;
d326 1
a326 1
			return FAIL;
d330 1
a330 1
			return FAIL;
d334 1
a334 1
			return FAIL;
d336 1
a336 1
		if (strcmp (processing, "NONE") == 0) {
d338 1
a338 1
			return FAIL;
d341 1
@


1.84
log
@add atlas
@
text
@d2 3
d15 1
a15 1
 * changed $Id: getprms_t88.c,v 1.83 1995/01/19 19:17:33 tom Exp tom $ to $Header: /home/npggw/tom/src/t88mean/RCS/getprms_t88.c,v 1.83 1995/01/19 19:17:33 tom Exp tom $
d62 1
a62 1
#include <petutil/petutil.h>
d64 1
a64 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/t88mean/RCS/getprms_t88.c,v 1.83 1995/01/19 19:17:33 tom Exp tom $";
@


1.83
log
@smg_divisor = none
@
text
@d2 3
d12 1
a12 1
 * changed $Id: getprms_t88.c,v 1.82 1994/10/03 16:17:13 tom Exp tom $ to $Header: /home/npggw/tom/src/t88mean/RCS/getprms_t88.c,v 1.82 1994/10/03 16:17:13 tom Exp tom $
d43 1
a43 1
 *	
d53 1
d61 1
a61 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/t88mean/RCS/getprms_t88.c,v 1.82 1994/10/03 16:17:13 tom Exp tom $";
d63 3
a65 4
int
getprms_t88 (prmfile, smg_norm, smg_divisor, smg_included, processing, smg_mode, smg_mask,
	     smg_sdimage, smg_nimage, smg_symmetry, smg_mskpct, smg_compute, pixel_size,
	     plane_separation, first_slice, last_slice, zorigin, zmax)
d84 1
d110 1
d159 1
a159 1
				    strcmp (parameter, "local") == 0  ||
d307 12
@


1.82
log
@standard format with indent
@
text
@d2 3
d9 1
a9 1
 * changed $Id: getprms_t88.c,v 1.81 1994/09/14 14:41:33 tom Exp tom $ to $Header: /export/home/npggw/tom/src/t88mean/RCS/getprms_t88.c,v 1.81 1994/09/14 14:41:33 tom Exp tom $
d57 1
a57 1
static char     rcsid[] = "$Header: /export/home/npggw/tom/src/t88mean/RCS/getprms_t88.c,v 1.81 1994/09/14 14:41:33 tom Exp tom $";
d154 2
a155 1
				    strcmp (parameter, "local") == 0)
@


1.81
log
@add z0 and zmax
@
text
@d2 3
d6 1
a6 1
 * changed $Id$ to $Header$
d13 25
d46 1
d54 1
a54 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/t88mean/RCS/getprms_t88.c,v 1.80 1994/05/18 15:53:30 tom Exp tom $";
d57 2
a58 2
getprms_t88 (prmfile, smg_norm, smg_divisor, smg_included, processing, smg_mode,
	     smg_mask, smg_sdimage, smg_nimage, smg_symmetry, smg_mskpct, pixel_size,
d67 1
d99 1
d109 6
d196 7
d305 1
a305 1
 *	Check that required parameters have been assigned new values
d308 21
a328 19
	if (*smg_norm == 0) {
		printf ("Error:  smg_norm not found in %s\n", prmfile);
		return FAIL;
	}
	if (strcmp (smg_divisor, "NONE") == 0) {
		printf ("Error:  smg_divisor not found in %s\n", prmfile);
		return FAIL;
	}
	if (strcmp (smg_included, "NONE") == 0) {
		printf ("Error:  smg_included not found in %s\n", prmfile);
		return FAIL;
	}
	if (strcmp (smg_mode, "NONE") == 0) {
		printf ("Error:  smg_mode not found in %s\n", prmfile);
		return FAIL;
	}
	if (strcmp (processing, "NONE") == 0) {
		printf ("Error:  processing not found in %s\n", prmfile);
		return FAIL;
@


1.80
log
@changed $Id$ to $Header$
@
text
@d1 4
a4 1
/* $Log$ */
d6 3
a8 3
 *	Module:				getprms_t88.c
 *	Date:					10-Aug-93
 *	Author:				Tom Videen
d11 7
a17 6
 *		19-Aug-93		added smg_symmetry and smg_mskpct
 *		24-Aug-93		added smg_scaletopet
 *		27-Aug-93		added pixel_size and plane_separation
 *		12-Apr-94		additional option in smg_include
 *		28-Apr-94		added first_slice and last_slice
 *		10-May-94		eliminated smg_scaletopet
d25 1
a25 1
static char rcsid []= "$Header: getprms_t88.c,v 1.1 92/12/30 04:20:39 tom Exp $";
d27 21
a47 3
int getprms_t88 (prmfile, smg_norm, smg_divisor, smg_included, processing, smg_mode, 
	smg_mask, smg_sdimage, smg_nimage, smg_symmetry, smg_mskpct, pixel_size,
	plane_separation, first_slice, last_slice)
a48 16
char		*prmfile;
float		*smg_norm;
char		*smg_divisor;
char		*smg_included;
char		*processing;
char		*smg_mode;
char		*smg_mask;
char		*smg_sdimage;
char		*smg_nimage;
char		*smg_symmetry;
float		*smg_mskpct;
float		*pixel_size;
float		*plane_separation;
int			*first_slice;
int			*last_slice;

d50 5
a54 5
	FILE	*fp;
	char	line [MAXLINE];
	char	label [MAXLINE];
	char	parameter [MAXLINE];
	int		slice1, slice2;
d62 2
d73 1
a73 1
	fp	= fopen (prmfile, "r");
a77 1

d81 1
a81 1
/* 
d87 2
a88 2
						DetermineType (parameter) == DATA_TYPE_INTEGER)
					*smg_norm	= atof (parameter);
d100 2
a101 2
						strcmp (parameter, "paired") == 0 ||
						strcmp (parameter, "diff")   == 0)
d114 1
a114 1
						strcmp (parameter, "local")  == 0)
d126 3
a128 3
				if (strcmp (parameter, "all")     == 0 ||
						strcmp (parameter, "sampled") == 0 ||
						strncmp (parameter, "n=", 2) == 0)
d141 4
a144 4
						strcmp (parameter, "cbf")  == 0 ||
						strcmp (parameter, "cbv")  == 0 ||
						strcmp (parameter, "oef")  == 0 ||
						strcmp (parameter, "cmro2")  == 0)
d156 1
a156 1
					strcpy (smg_mask, parameter);
d163 1
a163 1
					strcpy (smg_sdimage, parameter);
d170 1
a170 1
					strcpy (smg_nimage, parameter);
d177 1
a177 1
					strcpy (smg_symmetry, parameter);
d179 1
a179 1
/* 
d185 2
a186 2
						DetermineType (parameter) == DATA_TYPE_INTEGER)
					*pixel_size	= atof (parameter);
d192 1
a192 1
/* 
d198 2
a199 2
						DetermineType (parameter) == DATA_TYPE_INTEGER)
					*plane_separation	= atof (parameter);
d210 13
a222 9
      	if (sscanf (parameter, "%dto%d", &slice1, &slice2) == 2) {
          if (slice1 <= slice2) {
            *first_slice = slice1 - 1;
            *last_slice  = slice2 - 1;
          } else {
            *first_slice = slice2 - 1;
            *last_slice  = slice1 - 1;
          }
        }
d224 21
a244 1
/* 
d250 2
a251 2
						DetermineType (parameter) == DATA_TYPE_INTEGER)
					*smg_mskpct	= atof (parameter);
@


1.79
log
@eliminate smg_scaletopet
@
text
@d1 1
a1 1
/* $Log */
d21 1
a21 1
static char rcsid []= "$Id: getprms_t88.c,v 1.78 1994/04/28 22:09:25 tom Exp tom $";
@


1.78
log
@added parameter slices:
@
text
@d13 1
d21 1
a21 1
static char rcsid []= "$Id: getprms_t88.c,v 1.77 1994/04/12 22:12:29 tom Exp tom $";
d25 1
a25 1
	plane_separation, smg_scaletopet, first_slice, last_slice)
a36 1
char		*smg_scaletopet;
a63 1
	strcpy (smg_scaletopet, "no");
a196 7

/*
 *	Get smg_scaletopet
 */

			} else if (strcmp (label, "smg_scaletopet:") == 0) {
					strcpy (smg_scaletopet, parameter);
@


1.77
log
@added option to smg_include
@
text
@d12 1
d20 1
a20 1
static char rcsid []= "$Id: getprms_t88.c,v 1.76 1993/09/29 16:01:52 tom Exp tom $";
d24 1
a24 1
	plane_separation, smg_scaletopet)
d40 2
d48 1
d54 2
d205 15
@


1.76
log
@added metabolic processing and hdr files (cbf, cbv, oef, cmor2)
@
text
@d11 1
d19 1
a19 1
static char rcsid []= "$Id: getprms_t88.c,v 1.75 1993/08/27 20:43:55 tom Exp tom $";
d115 2
a116 1
						strcmp (parameter, "sampled") == 0)
@


1.75
log
@added pixel_size and plane_separation to prm file list
@
text
@d18 1
a18 1
static char rcsid []= "$Id: getprms_t88.c,v 1.7 1993/08/26 17:26:35 tom Exp tom $";
d128 3
a130 1
						strcmp (parameter, "cbv")  == 0)
@


1.7
log
@changed atlas y-dim to used 5 mm between brain and skull
@
text
@d10 1
d18 1
a18 1
static char rcsid []= "$Id: getprms_t88.c,v 1.6 1993/08/20 20:24:07 tom Exp tom $";
d21 2
a22 1
	smg_mask, smg_sdimage, smg_nimage, smg_symmetry, smg_mskpct, smg_scaletopet)
d36 2
d47 2
d162 26
@


1.6
log
@first version with Talairach 1988 atlas
@
text
@d9 1
d17 1
a17 1
static char rcsid []= "$Id: getprms_t88.c,v 1.5 1993/08/19 22:55:48 tom Exp tom $";
d20 1
a20 1
	smg_mask, smg_sdimage, smg_nimage, smg_symmetry, smg_mskpct)
d32 1
d51 1
d156 7
@


1.5
log
@a corrected hd6mean-atlas version of t88mean
@
text
@d16 1
a16 1
static char rcsid []= "$Id: getprms_t88.c,v 1.4 1993/08/12 22:58:02 tom Exp tom $";
@
