head	2.3;
access;
symbols;
locks; strict;
comment	@ * @;


2.3
date	2004.02.20.16.15.35;	author tom;	state Exp;
branches;
next	2.2;

2.2
date	99.12.17.16.06.32;	author tom;	state Exp;
branches;
next	2.1;

2.1
date	96.09.03.18.22.17;	author tom;	state Exp;
branches;
next	2.0;

2.0
date	96.05.10.21.58.08;	author tom;	state Exp;
branches;
next	1.11;

1.11
date	95.11.10.18.47.55;	author tom;	state Exp;
branches;
next	1.10;

1.10
date	94.10.03.16.17.13;	author tom;	state Exp;
branches;
next	1.9;

1.9
date	94.05.18.15.53.30;	author tom;	state Exp;
branches;
next	1.8;

1.8
date	93.09.29.16.01.52;	author tom;	state Exp;
branches;
next	1.7;

1.7
date	93.08.26.17.26.35;	author tom;	state Exp;
branches;
next	1.6;

1.6
date	93.08.20.20.24.07;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	93.08.19.22.55.48;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	93.08.12.22.58.02;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	93.08.06.15.16.49;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	93.08.05.22.22.58;	author tom;	state Exp;
branches;
next	;


desc
@development version
@


2.3
log
@Feb 2004
@
text
@/* $Log: get_input_lists.c,v $
 * Revision 2.2  1999/12/17  16:06:32  tom
 * lint cleaning
 *
 * Revision 2.1  1996/09/03  18:22:17  tom
 * add imgmode to handle OEF images properly
 *
 * Revision 2.0  1996/05/10  21:58:08  tom
 * new libimage
 * indexing from 1 on images and atlas
 *
 * Revision 1.11  1995/11/10  18:47:55  tom
 * remove petutil parent directory from include statements
 *
 * Revision 1.10  1994/10/03  16:17:13  tom
 * standard format with indent
 *
 * Revision 1.9  1994/05/18  15:53:30  tom
 * changed $Id: get_input_lists.c,v 2.2 1999/12/17 16:06:32 tom Exp tom $ to $Header: /home/npggw/tom/src/t88mean/RCS/get_input_lists.c,v 2.2 1999/12/17 16:06:32 tom Exp tom $
 *
 * Revision 1.8  1993/09/29  16:01:52  tom
 * added metabolic processing and hdr files (cbf, cbv, oef, cmor2)
 *
 * Revision 1.7  1993/08/26  17:26:35  tom
 * changed atlas y-dim to used 5 mm between brain and skull
 *
 * Revision 1.6  1993/08/20  20:24:07  tom
 * first version with Talairach 1988 atlas
 *
 * Revision 1.5  1993/08/19  22:55:48  tom
 * a corrected hd6mean-atlas version of t88mean
 *
 * Revision 1.4  1993/08/12  22:58:02  tom
 * equivalent to hd6mean
 *
 * Revision 1.3  1993/08/06  15:16:49  tom
 * reads prm and list files
 *
 * Revision 1.1  1993/08/05  22:22:58  tom
 * revised matrix_mult and eliminated matrix_point_mult
 * */
/*	===============================================================================
 *	Module:			get_input_lists.c
 *	Date:			Jul 1993
 *	Author:			Tom Videen
 *	Description:	Read an input image list file and an input image parameter file.
 *
 *	Input:
 *		prmfile  -   parameter filename
 *		lstfile  -   image list filename
 *		filtmode -   used to expand the image list
 *			(IMGFILTER_MODE in imgutil.h)
 *	Output:
 *		prm   	 -   structure PARAMETER_DATA (imgutil.h)
 *		list     -   structure IMAGE_LIST_DATA (imgutil.h)
 *		scan     -   scan filenames
 *		sxrfile  -   sxr filenames
 *		lstsize  -   number of scan (pairs) in image list
 *
 *	Algorithm:
 *	1)  Read the parameter file into prm.
 *	2)  Read the image list into list.
 *	3)  Get full names of activation  and control scans and store in scan.
 *	4)  Get full names of sxr files and store in sxrfile.
 *
 *	History:		Modification of chklist.c
 *		Aug 1993:	Changed for new checkimg.c (passes extension)
 *		Sep 1993:	Added filtmode;
 *					New calls to build_short_names and chklist (eliminate checkimg)
 *					Replace INPUT_FILE_LIST structure with arrays scan and sxrfile (elim list.h)
 *	===============================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/t88mean/RCS/get_input_lists.c,v 2.2 1999/12/17 16:06:32 tom Exp tom $";
#endif

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <myvalues.h>			 /* ERROR, MAXPATH */
#include <imgutil.h>			 /* IMAGE_LIST_DATA, PARAMETER_DATA, get_path */

int            get_input_lists (prmfile, lstsize, imgmode, filtmode, scan, sxrfile, prm, imglist)
	char           *prmfile;
	int             lstsize;
	int             imgmode;		 /* imagelist mode */
	int             filtmode;		 /* filter mode */
	PARAMETER_DATA *prm;			 /* parameters */
	IMAGE_LIST_DATA *imglist;		 /* image list */
	char         ***scan;
	char          **sxrfile;

{
	char          **imgname;
	char           *sxrname;
	char           *dtype;
	int             nfiles = 0;
	int             i, j;

/*
 * Read parameters into prm
 */

	if (readprm (prmfile, prm) == ERROR) {
		fprintf (stderr, "ERROR [get_input_lists]: reading %s\n", prmfile);
		return (ERROR);
	}
	prm->imglist_mode = imgmode;

/*
 * Get full names of activation, control and .sxr files.
 */

	imgname = (char **) malloc (6 * sizeof (char *));
	for (i = 0; i < 6; i++)
		imgname[i] = (char *) malloc (MAXPATH * sizeof (char));
	sxrname = (char *) malloc (MAXPATH * sizeof (char));
	if (sxrname == NULL)
		return (ERROR);
	dtype = (char *) malloc (MAXPATH * sizeof (char));
	if (dtype == NULL)
		return (ERROR);

	for (i = 0; i < lstsize; i++) {
		if (buildnames (prm, imglist[i], filtmode, &nfiles, imgname, sxrname) == ERROR) {
			fprintf (stderr, "ERROR [get_input_lists] building filenames from %s %s %f %s %f %s\n",
				 imglist[i].subject_id, imglist[i].scanset1_id, imglist[i].mean1,
				 imglist[i].scanset2_id, imglist[i].mean2, imglist[i].sxrid);
			return (ERROR);
		}
		if (nfiles < 6)
			for (j = nfiles; j < 6; j++)
				strcpy (scan[i][j], "");
		strcpy (dtype, prm->scanner);
		strcat (dtype, "_");
		strcat (dtype, prm->acquisition);
		strcat (dtype, "_");
		strcat (dtype, prm->reconstruction);
		strcat (dtype, "_");
		strcat (dtype, prm->recfilter);
		for (j = 0; j < nfiles; j++) {
			scan[i][j] = getpath (imgname[j], dtype, prm);
			if (strcmp (scan[i][j],"") == 0)
				return (ERROR);
		}
		strcpy (dtype, "data");
		sxrfile[i] = getpath (sxrname, dtype, prm);
		if (strcmp (sxrfile[i],"") == 0)
			return (ERROR);
	}
	for (i = 0; i < 6; i++)
		free (imgname[i]);
	free (imgname);
	free (sxrname);
	free (dtype);
	return (OK);
}
@


2.2
log
@lint cleaning
@
text
@d2 3
d19 1
a19 1
 * changed $Id: get_input_lists.c,v 2.1 1996/09/03 18:22:17 tom Exp tom $ to $Header: /home/npggw/tom/src/t88mean/RCS/get_input_lists.c,v 2.1 1996/09/03 18:22:17 tom Exp tom $
d44 1
a44 1
 *	Date:			28-Jul-93
d67 2
a68 2
 *		11-Aug-93:	Changed for new checkimg.c (passes extension)
 *		07-Sep-93:	Added filtmode;
d73 1
d75 1
a75 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/t88mean/RCS/get_input_lists.c,v 2.1 1996/09/03 18:22:17 tom Exp tom $";
d119 2
d122 2
@


2.1
log
@add imgmode to handle OEF images properly
@
text
@d2 3
d16 1
a16 1
 * changed $Id: get_input_lists.c,v 2.0 1996/05/10 21:58:08 tom Exp $ to $Header: /home/npggw/tom/src/t88mean/RCS/get_input_lists.c,v 2.0 1996/05/10 21:58:08 tom Exp $
a49 1
 *
d70 4
d75 1
a76 1
#include <values.h>
a78 1
#include <atlas.h>				 /* SCANLIST_ARRAY, SXRLIST_ARRAY */
d80 1
a80 5
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/t88mean/RCS/get_input_lists.c,v 2.0 1996/05/10 21:58:08 tom Exp $";
#endif

void            get_input_lists (prmfile, lstsize, imgmode, filtmode, scan, sxrfile, prm, imglist)
d103 1
a103 1
		exit (ERROR);
d122 1
a122 1
			exit (ERROR);
d137 1
a137 1
				exit (ERROR);
d142 1
a142 1
			exit (ERROR);
d149 1
@


2.0
log
@new libimage
indexing from 1 on images and atlas
@
text
@d2 4
d13 1
a13 1
 * changed $Id: get_input_lists.c,v 1.11 1995/11/10 18:47:55 tom Exp tom $ to $Header: /home/npggw/tom/src/t88mean/RCS/get_input_lists.c,v 1.11 1995/11/10 18:47:55 tom Exp tom $
d76 1
a76 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/t88mean/RCS/get_input_lists.c,v 1.11 1995/11/10 18:47:55 tom Exp tom $";
d79 1
a79 1
void            get_input_lists (prmfile, lstsize, filtmode, scan, sxrfile, prm, imglist)
d82 1
d104 2
@


1.11
log
@remove petutil parent directory from include statements
@
text
@d2 3
d9 1
a9 1
 * changed $Id: get_input_lists.c,v 1.10 1994/10/03 16:17:13 tom Exp tom $ to $Header: /export/home/npggw/tom/src/t88mean/RCS/get_input_lists.c,v 1.10 1994/10/03 16:17:13 tom Exp tom $
d37 1
a37 1
 *	 
d39 5
a43 7
 *		prmfile         -   parameter filename
 *		lstfile         -   image list filename
 *		image_mode      -   used to expand the image list 
 *			(STDIMAGE_MODE, DIFIMAGE_MODE, MULTITRACER_IMAGE_MODE in imglist.h)
 *		filter_mode     -   used to expand the image list 
 *			(IMGFILTER_MODE in imglist.h)
 *	
d45 5
a49 5
 *		parameter_data  -   structure PARAMETER_DATA (petutil.h)
 *		image_list      -   structure IMAGE_LIST_DATA (petutil.h)
 *		scan            -   structure SCANLIST_ARRAY (petutil.h)
 *		sxrfile         -   structure  SXRLIST_ARRAY (petutil.h)
 *		lstsize         -   number of scan (pairs) in image list
d52 2
a53 2
 *	1)  Read the parameter file into parameter_data.
 *	2)  Read the image list into image_list.
d56 1
a56 1
 *	
d59 1
a59 1
 *		07-Sep-93:	Added image_mode, filter_mode;
a63 1

d67 3
a69 3
#include <petutil.h>
#include <imglist.h>	/* IMAGE_LIST_DATA, MAXPATH */
#include "atlas.h"
d71 3
a73 1
static char     rcsid[] = "$Header: /export/home/npggw/tom/src/t88mean/RCS/get_input_lists.c,v 1.10 1994/10/03 16:17:13 tom Exp tom $";
d75 1
a75 3
void 
get_input_lists (prmfile, lstfile, lstsize, image_mode, filter_mode, scan, sxrfile,
		 parameter_data, image_list)
a76 1
	char           *lstfile;
d78 5
a82 6
	int             image_mode;
	int             filter_mode;
	PARAMETER_DATA *parameter_data;
	SCANLIST_ARRAY *scan;
	SXRLIST_ARRAY  *sxrfile;
	IMAGE_LIST_DATA *image_list;
d85 4
a88 5
	char            short_imgfile[6][MAXLINE];
	char            short_sxrfile[MAXLINE];
	char            full_imgfile[6][MAXPATH];
	char            full_sxrfile[MAXPATH];
	int             nfiles;
a89 1
	BOOLEAN         demigrate = TRUE;
d92 1
a92 1
 * Read parameters into finfo.
d95 3
a97 3
	if (readparm (prmfile, parameter_data) == FAIL) {
		fprintf (stderr, "Error: reading %s\n", prmfile);
		exit (FAIL);
d103 6
d110 5
a114 6
		if (build_shortnames (parameter_data, image_list[i], image_mode, filter_mode,
				      &nfiles, short_imgfile, short_sxrfile) == FAIL) {
			fprintf (stderr, "Error in build_short_names using: %s %s %f %s %f %s\n",
			 image_list[i].subject_id, image_list[i].scanset1_id, image_list[i].mean1,
			     image_list[i].scanset2_id, image_list[i].mean2, image_list[i].sxrid);
			exit (FAIL);
d116 14
a129 22
/*
 * Clean the array of complete image files.
 */

		for (j = 0; j < nfiles; j++)
			strcpy (full_imgfile[j], "");

		/*
		 * there is no distinction between single & paired multitracer in this function,
		 * hence...
		 */

		if (nfiles == 3)
			for (j = 3; j < 6; j++)
				strcpy (full_imgfile[j], "");

		if (checklst (parameter_data, image_list[i], image_mode, demigrate, nfiles,
			      short_imgfile, full_imgfile, short_sxrfile, full_sxrfile) == FAIL) {
			fprintf (stderr, "Error in checklst using: %s %s %f %s %f %s\n\n",
			 image_list[i].subject_id, image_list[i].scanset1_id, image_list[i].mean1,
			     image_list[i].scanset2_id, image_list[i].mean2, image_list[i].sxrid);
			exit (FAIL);
d131 4
a134 3
		for (j = 0; j < nfiles; j++)
			strcpy (scan[i][j], full_imgfile[j]);
		strcpy (sxrfile[i], full_sxrfile);
d136 5
@


1.10
log
@standard format with indent
@
text
@d2 3
d6 1
a6 1
 * changed $Id$ to $Header$
d67 2
a68 2
#include <petutil/petutil.h>
#include <petutil/imglist.h>	/* IMAGE_LIST_DATA, MAXPATH */
d71 1
a71 1
static char     rcsid[] = "$Header: /export/home/npggw/tom/src/t88mean/RCS/get_input_lists.c,v 1.9 1994/05/18 15:53:30 tom Exp tom $";
@


1.9
log
@changed $Id$ to $Header$
@
text
@d1 4
a4 1
/* $Log:	get_input_lists.c,v $
d27 3
a29 3
 *	Module:				get_input_lists.c
 *	Date:					28-Jul-93
 *	Author:				Tom Videen
d31 23
a53 1
 *	History:			Modification of chklist.c
d56 2
a57 2
 *								New calls to build_short_names and chklist (eliminate checkimg)
 *								Replace INPUT_FILE_LIST structure with arrays scan and sxrfile (elim list.h)
d65 1
a65 1
#include <petutil/imglist.h>			/* IMAGE_LIST_DATA, MAXPATH */
d68 1
a68 1
static char rcsid []= "$Header: get_input_lists.c,v 1.1 92/12/30 04:20:37 tom Exp $";
d70 12
a81 2
void get_input_lists (prmfile, lstfile, lstsize, image_mode, filter_mode, scan, sxrfile,
	parameter_data, image_list)
a82 10
char							*prmfile;
char							*lstfile;
int								lstsize;
int								image_mode;
int								filter_mode;
PARAMETER_DATA		*parameter_data;
SCANLIST_ARRAY 		*scan;
SXRLIST_ARRAY  		*sxrfile;
IMAGE_LIST_DATA		*image_list;

d84 7
a90 7
  char      short_imgfile [6][MAXLINE];
  char      short_sxrfile [MAXLINE];
  char      full_imgfile [6][MAXPATH];
  char      full_sxrfile [MAXPATH];
  int     	nfiles;
	int				i, j;
	BOOLEAN		demigrate = TRUE;
d92 1
a92 1
/* 
d97 1
a97 1
		fprintf (stderr, "Error: reading %s\n",prmfile);
d100 1
a100 2

/* 
d105 5
a109 5
    if (build_shortnames (parameter_data, image_list [i], image_mode, filter_mode,
    		&nfiles, short_imgfile, short_sxrfile) == FAIL) {
      fprintf (stderr, "Error in build_short_names using: %s %s %f %s %f %s\n",
        image_list[i].subject_id, image_list[i].scanset1_id, image_list[i].mean1,
        image_list[i].scanset2_id, image_list[i].mean2, image_list[i].sxrid);
d111 1
a111 2
    }
 
d116 2
a117 2
    for (j = 0; j < nfiles; j++)
      strcpy (full_imgfile [j], "");
d119 4
a122 1
	/* there is no distinction between single & paired multitracer in this function, hence... */
d126 7
a132 7
				strcpy (full_imgfile [j],"");
 
    if (checklst (parameter_data, image_list [i], image_mode, demigrate, nfiles, 
				short_imgfile, full_imgfile, short_sxrfile, full_sxrfile) == FAIL) {
      fprintf (stderr, "Error in checklst using: %s %s %f %s %f %s\n\n",
        image_list[i].subject_id, image_list[i].scanset1_id, image_list[i].mean1,
        image_list[i].scanset2_id, image_list[i].mean2, image_list[i].sxrid);
d134 4
a137 4
    }
    for (j = 0; j < nfiles; j++)
			strcpy (scan[i][j], full_imgfile [j]);	
		strcpy (sxrfile[i], full_sxrfile);	
@


1.8
log
@added metabolic processing and hdr files (cbf, cbv, oef, cmor2)
@
text
@d1 4
a4 1
/* $Log: get_input_lists.c,v $
d43 1
a43 1
static char rcsid []= "$Id: get_input_lists.c,v 1.7 1993/08/26 17:26:35 tom Exp tom $";
@


1.7
log
@changed atlas y-dim to used 5 mm between brain and skull
@
text
@d2 3
d27 3
d37 2
a38 2
#include <petutil/imglist.h>
#include "list.h"
d40 1
a40 1
static char rcsid []= "$Id: get_input_lists.c,v 1.6 1993/08/20 20:24:07 tom Exp tom $";
d42 2
a43 1
void get_input_lists (prmfile, lstfile, lstsize, image_mode, parameter_data, image_list, scan)
d49 1
d51 2
a53 1
INPUT_FILE_LIST		*scan;
d56 7
a62 4
	char			fullname [MAXPATH];
	char			shortname [MAXLINE];
	int				i;
	BOOLEAN		demigrate;
d69 1
a69 1
		printf ("Error: reading %s\n",prmfile);
d74 1
a74 1
 * Get fullnames of activation, control and .sxr files.
a76 1
	demigrate	= FALSE;
d78 11
a88 5
		if (checkimg (*parameter_data, image_list [i], image_mode, ACTIVATION_SCAN, 
				demigrate, shortname, fullname) == FAIL)
			fprintf (stderr, "Activation file %s does not exist\n", shortname);
		else
			strcpy ((scan [i]).activation, fullname);	
d90 2
a91 8
		if (image_mode == STDIMAGE_MODE) {
			if (image_list [i].control_num != -MAXINT &&
					checkimg (*parameter_data, image_list [i], image_mode, CONTROL_SCAN, 
					demigrate, shortname, fullname) == FAIL)
				fprintf (stderr, "Control file %s does not exist\n", shortname);
			else
				strcpy ((scan [i]).control, fullname);	
		}
d93 16
a108 4
		if (checksxr (*parameter_data, image_list [i], demigrate, shortname, fullname) == FAIL)
			fprintf (stderr, "sxr file %s does not exist.\n", shortname);
		else
			strcpy ((scan [i]).sxr, fullname);	
@


1.6
log
@first version with Talairach 1988 atlas
@
text
@d2 3
d34 1
a34 1
static char rcsid []= "$Id: get_input_lists.c,v 1.5 1993/08/19 22:55:48 tom Exp tom $";
@


1.5
log
@a corrected hd6mean-atlas version of t88mean
@
text
@d2 3
d31 1
a31 1
static char rcsid []= "$Id: get_input_lists.c,v 1.4 1993/08/12 22:58:02 tom Exp tom $";
@


1.4
log
@equivalent to hd6mean
@
text
@d2 3
d28 1
a28 1
static char rcsid []= "$Id: get_input_lists.c,v 1.3 1993/08/06 15:16:49 tom Exp tom $";
@


1.3
log
@reads prm and list files
@
text
@d2 3
d14 1
d20 1
d25 1
a25 1
static char rcsid []= "$Id$";
d27 1
a27 1
void get_input_lists (prmfile, lstfile, lstsize, parameter_data, image_list, finfo, scan)
d31 2
a32 1
int								*lstsize;
a34 1
struct INFO_TYPE	*finfo;
a39 1
	char			subject_id [MAXNAME];
a52 6
 * Fill the finfo structure.
 */

	get_finfo (parameter_data, finfo);

/* 
d57 3
a59 6
	for (i = 0; i < *lstsize; i++) {
		strcpy (subject_id, (*parameter_data).species);
		strcat (subject_id, image_list [i].subject_id);

		if (checkimg ((*parameter_data).datapath, finfo, subject_id, (*parameter_data).tracer, 
			image_list [i].activation_num, shortname, demigrate, fullname) == FAIL)
d64 8
a71 6
		if (image_list [i].control_num != FAIL &&
		checkimg ((*parameter_data).datapath, finfo, subject_id, (*parameter_data).tracer, 
		image_list [i].control_num, shortname, demigrate, fullname) == FAIL)
			fprintf (stderr, "Control file %s does not exist\n", shortname);
		else
			strcpy ((scan [i]).control, fullname);	
d73 1
a73 2
		if (checksxr ((*parameter_data).datapath, finfo, subject_id, image_list [i].sxr, 
			shortname, demigrate, fullname) == FAIL)
@


1.1
log
@revised matrix_mult and eliminated matrix_point_mult
@
text
@d1 4
a4 1
/* $Log$ */
d19 2
@
