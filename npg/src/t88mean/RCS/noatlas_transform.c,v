head	2.3;
access;
symbols;
locks; strict;
comment	@ * @;


2.3
date	2004.02.20.16.15.35;	author tom;	state Exp;
branches;
next	2.2;

2.2
date	99.12.17.16.06.32;	author tom;	state Exp;
branches;
next	2.1;

2.1
date	98.04.27.20.24.29;	author tom;	state Exp;
branches;
next	2.0;

2.0
date	96.05.10.21.59.07;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	95.11.10.18.48.10;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	95.08.31.21.59.21;	author tom;	state Exp;
branches;
next	;


desc
@@


2.3
log
@Feb 2004
@
text
@/*	$Log: noatlas_transform.c,v $
 * Revision 2.2  1999/12/17  16:06:32  tom
 * lint cleaning
 *
 * Revision 2.1  1998/04/27  20:24:29  tom
 * dimensions properly declared as long
 *
 * Revision 2.0  1996/05/10  21:59:07  tom
 * new libimage
 * indexing from 1 on images and atlas
 *
 * Revision 1.2  1995/11/10  18:48:10  tom
 * remove petutil parent directory from include statements
 *
 * Revision 1.1  1995/08/31  21:59:21  tom
 * Initial revision
 *
	$Header: /home/npggw/tom/src/t88mean/RCS/noatlas_transform.c,v 2.2 1999/12/17 16:06:32 tom Exp tom $
 */
/*	========================================================================
 *	Module:			noatlas_transform.c
 *	Date:			Aug 1995
 *	Author:			Tom Videen
 *	Description:	Sum up images with no transform
 *	========================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/t88mean/RCS/noatlas_transform.c,v 2.2 1999/12/17 16:06:32 tom Exp tom $";
#endif

#include <stdio.h>

/*	-----------------------
 *	Function noatlas_transform
 *	-----------------------
 */
void            noatlas_transform (pet, pdim, atl, adim, sd, weight, totwt, mask, use_mask, compute_sd)
	float        ***pet;			 /* PET image array */
	long           *pdim;			 /* pet image dimensions */
	float        ***atl;			 /* atlas image array */
	long           *adim;			 /* atlas image dimensions */
	float        ***sd;			 	 /* sum of squares */
	double          weight;
	float        ***totwt;			 /* number of images contributing to each pixel in atlas array */
	float        ***mask;			 /* mask for PET images */
	int				use_mask;		 /* 1 = only include pixels in mask */
	int				compute_sd;		 /* 1 = compute sum of squares */

{
	float           val;			 /* temporary value computed for ATL */
	long            x, y, z;		 /* indices to ATL */
	long           	x0, y0, z0;		 /* offset to PET array */
	long           	xmin, ymin, zmin;
	long           	xmax, ymax, zmax;

/*	PET image and Atlas image may have different dimensions */

	if (adim[0] > pdim[0]) {
		xmin = (adim[0] - pdim[0])/2;
		xmax = xmin + pdim[0] - 1;
		x0 = xmin - 1;
	} else {
		xmin = 1;
		xmax = adim[0];
		x0 = 0;
	}
	if (adim[1] > pdim[1]) {
		ymin = (adim[1] - pdim[1])/2;
		ymax = ymin + pdim[1] - 1;
		y0 = ymin - 1;
	} else {
		ymin = 1;
		ymax = adim[1];
		y0 = 0;
	}
	if (adim[2] > pdim[2]) {
		zmin = (adim[2] - pdim[2])/2;
		zmax = zmin + pdim[2] - 1;
		z0 = zmin - 1;
	} else {
		zmin = 1;
		zmax = adim[2];
		z0 = 0;
	}

	fprintf (stdout, "z =   ");
	for (z = zmin; z <= zmax; ++z) {
		fprintf (stdout, "%c%c%2d", 8, 8, (int) z + 1);
		(void) fflush (stdout);
		for (y = ymin; y <= ymax; ++y) {
			for (x = xmin; x <= xmax; ++x) {
				if (use_mask == 1 && mask[z][y][x] == 0);
				else {
					val = pet[z-z0][y-y0][x-x0];
					atl[z][y][x] += val * weight;
					totwt[z][y][x] += weight;
					if (compute_sd == 1)
						sd[z][y][x] += val * val;
				}
			}
		}
	}
	fprintf (stdout, "\n");
}
@


2.2
log
@lint cleaning
@
text
@d2 3
d18 1
a18 1
	$Header: /home/npggw/tom/src/t88mean/RCS/noatlas_transform.c,v 2.1 1998/04/27 20:24:29 tom Exp tom $
d22 1
a22 1
 *	Date:			31-Aug-95
d27 1
d29 1
a29 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/t88mean/RCS/noatlas_transform.c,v 2.1 1998/04/27 20:24:29 tom Exp tom $";
a32 1
#include <myvalues.h>				 /* BOOLEAN, TRUE, FALSE */
d47 2
a48 2
	BOOLEAN         use_mask;		 /* if true, only include pixels in mask */
	BOOLEAN         compute_sd;		 /* if true, compute sum of squares */
d90 1
a90 1
		fflush (stdout);
d93 1
a93 1
				if (use_mask && !mask[z][y][x]);
d98 1
a98 1
					if (compute_sd)
@


2.1
log
@dimensions properly declared as long
@
text
@d2 3
d15 1
a15 1
	$Header: /home/npggw/tom/src/t88mean/RCS/noatlas_transform.c,v 2.0 1996/05/10 21:59:07 tom Exp tom $
d24 4
a30 5
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/t88mean/RCS/noatlas_transform.c,v 2.0 1996/05/10 21:59:07 tom Exp tom $";

#endif

d41 1
a41 1
	float           weight;
d86 1
a86 1
		fprintf (stdout, "%c%c%2d", 8, 8, z + 1);
@


2.0
log
@new libimage
indexing from 1 on images and atlas
@
text
@d2 4
d12 1
a12 1
	$Header: /home/npggw/tom/src/t88mean/RCS/noatlas_transform.c,v 1.2 1995/11/10 18:48:10 tom Exp tom $
d25 1
a25 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/t88mean/RCS/noatlas_transform.c,v 1.2 1995/11/10 18:48:10 tom Exp tom $";
d35 1
a35 1
	float          *pdim;			 /* pet image dimensions */
d37 1
a37 1
	float          *adim;			 /* atlas image dimensions */
@


1.2
log
@remove petutil parent directory from include statements
@
text
@d2 3
d8 1
a8 1
	$Header: /export/home/npggw/tom/src/t88mean/RCS/noatlas_transform.c,v 1.1 1995/08/31 21:59:21 tom Exp tom $
a16 1

d18 1
a18 2
#include <package.h>			 /* BOOLEAN, TRUE, FALSE */
#include "atlas.h"				 /* BRAIN_ATLAS, MATRIX, DIM, MATDIM, POINT */
d20 2
a21 1
static char     rcsid[] = "$Header: /export/home/npggw/tom/src/t88mean/RCS/noatlas_transform.c,v 1.1 1995/08/31 21:59:21 tom Exp tom $";
d23 2
d29 6
a34 4
void            noatlas_transform (pet, atl, sd, weight, totwt, atlas, mask, use_mask, compute_sd)
	REAL_SLICE     *pet;			 /* PET image array */
	REAL_SLICE     *atl;			 /* atlas image array */
	REAL_SLICE     *sd;			 /* sum of squares */
d36 2
a37 4
	REAL_SLICE     *totwt;			 /* number of images contributing to each pixel in
						  * atlas array */
	BRAIN_ATLAS     atlas;			 /* brain atlas definition */
	REAL_SLICE     *mask;			 /* mask for PET images */
d43 4
a46 2
	int             x, y, z;		 /* indices to PET */
	int             i, j, k;
d48 30
d79 1
a79 1
	for (z = 0; z < atlas.nz; ++z) {
d82 2
a83 2
		for (y = 0; y < atlas.ny; ++y) {
			for (x = 0; x < atlas.nx; ++x) {
d86 1
a86 1
					val = pet[z][y][x];
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
/*	$Log$
	$Header$
d16 1
a16 1
#include <petutil/package.h>			 /* BOOLEAN, TRUE, FALSE */
d19 1
a19 1
static char     rcsid[] = "$Header$";
@
