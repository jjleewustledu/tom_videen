head	1.8;
access;
symbols;
locks; strict;
comment	@c @;


1.8
date	94.05.18.15.53.30;	author tom;	state Exp;
branches;
next	1.7;

1.7
date	93.08.26.17.26.22;	author tom;	state Exp;
branches;
next	1.6;

1.6
date	93.08.20.20.23.53;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	93.08.19.22.55.22;	author tom;	state Exp;
branches;
next	;


desc
@a corrected hd6mean-atlas version of t88mean
@


1.8
log
@changed $Id$ to $Header$
@
text
@      SUBROUTINE IMGROTE (IMAGE, MASK, NSLICE, NCOL, NROW, FOV, MMPPIX, PARAM, DEL, JAXIS, SCALE, ERR)

C		For the current PARAM, computes the averaged squared asymmetry of the image, ERR,
C		(within the mask) about JAXIS

      REAL*4		IMAGE(NCOL,NROW,NSLICE)
      INTEGER*2 MASK(NCOL,NROW,NSLICE)
			INTEGER*2	NSLICE
			INTEGER*2	NCOL
			INTEGER*2	NROW
      REAL*4 		FOV(3)
      REAL*4		MMPPIX(3)
      REAL*4 		PARAM(12)
      REAL*4    DEL					! sampling interval in the virtual image
      INTEGER*4 JAXIS
			REAL*4 		SCALE
			REAL*4		ERR

      REAL*4 		V(2)
      REAL*4 		X(3)
      REAL*4 		XP(3)
      REAL*4 		TROT(4,4)
      REAL*4		C(4,4)
      REAL*4 		T(4,4)
			INTEGER*4	N1
			INTEGER*4	N4
      LOGICAL*4 LVALID(2)
			CHARACTER*256	RCSHEADER

			DATA N1, N4 /1,4/

			RCSHEADER = "$Header: imgrote.f,v 1.1 92/12/30 04:21:16 tom Exp $"
      IF (JAXIS.LT.1 .OR. JAXIS.GT.3) STOP 'IMGROTE: JAXIS BAD'
      NX = NINT(.5*FOV(1)/DEL)
      NY = NINT(.5*FOV(2)/DEL)
      NZ = NINT(.5*FOV(3)/DEL)
      IF (JAXIS.EQ.1) THEN
        NX0 = 1
      ELSE
        NX0 = -NX + 1
      ENDIF
      IF (JAXIS.EQ.2) THEN
        NY0 = 1
      ELSE
        NY0 = -NY + 1
      ENDIF
      IF (JAXIS.EQ.3) THEN
        NZ0 = 1
      ELSE
        NZ0 = -NZ + 1
      ENDIF

C		Translate from virtual -> image coordinates  (PARAM (7:9) are put in C

      CALL VRT2IMG (MMPPIX, PARAM(7), C)

C		The nudge & rotation about the origin, PARAM(1:6), are put in TROT

      CALL TROTCAL (N1, PARAM, TROT)

C		The 2 matrices are multipled to create the new position matrix, T

			CALL MATMUL (C, TROT, T, N4)

C		Compute the noise for this position

      ERR = 0.
      N = 0
      DO 400 KX=NX0,NX
      	DO 300 KY=NY0,NY
      		DO 200 KZ=NZ0,NZ
      			DO 100 JSIGN=1,2
      				X(1) = (FLOAT(KX)-.5)*DEL
      				X(2) = (FLOAT(KY)-.5)*DEL
      				X(3) = (FLOAT(KZ)-.5)*DEL
      				IF (JSIGN.EQ.2) X(JAXIS) = -X(JAXIS)
      				DO L=1,3
     				   XP(L) = T(L,1)*X(1) + T(L,2)*X(2) + T(L,3)*X(3) + T(L,4)
      				ENDDO
      				IX = NINT(XP(1)-.5)
      				WX = XP(1) - FLOAT(IX)
      				IY = NINT(XP(2)-.5)
      				WY = XP(2) - FLOAT(IY)
      				IZ = NINT(XP(3)-.5)
      				WZ = XP(3) - FLOAT(IZ)
      				IF (IZ.EQ.0 .AND. WZ.GT.0.999) THEN
        				IZ = 1
        				WZ = 0.
      				ENDIF
      				IF (IZ.EQ.NSLICE .AND. WZ.LT.0.001) THEN
        				IZ = NSLICE-1
        				WZ = 1.
      				ENDIF

      				IF (IX.LE.1 .OR. IX.GE.NCOL) THEN
								LVALID(JSIGN) = .FALSE.

      				ELSE IF (IY.LE.1 .OR. IY.GE.NROW) THEN
								LVALID(JSIGN) = .FALSE.

      				ELSE IF (IZ.LT.1 .OR. IZ.GE.NSLICE) THEN
								LVALID(JSIGN) = .FALSE.

      				ELSE IF  (MASK(IX,  IY  ,IZ)  .EQ.0
     &					 	 .OR. MASK(IX+1,IY  ,IZ)  .EQ.0
     &						 .OR. MASK(IX,  IY+1,IZ)  .EQ.0
     &						 .OR. MASK(IX+1,IY+1,IZ)  .EQ.0
     &						 .OR. MASK(IX,  IY  ,IZ+1).EQ.0
     &						 .OR. MASK(IX+1,IY  ,IZ+1).EQ.0
     &						 .OR. MASK(IX,  IY+1,IZ+1).EQ.0
     &						 .OR. MASK(IX+1,IY+1,IZ+1).EQ.0) THEN
								LVALID(JSIGN) = .FALSE.

							ELSE
      					V(JSIGN) = SCALE * (
     &						(1.-WZ) * ((1.-WY)* ((1.-WX)*IMAGE(IX, IY  ,IZ)   + WX*IMAGE(IX+1,IY  ,IZ))
     &          	          +    WY * ((1.-WX)*IMAGE(IX, IY+1,IZ)   + WX*IMAGE(IX+1,IY+1,IZ)))
     &    				+  WZ   * ((1.-WY)* ((1.-WX)*IMAGE(IX, IY  ,IZ+1) + WX*IMAGE(IX+1,IY  ,IZ+1))
     &          	          +    WY * ((1.-WX)*IMAGE(IX, IY+1,IZ+1) + WX*IMAGE(IX+1,IY+1,IZ+1))))
      					LVALID(JSIGN) = .TRUE.

							ENDIF
100 				CONTINUE
      			IF (.NOT.(LVALID(1) .AND. LVALID(2))) GOTO 200
      			N = N+1
      			ERR = ERR + (V(1) - V(2))**2
200				CONTINUE
300			CONTINUE
400		CONTINUE
      ERR = ERR/FLOAT(N)

      RETURN
      END
@


1.7
log
@changed atlas y-dim to used 5 mm between brain and skull
@
text
@d32 1
a32 1
			RCSHEADER = "$Id: imgrote.f,v 1.6 1993/08/20 20:23:53 tom Exp tom $"
@


1.6
log
@first version with Talairach 1988 atlas
@
text
@d32 1
a32 1
			RCSHEADER = "$Id: imgrote.f,v 1.5 1993/08/19 22:55:22 tom Exp tom $"
@


1.5
log
@a corrected hd6mean-atlas version of t88mean
@
text
@d32 1
a32 1
			RCSHEADER = "$Id$"
@
