head	1.10;
access;
symbols;
locks; strict;
comment	@ * @;


1.10
date	96.02.28.20.53.35;	author tom;	state Exp;
branches;
next	1.9;

1.9
date	94.10.03.16.17.13;	author tom;	state Exp;
branches;
next	1.8;

1.8
date	94.05.18.15.53.30;	author tom;	state Exp;
branches;
next	1.7;

1.7
date	93.08.26.17.26.35;	author tom;	state Exp;
branches;
next	1.6;

1.6
date	93.08.20.20.24.07;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	93.08.19.22.55.48;	author tom;	state Exp;
branches;
next	;


desc
@a corrected hd6mean-atlas version of t88mean
@


1.10
log
@*** empty log message ***
@
text
@/* $Log: center_of_mass.c,v $
 * Revision 1.9  1994/10/03  16:17:13  tom
 * Change calling parameters to sxr_center;
 *
 * Revision 1.8  1994/05/18  15:53:30  tom
 * changed $Id: center_of_mass.c,v 1.9 1994/10/03 16:17:13 tom Exp tom $ to $Header: /home/npggw/tom/src/t88mean/RCS/center_of_mass.c,v 1.9 1994/10/03 16:17:13 tom Exp tom $
 * */
/*	========================================================================
 *	Module:			center_of_mass.c
 *	Date:			18-Aug-93
 *	Author:			Tom Videen
 *	Description:    Compute x-center-of-mass of an image for pixels within a mask.
 *
 *	Input:
 *		image   -   PET image;
 *		mask    -   masking image;
 *		nslice  -   number of slices;
 *		nx      -   x-dimension;
 *		ny      -   z-dimension;
 *
 *	Output:
 *		center  -   center[0] is coordinate of x-center-of-mass;
 *		npix    -   number of pixels within the mask;
 *		mean    -   mean pixel value within the mask;
 *
 *	Algorithm:
 *		1)  For all PET pixels within the mask
 *		    a)  sum (x_index * pixel_value)
 *		    b)  sum pixel_value
 *		    c)  sum pixels
 *		2)  mean_pixel_value = sum(b) / sum(c)
 *		3)  center-of-mass = sum(a) / mean_pixel_value
 *
 *	========================================================================
 */
#include <stdio.h>

#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/t88mean/RCS/center_of_mass.c,v 1.9 1994/10/03 16:17:13 tom Exp tom $";
#endif

/*	-----------------------
 *	Function center_of_mass
 *	-----------------------
 */
void            center_of_mass (image, mask, nslice, nx, ny, center, npix, mean)
	float          *image;
	short          *mask;
	short           nslice;
	short           nx;
	short           ny;
	float          *center;
	int            *npix;
	float          *mean;
{
	float           xsum;
	float           val;
	int             index;
	int             slicedim;
	int             i, j, k;

	slicedim = nx * ny;
	*npix = 0;
	xsum = 0;
	center[0] = 0;
	for (i = 0; i < nslice; ++i) {
		for (j = 0; j < ny; ++j) {
			for (k = 0; k < nx; ++k) {
				index = (i * slicedim) + (j * nx) + k;
				if (*(mask + index) > 0) {
					(*npix)++;
					val = *(image + index);
					xsum += val;
					center[0] += val * k;
				}
			}
		}
	}
	*mean = xsum / *npix;
	center[0] /= xsum;
}
@


1.9
log
@Change calling parameters to sxr_center;
@
text
@d2 3
d6 1
a6 1
 * changed $Id$ to $Header$
d13 1
a13 1
 *	 
d17 1
a17 1
 *		nslice  -   number of slices;   
d19 2
a20 2
 *		ny      -   z-dimension;    
 *	 
d25 1
a25 1
 *	
a35 1

d38 3
a40 1
static char     rcsid[] = "$Header: /export/home/npggw/tom/src/t88mean/RCS/center_of_mass.c,v 1.8 1994/05/18 15:53:30 tom Exp tom $";
d46 1
a46 2
void 
center_of_mass (image, mask, nslice, nx, ny, center, npix, mean)
@


1.8
log
@changed $Id$ to $Header$
@
text
@d1 4
a4 1
/* $Log$ */
d6 25
a30 7
 *	Module:				center_of_mass.c
 *	Date:					18-Aug-93
 *	Author:				Tom Videen
 *	Description:	Compute center of mass of an image for pixels within a mask.
 *								Returns computed center[0], the number of pixels (npix) and
 *								the mean pixel value within the mask (mean).
 *								(center[0] is returned as a C-array index)
d36 1
a36 1
static char rcsid []= "$Header: center_of_mass.c,v 1.1 92/12/30 04:20:34 tom Exp $";
d42 10
a51 9
void center_of_mass (image, mask, nslice, nx, ny, center, npix, mean)
	float		*image;
	short 	*mask;
	short		nslice;
	short 	nx;
	short 	ny;
	float 	*center;
	int			*npix;
	float		*mean;
d53 5
a57 5
	float		xsum;
	float		val;
	int			index;
	int			slicedim;
	int			i, j, k;
d64 1
a64 1
		for (j = 0 ; j < ny; ++j) {
d76 1
a76 1
  *mean = xsum / *npix;
@


1.7
log
@changed atlas y-dim to used 5 mm between brain and skull
@
text
@d1 1
a1 1
/* $Log */
d15 1
a15 1
static char rcsid []= "$Id: center_of_mass.c,v 1.6 1993/08/20 20:24:07 tom Exp tom $";
@


1.6
log
@first version with Talairach 1988 atlas
@
text
@d15 1
a15 1
static char rcsid []= "$Id: center_of_mass.c,v 1.5 1993/08/19 22:55:48 tom Exp tom $";
@


1.5
log
@a corrected hd6mean-atlas version of t88mean
@
text
@d15 1
a15 1
static char rcsid []= "$Id$";
@
