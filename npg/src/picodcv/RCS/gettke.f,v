head	1.4;
access;
symbols;
locks; strict;
comment	@c @;


1.4
date	2004.02.17.15.10.36;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	99.06.29.19.20.25;	author tom;	state Exp;
branches;
next	;


desc
@joanne version 29-Jun-99
@


1.4
log
@Feb 2004
@
text
@C	Subroutine:   GETTKE
C	Author:       Avi Snyder
C	Date:         07-Jul-91
C	Intent:
C		Returns deconvolution parameters T,AK,E
C		Parameters determined by KEHFIT and THFIT
C	History:
C		02-Oct-95 TOV Clean up code.
C
C
C
C       Modified ; for new Pico-Counter detector
C                  by Joanne Markham  , June 1999
C                  entered parameters for AK and E as table
C                  since there were only 4 studies and 
C                  the two parameters AK and E were highly 
C                  correlated and nonlinear with respect to
C                  hct 



	SUBROUTINE GETTKE (T, AK, E, HEMATOCRIT)

	REAL*4		T, AK, E, HEMATOCRIT
	REAL*4     HA(10),AKA(10),EA(10)
	INTEGER*4   USERIN, USEROUT
	CHARACTER*80	Q
	CHARACTER*256	RCSHEADER

	COMMON /USRIO/ USERIN,USEROUT
         DATA NA/4/
	 DATA HA/0.26, .32, .39, .40, 6*0./
	 DATA AKA /0.19635, 0.262813, 0.272805, 0.249515, 6*0./
	 DATA EA /0.157090, 0.0789173 , 0.0672355,0.104969,6*0./

	RCSHEADER = "$Id: gettke.f,v 1.1 1999/06/29 19:20:25 tom Exp tom $"

	WRITE (USEROUT,8000)
8000	FORMAT(' CATHETER                  NUMBER'/
     &' 35    cm @@  5.00 cc/min        1  (standard)'/
     &' 35+10 cm @@  5.00 cc/min        2  (extension)')

	Q = "Catheter Number"
	N = 1
	CALL GETINT(Q,N,0,10)

	IF (N.NE.1 .AND. N.NE.2) THEN
		Q = "T0"
		CALL GETREAL(Q,T0,0.,100.)
		Q = "AK1"
		CALL GETREAL(Q,AK1,0.,100.)
		Q = "E"
		CALL GETREAL(E,T0,0.,100.)
		RETURN
     	ENDIF 
		Q = "Hematocrit (%)"
		CALL GETREAL(Q,HEMATOCRIT,20.,60.)
		HCT = HEMATOCRIT / 100.

		IF (N .ne. 1)  THEN
		STOP 1
	        ENDIF	
		T =  8.729534   + 6.2407788  * HCT  
C
C  for now interpolate as curve is nonlinear
C  also K1 and E are highly correlated
C  EXTRAPOLATE if necessary at either end of arrays
C
  	      write (6,*) hct
	       If (hct .lt. HA(1)) then
	       SLOPE = (AKA(2) - AKA(1))/(HA(2) - HA(1))
	       B0  =  AKA(1) - HA(1)*slope
	       AK = SLOPE*HCT + B0
	       SLOPE = (EA(2) - EA(1))/(HA(2) - HA(1))
		B0  =  EA(1) - HA(1)*slope 
	        E  = SLOPE*HCT + B0
	       go to 200
	       endif
	        If (hct .gt. HA(NA)) then
        	 m = na-1
	       SLOPE = (AKA(M) - AKA(NA))/(HA(M) - HA(NA))
               B0  =  AKA(NA) - HA(NA)*slope 
	       AK = SLOPE*HCT + B0
               SLOPE = (EA(M) - EA(NA))/(HA(M) - HA(NA))
	       B0  =  EA(NA) - HA(NA)*slope 
	       E = SLOPE*HCT + B0
	       go to 200
	       endif

	      do 120 i=1,na		
c              write (6,*) ' i, at 120 ',i

	       if (HA(I) - hct) 120,130, 140
120     continue
130             AK = AKA(i)
		E = EA(i)
		go to 200
140     continue          	
                j = i-1
		ratio = (hct- ha(j))/(ha(i) -ha(j))
		AK = AKA(j) + ratio *(AKA(i)-AKA(j))
		E = EA (j) + ratio *(Ea(I) -  EA(j))

200    continue
	     RETURN
	END
@


1.1
log
@Initial revision
@
text
@d36 1
a36 1
	RCSHEADER = "$Id: gettke.f,v 1.2 1996/01/25 21:17:59 tom Exp $"
@
