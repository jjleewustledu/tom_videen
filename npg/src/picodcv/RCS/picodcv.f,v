head	1.4;
access;
symbols;
locks; strict;
comment	@c @;


1.4
date	2004.02.17.15.10.36;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	99.06.29.21.22.40;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	99.06.29.19.20.25;	author tom;	state Exp;
branches;
next	;


desc
@joanne version 29-Jun-99
@


1.4
log
@Feb 2004
@
text
@C$Header: /home/npggw/tom/src/picodcv/RCS/picodcv.f,v 1.2 1999/06/29 21:22:40 tom Exp tom $
C$Log: picodcv.f,v $
c Revision 1.2  1999/06/29  21:22:40  tom
c read pico-counter data files
c
c Revision 1.1  1999/06/29  19:20:25  tom
c Initial revision
C
C  Modified:   June 1999 for new PICO-COUNT detector
C     Use same equation for detector response with different parameter values (gettke).
C     Other modifications:
C      1)  interpolate blood curve using sampling theory
C          (new subroutine sampt, expand no longer needed)
C      2)  increased arrays sizes for fft (in fftpe as well as
C          main routine)
C      3)  modified constants in fftpe for SUN
C      4)  zero padded arrays of response and blood curve
C                     
c Revision 1.10  1998/07/27  17:51:43  tom
c automatically subtract 105 sec for added points to CO curve
c
c Revision 1.9  1996/10/31  19:13:03  tom
c fix loop in adding points
c
c Revision 1.8  1996/10/31  16:53:43  tom
c sync with Version
c
c Revision 1.5  1996/10/31  16:49:27  tom
c change array declarations to reflect actual space in picodcv.f and fftpe.f
c
c Revision 1.4  1996/10/29  22:29:24  tom
c permit >1 additional points at end of curve
c
c Revision 1.3  1996/01/25  21:17:35  tom
c prompt for hand drawn points for all curves
c
c Revision 1.2  1995/11/09  19:44:42  tom
c chnage format for output line 1
c
c Revision 1.1  1995/11/09  19:29:25  tom
c Initial revision
c
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  Program:	PICODCV.FTN
C  Author:	Avi Snyder (BETADTA)
C  Date:	05-Sep-90
C  Intent:	Automated blood sampler data files
C  History:
C	 09-Nov-95	TOV Cut out everything but deconvolution and 
C				decay-correction of blood curve.
C    29-Jun-99  Joanne Markham modification for Pico-count
C
C  Logical Units:
C		2 = Input blood curve (PICODATA)
C		3 = Output blood curve (DCVFILE)
C		5 = User input (USERIN)
C		6 = User output (USEROUT)
C
C  Uses Subroutines contained in:
C	 DECONV
C	 FFTPE
C	 GETTKE
C
C  Internal Subroutines:
C	 CRVCOPY
C	 EXPAND
C	 CRVMIN
C	 MAXCRV
C	 CRVSMO
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
	PROGRAM PICODCV
C
	INTEGER*4	PICOFILE	! input pico-counter data file
	INTEGER*4	DCVFILE		! output DCV file
	INTEGER*4	USERIN		! log unit assigned for terminal input
	INTEGER*4	USEROUT		! log unit for terminal output!
	INTEGER*4	XBIN		! extra time bins for hand drawn samples
	INTEGER*4	SCANTYPE 	! type of scan (1-6)
	INTEGER*4	NBIN		! number of input data bins
	INTEGER*4	NBINE		! number of expanded data bins
	INTEGER*4	I, K, J1, J2, J3
	INTEGER*4	CORRCPS

	CHARACTER*8		STR
	CHARACTER*20	START
	CHARACTER*80	PICONAME, DCVNAME
	CHARACTER*80	Q
	CHARACTER*15	NUCLIDE(6)
	CHARACTER*34	RUNTYPE(6)

	LOGICAL*1		ANSWER

	PARAMETER	(NBINMAX = 16384)
	REAL*4		BSRF(NBINMAX)	! Blood sucker impulse response function
	REAL*4		BLOOD(NBINMAX)	! Raw blood curve
	REAL*4		BCINT(NBINMAX)	! Interpolated blood curve 
	REAL*4		DCVBLD(NBINMAX)	! Decay corrected deconvolved blood curve
	REAL*4		TMP(2*NBINMAX + 4)	! Scratch array
	REAL*4		HEMATOCRIT
	REAL*4		OXYCONT
	REAL*4		COUNTS(100)
	REAL*4		TIME(100)
	REAL*4		COUNT1
	REAL*4		TIME1
	REAL*4		TIMPBIN
	REAL*4		HALFLIFE(6)
	REAL*4		LAMBDA
	REAL*4		SEQ, DURATION
	REAL*4		X

	CHARACTER*256	RCSHEADER
	COMMON /USRIO/ USERIN,USEROUT

	RCSHEADER = "$Id: picodcv.f,v 1.2 1999/06/29 21:22:40 tom Exp tom $"
	DATA	NBINFIT /3/
	DATA	PICOFILE, DCVFILE /2,3/
	DATA 	USERIN, USEROUT /5,6/

	DATA  RUNTYPE(1) /'O-15 Oxygen Metabolism Study  (OO)'/
	DATA  RUNTYPE(2) /'O-15 Water Blood Flow Study   (HO)'/
	DATA  RUNTYPE(3) /'O-15 Blood Volume Study       (CO)'/
	DATA  RUNTYPE(4) /'C-11 Butanol Blood Flow Study (BU)'/
	DATA  RUNTYPE(5) /'F-18 Study                        '/
	DATA  RUNTYPE(6) /'Misc. Study                       '/

	DATA  NUCLIDE(1) /'O-15 '/
	DATA  NUCLIDE(2) /'N-13 '/
	DATA  NUCLIDE(3) /'C-11 '/
	DATA  NUCLIDE(4) /'Ga-68'/
	DATA  NUCLIDE(5) /'F-18 '/
	DATA  NUCLIDE(6) /'NONE (no decay)'/

C  Halflives are in seconds with same number of significant figures as
C  given in the following source:
C  Lederer & Shirley, Table of Isotopes, 1978 (7th edition), John Wiley.

	DATA  HALFLIFE(1) /122.1/  ! METEVAL compatible
	DATA  HALFLIFE(2) /597.8/
	DATA  HALFLIFE(3) /1223./
	DATA  HALFLIFE(4) /4100./
	DATA  HALFLIFE(5) /6583.2/
	DATA  HALFLIFE(6) /1.0E+9/

	CALL GETARG (1, PICONAME)
	CALL GETARG (2, DCVNAME)

	Q = "Well Counter Conversion Multiplier"
	WELLF = 0.0
	CALL GETREAL(Q,WELLF,1.,100.)

C	Read Pico-Counter Data file

	GOTO 20
10	STOP 'ERROR reading pico-counter file'
8000	FORMAT(A8)
8010	FORMAT(17X,A20)
8020	FORMAT(3F)
8100	FORMAT(I,F,I,10X,I,I)

20	OPEN (PICOFILE, FILE = PICONAME, STATUS = 'OLD', ERR = 10)
	READ (PICOFILE, 8000, ERR=10) STR
	READ (PICOFILE, 8000, ERR=10) STR
	READ (PICOFILE, 8000, ERR=10) STR
	READ (PICOFILE, 8010, ERR=10) START
	READ (PICOFILE, 8000, ERR=10) STR
	READ (PICOFILE, 8000, ERR=10) STR
	IF (STR .NE. 'SEQUENCE') STOP 'Line 6 of this file should begin with SEQUENCE'
	READ (PICOFILE, 8020, ERR=10) SEQ, TIMPBIN, DURATION
	READ (PICOFILE, 8000, ERR=10) STR
	READ (PICOFILE, 8000, ERR=10) STR
	READ (PICOFILE, 8000, ERR=10) STR
	READ (PICOFILE, 8000, ERR=10) STR

	NBIN = 0
	DO 30 I = 1, NBINMAX
		READ (PICOFILE, 8100, ERR=40) J1, X, J2, J3, CORRCPS
		IF (J1 .LE. 0) GOTO 40
		NBIN = NBIN + 1
		BLOOD(I) = CORRCPS * WELLF
30	CONTINUE
40	CLOSE (PICOFILE)

	CALL GETTKE (T0, AK1, E, HEMATOCRIT)
	
	NBUF = IFIX (20. / TIMPBIN) + 1   ! 20-sec deconvolution buffer
	NEXPAND = 7
100	TIMPBINE = TIMPBIN * (.5) ** NEXPAND
	U = AK1 * (FLOAT (NBINMAX/2.) * TIMPBINE - T0)
	IF (U .GT. 0. .AND. E * U ** 2 .GT. 20.) GOTO 110
	NEXPAND = NEXPAND - 1
	GOTO 100
110	N = IFIX(ALOG(FLOAT(NBINMAX/2) / FLOAT(NBIN + NBUF)) / ALOG(2.))
	NEXPAND = MIN0(NEXPAND, N)
	TIMPBINE = TIMPBIN * (.5) ** NEXPAND
	IF (2 ** NEXPAND * NBIN .GT. NBINMAX/2) THEN
 		WRITE (USEROUT, "('Too many time bins  ',I)"), NBIN
		WRITE (USEROUT, *) ' NEXPAND, TIMPBINE ', NEXPAND,TIMPBINE
	 	STOP 'NBIN TOO LARGE'
	ENDIF

C	KERNEL CALCULATION

	DO 120 I = 1, NBINMAX/2
		U = AK1 * (FLOAT(I - 1) * TIMPBINE - T0)
		IF (U .LE. 0. .OR. E * U ** 2 .GT. 20.) THEN
			BSRF(I) = 0.
		ELSE
			R = 1. / (1. + U)
			BSRF(I) = AK1 * TIMPBINE * R * EXP(-E * U ** 2) * (2. * E * U + R)
		ENDIF
120	CONTINUE
	I0 = IFIX(T0 / TIMPBINE)
	T = 0.
	DO 130 I = 1, NBINMAX
		T = T + BSRF(I)
130	CONTINUE
	WRITE (USEROUT,8200) T
8200	FORMAT ("Impulse response fn area =", F8.4)
	DO 140 I = 1, NBINMAX
		BSRF(I) = BSRF(I) / T
140	CONTINUE

	Q = "Smoothing factor for deconvolved curve"
	NSMO = 2
	CALL GETINT(Q,NSMO,0,10)
			
C  Get Scan Type

8600	FORMAT (4X, I1, ' = ', A)
	DO 141 I = 1, 6
		WRITE (USEROUT, 8600) I, RUNTYPE (I)
141	CONTINUE
	WRITE (USEROUT, *)
	Q = "Scan Type"
	CALL GETINT (Q, SCANTYPE, 1, 6)

C  Get ISOTOPE if it is not specified by the scan type

	IF (SCANTYPE .GE. 6) THEN
		WRITE (USEROUT, *)
		DO 142 I=1,6
		WRITE (USEROUT, 8600) I, NUCLIDE (I)
142   CONTINUE
		WRITE (USEROUT, *)
		Q = 'Isotope Number'
		CALL GETINT (Q, ISOTOPE, 1, 6)
		WRITE (USEROUT, *) 'Isotope = ', NUCLIDE (ISOTOPE)
	ELSE
		IF (SCANTYPE .EQ. 4) THEN
			ISOTOPE = 3
		ELSE IF (SCANTYPE .EQ. 5) THEN
			ISOTOPE = 5
		ELSE
			ISOTOPE = 1
		ENDIF
	ENDIF
	LAMBDA = ALOG(2.) / HALFLIFE(ISOTOPE)
	TYPE "(' Halflife =',F9.2,' seconds  Lambda = ', F)", HALFLIFE(ISOTOPE), LAMBDA

	OPEN (DCVFILE, FILE = DCVNAME, STATUS = 'NEW', ERR = 150)
	GOTO 200
150	OPEN (DCVFILE, FILE = DCVNAME, STATUS = 'OLD', ERR = 160)
	GOTO 200
160	WRITE (USEROUT, 8300) DCVFILE
	STOP
8300	FORMAT ("ERROR: Cannot open ", A20) 
200	CONTINUE

	DO 610 I = NBIN + 1, NBINMAX
		BLOOD(I) = 0.
610	CONTINUE
	do 615 I = 1, NBINMAX
615		BCINT(I) =0.
	NBINE = 2 ** NEXPAND * NBIN
C
C   USE sampling theory to interpolate
C
	call sampt (nbin,timpbin,BLOOD, NBINE,timpbine,BCINT)

	 do 620 i=1,nbine
620		BLOOD(I) = BCINT(I)

C	Decay-correct blood curve
	IF (LAMBDA.eq.0.) go to 626
	DO 625 I = 1, NBINE
		BLOOD(I) = BLOOD(I) * EXP(LAMBDA * I * TIMPBINE)
625	CONTINUE
626	CONTINUE
	NBUFE = NBUF * 2 ** NEXPAND
	DO 630 I = 1, NBUFE
		BLOOD(NBINMAX-I+1) = BLOOD(1)
630	CONTINUE

C	Deconvolve

	CALL DECONV (BLOOD, BSRF, DCVBLD, NBINMAX, TMP)
	K = NBINE / NBIN
	DO 640 I = 1, NBIN
		DCVBLD(I) = DCVBLD(I * K +1)
640	CONTINUE
	DO 650 I = 1, NSMO
		CALL CRVSMO (DCVBLD, NBIN)
650	CONTINUE

C	Eliminate negative counts

	CALL CRVMIN(DCVBLD, NBIN, 0.0)

C	Two extra points for oxygen

	XBIN = 0
	TIME1 = FLOAT(NBIN) * TIMPBIN
	COUNT1 = 0.
	OXYCONT = 0.
	IF (SCANTYPE .EQ. 1) THEN
		Q = 'Oxygen Content (ml/ml)'
		CALL GETREAL (Q, OXYCONT, 0.01, 0.40)
		WRITE (USEROUT,*) "Add 2 blood points to end of curve for oxygen"
		WRITE (USEROUT,*) "for calculation of recirculating water fraction."
		WRITE (USEROUT,*) "Last point should be the plasma counts."
800		CALL BLDENTER(LAMBDA, TIME1, COUNT1, SCANTYPE)
		IF (COUNT1 .GT. 0.) THEN	
			XBIN = XBIN + 1
			TIME(XBIN) = TIME1
			COUNTS(XBIN) = COUNT1
		ENDIF
		Q = "Add another point"
		CALL YESNO(Q,ANSWER)
		IF (ANSWER) GO TO 800
	ELSE
		Q = "Add a point to the curve"
		CALL YESNO(Q,ANSWER)
		IF (ANSWER) THEN
810			CALL BLDENTER(LAMBDA, TIME1, COUNT1, SCANTYPE)
			IF (COUNT1 .GT. 0.) THEN	
				XBIN = XBIN + 1
				TIME(XBIN) = TIME1
				COUNTS(XBIN) = COUNT1
			ENDIF
			Q = "Add another point to the curve"
			CALL YESNO(Q,ANSWER)
			IF (ANSWER) GO TO 810
		ENDIF
	ENDIF

C  Write to DCV file:  Time, Decay-corrected deconvolved blood counts

8700	FORMAT(A20,2X,I4,F8.4,F6.1,2X,'WELLF=',F8.4,' T0=',F5.2,' K1=',
     & F6.3,' E=',F4.3,' NSMO=', I2,2X,A20)
8900	FORMAT (F9.1, F14.1)

	WRITE (DCVFILE, 8700) START, NBIN+XBIN, OXYCONT, HEMATOCRIT, WELLF, T0, AK1, E, NSMO, PICONAME
	DO 900 I=1,NBIN
		WRITE (DCVFILE, 8900) FLOAT(I) * TIMPBIN, DCVBLD(I)
900	CONTINUE
	IF (XBIN .GT. 0) THEN
		DO 910 I=1,XBIN
			WRITE (DCVFILE, 8900) TIME(I), COUNTS(I)
910		CONTINUE
	ENDIF
	CLOSE(1)
	STOP
	END
C
	SUBROUTINE CRVCOPY (A, N, B)
	REAL*4 A(N), B(N)
	DO 10 I = 1, N
10	B(I) = A(I)
	RETURN
	END
C
	SUBROUTINE EXPAND (A, NBIN)
	REAL*4 A(NBIN*2)
	DO 10 I = 1, NBIN
		II = NBIN - I + 1
10		A(2*II) = A(II)
	DO 20 I = 1, NBIN - 1
		II = 2 * I
20		A(II+1) = .5 * (A(II) + A(II + 2))
	NBIN = 2 * NBIN
	RETURN
	END
C
	SUBROUTINE CRVMIN (X, N, A)
	REAL*4 X(N)
	DO 10 I = 1, N
10	X(I) = AMAX1(X(I), A)
	RETURN
	END
C
	SUBROUTINE CRVSMO (A, N)
	REAL*4 A(N*2)
	T = A(1)
	DO 10 I = 2, N
		U = A(I - 1) + 2. * A(I) + A(I + 1)
		A(I - 1) = T
10		T = .25 * U
	RETURN
	END
@


1.2
log
@read pico-counter data files
@
text
@d1 1
a1 1
C$Header: /home/npggw/tom/src/picodcv/RCS/picodcv.f,v 1.1 1999/06/29 19:20:25 tom Exp tom $
d3 3
d117 1
a117 1
	RCSHEADER = "$Id: picodcv.f,v 1.1 1999/06/29 19:20:25 tom Exp tom $"
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
C$Header: /home/npggw/tom/src/picodcv/RCS/picodcv.f,v 1.10 1998/07/27 17:51:43 tom Exp $
d3 2
d7 1
a7 2
C              Use same equation for detector response with
C              different parameter values (gettke). 
a8 1
C    
d52 1
a52 1
C		2 = Input blood curve (CRTFILE)
d73 1
a73 1
	INTEGER*4	CRTFILE		! input CRT file
d81 2
a82 1
	INTEGER*4	I, K, M
d84 3
a86 2
	CHARACTER*8		START
	CHARACTER*80	CRTNAME, DCVNAME
d96 1
a96 1
	REAL*4          BCINT(NBINMAX)          ! Interpolated blood curve 
d108 2
d114 1
a114 1
	RCSHEADER = "$Id: picodcv.f,v 1.10 1998/07/27 17:51:43 tom Exp $"
d116 1
a116 1
	DATA	CRTFILE, DCVFILE /2,3/
d121 1
a121 1
	DATA  RUNTYPE(3) /'O-15 Blood Volume Study		 (CO)'/
d144 1
a144 1
	CALL GETARG (1, CRTNAME)
d150 3
a152 1
	OPEN (CRTFILE, FILE = CRTNAME, STATUS = 'OLD', ERR = 10)
d154 5
a158 9
10	STOP
20	READ (CRTFILE, 8000, ERR=22) START, TIMPBIN
	GOTO 25
22	START="00:00:00"
	TIMPBIN = 1.
8000	FORMAT(24X,A8,15X,F3)
25	READ (CRTFILE,*) NBIN
	DO 30 I = 1, NBIN
		READ (CRTFILE, *) T, dum
d160 20
a179 2
		M = NINT(T)
		BLOOD(I) = dum * WELLF
d181 1
a181 1
	CLOSE (CRTFILE)
a182 3
	Q = "Sampling rate (sec/bin)"
	CALL GETREAL(Q,TIMPBIN,0.1,100.)

d196 2
a197 2
 	WRITE (USEROUT, "('Too many time bins  ',I)"), NBIN
        WRITE (USEROUT, *) ' NEXPAND, TIMPBINE ', NEXPAND,TIMPBINE
d209 1
a209 2
          BSRF(I) = AK1 * TIMPBINE * R * EXP(-E * U ** 2) *
     1	  (2. * E * U + R)
d217 2
a218 2
	WRITE (USEROUT,8100) T
8100	FORMAT ("Impulse response fn area =", F8.4)
d273 1
a273 1
615     BCINT(I) =0.
d278 1
a278 1
       call sampt (nbin,timpbin,BLOOD, NBINE,timpbine,BCINT)
d281 1
a281 1
620     BLOOD(I) = BCINT(I)
a282 1

d284 1
a284 1
        IF (LAMBDA.eq.0.) go to 626
d288 1
a288 1
626     CONTINUE
d348 1
a348 1
8700	FORMAT(A8,2X,I4,F8.4,F6.1,2X,'WELLF=',F8.4,' T0=',F5.2,' K1=',
d352 1
a352 1
	WRITE (DCVFILE, 8700) START, NBIN+XBIN, OXYCONT, HEMATOCRIT, WELLF, T0, AK1, E, NSMO, CRTNAME
@
