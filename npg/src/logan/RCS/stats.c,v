head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	2010.05.21.15.53.44;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	2010.05.21.15.48.06;	author tom;	state Exp;
branches;
next	;


desc
@@


1.3
log
@*** empty log message ***
@
text
@#include <math.h>
#include "dtypes.h"

R_DATA          regress (F2 * data, int N)
{
	R_DATA          ans;
	float           sum_x = 0;
	float           sum_y = 0;
	float           sum_x2 = 0;
	float           sum_y2 = 0;
	float           sum_xy = 0;
	float           mu_x;
	float           mu_y;
	int             i;

	for (i = 0; i < N; i++) {
		sum_x = sum_x + data[i].x;
		sum_x2 = sum_x2 + data[i].x * data[i].x;
		sum_y = sum_y + data[i].y;
		sum_y2 = sum_y2 + data[i].y * data[i].y;
		sum_xy = sum_xy + data[i].x * data[i].y;
	}

	mu_x = sum_x / N;
	mu_y = sum_y / N;

	ans.r = (sum_xy - (sum_x * sum_y) / N) / sqrt ((sum_x2 - (sum_x * sum_x) / N) * (sum_y2 - (sum_y * sum_y) / N));
	ans.m = (sum_xy - (sum_x * sum_y) / N) / (sum_x2 - (sum_x * sum_x) / N);
	ans.b = mu_y - ans.m * mu_x;
	return ans;
}

float           median (float *data, int N)
{
	float           values[N];
	int             i, j;
	int             k = 0;
	float           ans;
	float           min = HUGE;

	for (i = 0; i < N; i++)
		values[i] = data[i];

	for (i = 0; i <= (N - 1) / 2; i++) {
		for (j = 0; j < N; j++) {
			if (values[j] < min) {
				min = data[j];
				k = j;
			}
		}
		values[k] = HUGE;
		min = HUGE;
	}
	ans = data[k];
	return ans;
}
@


1.2
log
@*** empty log message ***
@
text
@@
