head	2.1;
access;
symbols;
locks; strict;
comment	@ * @;


2.1
date	2008.11.11.17.26.00;	author tom;	state Exp;
branches;
next	2.0;

2.0
date	2004.02.13.16.22.30;	author tom;	state Exp;
branches;
next	1.6;

1.6
date	2002.11.27.14.23.41;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	2002.11.26.19.57.07;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	96.04.30.13.53.52;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	96.01.09.16.41.27;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	96.01.09.16.36.59;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	96.01.08.23.18.34;	author tom;	state Exp;
branches;
next	;


desc
@@


2.1
log
@updated 2008
@
text
@/*  $Id: airmatrix.c,v 2.0 2004/02/13 16:22:30 tom Exp tom $
    $Log: airmatrix.c,v $
 * Revision 2.0  2004/02/13  16:22:30  tom
 * Feb 2004
 *
 * Revision 1.6  2002/11/27  14:23:41  tom
 * *** empty log message ***
 *
 * Revision 1.5  2002/11/26  19:57:07  tom
 * *** empty log message ***
 *
 * Revision 1.4  1996/04/30  13:53:52  tom
 * new libmatrix.a
 * use public AIR.h
 *
 * Revision 1.3  1996/01/09  16:41:27  tom
 * format of pixel size
 *
 * Revision 1.2  1996/01/09  16:36:59  tom
 * add pixel size to output
 *
 * Revision 1.1  1996/01/08  23:18:34  tom
 * Initial revision
 * */
/* ===============================================================================
 *  Module:         airmatrix.c
 *  Date:           Nov 2008
 *  Author:         Tom Videen
 *  Description:
 *      Get the transformation matrix from an AIR file.
 * ===============================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/airmatrix/RCS/airmatrix.c,v 2.0 2004/02/13 16:22:30 tom Exp tom $";
#endif

#include <stdio.h>
#include <AIR.h>

int             main (argc, argv)
	int             argc;
	char          **argv;
{
	FILE           *fp;
	char           *fname;
	struct AIR_Air16 air1;
	int             i, j;

	if (argc != 2) {
		(void) fprintf (stderr, "Usage: airmatrix db1000.air\n");
		return 1;
	}
	fname = argv[1];
	fp = fopen (fname, "rb");
	if (fp == NULL) {
		(void) fprintf (stderr, "ERROR [airmatrix]: opening %s\n", fname);
		return 1;
	}
	if (fread (&air1, 1, sizeof (struct AIR_Air16), fp) != sizeof (struct AIR_Air16)) {
		(void) fprintf (stderr, "ERROR [read_air]: reading %s\n", fname);
		return 1;
	}
	(void) fclose (fp);

	for (j = 0; j < 4; j++) {
		for (i = 0; i < 4; i++)
			(void) printf ("%14.8f  ", air1.e[i][j]);
		(void) printf ("\n");
	}
	(void) printf ("\n");
	(void) printf ("Standard file: %s\n", air1.std_file);
	(void) printf ("   dimensions (x,y,z):   %d  %d  %d\n", (int) air1.std.x_dim, (int) air1.std.y_dim, (int) air1.std.z_dim);
	(void) printf ("   voxel size (x,y,z):   %f  %f  %f\n\n", air1.std.x_size, air1.std.y_size, air1.std.x_size);
	(void) printf ("Reslice file: %s\n", air1.res_file);
	(void) printf ("   dimensions (x,y,z):   %d  %d  %d\n", (int) air1.res.x_dim, (int) air1.res.y_dim, (int) air1.res.z_dim);
	(void) printf ("   voxel size (x,y,z):   %f  %f  %f\n\n", air1.res.x_size, air1.res.y_size, air1.res.x_size);
	(void) printf ("Comment: %s\n", air1.comment);
	return 0;
}
@


2.0
log
@Feb 2004
@
text
@d1 1
a1 1
/*  $Id: airmatrix.c,v 1.6 2002/11/27 14:23:41 tom Exp tom $
d3 3
d27 1
a27 1
 *  Date:           Jan-96
d35 1
a35 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/airmatrix/RCS/airmatrix.c,v 1.6 2002/11/27 14:23:41 tom Exp tom $";
d39 1
a39 4
#include <stdlib.h>
#include <nrutil.h>
#include <matrixlib.h>
#include <AIR1.h>
d41 1
a41 3
int             read_air ();

main (argc, argv)
d45 4
a48 5
	char           *airfile;
	struct air      air;			 /* AIR file structure */
	float         **mat;
    float           fscale[3];       /* fixed (MR) image mm/pixel */
    float           rscale[3];       /* reslice (PET) image mm/pixel */
d51 2
a52 2
		(void) fprintf (stderr, "Usage: airmatrix pettomri.air\n");
		return (1);
d54 5
a58 5
	airfile = argv[1];
	mat = matrix (1, 4, 1, 4);
	if (read_air (airfile, &air, mat) != 0) {
		(void) fprintf (stderr, "ERROR: cannot read %s\n", airfile);
		return (1);
d60 5
a64 2
	matrix_print (mat, 4, 4);
	free_matrix (mat, 1, 4, 1, 4);
d66 13
a78 8
    fscale[0] = air.s.x_size;
    fscale[1] = air.s.y_size;
    fscale[2] = air.s.z_size;
    rscale[0] = air.r.x_size;
    rscale[1] = air.r.y_size;
    rscale[2] = air.r.z_size;
    (void) printf ("   %f  %f  %f   (fixed)\n", fscale[0], fscale[1], fscale[2]);
    (void) printf ("   %f  %f  %f   (reslice)\n", rscale[0], rscale[1], rscale[2]);
@


1.6
log
@*** empty log message ***
@
text
@d1 1
a1 1
/*  $Id: airmatrix.c,v 1.5 2002/11/26 19:57:07 tom Exp tom $
d3 3
d30 1
d32 1
a32 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/airmatrix/RCS/airmatrix.c,v 1.5 2002/11/26 19:57:07 tom Exp tom $";
a46 1
	char            Usage[] = "Usage: airmatrix pettomri.air\n";
d54 2
a55 2
		(void) fprintf (stderr, Usage);
		exit (1);
d61 1
a61 1
		exit (1);
@


1.5
log
@*** empty log message ***
@
text
@d1 1
a1 1
/*  $Id: airmatrix.c,v 1.4 1996/04/30 13:53:52 tom Exp tom $
d3 3
d28 1
a28 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/airmatrix/RCS/airmatrix.c,v 1.4 1996/04/30 13:53:52 tom Exp tom $";
a36 1
char            Usage[] = "Usage: airmatrix pettomri.air\n";
d43 1
@


1.4
log
@new libmatrix.a
use public AIR.h
@
text
@d1 1
a1 1
/*  $Id: airmatrix.c,v 1.3 1996/01/09 16:41:27 tom Exp tom $
d3 4
d25 1
a25 1
static char     rcsid[] = "$Header: /home/petsun19/tom/src/airmatrix/RCS/airmatrix.c,v 1.3 1996/01/09 16:41:27 tom Exp tom $";
a29 2
#include <string.h>
#include <nr.h>
d32 1
a32 1
#include <AIR.h>
d68 1
a68 1
	exit (0);
@


1.3
log
@format of pixel size
@
text
@d1 1
a1 1
/*  $Id: airmatrix.c,v 1.2 1996/01/09 16:36:59 tom Exp tom $
d3 3
d21 1
a21 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/airmatrix/RCS/airmatrix.c,v 1.2 1996/01/09 16:36:59 tom Exp tom $";
d30 1
a30 1
#include "AIR.h"
d58 6
a63 6
    fscale[0] = air.std.x_size;
    fscale[1] = air.std.y_size;
    fscale[2] = air.std.z_size;
    rscale[0] = air.res.x_size;
    rscale[1] = air.res.y_size;
    rscale[2] = air.res.z_size;
@


1.2
log
@add pixel size to output
@
text
@d1 1
a1 1
/*  $Id: airmatrix.c,v 1.1 1996/01/08 23:18:34 tom Exp tom $
d3 3
d18 1
a18 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/airmatrix/RCS/airmatrix.c,v 1.1 1996/01/08 23:18:34 tom Exp tom $";
d61 2
a62 3
    (void) printf ("fixed:    %f  %f  %f\n", fscale[0], fscale[1], fscale[2]);
    (void) printf ("reslice:  %f  %f  %f\n", rscale[0], rscale[1], rscale[2]);

@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
/*  $Id$
    $Log$ */
d15 1
a15 1
static char     rcsid[] = "$Header$";
d36 2
d51 10
@
