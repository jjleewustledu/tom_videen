head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	2008.08.07.19.55.46;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	2008.08.04.21.22.03;	author tom;	state Exp;
branches;
next	;


desc
@@


1.2
log
@*** empty log message ***
@
text
@/* $Log: getnumframes.c,v $
 * Revision 1.1  2008/08/04  21:22:03  tom
 * Initial revision
 * */
/*	===============================================================================
 *	Module:			getnumframes.c
 *	Date:			Aug 2008
 *	Author:			Tom Videen
 *  Description:    Get number of frames in a dynamic image file for IDL
 *  Notes:
 *      If error, write -1 followed by string message to stdout
 *      Else write first and last frame numbers
 *	===============================================================================
 */
#include <stdio.h>
#include <stdlib.h>
#include <image.h>
#include <image.h>
#include <libimage.h>
#include <pettable.h>

main (argc, argv)
/*@@unused@@*/
	int             argc;
	char           *argv[];
{
	ImageFile      *file;
	Index           indx;
	int             frm1;
	char           *fname;
	MainHeader     *mh;

	fname = argv[1];
	indx.pln = 1;
	indx.gate = 1;
	indx.data = 0;
	indx.bed = 0;

	file = make_imgfile (fname);
	if (open_imgfile (file) == ERROR) {
		fprintf (stderr, "-1 ERROR [getnumframes]: opening %s\n", fname);
		return (ERROR);
	}
	if (get_mh (file) == ERROR) {
		fprintf (stderr, "-1 ERROR [getnumframes]: get MainHeader from %s\n", fname);
		return (ERROR);
	}
	indx.frm = firstimgfrm (file);
	if (indx.frm <= 0) {
		fprintf (stderr, "-1 ERROR [getnumframes]: cannot find first frame\n");
		return (ERROR);
	}
	mh = file->mh;
	frm1 = indx.frm;
	fprintf (stdout, "%d\n", frm1);
	fprintf (stdout, "%d\n", mh->nframe);
	fprintf (stdout, "%d\n", mh->nplane);
	free (file->name);
	free_imgfile (file);
	return (OK);
}
@


1.1
log
@Initial revision
@
text
@d1 4
a4 1
/* $Log$ */
d55 3
a57 1
	fprintf (stdout, "%d %d\n", frm1, mh->nframe);
@
