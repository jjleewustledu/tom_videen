../../npg/include/myvalues.h:27:13: Type BOOLEAN is probably meant as a boolean
    type, but the boolean type name is not set. Use -booltype BOOLEAN to set
    it.
  Use the -booltype, -boolfalse and -booltrue flags to change the name of the
  default boolean type. (Use -likelybool to inhibit warning)
fillimglist.c: (in function fillimglist)
fillimglist.c:104:3: New fresh storage dtype (type void) cast to void (not
                        released): (void)strcpy(dtype, prm->scanner)
  A memory leak has been detected. Storage allocated locally is not released
  before the last reference to it is lost. (Use -mustfreefresh to inhibit
  warning)
fillimglist.c:105:3: New fresh storage dtype (type void) cast to void (not
                        released): (void)strcat(dtype, "_")
fillimglist.c:106:3: New fresh storage dtype (type void) cast to void (not
                        released): (void)strcat(dtype, prm->acquisition)
fillimglist.c:107:3: New fresh storage dtype (type void) cast to void (not
                        released): (void)strcat(dtype, "_")
fillimglist.c:108:3: New fresh storage dtype (type void) cast to void (not
                        released): (void)strcat(dtype, prm->reconstruction)
fillimglist.c:109:3: New fresh storage dtype (type void) cast to void (not
                        released): (void)strcat(dtype, "_")
fillimglist.c:110:3: New fresh storage dtype (type void) cast to void (not
                        released): (void)strcat(dtype, prm->recfilter)
fillimglist.c:122:3: New fresh storage dtype (type void) cast to void (not
                        released): (void)strcpy(dtype, "data")
filteredname.c: (in function filteredname)
filteredname.c:64:3: New fresh storage newname (type void) cast to void (not
                        released): (void)strcpy(newname, ptr + 1)
filteredname.c:66:3: New fresh storage newname (type void) cast to void (not
                        released): (void)strcpy(newname, fname)
get_imglist.c: (in function get_imglist)
get_imglist.c:101:3: New fresh storage dtype (type void) cast to void (not
                        released): (void)strcpy(dtype, prm->scanner)
get_imglist.c:102:3: New fresh storage dtype (type void) cast to void (not
                        released): (void)strcat(dtype, "_")
get_imglist.c:103:3: New fresh storage dtype (type void) cast to void (not
                        released): (void)strcat(dtype, prm->acquisition)
get_imglist.c:104:3: New fresh storage dtype (type void) cast to void (not
                        released): (void)strcat(dtype, "_")
get_imglist.c:105:3: New fresh storage dtype (type void) cast to void (not
                        released): (void)strcat(dtype, prm->reconstruction)
get_imglist.c:106:3: New fresh storage dtype (type void) cast to void (not
                        released): (void)strcat(dtype, "_")
get_imglist.c:107:3: New fresh storage dtype (type void) cast to void (not
                        released): (void)strcat(dtype, prm->recfilter)
getpath.c: (in function getpath)
getpath.c:59:3: New fresh storage fullname (type void) cast to void (not
                   released): (void)strcpy(fullname, prm->datapath)
getpath.c:60:3: New fresh storage fullname (type void) cast to void (not
                   released): (void)strcat(fullname, "/")
getpath.c:61:3: New fresh storage fullname (type void) cast to void (not
                   released): (void)strcat(fullname, fname)
getpath.c:72:2: New fresh storage fullname (type void) cast to void (not
                   released): (void)strcpy(fullname, fname)
getpath.c:82:2: New fresh storage fullname (type void) cast to void (not
                   released): (void)strcpy(fullname, "/tmp/")
getpath.c:83:2: New fresh storage fullname (type void) cast to void (not
                   released): (void)strcat(fullname, fname)
getpath.c:93:2: New fresh storage fullname (type void) cast to void (not
                   released): (void)strcpy(fullname, "/data/arc/")
getpath.c:94:2: New fresh storage fullname (type void) cast to void (not
                   released): (void)strcat(fullname, prm->category)
getpath.c:95:2: New fresh storage fullname (type void) cast to void (not
                   released): (void)strcat(fullname, "/")
getpath.c:97:2: New fresh storage fullname (type void) cast to void (not
                   released): (void)strncat(fullname, fname, i + 1)
getpath.c:98:2: New fresh storage fullname (type void) cast to void (not
                   released): (void)strcat(fullname, "/")
getpath.c:99:2: New fresh storage fullname (type void) cast to void (not
                   released): (void)strcat(fullname, dtype)
getpath.c:100:2: New fresh storage fullname (type void) cast to void (not
                    released): (void)strcat(fullname, "/")
getpath.c:101:2: New fresh storage fullname (type void) cast to void (not
                    released): (void)strcat(fullname, fname)
getpath.c:111:2: New fresh storage fullname (type void) cast to void (not
                    released): (void)strcpy(fullname, "")
petinfo.c: (in function petinfo)
petinfo.c:57:16: Fresh storage file not released before return
   petinfo.c:53:2: Fresh storage file created
petinfo.c:62:16: Fresh storage file not released before return
   petinfo.c:53:2: Fresh storage file created
petinfo.c:71:18: Fresh storage file not released before return
   petinfo.c:53:2: Fresh storage file created
petinfo.c:78:16: Fresh storage file not released before return
   petinfo.c:53:2: Fresh storage file created
petinfo.c:85:13: Fresh storage file not released before return
   petinfo.c:53:2: Fresh storage file created
readhdr.c: (in function readhdr)
readhdr.c:53:2: New fresh storage hdrname (type void) cast to void (not
                   released): (void)strcpy(hdrname, fname)
readhdr.c:56:3: Variable c is dependent in true branch, but independent in
                   continuation.
  The state of a variable is different depending on which branch is taken. This
  means no annotation can sensibly be applied to the storage. (Use -branchstate
  to inhibit warning)
   readhdr.c:56:3: in true branch:
   readhdr.c:56:3: Storage c becomes dependent
   readhdr.c:56:3: in continuation:
   readhdr.c:54:2: Storage c becomes owned
readhdr.c:61:3: New fresh storage local_hdrname (type void) cast to void (not
                   released): (void)strcpy(local_hdrname, hdrname)
readhdr.c:63:3: New fresh storage local_hdrname (type void) cast to void (not
                   released): (void)strcpy(local_hdrname, c + 1)
readprm.c: (in function readprm)
readprm.c:174:18: Unrecognized identifier: HUGE
  Identifier used in code has not been declared. (Use -unrecog to inhibit
  warning)

