head	3.3;
access;
symbols;
locks; strict;
comment	@ * @;


3.3
date	2004.02.12.22.08.52;	author tom;	state Exp;
branches;
next	3.2;

3.2
date	2004.01.02.21.23.12;	author tom;	state Exp;
branches;
next	3.0;

3.0
date	2003.08.21.15.16.40;	author tom;	state Exp;
branches;
next	2.0;

2.0
date	96.04.24.23.07.41;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	96.03.12.23.00.34;	author tom;	state Exp;
branches;
next	;


desc
@@


3.3
log
@Feb 2004
@
text
@/*	$Id: gethdrpath.c,v 3.2 2004/01/02 21:23:12 tom Exp tom $
	$Log: gethdrpath.c,v $
 * Revision 3.2  2004/01/02  21:23:12  tom
 * splint cleaning
 *
 * Revision 3.0  2003/08/21  15:16:40  tom
 * 21Aug2003
 *
 * Revision 2.0  1996/04/24  23:07:41  tom
 * new library release
 *
 * Revision 1.1  1996/03/12  23:00:34  tom
 * Initial revision
 * */
/* ===============================================================================
 *	Function:		gethdrpath.c
 *	Description:	Get hdr filename
 * ===============================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimgutil/RCS/gethdrpath.c,v 3.2 2004/01/02 21:23:12 tom Exp tom $";
#endif

#include <stdlib.h>
#include <string.h>
#include <myvalues.h>		/* MAXLINE */
#include <imgutil.h>		/* HDR_EXT */

void             gethdrpath (imgfile, short_hdrfile, complete_hdrfile)
	char           *imgfile;			/* input */
	char           *short_hdrfile;		/* returned */
	char           *complete_hdrfile;	/* returned */
{
	char           *cbuffer;
	char           *extension;
	char            short_imgfile[MAXLINE];

	extension = strrchr (imgfile, '/');

	(void) strncpy (complete_hdrfile, "\0", MAXLINE);
	if (extension != NULL) {
		cbuffer = extension + 1;
		(void) strncpy (complete_hdrfile, imgfile, strlen (imgfile) - strlen (extension) + 1);
	} else
		cbuffer = imgfile;
	(void) strcpy (short_imgfile, cbuffer);

	(void) strncpy (short_hdrfile, "\0", MAXLINE);
	extension = strrchr (short_imgfile, '.');
	if (extension != NULL)
		(void) strncpy (short_hdrfile, short_imgfile, strlen (short_imgfile) - strlen (extension));
	else
		(void) strcpy (short_hdrfile, short_imgfile);

	(void) strcat (short_hdrfile, HDR_EXT);
	(void) strcat (complete_hdrfile, short_hdrfile);
	return;
}
@


3.2
log
@splint cleaning
@
text
@d1 1
a1 1
/*	$Id: gethdrpath.c,v 3.0 2003/08/21 15:16:40 tom Exp tom $
d3 3
d22 1
a22 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimgutil/RCS/gethdrpath.c,v 3.0 2003/08/21 15:16:40 tom Exp tom $";
@


3.0
log
@21Aug2003
@
text
@d1 1
a1 1
/*	$Id: gethdrpath.c,v 2.0 1996/04/24 23:07:41 tom Exp tom $
d3 3
d17 1
d19 1
a19 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimgutil/RCS/gethdrpath.c,v 2.0 1996/04/24 23:07:41 tom Exp tom $";
@


2.0
log
@new library release
@
text
@d1 1
a1 1
/*	$Id: gethdrpath.c,v 1.1 1996/03/12 23:00:34 tom Exp tom $
d3 3
d15 1
a15 1
static char     rcsid[] = "$Header: /home/petsun19/tom/src/libimgutil/RCS/gethdrpath.c,v 1.1 1996/03/12 23:00:34 tom Exp tom $";
d34 1
a34 1
	strncpy (complete_hdrfile, "\0", MAXLINE);
d37 1
a37 1
		strncpy (complete_hdrfile, imgfile, strlen (imgfile) - strlen (extension) + 1);
d40 1
a40 1
	strcpy (short_imgfile, cbuffer);
d42 1
a42 1
	strncpy (short_hdrfile, "\0", MAXLINE);
d45 1
a45 1
		strncpy (short_hdrfile, short_imgfile, strlen (short_imgfile) - strlen (extension));
d47 1
a47 1
		strcpy (short_hdrfile, short_imgfile);
d49 2
a50 2
	strcat (short_hdrfile, HDR_EXT);
	strcat (complete_hdrfile, short_hdrfile);
@


1.1
log
@Initial revision
@
text
@d1 5
a5 2
/*	$Id$
	$Log$ */
d12 1
a12 1
static char     rcsid[] = "$Header$";
@
