head	3.3;
access;
symbols;
locks; strict;
comment	@ * @;


3.3
date	2004.02.12.22.08.52;	author tom;	state Exp;
branches;
next	3.2;

3.2
date	2004.01.02.21.23.12;	author tom;	state Exp;
branches;
next	2.3;

2.3
date	2001.05.31.19.33.21;	author tom;	state Exp;
branches;
next	2.2;

2.2
date	2000.07.18.15.46.09;	author tom;	state Exp;
branches;
next	2.1;

2.1
date	99.12.13.17.04.17;	author tom;	state Exp;
branches;
next	2.0;

2.0
date	96.04.24.23.07.41;	author tom;	state Exp;
branches;
next	;


desc
@new library release
@


3.3
log
@Feb 2004
@
text
@/* $Log: fillimglist.c,v $
 * Revision 3.2  2004/01/02  21:23:12  tom
 * splint cleaning
 *
 * Revision 2.3  2001/05/31  19:33:21  tom
 * initialize nfiles
 *
 * Revision 2.2  2000/07/18  15:46:09  tom
 * *** empty log message ***
 *
 * Revision 2.1  1999/12/13  17:04:17  tom
 * tov revision
 *
 * Revision 2.0  1996/04/24  23:07:41  tom
 * new library release
 *
 */
/*	===============================================================================
 *	Module:			fillimglist.c
 *	Date:			Apr 1996
 *	Author:			Tom Videen
 *	Description:	Complete filenames in imglist.
 *	Input:
 *		prm   	 -   structure PARAMETER_DATA (imgutil.h)
 *		list     -   structure IMAGE_LIST_DATA (imgutil.h)
 *		lstsize  -   number of scan (pairs) in image list
 *		filtmode -   used to expand the image list (defined in imgutil.h)
 *			RECFILTER_MODE   0  use recfilter
 *			IMGFILTER_MODE   1  use imgfilter
 *			MSKFILTER_MODE   2  use mskfilter
 *	Output:
 *		scan     -   scan filenames
 *	===============================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimgutil/RCS/fillimglist.c,v 3.2 2004/01/02 21:23:12 tom Exp tom $";
#endif

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <myvalues.h>				 /* ERROR, MAXPATH */
#include <imgutil.h>				 /* IMAGE_LIST_DATA, PARAMETER_DATA */

int             fillimglist (prm, imglist, lstsize, filtmode, scan)
	PARAMETER_DATA *prm;			 /* parameters */
	IMAGE_LIST_DATA *imglist;		 /* image list */
	int             lstsize;		 /* number of scan file (pairs) */
	int             filtmode;		 /* filter mode */
	char         ***scan;			 /* list of complete scan filenames */
{
	char          **imgname;
	char           *sxrname;
	char		   *dtype;
	int             nfiles = 0;
	int             i, j;

/*
 * Get full names of activation, control and .sxr files.
 */

	imgname = (char **) malloc (6 * sizeof (char *));
	if (imgname == NULL)
		return (ERROR);
	for (i = 0; i < 6; i++) {
		imgname[i] = (char *) calloc (MAXPATH, sizeof (char));
		if (imgname[i] == NULL) {
			free (imgname);
			return (ERROR);
		}
	}
	sxrname = (char *) malloc (MAXPATH * sizeof (char));
	if (sxrname == NULL) {
		for (i = 0; i < 6; i++)
			free (imgname[i]);
		free (imgname);
		return (ERROR);
	}
	dtype = (char *) malloc (MAXPATH * sizeof (char));
	if (dtype == NULL) {
		for (i = 0; i < 6; i++)
			free (imgname[i]);
		free (imgname);
		free (sxrname);
		return (ERROR);
	}

	for (i = 0; i < lstsize; i++) {
		if (buildnames (prm, &imglist[i], filtmode, &nfiles, imgname, sxrname) == ERROR) {
			fprintf (stderr, "ERROR [fillimglist] building filenames from %s %s %f %s %f %s\n",
				 imglist[i].subject_id, imglist[i].scanset1_id, imglist[i].mean1,
				 imglist[i].scanset2_id, imglist[i].mean2, imglist[i].sxrid);
			for (i = 0; i < 6; i++)
				free (imgname[i]);
			free (imgname);
			free (sxrname);
			free (dtype);
			return (ERROR);
		}
		if (nfiles < 6)
			for (j = nfiles; j < 6; j++)
				(void) strcpy (scan[i][j], "");
		(void) strcpy (dtype, prm->scanner);
		(void) strcat (dtype, "_");
		(void) strcat (dtype, prm->acquisition);
		(void) strcat (dtype, "_");
		(void) strcat (dtype, prm->reconstruction);
		(void) strcat (dtype, "_");
		(void) strcat (dtype, prm->recfilter);
		for (j = 0; j < nfiles; j++) {
			scan[i][j] = getpath (imgname[j], dtype, prm);
			if (strcmp (scan[i][j], "") == 0) {
				for (i = 0; i < 6; i++)
					free (imgname[i]);
				free (imgname);
				free (sxrname);
				free (dtype);
				return (ERROR);
			}
		}
		(void) strcpy (dtype, "data");
	}
	for (i = 0; i < 6; i++)
		free (imgname[i]);
	free (imgname);
	free (sxrname);
	free (dtype);
	return (OK);
}
@


3.2
log
@splint cleaning
@
text
@d2 3
d37 1
a37 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimgutil/RCS/fillimglist.c,v 2.3 2001/05/31 19:33:21 tom Exp tom $";
d55 1
a55 1
	char           *dtype;
@


2.3
log
@initialize nfiles
@
text
@d2 3
d17 1
a17 1
 *	Date:			Apr-96
d32 1
d34 1
a34 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimgutil/RCS/fillimglist.c,v 2.2 2000/07/18 15:46:09 tom Exp tom $";
d40 2
a41 2
#include <myvalues.h>			 /* ERROR, MAXPATH */
#include <imgutil.h>			 /* IMAGE_LIST_DATA, PARAMETER_DATA */
d43 1
a43 1
int            fillimglist (prm, imglist, lstsize, filtmode, scan)
d61 9
a69 2
	for (i = 0; i < 6; i++)
		imgname[i] = (char *) malloc (MAXPATH * sizeof (char));
d71 6
d78 7
d91 5
d110 6
a115 1
			if (strcmp (scan[i][j],"") == 0)
d117 1
@


2.2
log
@*** empty log message ***
@
text
@d2 3
d30 1
a30 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimgutil/RCS/fillimglist.c,v 2.1 1999/12/13 17:04:17 tom Exp tom $";
d49 1
a49 1
	int             nfiles;
@


2.1
log
@tov revision
@
text
@d2 3
d27 1
a27 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/libimgutil/RCS/fillimglist.c,v 2.0 1996/04/24 23:07:41 tom Exp tom $";
d84 1
a84 1
		free (&imgname[i]);
@


2.0
log
@new library release
@
text
@d1 4
a4 1
/* $Log$
d24 1
a24 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/t88mean/RCS/fillimglist.c,v 1.11 1995/11/10 18:47:55 tom Exp tom $";
d28 1
a29 1
#include <values.h>
d57 1
a57 1
		if (buildnames (prm, imglist[i], filtmode, &nfiles, imgname, sxrname) == ERROR) {
d65 8
a72 8
				strcpy (scan[i][j], "");
		strcpy (dtype, prm->scanner);
		strcat (dtype, "_");
		strcat (dtype, prm->acquisition);
		strcat (dtype, "_");
		strcat (dtype, prm->reconstruction);
		strcat (dtype, "_");
		strcat (dtype, prm->recfilter);
d78 1
a78 1
		strcpy (dtype, "data");
d81 1
a81 1
		free (imgname[i]);
@
