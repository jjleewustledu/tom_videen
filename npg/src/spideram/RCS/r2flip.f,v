head	2.0;
access;
symbols;
locks; strict;
comment	@c @;


2.0
date	2004.02.20.14.34.10;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	2002.12.02.21.26.52;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	93.10.04.21.55.32;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	92.04.23.21.25.39;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	92.04.13.19.12.07;	author tom;	state Exp;
branches;
next	;


desc
@Spideram function.
@


2.0
log
@Feb 2004
@
text
@CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     
C     Subroutine:   R2FLIP.FTN
C     Author:       Tom O. Videen
C     Date:         21-May-87
C     Intent:
C     .  Flip a region of interest to the opposite side of the midline.
C     .  For transverse and coronal images only.
C     
C     History:
C     .  Modified by TOV 29-Dec-87.  Irregular regions were shifted but
C     .     not reversed symmetrically.
C     
C     Common Blocks from SPIDERAM.INC:
C     .  **DISPLAY  - display parameters             (read only)
C     .  **REGION   - region analysis parameters     (read & write)
C     
C     Variable Passed:
C     .  N = region number;
C     
C     Uses:
C     .  P2RECT   - draws a rectangle
C     .  P2NORECT - erases a rectangle
C     .  P2IRREG  - draws an irregular region
C     .  P2NOIRRG - erases an irregular region
C     
C     Called by:  M2REGION
C     
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     rcsheader = "$Id: r2flip.f,v 1.4 2002/12/02 21:26:52 tom Exp tom $"

      SUBROUTINE R2FLIP(N)

      INTEGER*4    N,TMIN,TMAX,IDIST,PTR
      REAL         TLOC,DIST

      INCLUDE 'spideram.inc'

      IF (ORIENT.NE.'T' .AND. ORIENT.NE.'C') RETURN
      TMIN = 0
      TMAX = 0

      DIST = 2.0*(XMIDLINE-XLOC(N))
      IDIST = NINT(DIST)
      TLOC = XLOC(N) + DIST
      IF (REGTYPE(N).EQ.'R') THEN
         TMIN = XMIN(N) + IDIST
         TMAX = XMAX(N) + IDIST
      ELSE IF (REGTYPE(N).EQ.'I') THEN
         TMAX = XMIN(N) + NINT(2.0*(XMIDLINE-FLOAT(XMIN(N))))
         TMIN = XMAX(N) + NINT(2.0*(XMIDLINE-FLOAT(XMAX(N))))
      END IF

      IF (TMIN.GE.XLOW .AND. TMAX.LE.XHIGH) THEN
         IF (REGTYPE(N).EQ.'R') THEN
            CALL P2NORECT(N,REGPLANE)
            XLOC(N) = TLOC
            XMIN(N) = TMIN
            XMAX(N) = TMAX
            CALL P2RECT(N,REGPLANE)
         ELSE IF (REGTYPE(N).EQ.'I') THEN
            CALL P2NOIRRG(N,REGPLANE)
            XLOC(N) = TLOC
            XMIN(N) = TMIN
            XMAX(N) = TMAX
            PTR = BVAL(N)
            DO 100 I=1,AVAL(N)
               BOUNDARY(1,PTR) = BOUNDARY(1,PTR) +
     &              NINT(2.0*(XMIDLINE-FLOAT(BOUNDARY(1,PTR))))
               PTR = PTR+1
 100        CONTINUE
            CALL P2IRREG(N,REGPLANE)
         END IF
      END IF

      RETURN
      END
@


1.4
log
@format changes plus fixes for g77
@
text
@d30 1
a30 1
C     rcsheader = "$Id: r2flip.f,v 1.3 1993/10/04 21:55:32 tom Exp tom $"
@


1.3
log
@added rcsheader
@
text
@d2 27
a28 32
C
C  Subroutine:   R2FLIP.FTN
C
C  Author:       Tom O. Videen
C  Date:         21-May-87
C  Written For:  SPIDERAM Super PETT Image Display Program
C
C  Intent:
C     Flip a region of interest to the opposite side of the midline.
C     For transverse and coronal images only.
C
C  History:
C     Modified by TOV 29-Dec-87.  Irregular regions were shifted but
C        not reversed symmetrically.
C
C  Common Blocks from SPIDERAM.INC:
C     **DISPLAY  - display parameters             (read only)
C     **REGION   - region analysis parameters     (read & write)
C
C  Variable Passed:
C     N = region number;
C
C  Uses:
C
C  SPIDERAM.LIB
C     P2RECT   - draws a rectangle
C     P2NORECT - erases a rectangle
C     P2IRREG  - draws an irregular region
C     P2NOIRRG - erases an irregular region
C
C  Called by:  M2REGION
C
d30 2
a31 1
C
d33 1
a33 1
C
d36 1
a36 2
      character*256 rcsheader
C
d38 1
a38 2
      rcsheader = "$Id$"
C
d42 1
a42 1
C
d47 2
a48 2
        TMIN = XMIN(N) + IDIST
        TMAX = XMAX(N) + IDIST
d50 2
a51 2
        TMAX = XMIN(N) + NINT(2.0*(XMIDLINE-FLOAT(XMIN(N))))
        TMIN = XMAX(N) + NINT(2.0*(XMIDLINE-FLOAT(XMAX(N))))
d53 1
a53 1
C
d55 19
a73 19
        IF (REGTYPE(N).EQ.'R') THEN
          CALL P2NORECT(N,REGPLANE)
          XLOC(N) = TLOC
          XMIN(N) = TMIN
          XMAX(N) = TMAX
          CALL P2RECT(N,REGPLANE)
        ELSE IF (REGTYPE(N).EQ.'I') THEN
          CALL P2NOIRRG(N,REGPLANE)
          XLOC(N) = TLOC
          XMIN(N) = TMIN
          XMAX(N) = TMAX
          PTR = BVAL(N)
          DO 100 I=1,AVAL(N)
            BOUNDARY(1,PTR) = BOUNDARY(1,PTR) +
     2         NINT(2.0*(XMIDLINE-FLOAT(BOUNDARY(1,PTR))))
            PTR = PTR+1
100       CONTINUE
          CALL P2IRREG(N,REGPLANE)
        END IF
d75 1
a75 1
C
@


1.2
log
@Save window dump. 04/23/92 by Tom Yang
@
text
@d40 1
d43 1
a43 1
C
@


1.1
log
@Initial revision
@
text
@@
