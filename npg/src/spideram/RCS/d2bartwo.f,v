head	2.0;
access;
symbols;
locks; strict;
comment	@c @;


2.0
date	2004.02.20.14.34.10;	author tom;	state Exp;
branches;
next	1.11;

1.11
date	2002.12.02.21.26.52;	author tom;	state Exp;
branches;
next	1.10;

1.10
date	99.03.05.18.49.14;	author tom;	state Exp;
branches;
next	1.9;

1.9
date	98.04.29.15.20.35;	author tom;	state Exp;
branches;
next	1.8;

1.8
date	94.06.09.21.55.12;	author ty7777;	state Exp;
branches;
next	1.7;

1.7
date	94.06.09.21.17.08;	author ty7777;	state Exp;
branches;
next	1.6;

1.6
date	94.02.08.20.50.18;	author ty7777;	state Exp;
branches;
next	1.5;

1.5
date	94.02.08.20.20.02;	author ty7777;	state Exp;
branches;
next	1.4;

1.4
date	93.11.11.16.36.40;	author ty7777;	state Exp;
branches;
next	1.3;

1.3
date	93.10.04.21.55.32;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	92.04.23.21.25.39;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	92.04.13.19.12.07;	author tom;	state Exp;
branches;
next	;


desc
@Spideram function.
@


2.0
log
@Feb 2004
@
text
@C     $Id: d2bartwo.f,v 1.11 2002/12/02 21:26:52 tom Exp tom $
C     $Log: d2bartwo.f,v $
c Revision 1.11  2002/12/02  21:26:52  tom
c format changes plus fixes for g77
c
c     Revision 1.10  1999/03/05  18:49:14  tom
c     add CVO2
c     
c     Revision 1.9  1998/04/29  15:20:35  tom
c     allow processing for CMRGlucose
c     
c     Revision 1.8  1994/06/09  21:55:12  ty7777
c     Use the PCFLAG.
c     
c     Revision 1.7  1994/06/09  21:17:08  ty7777
c     Added PC flag.
c     
c     Revision 1.6  1994/02/08  20:50:18  ty7777
c     Delted the debugging message.
c     
c     Revision 1.5  1994/02/08  20:20:02  ty7777
c     Added array size to 1024 from 512.
c     
C     
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     
C     Subroutine:   D2BARTWO.FTN
C     Author:       Tom O. Videen
C     Date:         01-Jun-87
C     Intent:
C     .   This routine draws and labels a split color bar.
C     
C     .   3 different sizes and orientations are selected based on MAG.
C     .   Color bars use the following parts of the Ramtek color table:
C     .     AUX MEM   ABSSCALE   SCALEPOS
C     .     -------   --------   --------
C     .       0-240      T
C     .     320-480      F          0
C     .     320-400      F         -1
C     .     400-480      F         +1
C     
C     NOTES:
C     .   Currently only supports MAG = 7.
C     
C     Variables Passed:
C     .   SIDE = side of image to scale:
C     .      0 --> entire image;
C     .      1 --> left side only;
C     .      2 --> right side only;
C     .   SUB = true--> difference image;
C     .         false-> normal image;
C     .         (determines label wording)
C     
C     History:
C     .   Modified 05-Mar-99 by TOV to allow processing for CVO2
C     .      (PROCESS may be 0-7)
C     .   Modified 28-Apr-98 by TOV to allow processing for CMRGlucose
C     .      (PROCESS may be 0-6)
C     .   Modified by TOV 15-Jul-87 to changes absolute color scale range
C     .      to 0-240 (instead of 0-255) and from 320-480 for relative images
C     .      (instead of 300-500);
C     .   Modified 06-Oct-87 by TOV to allow processing for tissue activity
C     .      either with or without decay correction; (PROCESS may be 0-5)
C     .   Modified 15-Sep-88 by TOV to clean out some unused code.
C     .   Modified by Tom Yang 05-Sep-91 to port to the X Windows and UNIX
C     .      environment.
C     .   Modified by Tom Yang 08-Feb-94 to fix the bug for displaying the
C     .      colorbar.
C     .   Modified by Tom Yang 09-Jun-94 to add PC flag to ramimg ().
C     
C     Common Blocks from SPIDERAM.INC:
C     .   **IMAGEDAT - image arrays                   (read only)
C     .   **LUINFO   - logical units (also /USRIO/)   (read only)
C     .   **DISPLAY  - display parameters             (read only)
C     .   **FILES    - scan file list                 (read only)
C     .   **SCALES   - scaling parameters             (read only)
C     
C     Internal Variables:
C     .   GRAYBAR = array containing the gray level scale;
C     .   OFFSET  = used for all relative color bars (for which
C     .      zero values correspond to memory location 400);
C     .   XST,YST = location to write to on the Ramtek;
C     .   XDIM,YDIM = dimensions of array written to the Ramtek;
C     .   SCAN,TYPE = used by RAMIMG;
C     .   LENGTH,WIDTH = length and width of the color bar;
C     .   XSIZE,YSIZE = character size written in the color bar scale;
C     .   TEXT,STR = strings written to the color bar scale;
C     .   RTOPP,RMID,RBOT = scale labels at top, middle, and bottom
C     .      of scale for real numbered scale;
C     .   RMAX = maximum of RTOPP and RBOT;
C     
C     Uses:
C     .   RAMIMG   - writes an image to the Ramtek;
C     .   RAMWRITE - writes text on the Ramtek;
C     .   INANYR
C     
C     Called by:  M2SPLIT
C     
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     rcsheader = "$Header: /home/npggw/tom/src/spideram/RCS/d2bartwo.f,v 1.11 2002/12/02 21:26:52 tom Exp tom $"

      SUBROUTINE D2BARTWO (SIDE, SUB)

      INTEGER*2     GRAYBAR (1024), OFFSET
      INTEGER*4     SIDE,XST,YST,XDIM,YDIM,SCAN,TYPE,LENGTH,WIDTH,
     &     RANGE, XSIZE, YSIZE, X1, Y1, L, L1, I
      REAL          RTOPP,RBOT,RMAX
      CHARACTER*1   TEXT(100)
      CHARACTER*100 STR
      CHARACTER*100 TEXT1
      LOGICAL*1     SUB

      EQUIVALENCE (STR, TEXT)

      INCLUDE 'spideram.inc'
      DATA TYPE, XSIZE, YSIZE /0, 1, 2/

      LENGTH = 700
      WIDTH  = 40
      XDIM   = 1
      YDIM   = LENGTH
      SCAN   = 4
      IF (SIDE .EQ. 1) THEN
         XST = XBAR - WIDTH
      ELSE
         XST = XBAR
      END IF
      YST = YBAR

C     --------------------------------------------
C     Create the graybar scale
C     with a uniform gradient from bottom to top.
C     --------------------------------------------

      IF (ABSSCALE) THEN
         RANGE = 240
         OFFSET = 0
      ELSE IF (SCALEPOS .EQ. 0) THEN
         RANGE = 160
         OFFSET = 320
      ELSE IF (SCALEPOS .EQ. 1) THEN
         RANGE = 80
         OFFSET = 400
      ELSE
         RANGE = 80
         OFFSET = 320
      END IF
      DO 100 I = 1, LENGTH
         GRAYBAR (LENGTH - I + 1) = INT (NINT (FLOAT (RANGE * I) / 
     &        FLOAT (LENGTH))) + OFFSET
 100  CONTINUE

C     --------------------------
C     Display the graybar scale
C     --------------------------

      DO 200 I = 1, WIDTH
         CALL RAMIMG (GRAYBAR, XDIM, YDIM, XST + I, YST, SCAN, TYPE, 
     &        PCFLAG, ABSSCALE, RMD)
 200  CONTINUE

C     ----------------------------
C     Label the graybar scale.
C     ----------------------------

      IF (PROCESS.EQ.0) THEN
         IF (SUB) THEN
            STR = 'PETT DIFF~'
         ELSE
            STR = 'PETT COUNTS~'
         END IF
      ELSE IF (PROCESS.EQ.1) THEN
         IF (NTYPE(1).EQ.2 .OR. NTYPE(1).EQ.4) THEN
            IF (SUB) THEN
               STR = 'CBF DIFF~'
            ELSE
               STR = 'CBF~'
            END IF
         ELSE IF (NTYPE(1).EQ.3) THEN
            IF (SUB) THEN
               STR = 'CBV DIFF~'
            ELSE
               STR = 'CBV~'
            END IF
         ELSE
            RETURN
         END IF
      ELSE IF (PROCESS.EQ.2) THEN
         IF (SUB) THEN
            STR = 'OEF DIFF~'
         ELSE
            STR = 'OEF~'
         END IF
      ELSE IF (PROCESS.EQ.3) THEN
         IF (SUB) THEN
            STR = 'CMRO2 DIFF~'
         ELSE
            STR = 'CMRO2~'
         END IF
      ELSE IF (PROCESS.EQ.4. OR. PROCESS.EQ.5) THEN
         IF (SUB) THEN
            STR = 'ACTIVITY DIFF~'
         ELSE
            STR = 'TISSUE ACTIVITY~'
         END IF
      ELSE IF (PROCESS.EQ.6) THEN
         IF (SUB) THEN
            STR = 'CMRGLU DIFF~'
         ELSE
            STR = 'CMRGLU~'
         END IF
      ELSE IF (PROCESS.EQ.7) THEN
         IF (SUB) THEN
            STR = 'CVO2 DIFF~'
         ELSE
            STR = 'CVO2~'
         END IF
      ELSE
         RETURN
      END IF
      L = IANYL(STR,'~')
      IF (SIDE .EQ. 1) THEN
         X1 = XST - 15
      ELSE
         X1 = XST + WIDTH + 7
      END IF
      Y1 = YST + (LENGTH - L * YSIZE * 9) / 2
      CALL RAMWRITE (X1,Y1,XSIZE,YSIZE,SCAN,FIXPLANE,RMD,TEXT,FONT1C)

C     ---------------------------------------
C     Put numbers at top and bottom of scale
C     ---------------------------------------

 8100 FORMAT (I5)
 8201 FORMAT (F6.1)
 8202 FORMAT (F6.2)
 8203 FORMAT (F6.3)
      SCAN = 0
      RBOT = 0.0
      RTOPP = 0.0

C     Get values to write (RTOPP and RBOT)

      IF (ABSSCALE) THEN
         IF (ABSRANGE) THEN
            RTOPP = ABSMAX
         ELSE
            RTOPP = FLOAT (DMAX) * SCALER (1)
         END IF
         RBOT = 0.0
      ELSE
         IF (SCALEPOS .EQ. 0) THEN
            IF (ABSRANGE) THEN
               RTOPP = RELMAX
            ELSE
               RTOPP = MAX (FLOAT(DMAX), ABS (DMIN)) * SCALER (1)
            END IF
            RBOT = -RTOPP
         ELSE IF (SCALEPOS .EQ. 1) THEN
            IF (ABSRANGE) THEN
               RTOPP = RELMAX
            ELSE
               RTOPP = FLOAT (DMAX) * SCALER (1)
            END IF
            RBOT = 0.0
         ELSE IF (SCALEPOS .EQ. -1) THEN
            IF (ABSRANGE) THEN
               RBOT = -ABS (RELMAX)
            ELSE
               RBOT = FLOAT (DMIN) * SCALER (1)
            END IF
            RTOPP = 0.0
         END IF
      END IF
      RMAX = AMAX1 (ABS (RTOPP), ABS (RBOT))

C     Label at top of scale

      STR = ' '
      IF (ABS (RMAX) .GE. 100.0) THEN
         WRITE (STR, 8100) NINT (RTOPP)
      ELSE IF (ABS (RMAX) .GE. 10.0) THEN
         WRITE (STR, 8201) RTOPP
      ELSE IF (ABS (RMAX) .GE. 1.0) THEN
         WRITE (STR, 8202) RTOPP
      ELSE
         WRITE (STR, 8203) RTOPP
      END IF
      L = INANYR (STR, ' ')
      STR (L + 1: L + 1) = '~'
      IF (SIDE .EQ. 1) THEN
         X1 = XST - 6 - XSIZE * L * 14
      ELSE
         X1 = XST + WIDTH + 6
      END IF
      Y1 = YST
      CALL RAMWRITE (X1,Y1,XSIZE,YSIZE,SCAN,FIXPLANE, RMD, TEXT, FONT1C)

C     Label at bottom of scale

      STR = ' '
      IF (ABS (RMAX) .GE. 100.0) THEN
         WRITE (STR, 8100) NINT (RBOT)
      ELSE IF (ABS (RMAX) .GE. 10.0) THEN
         WRITE (STR, 8201) RBOT
      ELSE IF (ABS (RMAX) .GE. 1.0) THEN
         WRITE (STR, 8202) RBOT
      ELSE
         WRITE (STR, 8203) RBOT
      END IF
      L1 = INANYL (STR, ' ')
      L = INANYR (STR, ' ')
      STR (L + 1: L + 1) = '~'
      TEXT1 = STR (L1:L + 1)
      IF (SIDE .EQ. 1) THEN
         X1 = XST - 6 - XSIZE * (L - L1 + 1) * 14
      ELSE
         X1 = XST + WIDTH + 6
      END IF
      Y1 = YST +  LENGTH - 9 * YSIZE
      CALL RAMWRITE (X1,Y1,XSIZE,YSIZE,SCAN,FIXPLANE,RMD, TEXT1, FONT1C)

      RETURN
      END
@


1.11
log
@format changes plus fixes for g77
@
text
@d1 1
a1 1
C     $Id: d2bartwo.f,v 1.10 1999/03/05 18:49:14 tom Exp tom $
d3 3
d100 1
a100 1
C     rcsheader = "$Header: /home/npggw/tom/src/spideram/RCS/d2bartwo.f,v 1.10 1999/03/05 18:49:14 tom Exp tom $"
@


1.10
log
@add CVO2
@
text
@d1 21
a21 18
C$Id: d2bartwo.f,v 1.9 1998/04/29 15:20:35 tom Exp tom $
C$Log: d2bartwo.f,v $
c Revision 1.9  1998/04/29  15:20:35  tom
c allow processing for CMRGlucose
c
c Revision 1.8  1994/06/09  21:55:12  ty7777
c Use the PCFLAG.
c
c Revision 1.7  1994/06/09  21:17:08  ty7777
c Added PC flag.
c
c Revision 1.6  1994/02/08  20:50:18  ty7777
c Delted the debugging message.
c
c Revision 1.5  1994/02/08  20:20:02  ty7777
c Added array size to 1024 from 512.
c
C
d23 73
a95 81
C
C  Subroutine:   D2BARTWO.FTN
C
C  Author:       Tom O. Videen
C  Date:         01-Jun-87
C  Written For:  SPIDERAM Super PETT Image Display Program
C
C  History:
C     Modified 05-Mar-99 by TOV to allow processing for CVO2
C        (PROCESS may be 0-7)
C     Modified 28-Apr-98 by TOV to allow processing for CMRGlucose
C        (PROCESS may be 0-6)
C     Modified by TOV 15-Jul-87 to changes absolute color scale range
C        to 0-240 (instead of 0-255) and from 320-480 for relative images
C        (instead of 300-500);
C     Modified 06-Oct-87 by TOV to allow processing for tissue activity
C        either with or without decay correction; (PROCESS may be 0-5)
C     Modified 15-Sep-88 by TOV to clean out some unused code.
C     Modified by Tom Yang 05-Sep-91 to port to the X Windows and UNIX
C        environment.
C     Modified by Tom Yang 08-Feb-94 to fix the bug for displaying the
C        colorbar.
C     Modified by Tom Yang 09-Jun-94 to add PC flag to ramimg ().
C
C  Intent:
C     This routine draws and labels a split color bar.
C
C     3 different sizes and orientations are selected based on MAG.
C     Color bars use the following parts of the Ramtek color table:
C       AUX MEM   ABSSCALE   SCALEPOS
C       -------   --------   --------
C         0-240      T
C       320-480      F          0
C       320-400      F         -1
C       400-480      F         +1
C
C  NOTES:
C     Currently only supports MAG = 7.
C
C  Variables Passed:
C     SIDE = side of image to scale:
C        0 --> entire image;
C        1 --> left side only;
C        2 --> right side only;
C     SUB = true--> difference image;
C           false-> normal image;
C           (determines label wording)
C
C  Common Blocks from SPIDERAM.INC:
C     **IMAGEDAT - image arrays                   (read only)
C     **LUINFO   - logical units (also /USRIO/)   (read only)
C     **DISPLAY  - display parameters             (read only)
C     **FILES    - scan file list                 (read only)
C     **SCALES   - scaling parameters             (read only)
C
C  Internal Variables:
C     GRAYBAR = array containing the gray level scale;
C     OFFSET  = used for all relative color bars (for which
C        zero values correspond to memory location 400);
C     XST,YST = location to write to on the Ramtek;
C     XDIM,YDIM = dimensions of array written to the Ramtek;
C     SCAN,TYPE = used by RAMIMG;
C     LENGTH,WIDTH = length and width of the color bar;
C     XSIZE,YSIZE = character size written in the color bar scale;
C     TEXT,STR = strings written to the color bar scale;
C     RTOPP,RMID,RBOT = scale labels at top, middle, and bottom
C        of scale for real numbered scale;
C     RMAX = maximum of RTOPP and RBOT;
C
C  Uses:
C
C  RAMUTY.LIB
C     RAMIMG   - writes an image to the Ramtek;
C     RAMWRITE - writes text on the Ramtek;
C
C  FORTRAN runtime library
C     ENCODE
C     INANYR
C
C  Called by:  M2SPLIT
C
d97 2
a98 1
C
d100 1
a100 1
C
d103 1
a103 1
     &              RANGE, XSIZE, YSIZE, X1, Y1, L, L1, I
d109 1
a109 2
      character*256 rcsheader
C
d111 1
a111 1
C
d114 1
a114 2
      rcsheader = "$Header: /home/npggw/tom/src/spideram/RCS/d2bartwo.f,v 1.9 1998/04/29 15:20:35 tom Exp tom $"
C
d121 1
a121 1
        XST = XBAR - WIDTH
d123 1
a123 1
        XST = XBAR
d126 6
a131 6
C
C --------------------------------------------
C  Create the graybar scale
C  with a uniform gradient from bottom to top.
C --------------------------------------------
C
d133 2
a134 2
        RANGE = 240
        OFFSET = 0
d136 2
a137 2
        RANGE = 160
        OFFSET = 320
d139 2
a140 2
        RANGE = 80
        OFFSET = 400
d142 2
a143 2
        RANGE = 80
        OFFSET = 320
d146 8
a153 8
        GRAYBAR (LENGTH - I + 1) = INT (NINT (FLOAT (RANGE * I) / FLOAT (LENGTH)))
     &   + OFFSET
100   CONTINUE
C
C --------------------------
C  Display the graybar scale
C --------------------------
C
d155 8
a162 7
        CALL RAMIMG (GRAYBAR, XDIM, YDIM, XST + I, YST, SCAN, TYPE, PCFLAG, ABSSCALE, RMD)
200   CONTINUE
C
C ----------------------------
C  Label the graybar scale.
C ----------------------------
C
d164 5
a168 5
        IF (SUB) THEN
          STR = 'PETT DIFF~'
        ELSE
          STR = 'PETT COUNTS~'
        END IF
d170 15
a184 15
        IF (NTYPE(1).EQ.2 .OR. NTYPE(1).EQ.4) THEN
          IF (SUB) THEN
            STR = 'CBF DIFF~'
          ELSE
            STR = 'CBF~'
          END IF
        ELSE IF (NTYPE(1).EQ.3) THEN
          IF (SUB) THEN
            STR = 'CBV DIFF~'
          ELSE
            STR = 'CBV~'
          END IF
        ELSE
          RETURN
        END IF
d186 5
a190 5
        IF (SUB) THEN
          STR = 'OEF DIFF~'
        ELSE
          STR = 'OEF~'
        END IF
d192 5
a196 5
        IF (SUB) THEN
          STR = 'CMRO2 DIFF~'
        ELSE
          STR = 'CMRO2~'
        END IF
d198 5
a202 5
        IF (SUB) THEN
          STR = 'ACTIVITY DIFF~'
        ELSE
          STR = 'TISSUE ACTIVITY~'
        END IF
d204 5
a208 5
        IF (SUB) THEN
          STR = 'CMRGLU DIFF~'
        ELSE
          STR = 'CMRGLU~'
        END IF
d210 5
a214 5
        IF (SUB) THEN
          STR = 'CVO2 DIFF~'
        ELSE
          STR = 'CVO2~'
        END IF
d216 1
a216 1
        RETURN
d220 1
a220 1
        X1 = XST - 15
d222 1
a222 1
        X1 = XST + WIDTH + 7
d225 10
a234 10
      CALL RAMWRITE (X1, Y1, XSIZE, YSIZE, SCAN, FIXPLANE, RMD, TEXT, FONT1C)
C
C ---------------------------------------
C  Put numbers at top and bottom of scale
C ---------------------------------------
C
8100  FORMAT (I5)
8201  FORMAT (F6.1)
8202  FORMAT (F6.2)
8203  FORMAT (F6.3)
d238 3
a240 3
C
C  Get values to write (RTOPP and RBOT)
C
d242 6
a247 6
        IF (ABSRANGE) THEN
          RTOPP = ABSMAX
        ELSE
          RTOPP = FLOAT (DMAX) * SCALER (1)
        END IF
        RBOT = 0.0
d249 22
a270 22
        IF (SCALEPOS .EQ. 0) THEN
          IF (ABSRANGE) THEN
            RTOPP = RELMAX
          ELSE
            RTOPP = FLOAT (MAX0 (DMAX, IABS (DMIN))) * SCALER (1)
          END IF
          RBOT = -RTOPP
        ELSE IF (SCALEPOS .EQ. 1) THEN
          IF (ABSRANGE) THEN
            RTOPP = RELMAX
          ELSE
            RTOPP = FLOAT (DMAX) * SCALER (1)
          END IF
          RBOT = 0.0
        ELSE IF (SCALEPOS .EQ. -1) THEN
          IF (ABSRANGE) THEN
            RBOT = -ABS (RELMAX)
          ELSE
            RBOT = FLOAT (DMIN) * SCALER (1)
          END IF
          RTOPP = 0.0
        END IF
d273 3
a275 3
C
C  Label at top of scale
C
d278 1
a278 1
        WRITE (STR, 8100) NINT (RTOPP)
d280 1
a280 1
        WRITE (STR, 8201) RTOPP
d282 1
a282 1
        WRITE (STR, 8202) RTOPP
d284 1
a284 1
        WRITE (STR, 8203) RTOPP
d289 1
a289 1
        X1 = XST - 6 - XSIZE * L * 14
d291 1
a291 1
        X1 = XST + WIDTH + 6
d294 4
a297 4
      CALL RAMWRITE (X1, Y1, XSIZE, YSIZE, SCAN, FIXPLANE, RMD, TEXT, FONT1C)
C
C  Label at bottom of scale
C
d300 1
a300 1
        WRITE (STR, 8100) NINT (RBOT)
d302 1
a302 1
        WRITE (STR, 8201) RBOT
d304 1
a304 1
        WRITE (STR, 8202) RBOT
d306 1
a306 1
        WRITE (STR, 8203) RBOT
d313 1
a313 1
        X1 = XST - 6 - XSIZE * (L - L1 + 1) * 14
d315 1
a315 1
        X1 = XST + WIDTH + 6
d318 2
a319 2
      CALL RAMWRITE (X1, Y1, XSIZE, YSIZE, SCAN, FIXPLANE, RMD, TEXT1, FONT1C)
C
@


1.9
log
@allow processing for CMRGlucose
@
text
@d1 1
a1 1
C$Id: d2bartwo.f,v 1.8 1994/06/09 21:55:12 ty7777 Exp tom $
d3 3
d28 2
d119 1
a119 1
      rcsheader = "$Header: /home/npggw/tom/src/spideram/RCS/d2bartwo.f,v 1.8 1994/06/09 21:55:12 ty7777 Exp tom $"
d214 6
@


1.8
log
@Use the PCFLAG.
@
text
@d1 1
a1 1
C$Id: d2bartwo.f,v 1.7 1994/06/09 21:17:08 ty7777 Exp ty7777 $
d3 3
d25 2
d114 1
a114 1
      rcsheader = "$Header: /home/petsun4/ty7777/src/spideram/RCS/d2bartwo.f,v 1.7 1994/06/09 21:17:08 ty7777 Exp ty7777 $"
d203 6
@


1.7
log
@Added PC flag.
@
text
@d1 1
a1 1
C$Id: d2bartwo.f,v 1.6 1994/02/08 20:50:18 ty7777 Exp ty7777 $
d3 3
d109 1
a109 1
      rcsheader = "$Header$"
d151 1
a151 1
        CALL RAMIMG (GRAYBAR, XDIM, YDIM, XST + I, YST, SCAN, TYPE, 1, ABSSCALE, RMD)
@


1.6
log
@Delted the debugging message.
@
text
@d1 1
a1 1
C$Id: d2bartwo.f,v 1.5 1994/02/08 20:20:02 ty7777 Exp ty7777 $
d3 3
a26 1
C     Modified by TOV 26-Sep-91 for XSPIDERAM.
d29 1
d106 1
a106 1
      rcsheader = "$Id: d2bartwo.f,v 1.5 1994/02/08 20:20:02 ty7777 Exp ty7777 $"
d148 1
a148 1
        CALL RAMIMG (GRAYBAR, XDIM, YDIM, XST + I, YST, SCAN, TYPE, RMD, ABSSCALE)
@


1.5
log
@Added array size to 1024 from 512.
@
text
@d1 5
a5 2
C$Id$
C$Log$
d103 1
a103 1
      rcsheader = "$Id: d2bartwo.f,v 1.4 1993/11/11 16:36:40 ty7777 Exp ty7777 $"
a286 1
      WRITE (*, *) L1, L
@


1.4
log
@Added ABSSCALE.
@
text
@d1 5
a5 2
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
d19 2
d22 2
d84 1
a84 1
      SUBROUTINE D2BARTWO(SIDE,SUB)
d86 1
a86 1
      INTEGER*2     GRAYBAR(512),OFFSET
d88 1
a88 1
     &              RANGE,XSIZE,YSIZE,X1,Y1,L,I
d92 1
d96 1
a96 1
      EQUIVALENCE (STR,TEXT)
d99 2
a100 2
      DATA TYPE,XSIZE,YSIZE /0,1,2/
      rcsheader = "$Id: d2bartwo.f,v 1.3 1993/10/04 21:55:32 tom Exp ty7777 $"
d107 1
a107 1
      IF (SIDE.EQ.1) THEN
d122 1
a122 1
      ELSE IF (SCALEPOS.EQ.0) THEN
d125 1
a125 1
      ELSE IF (SCALEPOS.EQ.1) THEN
d132 2
a133 2
      DO 100 I=1,LENGTH
        GRAYBAR(LENGTH-I+1)= INT(NINT(FLOAT(RANGE*I)/FLOAT(LENGTH)))
d159 135
a293 132
          ELSE
            STR = 'CBF~'
          END IF
        ELSE IF (NTYPE(1).EQ.3) THEN
          IF (SUB) THEN
            STR = 'CBV DIFF~'
          ELSE
            STR = 'CBV~'
          END IF
        ELSE
          RETURN
        END IF
      ELSE IF (PROCESS.EQ.2) THEN
        IF (SUB) THEN
          STR = 'OEF DIFF~'
        ELSE
          STR = 'OEF~'
        END IF
      ELSE IF (PROCESS.EQ.3) THEN
        IF (SUB) THEN
          STR = 'CMRO2 DIFF~'
        ELSE
          STR = 'CMRO2~'
        END IF
      ELSE IF (PROCESS.EQ.4. OR. PROCESS.EQ.5) THEN
        IF (SUB) THEN
          STR = 'ACTIVITY DIFF~'
        ELSE
          STR = 'TISSUE ACTIVITY~'
        END IF
      ELSE
        RETURN
      END IF
      L = IANYL(STR,'~')
      IF (SIDE.EQ.1) THEN
        X1 = XST - 15
      ELSE
        X1 = XST + WIDTH + 7
      END IF
      Y1 = YST + (LENGTH - L*YSIZE*9)/2
      CALL RAMWRITE(X1,Y1,XSIZE,YSIZE,SCAN,FIXPLANE,RMD,TEXT,FONT1C)
C
C ---------------------------------------
C  Put numbers at top and bottom of scale
C ---------------------------------------
C
8100  FORMAT(I5)
8201  FORMAT(F6.1)
8202  FORMAT(F6.2)
8203  FORMAT(F6.3)
      SCAN = 0
      RBOT = 0.0
      RTOPP = 0.0
C
C  Get values to write (RTOPP and RBOT)
C
      IF (ABSSCALE) THEN
        IF (ABSRANGE) THEN
          RTOPP = ABSMAX
        ELSE
          RTOPP = FLOAT(DMAX)*SCALER(1)
        END IF
        RBOT = 0.0
      ELSE
        IF (SCALEPOS.EQ.0) THEN
          IF (ABSRANGE) THEN
            RTOPP = RELMAX
          ELSE
            RTOPP = FLOAT(MAX0(DMAX,IABS(DMIN)))*SCALER(1)
          END IF
          RBOT = -RTOPP
        ELSE IF (SCALEPOS.EQ.1) THEN
          IF (ABSRANGE) THEN
            RTOPP = RELMAX
          ELSE
            RTOPP = FLOAT(DMAX)*SCALER(1)
          END IF
          RBOT = 0.0
        ELSE IF (SCALEPOS.EQ.-1) THEN
          IF (ABSRANGE) THEN
            RBOT = -ABS(RELMAX)
          ELSE
            RBOT = FLOAT(DMIN)*SCALER(1)
          END IF
          RTOPP = 0.0
        END IF
      END IF
      RMAX = AMAX1(ABS(RTOPP),ABS(RBOT))
C
C  Label at top of scale
C
      STR = ' '
      IF (ABS(RMAX).GE.100.0) THEN
        WRITE(STR,8100) NINT(RTOPP)
      ELSE IF (ABS(RMAX).GE.10.0) THEN
        WRITE(STR,8201) RTOPP
      ELSE IF (ABS(RMAX).GE.1.0) THEN
        WRITE(STR,8202) RTOPP
      ELSE
        WRITE(STR,8203) RTOPP
      END IF
      L = INANYR(STR,' ')
      STR(L+1:L+1) = '~'
      IF (SIDE.EQ.1) THEN
        X1 = XST - 6 - XSIZE*L*7
      ELSE
        X1 = XST + WIDTH + 5
      END IF
      Y1 = YST
      CALL RAMWRITE(X1,Y1,XSIZE,YSIZE,SCAN,FIXPLANE,RMD,TEXT,FONT1C)
C
C  Label at bottom of scale
C
      STR = ' '
      IF (ABS(RMAX).GE.100.0) THEN
        WRITE(STR,8100) NINT(RBOT)
      ELSE IF (ABS(RMAX).GE.10.0) THEN
        WRITE(STR,8201) RBOT
      ELSE IF (ABS(RMAX).GE.1.0) THEN
        WRITE(STR,8202) RBOT
      ELSE
        WRITE(STR,8203) RBOT
      END IF
      L = INANYR(STR,' ')
      STR(L+1:L+1) = '~'
      IF (SIDE.EQ.1) THEN
        X1 = XST - 6 - XSIZE*L*7
      ELSE
        X1 = XST + WIDTH + 5
      END IF
      Y1 = YST +  LENGTH-9*YSIZE
      CALL RAMWRITE(X1,Y1,XSIZE,YSIZE,SCAN,FIXPLANE,RMD,TEXT,FONT1C)
@


1.3
log
@added rcsheader
@
text
@d92 1
a92 1
      rcsheader = "$Id$"
d133 2
a134 2
      DO 200 I=1,WIDTH
        CALL RAMIMG(GRAYBAR,XDIM,YDIM,XST+I,YST,SCAN,TYPE,RMD)
@


1.2
log
@04/23/92 by Tom Yang
@
text
@d81 1
a81 1
     2              RANGE,XSIZE,YSIZE,X1,Y1,L,I
d86 1
d92 1
@


1.1
log
@Initial revision
@
text
@@
