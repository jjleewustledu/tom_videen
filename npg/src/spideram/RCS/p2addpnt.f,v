head	2.0;
access;
symbols;
locks; strict;
comment	@c @;


2.0
date	2004.02.20.14.34.10;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	2002.12.02.21.26.52;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	99.08.09.14.04.42;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	93.10.04.21.55.32;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	92.04.23.21.25.39;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	92.04.13.19.12.07;	author tom;	state Exp;
branches;
next	;


desc
@Spideram function.
@


2.0
log
@Feb 2004
@
text
@CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     
C     Subroutine:   P2ADDPNT.FTN
C     Author:       Tom O. Videen
C     Date:         22-May-87
C     Intent:
C     .  This routine plots a point on the Ramtek Display Monitor
C     .  and stores the point plotted in the list BOUNDARY.
C     .  It updates the minimum and maximum values for X and Y
C     .  in the boundary list.
C     
C     .  The routine checks that the point is within the boundaries
C     .  of the image:  if it is not, it uses the point on the
C     .  closest boundary of the image.  This altered point
C     .  will be returned to the calling program.
C     
C     .  The routine checks that the maximum number of boundary points
C     .  allowed in the array BOUNDARY is not exceeded.  When the
C     .  maximum is reached, ERRFLAG is set to true and a warning is
C     .  written to the user.
C     
C     Common Blocks from SPIDERAM.INC:
C     .  **LUINFO   - logical units (also /USRIO/)   (read only)
C     .  **DISPLAY  - display parameters             (read only)
C     .  **REGION   - region analysis parameters     (read only)
C     
C     Variables:
C     .  N = number of the region being defined;
C     .  X,Y = location of the point in image space;
C     .        (1,1 is upper left screen)
C     .  PLANES = planes in which to set a bit;
C     .  XEND = last x-value of the displayed image;
C     .  YEND = last y-value of the displayed image;
C     .  ERRFLAG = set true when TOP(REG) = 500
C     
C     Uses subroutine:
C     .  P2POINT
C     
C     Called by: P2TRACK
C     
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     rcsheader = "$Id: p2addpnt.f,v 1.5 2002/12/02 21:26:52 tom Exp tom $"

      SUBROUTINE P2ADDPNT(X,Y,PLANES,N,ERRFLAG)

      INTEGER*4  X,Y,N,PLANES,XEND,YEND,YZERO
      LOGICAL*1  ERRFLAG

      INCLUDE 'spideram.inc'

      ERRFLAG = .FALSE.

C     Make sure the point is in the displayed image

      XEND = XLOW + SIZE -1
      IF (ORIENT.EQ.'T') THEN
         YZERO = YLOW
         YEND = YLOW + SIZE -1
      ELSE
         YZERO = 0
         YEND = SLICES*SLCLINES + 1
      END IF

      IF (X.LT.XLOW)  X=XLOW
      IF (X.GT.XEND)  X=XEND
      IF (Y.LT.YZERO) Y=YZERO
      IF (Y.GT.YEND)  Y=YEND

C     Check that there is storage space left in BOUNDARY

 8500 FORMAT (' *** ERROR -- The maximum number of points that')
 8501 FORMAT (' ***          may be stored for irregular regions')
 8502 FORMAT (' ***          (20000) has been reached.')
      IF (TOP.GE.20000) THEN
         ERRFLAG = .TRUE.
         WRITE (USEROUT,8500)
         WRITE (USEROUT,8501)
         WRITE (USEROUT,8502)
         RETURN
      END IF

C     Add the point to the BOUNDARY list

      TOP = TOP + 1
      BOUNDARY(1,TOP) = INT(X)
      BOUNDARY(2,TOP) = INT(Y)

C     Update XMIN, XMAX, YMIN, and YMAX

      IF (TOP.EQ.INT(BVAL(N))) THEN
         XMIN(N) = INT(X)
         XMAX(N) = INT(X)
         YMIN(N) = INT(Y)
         YMAX(N) = INT(Y)
      ELSE
         IF (X.LT.INT(XMIN(N))) XMIN(N)=INT(X)
         IF (X.GT.INT(XMAX(N))) XMAX(N)=INT(X)
         IF (Y.LT.INT(YMIN(N))) YMIN(N)=INT(Y)
         IF (Y.GT.INT(YMAX(N))) YMAX(N)=INT(Y)
      END IF

C     Plot the point on the Ramtek

      CALL P2POINT(X,Y,PLANES)

      RETURN
      END
@


1.5
log
@format changes plus fixes for g77
@
text
@d42 1
a42 1
C     rcsheader = "$Id: p2addpnt.f,v 1.4 1999/08/09 14:04:42 tom Exp tom $"
@


1.4
log
@increase BOUNDARY from 2000 -> 20000 points
@
text
@d2 39
a40 42
C
C  Subroutine:   P2ADDPNT.FTN
C
C  Author:       Tom O. Videen
C  Date:         22-May-87
C  Written For:  SPIDERAM Super PET Image Display Program
C
C  Intent:
C     This routine plots a point on the Ramtek Display Monitor
C     and stores the point plotted in the list BOUNDARY.
C     It updates the minimum and maximum values for X and Y
C     in the boundary list.
C
C     The routine checks that the point is within the boundaries
C     of the image:  if it is not, it uses the point on the
C     closest boundary of the image.  This altered point
C     will be returned to the calling program.
C
C     The routine checks that the maximum number of boundary points
C     allowed in the array BOUNDARY is not exceeded.  When the
C     maximum is reached, ERRFLAG is set to true and a warning is
C     written to the user.
C
C  Common Blocks from SPIDERAM.INC:
C     **LUINFO   - logical units (also /USRIO/)   (read only)
C     **DISPLAY  - display parameters             (read only)
C     **REGION   - region analysis parameters     (read only)
C
C   Variables:
C     N = number of the region being defined;
C     X,Y = location of the point in image space;
C           (1,1 is upper left screen)
C     PLANES = planes in which to set a bit;
C     XEND = last x-value of the displayed image;
C     YEND = last y-value of the displayed image;
C     ERRFLAG = set true when TOP(REG) = 500
C
C  Uses subroutine:
C     P2POINT
C
C  Called by: P2TRACK
C
d42 2
a43 1
C
d45 1
a45 1
C
d48 1
a48 2
      character*256 rcsheader
C
d50 1
a50 2
      rcsheader = "$Id: p2addpnt.f,v 1.3 1993/10/04 21:55:32 tom Exp tom $"
C
d52 3
a54 3
C
C   Make sure the point is in the displayed image
C
d57 2
a58 2
        YZERO = YLOW
        YEND = YLOW + SIZE -1
d60 2
a61 2
        YZERO = 0
        YEND = SLICES*SLCLINES + 1
d63 1
a63 1
C
d68 6
a73 6
C
C   Check that there is storage space left in BOUNDARY
C
8500  FORMAT (' *** ERROR -- The maximum number of points that')
8501  FORMAT (' ***          may be stored for irregular regions')
8502  FORMAT (' ***          (20000) has been reached.')
d75 5
a79 5
        ERRFLAG = .TRUE.
        WRITE (USEROUT,8500)
        WRITE (USEROUT,8501)
        WRITE (USEROUT,8502)
        RETURN
d81 3
a83 3
C
C   Add the point to the BOUNDARY list
C
d87 3
a89 3
C
C   Update XMIN, XMAX, YMIN, and YMAX
C
d91 4
a94 4
        XMIN(N) = INT(X)
        XMAX(N) = INT(X)
        YMIN(N) = INT(Y)
        YMAX(N) = INT(Y)
d96 4
a99 4
        IF (X.LT.INT(XMIN(N))) XMIN(N)=INT(X)
        IF (X.GT.INT(XMAX(N))) XMAX(N)=INT(X)
        IF (Y.LT.INT(YMIN(N))) YMIN(N)=INT(Y)
        IF (Y.GT.INT(YMAX(N))) YMAX(N)=INT(Y)
d101 3
a103 3
C
C   Plot the point on the Ramtek
C
d105 1
a105 1
C
@


1.3
log
@added rcsheader
@
text
@d53 1
a53 1
      rcsheader = "$Id$"
d77 2
a78 2
8502  FORMAT (' ***          (2000) has been reached.')
      IF (TOP.GE.2000) THEN
@


1.2
log
@Save window dump. 04/23/92 by Tom Yang
@
text
@a47 1
C
d50 1
d53 1
a53 1
C
@


1.1
log
@Initial revision
@
text
@@
