head	2.0;
access;
symbols;
locks; strict;
comment	@c @;


2.0
date	2004.02.20.14.34.10;	author tom;	state Exp;
branches;
next	1.12;

1.12
date	2002.12.02.21.26.52;	author tom;	state Exp;
branches;
next	1.11;

1.11
date	99.03.05.18.49.14;	author tom;	state Exp;
branches;
next	1.10;

1.10
date	98.04.29.15.20.35;	author tom;	state Exp;
branches;
next	1.9;

1.9
date	97.10.28.14.43.38;	author tom;	state Exp;
branches;
next	1.8;

1.8
date	97.10.24.21.52.03;	author tom;	state Exp;
branches;
next	1.7;

1.7
date	96.09.25.20.18.49;	author tom;	state Exp;
branches;
next	1.6;

1.6
date	94.11.29.23.32.26;	author ty7777;	state Exp;
branches;
next	1.5;

1.5
date	94.01.14.18.20.06;	author ty7777;	state Exp;
branches;
next	1.4;

1.4
date	93.10.04.21.55.32;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	92.10.13.19.48.52;	author ty7777;	state Exp;
branches;
next	1.2;

1.2
date	92.04.23.21.25.39;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	92.04.13.19.12.07;	author tom;	state Exp;
branches;
next	;


desc
@Spideram function.
@


2.0
log
@Feb 2004
@
text
@C     $Id: m2global.f,v 1.12 2002/12/02 21:26:52 tom Exp tom $
C     $Log: m2global.f,v $
c Revision 1.12  2002/12/02  21:26:52  tom
c format changes plus fixes for g77
c
c     Revision 1.11  1999/03/05  18:49:14  tom
c     add CVO2
c     
c     Revision 1.10  1998/04/29  15:20:35  tom
c     allow processing for CMRGlucose
c     
c     Revision 1.9  1997/10/28  14:43:38  tom
c     NOZEROS is excluded from mean regional
c     
c     Revision 1.8  1997/10/24  21:52:03  tom
c     add NOZEROS option
c     
c     Revision 1.7  1996/09/25  20:18:49  tom
c     256 slices
c     
c     Revision 1.6  1994/11/29  23:32:26  ty7777
c     Use the initial slice to define the GBA list.
c     
c     Revision 1.5  1994/01/14  18:20:06  ty7777
c     Added processing for images with more than 49 slices.
c     
c     Revision 1.4  1993/10/04  21:55:32  tom
c     added rcsheader
c     
c     Revision 1.3  1992/10/13  19:48:52  ty7777
c     Replace CTOI in GETREAL with NEWCTOI.
c     
C     
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     
C     Subroutine:   m2global.f
C     Author:       Tom O. Videen
C     Date:         03-Jun-87
C     Intent:
C     This subroutine writes the global averaging menu to the
C     terminal and gets the user's responses.
C     
C     History:
C     .  Modified 05-Mar-99 by TOV to allow processing for CVO2
C     .     (PROCESS may be 0-7)
C     .  Modified 28-Apr-98 by TOV to allow processing for CMRGlucose
C     .     (PROCESS may be 0-6)
C     .  Modified 26-Aug-87 by TOV to allow selection of a different
C     .     midline value without returning to the regions menu;
C     .  Modified 06-Oct-87 by TOV to allow processing for tissue activity
C     .     either with or without decay correction; (PROCESS may be 0-5)
C     .  Modified 14-Sep-88 by TOV:
C     .     1) Change FILETP from I*4 to CH*23 in **DISPLAY common block.
C     .     2) Reset ABSSCALE=true, ABSRANGE=false, COMPARE=false before
C     .        processing, and restore before exiting.
C     .  Modified 27-Sep-91 by TOV for XSPIDERAM.
C     .  Modified 07-Oct-91 by Tom Yang for sending global information to
C     .        a file.
C     .  Modified 15-Oct-91 by TOV:
C     .     1) Option to compute MULTFACT(20).
C     .        Add NORMALIZE and NRMVALUE to this program and to
C     .        the call parameters of G2WHOLES and G2MEANRG.
C     .  Modified 29-Nov-94 by Tom Yang:
C     .     1) Use the initial slice to define the GBA slices.
C     .     2) Fix the NRMVALUE bug.
C     
C     Common blocks from SPIDERAM.INC
C     .  **LUINFO   - logical units (also /USRIO/)   (read only)
C     .  **DISPLAY  - display parameters             (read only)
C     .  **SCALES    - scaling parameters            (write)
C     .  **FILES    - scan file list                 (read only)
C     .  **GLOBALAV - global averaging parameters    (write)
C     .  **REGION   - region analysis parameters     (read only)
C     
C     Local Variables:
C     .  TITLE - title of this menu;
C     .  MENUSET - set of characters allowed for menu options;
C     .  CH - input character for selecting a menu option;
C     .  ROWCH,COLCH - location of the field for entering CH;
C     .  Q - question;
C     .  HOME,CLEAR - values passed to TCONTROL to home the cursor and
C     .     clear the terminal screen;
C     .  DASH - string of dashes;
C     .  ERROR - true indicates an error message needs to be erased from the terminal;
C     .  ERRTYPE = type of error in processing images;
C     .  RLVALUES: true--> compute right/left hemisphere averages;
C     .  PRINT - send global averages to printer;
C     .  SINGLE: true--> compute threshold to max value on each slice;
C     .          false-> compute threshold to max value on entire image;
C     
C     Uses Subroutines:
C     .  D2ERROR  - gets appropriate error message for an ERRTYPE;
C     .  G2MEANRG - mean regional global averaging;
C     .  G2WHOLES - whole slice global averaging;
C     .  R2GET    - get a list of regions from a disk file;
C     .  GETINT   - get an integer;
C     .  GETREAL  - get a real no.;
C     .  TCONTROL - terminal control;
C     .  YESNO    - write a question and get a Y or N response;
C     .  CHFIELD  - get a character from terminal;
C     
C     Called by:  SPIDERAM
C     
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     rcsheader = "$Id: m2global.f,v 1.12 2002/12/02 21:26:52 tom Exp tom $"

      SUBROUTINE M2GLOBAL

      INTEGER*4    ROWCH,COLCH,HOME,CLEAR,ERRTYPE,L1,L2
      CHARACTER*1  CH,BELL
      CHARACTER*20 TITLE,DASH,TEMPOUT
      CHARACTER*23 BLANK        ! blank string to check for null FILETP
      CHARACTER*39 ATYPE(3)
      CHARACTER*80 Q,MENUSET,STR
      LOGICAL*1    A,ERROR,PRINT,SINGLE,RLVALUES,NOZEROS
      LOGICAL*1    LABSSCALE,LABSRANGE,LCOMPARE
      LOGICAL*1    PRINTON

      INCLUDE 'spideram.inc'

      DATA HOME,CLEAR /1,2/
      DATA TITLE /'Global Averaging:'/
      DATA DASH  /'----------------'/
      DATA BLANK /'                       '/
      DATA ATYPE(1) /'MEAN REGIONAL                          '/
      DATA ATYPE(2) /'WHOLE SLICE                            '/
      DATA ATYPE(3) /'WHOLE SLICE plus Right/Left Hemispheres'/
      DATA MENUSET  /'CRMcrm'/
      DATA ROWCH,COLCH /22,1/

      BELL = CHAR(7)
      ERRTYPE = 0
      ERROR    = .FALSE.
      PRINT    = .TRUE.
      SINGLE   = .TRUE.
      NOZEROS  = .FALSE.
      RLVALUES = .FALSE.

C     Save global values while processing to restore before exiting

      LABSSCALE = ABSSCALE
      LABSRANGE = ABSRANGE
      LCOMPARE  = COMPARE
      ABSSCALE = .TRUE.
      ABSRANGE = .FALSE.
      COMPARE  = .FALSE.

C     Clear the screen and write the menu with currently selected options

 8000 FORMAT(A)

 50   CALL TCONTROL(HOME,0,0)
      CALL TCONTROL(CLEAR,0,0)
      WRITE (USEROUT,8000) TITLE
      WRITE (USEROUT,8000) DASH

C     Mean regional or whole slice

 100  WRITE (USEROUT,*)
      WRITE (USEROUT,*) '1 = Mean Regional'
      WRITE (USEROUT,*) '2 = Whole Slice Averages'
      WRITE (USEROUT,*) '3 = Whole Slice plus Right/Left Hemispheres'
      WRITE (USEROUT,*) '0 = EXIT to main menu'
      WRITE (USEROUT,*)
      Q = 'Type of Global Averaging'
      CALL GETINT(Q,GLBTYPE,0,3)
      IF (GLBTYPE.EQ.0) GO TO 9000

C     Type of Processing

      WRITE (USEROUT,*)
      WRITE (USEROUT,*) '0 = PETT Numbers'
      WRITE (USEROUT,*) '1 = CBF or CBV'
      WRITE (USEROUT,*) '2 = OEF'
      WRITE (USEROUT,*) '3 = CMRO2'
      WRITE (USEROUT,*) '4 = Decay-corrected Tissue Activity'
      WRITE (USEROUT,*) '5 = Non-decay-corrected Tissue Activity'
      WRITE (USEROUT,*) '6 = CMRGlucose'
      WRITE (USEROUT,*)
      Q = 'Type of processing'
      CALL GETINT (Q, PROCESS, 0, 7)

      IF (GLBTYPE .NE.1) THEN
         Q = 'Exclude zero values from averages'
         CALL YESNO(Q,NOZEROS)
      ENDIF

      Q = 'Use global means to compute normalization factors'
      CALL YESNO (Q, NORMALIZE)
      IF (NORMALIZE) THEN
         Q = 'Normalize to'
         CALL GETREAL (Q, NRMVALUE, 0.0, 10000.0)
      END IF

C     Mean Regional Processing Selections
C     -----------------------------------

      IF (GLBTYPE.EQ.1) THEN
 300     CALL R2GET(ERROR)
         IF (ERROR) THEN
            WRITE(USEROUT,*) '*** No region file ***',BELL
            A = .FALSE.
            Q = 'Cancel global averaging'
            CALL YESNO(Q,A)
            IF (A) THEN
               GO TO 9000
            ELSE
               GO TO 300
            END IF
         END IF

C     Whole Slice Processing Selections
C     ---------------------------------

      ELSE
         IF (GLBTYPE.EQ.3) THEN
 350        WRITE(USEROUT,*)
            WRITE(USEROUT,*) 'Right/Left values are computed using ',
     2           'current midline location for ALL slices.'
            WRITE(USEROUT,*)
            IF (XMIDLINE-FLOAT(INT(XMIDLINE)).LT.0.1) THEN
               WRITE(USEROUT,*) 'Half the sum of pixel values ON the ',
     2              'midline will be added to the right and left'
               WRITE(USEROUT,*) '   hemispheres.'
               WRITE(USEROUT,*)
            END IF
            WRITE(USEROUT,*) 'Midline = ',XMIDLINE
            WRITE(USEROUT,*)
            Q = 'Continue with this midline value'
            A = .TRUE.
            CALL YESNO(Q,A)
            IF (.NOT.A) THEN
               Q = 'New midline position'
               CALL GETREAL (Q, XMIDLINE, 1.0, 127.0)
               IF (XMIDLINE .NE. FLOAT (NINT (XMIDLINE))) THEN
                  XMIDLINE = FLOAT (INT (XMIDLINE)) + 0.5
               END IF
               GO TO 350
            END IF
         END IF

C     Scan File to use for Global Averaging

 400     Q = 'Scan File Number (0 to cancel)'
         CALL GETINT(Q,GLBFILE,0,20)
         IF (GLBFILE.EQ.0) GO TO 9000
         IF (NMSLICES.EQ.0) THEN
            WRITE(USEROUT,*) '*** No scan file for #',GLBFILE,BELL
            GO TO 400
         END IF

C     Slice Number to Process

         IF (GSLICES .EQ. 0) THEN
            GSLICES = NMSLICES
         END IF
         DO 500 I = 1, 256
            GLBSLICE (I) = 0
 500     CONTINUE
         Q = 'Number of Slices to Process'
         CALL GETINT (Q, GSLICES, 1, NMSLICES)
         IF (GSLICES .EQ. NMSLICES) THEN
            DO 550 I = 1, GSLICES
               GLBSLICE (I) = I
 550        CONTINUE
         ELSE
            Q = 'Initial Slice Number to Process'
            CALL GETINT (Q, GLBSTART, 1, NMSLICES)
            DO 600 I = 1, GSLICES
               GLBSLICE (I) = GLBSTART + (I - 1)
 600        CONTINUE
         END IF

C     Threshold/Template

         IF (FILETP.NE.BLANK) THEN
            WRITE(USEROUT,*) 'Current Template from ',FILETP
            WRITE(USEROUT,*) 'With Threshold at ',THRESHTP,'%'
            Q = 'Use this template'
            CALL YESNO(Q,GLBTEMP)
         ELSE
            GLBTEMP = .FALSE.
         END IF

C     Cutoff for thresholding

         IF (.NOT.GLBTEMP) THEN
            Q = 'Percent Cutoff for Thresholding'
            CALL GETINT (Q, THRESHLD, 0, 100)
            Q = 'Threshold applied to each slice (and not entire image)'
            CALL YESNO(Q,SINGLE)
         END IF
      END IF
C     -----------------------------------

C     Output to Printer

      Q = 'Save output'
      CALL YESNO(Q,PRINT)
      IF (PRINT) THEN
         Q = 'File name'
         L2 = INANYR(OUTFILE,' ')
         TEMPOUT = OUTFILE(1:L2)
         TEMPOUT (L2+1:L2+1) = '~'
         CALL GETSTRNG (Q, TEMPOUT)
         L1 = INANYR(TEMPOUT, ' ')
         IF (L1 .LE. L2 + 1) TEMPOUT (L2+1:L2+1) = ' '
         IF (TEMPOUT .NE. OUTFILE) THEN
            INQUIRE (PRINTER, OPENED = PRINTON)
            IF (PRINTON) CLOSE (PRINTER)
            L1 = INANYL(TEMPOUT,' ')
            L2 = INANYR(TEMPOUT,' ~')
            OUTFILE = TEMPOUT(L1:L2)
            INQUIRE (PRINTER, OPENED = PRINTON)
            IF (.NOT.PRINTON) OPEN (PRINTER, FILE=OUTFILE, STATUS='NEW')
         END IF
      END IF

C     Write current selections

 8200 FORMAT('Averaging Type           = ',A)
 8210 FORMAT('Type of Processing       = ',A)
 8300 FORMAT('Region File Name         = ',A)
 8310 FORMAT('Process All Files in Scan File List')
 8400 FORMAT('Scan File Name           = ',I3,2X,A)
 8410 FORMAT('Slice Numbers to Process = ',18I3)
 8415 FORMAT(27X,18I3)
 8420 FORMAT('Template                 = ',A,I4,'%')
 8430 FORMAT('Cutoff for Threshold     = ',I3,'%')
 8440 FORMAT('Midline of Slices        = ',F5.1)

      CALL TCONTROL(HOME,0,0)
      CALL TCONTROL(CLEAR,0,0)
      WRITE(USEROUT,8000) TITLE
      WRITE(USEROUT,8000) DASH
      WRITE(USEROUT,*) ' '
      WRITE(USEROUT,8200) ATYPE(GLBTYPE)
      IF (PROCESS.EQ.0) THEN
         WRITE(USEROUT,8210) 'Unprocessed PETT Counts'
      ELSE IF (PROCESS.EQ.1) THEN
         WRITE(USEROUT,8210) 'CBF or CBV'
      ELSE IF (PROCESS.EQ.2) THEN
         WRITE(USEROUT,8210) 'OEF'
      ELSE IF (PROCESS.EQ.3) THEN
         WRITE(USEROUT,8210) 'CMRO2'
      ELSE IF (PROCESS.EQ.4) THEN
         WRITE(USEROUT,8210) 'Decay-corrected Tissue Activity'
      ELSE IF (PROCESS.EQ.5) THEN
         WRITE(USEROUT,8210) 'Non-decay-corrected Tissue Activity'
      ELSE IF (PROCESS.EQ.6) THEN
         WRITE(USEROUT,8210) 'CMRGlucose'
      ELSE IF (PROCESS.EQ.7) THEN
         WRITE(USEROUT,8210) 'CVO2'
      END IF
      IF (GLBTYPE.EQ.1) THEN
         WRITE(USEROUT,8300) REGFILE
         WRITE(USEROUT,8310)
      ELSE
         WRITE(USEROUT,8400) GLBFILE,FILENAME(GLBFILE)
         IF (GSLICES.LE.18) THEN
            WRITE(USEROUT,8410) (GLBSLICE(I),I=1,GSLICES)
         ELSE
            WRITE(USEROUT,8410) (GLBSLICE(I),I=1,18)
            IF (GSLICES.LE.36) THEN
               WRITE(USEROUT,8415) (GLBSLICE(I),I=19,GSLICES)
            ELSE
               WRITE(USEROUT,8415) (GLBSLICE(I),I=19,36)
               WRITE(USEROUT,8415) (GLBSLICE(I),I=37,GSLICES)
            END IF
         END IF
         IF (GLBTEMP) THEN
            WRITE(USEROUT,8420) FILETP,THRESHTP
         ELSE
            WRITE(USEROUT,8430) THRESHLD
            IF (SINGLE) THEN
               WRITE(USEROUT,*) 'Threshold applied to EACH SLICE'
            ELSE
               WRITE(USEROUT,*) 'Threshold applied to ENTIRE IMAGE'
            END IF
         END IF
         IF (GLBTYPE.EQ.3) WRITE(USEROUT,8440) XMIDLINE
      END IF
      IF (PRINT) THEN
         WRITE(USEROUT,*) 'PRINT Averages'
      ELSE
         WRITE(USEROUT,*) 'Write Averages to TERMINAL ONLY'
      END IF
      WRITE(USEROUT,*)
      WRITE(USEROUT,*) 'Options:'
      WRITE(USEROUT,*) '------- '
      WRITE(USEROUT,*) '   C = Compute Global Averages'
      WRITE(USEROUT,*) '   R = Repeat Selections'
      WRITE(USEROUT,*) '   M = Exit to Main Menu'

C     Get user's selection

      CALL CHFIELD(CH,MENUSET,ROWCH,COLCH,0)
      WRITE(USEROUT,*)

C     Begin Processing

      IF (CH.EQ.'C' .OR. CH.EQ.'c') THEN
         IF (NORMALIZE) MULTFACT (GLBFILE) = 1.
         IF (GLBTYPE .EQ. 1) THEN
            CALL G2MEANRG (PRINT, ERRTYPE)
         ELSE
            IF (GLBTYPE.EQ.2) THEN
               RLVALUES = .FALSE.
            ELSE
               RLVALUES = .TRUE.
            END IF
            CALL G2WHOLES (SINGLE, RLVALUES, PRINT, NOZEROS, ERRTYPE)
         END IF
         IF (ERRTYPE.NE.0) THEN
            WRITE(USEROUT,*) '** Error in Image Processing **',BELL
            CALL D2ERROR(ERRTYPE,STR)
            WRITE(USEROUT,*) STR
         END IF
         Q = 'Continue'
         A = .TRUE.
         CALL YESNO(Q,A)
         IF (A) GO TO 50

C     Repeat Selections

      ELSE IF (CH.EQ.'R' .OR. CH.EQ.'r') THEN
         GO TO 100

C     Exit to Main Menu

      ELSE IF (CH.EQ.'M' .OR. CH.EQ.'m') THEN
         GO TO 9000
      END IF

C     Restore global variables

 9000 ABSSCALE = LABSSCALE
      ABSRANGE = LABSRANGE
      COMPARE  = LCOMPARE
      RETURN
      END
@


1.12
log
@format changes plus fixes for g77
@
text
@d1 1
a1 1
C     $Id: m2global.f,v 1.11 1999/03/05 18:49:14 tom Exp tom $
d3 3
d105 1
a105 1
C     rcsheader = "$Id: m2global.f,v 1.11 1999/03/05 18:49:14 tom Exp tom $"
@


1.11
log
@add CVO2
@
text
@d1 30
a30 27
C$Id: m2global.f,v 1.10 1998/04/29 15:20:35 tom Exp tom $
C$Log: m2global.f,v $
c Revision 1.10  1998/04/29  15:20:35  tom
c allow processing for CMRGlucose
c
c Revision 1.9  1997/10/28  14:43:38  tom
c NOZEROS is excluded from mean regional
c
c Revision 1.8  1997/10/24  21:52:03  tom
c add NOZEROS option
c
c Revision 1.7  1996/09/25  20:18:49  tom
c 256 slices
c
c Revision 1.6  1994/11/29  23:32:26  ty7777
c Use the initial slice to define the GBA list.
c
c Revision 1.5  1994/01/14  18:20:06  ty7777
c Added processing for images with more than 49 slices.
c
c Revision 1.4  1993/10/04  21:55:32  tom
c added rcsheader
c
c Revision 1.3  1992/10/13  19:48:52  ty7777
c Replace CTOI in GETREAL with NEWCTOI.
c
C
d32 5
a36 32
C
C  Subroutine:   m2global.f
C
C  Author:       Tom O. Videen
C  Date:         03-Jun-87
C  Written For:  SPIDERAM Super PETT Image Display Program
C
C  History:
C     Modified 05-Mar-99 by TOV to allow processing for CVO2
C        (PROCESS may be 0-7)
C     Modified 28-Apr-98 by TOV to allow processing for CMRGlucose
C        (PROCESS may be 0-6)
C     Modified 26-Aug-87 by TOV to allow selection of a different
C        midline value without returning to the regions menu;
C     Modified 06-Oct-87 by TOV to allow processing for tissue activity
C        either with or without decay correction; (PROCESS may be 0-5)
C     Modified 14-Sep-88 by TOV:
C        1) Change FILETP from I*4 to CH*23 in **DISPLAY common block.
C        2) Reset ABSSCALE=true, ABSRANGE=false, COMPARE=false before
C           processing, and restore before exiting.
C     Modified 27-Sep-91 by TOV for XSPIDERAM.
C     Modified 07-Oct-91 by Tom Yang for sending global information to
C           a file.
C     Modified 15-Oct-91 by TOV:
C        1) Option to compute MULTFACT(20).
C           Add NORMALIZE and NRMVALUE to this program and to
C           the call parameters of G2WHOLES and G2MEANRG.
C     Modified 29-Nov-94 by Tom Yang:
C        1) Use the initial slice to define the GBA slices.
C        2) Fix the NRMVALUE bug.
C
C  Intent:
d39 62
a100 45
C
C  Common blocks from SPIDERAM.INC
C     **LUINFO   - logical units (also /USRIO/)   (read only)
C     **DISPLAY  - display parameters             (read only)
C     **SCALES    - scaling parameters            (write)
C     **FILES    - scan file list                 (read only)
C     **GLOBALAV - global averaging parameters    (write)
C     **REGION   - region analysis parameters     (read only)
C
C  Local Variables:
C     TITLE - title of this menu;
C     MENUSET - set of characters allowed for menu options;
C     CH - input character for selecting a menu option;
C     ROWCH,COLCH - location of the field for entering CH;
C     Q - question;
C     HOME,CLEAR - values passed to TCONTROL to home the cursor and
C        clear the terminal screen;
C     DASH - string of dashes;
C     ERROR - true indicates an error message needs to be erased
C        from the terminal;
C     ERRTYPE = type of error in processing images;
C     RLVALUES: true--> compute right/left hemisphere averages;
C     PRINT - send global averages to printer;
C     SINGLE: true--> compute threshold to max value on each slice;
C             false-> compute threshold to max value on entire image;
C
C  Uses Subroutines:
C
C  SPIDERAM.LIB
C     D2ERROR  - gets appropriate error message for an ERRTYPE;
C     G2MEANRG - mean regional global averaging;
C     G2WHOLES - whole slice global averaging;
C     R2GET    - get a list of regions from a disk file;
C
C  TERMINAL.LIB
C     GETINT   - get an integer;
C     GETREAL  - get a real no.;
C     TCONTROL - terminal control;
C     YESNO    - write a question and get a Y or N response;
C
C  FIELDS.LIB - terminal I/O routines using fields:
C     CHFIELD  - get a character from terminal;
C
C  Called by:  SPIDERAM
C
d102 2
a103 1
C
d105 1
a105 1
C
d109 1
a109 1
      CHARACTER*23 BLANK   ! blank string to check for null FILETP
d112 1
a112 1
      LOGICAL*1    A,ERROR,PRINT,SINGLE,RLVALUES, NOZEROS
d115 1
a115 2
      character*256 rcsheader
C
a116 1
      rcsheader = "$Id: m2global.f,v 1.10 1998/04/29 15:20:35 tom Exp tom $"
d127 1
a127 1
C
d135 3
a137 3
C
C  Save global values while processing to restore before exiting
C
d144 6
a149 6
C
C  Clear the screen and write the menu with currently selected options
C
8000  FORMAT(A)
C
50    CALL TCONTROL(HOME,0,0)
d153 4
a156 4
C
C  Mean regional or whole slice
C
100   WRITE (USEROUT,*)
d165 3
a167 3
C
C  Type of Processing
C
d179 1
a179 1
C
d181 2
a182 2
        Q = 'Exclude zero values from averages'
        CALL YESNO(Q,NOZEROS)
d184 1
a184 1
C
d188 2
a189 2
        Q = 'Normalize to'
        CALL GETREAL (Q, NRMVALUE, 0.0, 10000.0)
d191 4
a194 4
C
C  Mean Regional Processing Selections
C  -----------------------------------
C
d196 16
a211 16
300     CALL R2GET(ERROR)
        IF (ERROR) THEN
          WRITE(USEROUT,*) '*** No region file ***',BELL
          A = .FALSE.
          Q = 'Cancel global averaging'
          CALL YESNO(Q,A)
          IF (A) THEN
            GO TO 9000
          ELSE
            GO TO 300
          END IF
        END IF
C
C  Whole Slice Processing Selections
C  ---------------------------------
C
d213 4
a216 9
        IF (GLBTYPE.EQ.3) THEN
350       WRITE(USEROUT,*)
          WRITE(USEROUT,*) 'Right/Left values are computed using ',
     2      'current midline location for ALL slices.'
          WRITE(USEROUT,*)
          IF (XMIDLINE-FLOAT(INT(XMIDLINE)).LT.0.1) THEN
            WRITE(USEROUT,*) 'Half the sum of pixel values ON the ',
     2        'midline will be added to the right and left'
            WRITE(USEROUT,*) '   hemispheres.'
d218 5
a222 11
          END IF
          WRITE(USEROUT,*) 'Midline = ',XMIDLINE
          WRITE(USEROUT,*)
          Q = 'Continue with this midline value'
          A = .TRUE.
          CALL YESNO(Q,A)
          IF (.NOT.A) THEN
            Q = 'New midline position'
            CALL GETREAL (Q, XMIDLINE, 1.0, 127.0)
            IF (XMIDLINE .NE. FLOAT (NINT (XMIDLINE))) THEN
              XMIDLINE = FLOAT (INT (XMIDLINE)) + 0.5
d224 66
a289 55
            GO TO 350
          END IF
        END IF
C
C  Scan File to use for Global Averaging
C
400     Q = 'Scan File Number (0 to cancel)'
        CALL GETINT(Q,GLBFILE,0,20)
        IF (GLBFILE.EQ.0) GO TO 9000
        IF (NMSLICES.EQ.0) THEN
          WRITE(USEROUT,*) '*** No scan file for #',GLBFILE,BELL
          GO TO 400
        END IF
C
C  Slice Number to Process
C
	IF (GSLICES .EQ. 0) THEN
          GSLICES = NMSLICES
	END IF
        DO 500 I = 1, 256
          GLBSLICE (I) = 0
500     CONTINUE
        Q = 'Number of Slices to Process'
        CALL GETINT (Q, GSLICES, 1, NMSLICES)
        IF (GSLICES .EQ. NMSLICES) THEN
          DO 550 I = 1, GSLICES
            GLBSLICE (I) = I
550       CONTINUE
        ELSE
          Q = 'Initial Slice Number to Process'
          CALL GETINT (Q, GLBSTART, 1, NMSLICES)
          DO 600 I = 1, GSLICES
            GLBSLICE (I) = GLBSTART + (I - 1)
600       CONTINUE
        END IF
C
C  Threshold/Template
C
        IF (FILETP.NE.BLANK) THEN
          WRITE(USEROUT,*) 'Current Template from ',FILETP
          WRITE(USEROUT,*) 'With Threshold at ',THRESHTP,'%'
          Q = 'Use this template'
          CALL YESNO(Q,GLBTEMP)
        ELSE
          GLBTEMP = .FALSE.
        END IF
C
C  Cutoff for thresholding
C
        IF (.NOT.GLBTEMP) THEN
          Q = 'Percent Cutoff for Thresholding'
          CALL GETINT (Q, THRESHLD, 0, 100)
          Q = 'Threshold applied to each slice (and not entire image)'
          CALL YESNO(Q,SINGLE)
        END IF
d291 4
a294 4
C  -----------------------------------
C
C  Output to Printer
C
d298 16
a313 16
        Q = 'File name'
        L2 = INANYR(OUTFILE,' ')
        TEMPOUT = OUTFILE(1:L2)
        TEMPOUT (L2+1:L2+1) = '~'
        CALL GETSTRNG (Q, TEMPOUT)
        L1 = INANYR(TEMPOUT, ' ')
        IF (L1 .LE. L2 + 1) TEMPOUT (L2+1:L2+1) = ' '
        IF (TEMPOUT .NE. OUTFILE) THEN
          INQUIRE (PRINTER, OPENED = PRINTON)
          IF (PRINTON) CLOSE (PRINTER)
          L1 = INANYL(TEMPOUT,' ')
          L2 = INANYR(TEMPOUT,' ~')
          OUTFILE = TEMPOUT(L1:L2)
          INQUIRE (PRINTER, OPENED = PRINTON)
          IF (.NOT.PRINTON) OPEN (PRINTER, FILE=OUTFILE, STATUS='NEW')
        END IF
d315 14
a328 14
C
C  Write current selections
C
8200  FORMAT('Averaging Type           = ',A)
8210  FORMAT('Type of Processing       = ',A)
8300  FORMAT('Region File Name         = ',A)
8310  FORMAT('Process All Files in Scan File List')
8400  FORMAT('Scan File Name           = ',I3,2X,A)
8410  FORMAT('Slice Numbers to Process = ',18I3)
8415  FORMAT(27X,18I3)
8420  FORMAT('Template                 = ',A,I4,'%')
8430  FORMAT('Cutoff for Threshold     = ',I3,'%')
8440  FORMAT('Midline of Slices        = ',F5.1)
C
d336 1
a336 1
        WRITE(USEROUT,8210) 'Unprocessed PETT Counts'
d338 1
a338 1
        WRITE(USEROUT,8210) 'CBF or CBV'
d340 1
a340 1
        WRITE(USEROUT,8210) 'OEF'
d342 1
a342 1
        WRITE(USEROUT,8210) 'CMRO2'
d344 1
a344 1
        WRITE(USEROUT,8210) 'Decay-corrected Tissue Activity'
d346 1
a346 1
        WRITE(USEROUT,8210) 'Non-decay-corrected Tissue Activity'
d348 1
a348 1
        WRITE(USEROUT,8210) 'CMRGlucose'
d350 1
a350 1
        WRITE(USEROUT,8210) 'CVO2'
d353 2
a354 2
        WRITE(USEROUT,8300) REGFILE
        WRITE(USEROUT,8310)
d356 23
a378 23
        WRITE(USEROUT,8400) GLBFILE,FILENAME(GLBFILE)
        IF (GSLICES.LE.18) THEN
          WRITE(USEROUT,8410) (GLBSLICE(I),I=1,GSLICES)
        ELSE
          WRITE(USEROUT,8410) (GLBSLICE(I),I=1,18)
          IF (GSLICES.LE.36) THEN
            WRITE(USEROUT,8415) (GLBSLICE(I),I=19,GSLICES)
          ELSE
            WRITE(USEROUT,8415) (GLBSLICE(I),I=19,36)
            WRITE(USEROUT,8415) (GLBSLICE(I),I=37,GSLICES)
          END IF
        END IF
        IF (GLBTEMP) THEN
          WRITE(USEROUT,8420) FILETP,THRESHTP
        ELSE
          WRITE(USEROUT,8430) THRESHLD
          IF (SINGLE) THEN
            WRITE(USEROUT,*) 'Threshold applied to EACH SLICE'
          ELSE
            WRITE(USEROUT,*) 'Threshold applied to ENTIRE IMAGE'
          END IF
        END IF
        IF (GLBTYPE.EQ.3) WRITE(USEROUT,8440) XMIDLINE
d381 1
a381 1
        WRITE(USEROUT,*) 'PRINT Averages'
d383 1
a383 1
        WRITE(USEROUT,*) 'Write Averages to TERMINAL ONLY'
d391 3
a393 3
C
C  Get user's selection
C
d396 3
a398 3
C
C  Begin Processing
C
d400 23
a422 23
        IF (NORMALIZE) MULTFACT (GLBFILE) = 1.
        IF (GLBTYPE .EQ. 1) THEN
          CALL G2MEANRG (PRINT, ERRTYPE)
        ELSE
          IF (GLBTYPE.EQ.2) THEN
            RLVALUES = .FALSE.
          ELSE
            RLVALUES = .TRUE.
          END IF
          CALL G2WHOLES (SINGLE, RLVALUES, PRINT, NOZEROS, ERRTYPE)
        END IF
        IF (ERRTYPE.NE.0) THEN
          WRITE(USEROUT,*) '** Error in Image Processing **',BELL
          CALL D2ERROR(ERRTYPE,STR)
          WRITE(USEROUT,*) STR
        END IF
        Q = 'Continue'
        A = .TRUE.
        CALL YESNO(Q,A)
        IF (A) GO TO 50
C
C  Repeat Selections
C
d424 4
a427 4
        GO TO 100
C
C  Exit to Main Menu
C
d429 1
a429 1
        GO TO 9000
d431 4
a434 4
C
C  Restore global variables
C
9000  ABSSCALE = LABSSCALE
@


1.10
log
@allow processing for CMRGlucose
@
text
@d1 1
a1 1
C$Id: m2global.f,v 1.9 1997/10/28 14:43:38 tom Exp tom $
d3 3
d30 1
a30 1
C  Subroutine:   m2gloabl.f
d37 2
d124 1
a124 1
      rcsheader = "$Id: m2global.f,v 1.9 1997/10/28 14:43:38 tom Exp tom $"
d186 1
a186 1
      CALL GETINT (Q, PROCESS, 0, 6)
d320 1
a320 1
          IF (.NOT.PRINTON) OPEN (PRINTER, FILE=OUTFILE, TYPE='DEVICE')
d357 2
@


1.9
log
@NOZEROS is excluded from mean regional
@
text
@d1 1
a1 1
C$Id: m2global.f,v 1.8 1997/10/24 21:52:03 tom Exp tom $
d3 3
d34 2
d119 1
a119 1
      rcsheader = "$Id: m2global.f,v 1.8 1997/10/24 21:52:03 tom Exp tom $"
d178 1
d181 1
a181 1
      CALL GETINT (Q, PROCESS, 0, 5)
d350 2
@


1.8
log
@add NOZEROS option
@
text
@d1 1
a1 1
C$Id: m2global.f,v 1.7 1996/09/25 20:18:49 tom Exp tom $
d3 3
d114 1
a114 1
      rcsheader = "$Id: m2global.f,v 1.7 1996/09/25 20:18:49 tom Exp tom $"
d177 4
a180 2
      Q = 'Exclude zero values from averages'
      CALL YESNO(Q,NOZEROS)
@


1.7
log
@256 slices
@
text
@d1 1
a1 1
C$Id: m2global.f,v 1.6 1994/11/29 23:32:26 ty7777 Exp tom $
d3 3
d105 1
a105 1
      LOGICAL*1    A,ERROR,PRINT,SINGLE,RLVALUES
d111 1
a111 1
      rcsheader = "$Id: m2global.f,v 1.6 1994/11/29 23:32:26 ty7777 Exp tom $"
d128 1
d174 3
d397 1
a397 1
          CALL G2WHOLES (SINGLE, RLVALUES, PRINT, ERRTYPE)
@


1.6
log
@Use the initial slice to define the GBA list.
@
text
@d1 1
a1 1
C$Id: m2global.f,v 1.5 1994/01/14 18:20:06 ty7777 Exp ty7777 $
d3 3
d108 1
a108 1
      rcsheader = "$Id: m2global.f,v 1.5 1994/01/14 18:20:06 ty7777 Exp ty7777 $"
d239 1
a239 1
        DO 500 I = 1, 75
@


1.5
log
@Added processing for images with more than 49 slices.
@
text
@d1 1
a1 1
C$Id: m2global.f,v 1.4 1993/10/04 21:55:32 tom Exp ty7777 $
d3 3
d37 3
a93 1
      REAL*4       NRMVALUE
d99 1
a99 1
      LOGICAL*1    A,ERROR,PRINT,SINGLE,RLVALUES,NORMALIZE
d105 1
a105 1
      rcsheader = "$Id: m2global.f,v 1.4 1993/10/04 21:55:32 tom Exp ty7777 $"
a122 1
      NRMVALUE = 1000.
d165 1
a165 1
      CALL GETINT(Q,PROCESS,0,5)
d168 1
a168 1
      CALL YESNO(Q,NORMALIZE)
d233 3
a235 1
        GSLICES = NMSLICES
d246 4
a249 6
          Q = 'Slice number to process'
          N = 0
          DO 600 I=1,GSLICES
            N = N+1
            CALL GETINT(Q,N,1,NMSLICES)
            GLBSLICE(I) = N
d268 1
a268 1
          CALL GETINT(Q,THRESHLD,0,100)
d378 3
a380 3
        IF (NORMALIZE) MULTFACT(GLBFILE) = 1.
        IF (GLBTYPE.EQ.1) THEN
          CALL G2MEANRG(PRINT,NRMVALUE,NORMALIZE,ERRTYPE)
d387 1
a387 2
          CALL G2WHOLES(SINGLE,RLVALUES,PRINT,NRMVALUE,NORMALIZE,
     &      ERRTYPE)
@


1.4
log
@added rcsheader
@
text
@d1 1
a1 1
C$Id: m2global.f,v 1.3 1992/10/13 19:48:52 ty7777 Exp tom $
d3 3
d100 1
a100 1
      rcsheader = "$Id$"
d230 2
a231 2
        DO 500 I=1,49
          GLBSLICE(I) = 0
d234 4
a237 4
        CALL GETINT(Q,GSLICES,1,NMSLICES)
        IF (GSLICES.EQ.NMSLICES) THEN
          DO 550 I=1,GSLICES
            GLBSLICE(I) = I
@


1.3
log
@Replace CTOI in GETREAL with NEWCTOI.
@
text
@d1 5
a5 2
C$Id$
C$Log$
d94 1
d97 2
@


1.2
log
@Save window dump. 04/23/92 by Tom Yang
@
text
@d1 4
a4 3
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  Subroutine:   M2GLOBAL.FTN
d6 2
d158 1
a158 1
        CALL GETREAL(Q,NRMVALUE,0.,10000.)
d200 3
a202 3
            CALL GETREAL(Q,XMIDLINE,1.0,127.0)
            IF (XMIDLINE.NE.FLOAT(NINT(XMIDLINE))) THEN
              XMIDLINE = FLOAT(INT(XMIDLINE)) + 0.5
@


1.1
log
@Initial revision
@
text
@@
