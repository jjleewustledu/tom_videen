head	2.0;
access;
symbols;
locks; strict;
comment	@c @;


2.0
date	2004.02.20.14.34.10;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	2002.12.02.21.26.52;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	99.02.17.18.43.30;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	93.10.04.21.55.32;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	92.04.23.21.25.39;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	92.04.13.19.12.07;	author tom;	state Exp;
branches;
next	;


desc
@Spideram function.
@


2.0
log
@Feb 2004
@
text
@CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     
C     Subroutine:   D2INIT.FTN
C     Author:       Tom O. Videen
C     Date:         19-May-87
C     Intent:
C     .  This subroutine initializes common block display parameters for
C     .  the particular type and size of display.
C     
C     . (Note: values of XORG, YORG, XBAR, YBAR should correspond
C     .     with those in D2DISPLA for multiple images)
C     
C     History:
C     .  Modified by TOV 12-Aug-87 to eliminate a bug in error checking
C     .     for max. value of N for coronal and sagittal sections;
C     .  Modified by TOV 27-Sep-91 for 1152 x 900 pixel window.
C     
C     Variables initialized:
C     .  XLOW,YLOW,XHIGH,YHIGH,XORG,YORG,XBAR,YBAR,N,SIZE,ZOFFSET
C     
C     Variables Passed:
C     .  N = number of sections to display;
C     .  NUMPETT = PETT number (1,6,7,8,10);
C     
C     Common Blocks from SPIDERAM.INC:
C     .  **DISPLAY  - display parameters             (write)
C     
C     No Subroutines
C     
C     Called by:  D2DISPLA
C     
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     rcsheader = "$Id: d2init.f,v 1.5 2002/12/02 21:26:52 tom Exp tom $"

      SUBROUTINE D2INIT(N,NUMPETT)

      INTEGER*4   N,NUMPETT,LASTSECT

      INCLUDE 'spideram.inc'

      IF (MAG.EQ.1) THEN
         SIZE = 128
         XLOW = 1
         XORG = 1
         YORG = 128*(DLOC-1)
         XBAR = 1000
         YBAR = 100
         IF (DLOC.GT.6 .AND. NUMDISP.GT.7) THEN
            N = 7
         ELSE IF (DLOC.GT.5 .AND. NUMDISP.GT.14) THEN
            N = 14
         ELSE IF (DLOC.GT.4 .AND. NUMDISP.GT.21) THEN
            N = 21
         ELSE IF (DLOC.GT.3 .AND. NUMDISP.GT.28) THEN
            N = 28
         ELSE IF (DLOC.GT.2 .AND. NUMDISP.GT.35) THEN
            N = 35
         ELSE IF (DLOC.GT.1 .AND. NUMDISP.GT.42) THEN
            N = 42
         ELSE IF (NUMDISP.GT.49) THEN
            N = 49
         ELSE
            N = NUMDISP
         END IF
         LASTSECT = DSECTION - 1 + (SECTSTEP*N)
         IF (ORIENT.EQ.'T') THEN
            IF (LASTSECT.GT.SLICES) N = (SLICES-DSECTION+1)/SECTSTEP
         ELSE IF (NUMPETT.EQ.6) THEN
            IF (LASTSECT.GT.100) N = (100-DSECTION+1)/SECTSTEP
         ELSE
            IF (LASTSECT.GT.128) N = (128-DSECTION+1)/SECTSTEP
         END IF

      ELSE IF (MAG.EQ.2) THEN
         SIZE = 84
         XLOW = 17
         XORG = 0
         YORG = 224*(DLOC-1)
         XBAR = 380
         YBAR = YORG + 180
         IF (DLOC.GT.3 .AND. NUMDISP.GT.7) THEN
            N = 7
         ELSE IF (DLOC.GT.2 .AND. NUMDISP.GT.14) THEN
            N = 14
         ELSE IF (DLOC.GT.1 .AND. NUMDISP.GT.21) THEN
            N = 21
         ELSE IF (NUMDISP.GT.28) THEN
            N = 28
         ELSE
            N = NUMDISP
         END IF
         LASTSECT = DSECTION - 1 + (SECTSTEP*N)
         IF (ORIENT.EQ.'T') THEN
            IF (LASTSECT.GT.SLICES) N = (SLICES-DSECTION+1)/SECTSTEP
         ELSE IF (NUMPETT.EQ.6) THEN
            IF (LASTSECT.GT.100) N = (100-DSECTION+1)/SECTSTEP
         ELSE
            IF (LASTSECT.GT.128) N = (128-DSECTION+1)/SECTSTEP
         END IF

      ELSE IF (MAG.EQ.3) THEN
         SIZE = 88
         XLOW = 21
         XORG = 48
         YORG = 298*(DLOC-1)
         XBAR = 385
         YBAR = YORG + 264
         IF (DLOC.GT.2 .AND. NUMDISP.GT.4) THEN
            N = 4
         ELSE IF (DLOC.GT.1 .AND. NUMDISP.GT.8) THEN
            N = 8
         ELSE IF (NUMDISP.GT.12) THEN
            N = 12
         ELSE
            N = NUMDISP
         END IF
         LASTSECT = DSECTION - 1 + (SECTSTEP*N)
         IF (ORIENT.EQ.'T') THEN
            IF (LASTSECT.GT.SLICES) N = (SLICES-DSECTION+1)/SECTSTEP
         ELSE IF (NUMPETT.EQ.6) THEN
            IF (LASTSECT.GT.100) N = (100-DSECTION+1)/SECTSTEP
         ELSE
            IF (LASTSECT.GT.128) N = (128-DSECTION+1)/SECTSTEP
         END IF

      ELSE IF (MAG.EQ.4 .OR. MAG.EQ.5) THEN
         IF (DLOC.EQ.1) THEN
            XORG  = 0
            YORG  = 0
         ELSE IF (DLOC.EQ.2) THEN
            XORG  = 530
            YORG  = 0
         ELSE IF (DLOC.EQ.3) THEN
            XORG  = 0
            YORG  = 448
         ELSE
            XORG  = 530
            YORG  = 448
         END IF
         IF (MAG.EQ.4) THEN
            SIZE = 112
            XLOW = 1
            XBAR = XORG + 465
            YBAR = YORG + 40
         ELSE
            SIZE = 89
            XLOW = 20
            XBAR = XORG + 438
            YBAR = YORG + 30
         END IF
         IF (NUMDISP.LE.(5-DLOC)) THEN
            N = NUMDISP
         ELSE
            N = 5-DLOC
         END IF
         LASTSECT = DSECTION - 1 + (SECTSTEP*N)
         IF (ORIENT.EQ.'T') THEN
            IF (LASTSECT.GT.SLICES) N = (SLICES-DSECTION+1)/SECTSTEP
         ELSE IF (NUMPETT.EQ.6) THEN
            IF (LASTSECT.GT.100) N = (100-DSECTION+1)/SECTSTEP
         ELSE
            IF (LASTSECT.GT.128) N = (128-DSECTION+1)/SECTSTEP
         END IF

      ELSE IF (MAG.EQ.7) THEN
         SIZE = AMAX
         XLOW = 1
         XORG = 70
         YORG = 0
         XBAR = 1000
         YBAR = 100
         N = 1

      ELSE IF (MAG.EQ.8) THEN
         SIZE = 112
         XLOW = 8
         XORG = 1
         YORG = 112*(DLOC-1)
         XBAR = 1000
         YBAR = 100
         IF (DLOC.GT.5 .AND. NUMDISP.GT.8) THEN
            N = 8
         ELSE IF (DLOC.GT.4 .AND. NUMDISP.GT.16) THEN
            N = 16
         ELSE IF (DLOC.GT.3 .AND. NUMDISP.GT.24) THEN
            N = 24
         ELSE IF (DLOC.GT.2 .AND. NUMDISP.GT.32) THEN
            N = 32
         ELSE IF (DLOC.GT.1 .AND. NUMDISP.GT.40) THEN
            N = 40
         ELSE IF (NUMDISP.GT.48) THEN
            N = 48
         ELSE
            N = NUMDISP
         END IF
         LASTSECT = DSECTION - 1 + (SECTSTEP*N)
         IF (ORIENT.EQ.'T') THEN
            IF (LASTSECT.GT.SLICES) N = (SLICES-DSECTION+1)/SECTSTEP
         ELSE IF (NUMPETT.EQ.6) THEN
            IF (LASTSECT.GT.100) N = (100-DSECTION+1)/SECTSTEP
         ELSE
            IF (LASTSECT.GT.128) N = (128-DSECTION+1)/SECTSTEP
         END IF

      ELSE IF (MAG.EQ.9) THEN
         SIZE = 128
         XLOW = 1
         XORG = (MOD(DLOC-1,3))*330
         YORG = ((DLOC-1)/3)*300
         XBAR = XORG + 275
         YBAR = YORG + 5
         IF (NUMDISP+DLOC.GT.7) THEN
            N = 7-DLOC
         ELSE
            N = NUMDISP
         END IF
         LASTSECT = DSECTION + SECTSTEP*N - 1
         IF (ORIENT.EQ.'T') THEN
            IF (LASTSECT.GT.SLICES) N = (SLICES-DSECTION+1)/SECTSTEP
         ELSE IF (NUMPETT.EQ.6) THEN
            IF (LASTSECT.GT.100) N = (100-DSECTION+1)/SECTSTEP
         ELSE
            IF (LASTSECT.GT.128) N = (128-DSECTION+1)/SECTSTEP
         END IF
      END IF
      YLOW = XLOW
      XHIGH = XLOW+SIZE-1
      YHIGH = YLOW+SIZE-1

C     Initialize SLCLINES, ZOFFSET, YLOW and YHIGH
C     for coronal/sagittal displays

      IF (ORIENT.NE.'T') THEN
         IF (NUMPETT.EQ.6) THEN
            IF (SLICES.EQ.7) THEN
               SLCLINES = 5
            ELSE IF (SLICES.EQ.14) THEN
               SLCLINES = 2
            ELSE
               SLCLINES = 1
            END IF
         ELSE IF (NUMPETT.EQ.7) THEN
            IF (SLICES.EQ.7) THEN
               SLCLINES = 4
            ELSE IF (SLICES.EQ.14) THEN
               SLCLINES = 2
            ELSE
               SLCLINES = 1
            END IF
         ELSE IF (NUMPETT.EQ.10) THEN
            SLCLINES = 1
         ELSE
            IF (SLICES.EQ.7) THEN
               SLCLINES = 6
            ELSE IF (SLICES.EQ.14) THEN
               SLCLINES = 3
            ELSE
               SLCLINES = 1
            END IF
         END IF
         ZOFFSET = (SIZE - SLICES*SLCLINES)/2
         IF (SMOOTH) THEN
            YLOW  = 1 + (SLCLINES/2)
            YHIGH = (SLICES-1)*SLCLINES + YLOW
         ELSE
            YLOW  = 1
            YHIGH = SLICES*SLCLINES
         END IF
      END IF

      RETURN
      END
@


1.5
log
@format changes plus fixes for g77
@
text
@d33 1
a33 1
C     rcsheader = "$Id: d2init.f,v 1.4 1999/02/17 18:43:30 tom Exp tom $"
@


1.4
log
@add 8x6 and 3x2 displays for PC uinsg 1024x768 screen resolution
@
text
@d2 30
a31 33
C
C  Subroutine:   D2INIT.FTN
C
C  Author:       Tom O. Videen
C  Date:         19-May-87
C  Written For:  SPIDERAM Super PETT Image Display Program
C
C  History:
C     Modified by TOV 12-Aug-87 to eliminate a bug in error checking
C        for max. value of N for coronal and sagittal sections;
C     Modified by TOV 27-Sep-91 for 1152 x 900 pixel window.
C
C  Intent:
C     This subroutine initializes common block display parameters for
C     the particular type and size of display.
C
C    (Note: values of XORG, YORG, XBAR, YBAR should correspond
C        with those in D2DISPLA for multiple images)
C
C  Variables initialized:
C     XLOW,YLOW,XHIGH,YHIGH,XORG,YORG,XBAR,YBAR,N,SIZE,ZOFFSET
C
C  Variables Passed:
C     N = number of sections to display;
C     NUMPETT = PETT number (1,6,7,8,10);
C
C  Common Blocks from SPIDERAM.INC:
C     **DISPLAY  - display parameters             (write)
C
C  No Subroutines
C
C  Called by:  D2DISPLA
C
d33 1
a37 1
      character*256 rcsheader
a39 1
      rcsheader = "$Id: d2init.f,v 1.3 1993/10/04 21:55:32 tom Exp $"
d42 31
a72 31
        SIZE = 128
        XLOW = 1
        XORG = 1
        YORG = 128*(DLOC-1)
        XBAR = 1000
        YBAR = 100
        IF (DLOC.GT.6 .AND. NUMDISP.GT.7) THEN
          N = 7
        ELSE IF (DLOC.GT.5 .AND. NUMDISP.GT.14) THEN
          N = 14
        ELSE IF (DLOC.GT.4 .AND. NUMDISP.GT.21) THEN
          N = 21
        ELSE IF (DLOC.GT.3 .AND. NUMDISP.GT.28) THEN
          N = 28
        ELSE IF (DLOC.GT.2 .AND. NUMDISP.GT.35) THEN
          N = 35
        ELSE IF (DLOC.GT.1 .AND. NUMDISP.GT.42) THEN
          N = 42
        ELSE IF (NUMDISP.GT.49) THEN
          N = 49
        ELSE
          N = NUMDISP
        END IF
        LASTSECT = DSECTION - 1 + (SECTSTEP*N)
        IF (ORIENT.EQ.'T') THEN
          IF (LASTSECT.GT.SLICES) N = (SLICES-DSECTION+1)/SECTSTEP
        ELSE IF (NUMPETT.EQ.6) THEN
          IF (LASTSECT.GT.100) N = (100-DSECTION+1)/SECTSTEP
        ELSE
          IF (LASTSECT.GT.128) N = (128-DSECTION+1)/SECTSTEP
        END IF
d75 25
a99 25
        SIZE = 84
        XLOW = 17
        XORG = 0
        YORG = 224*(DLOC-1)
        XBAR = 380
        YBAR = YORG + 180
        IF (DLOC.GT.3 .AND. NUMDISP.GT.7) THEN
          N = 7
        ELSE IF (DLOC.GT.2 .AND. NUMDISP.GT.14) THEN
          N = 14
        ELSE IF (DLOC.GT.1 .AND. NUMDISP.GT.21) THEN
          N = 21
        ELSE IF (NUMDISP.GT.28) THEN
          N = 28
        ELSE
          N = NUMDISP
        END IF
        LASTSECT = DSECTION - 1 + (SECTSTEP*N)
        IF (ORIENT.EQ.'T') THEN
          IF (LASTSECT.GT.SLICES) N = (SLICES-DSECTION+1)/SECTSTEP
        ELSE IF (NUMPETT.EQ.6) THEN
          IF (LASTSECT.GT.100) N = (100-DSECTION+1)/SECTSTEP
        ELSE
          IF (LASTSECT.GT.128) N = (128-DSECTION+1)/SECTSTEP
        END IF
d102 23
a124 23
        SIZE = 88
        XLOW = 21
        XORG = 48
        YORG = 298*(DLOC-1)
        XBAR = 385
        YBAR = YORG + 264
        IF (DLOC.GT.2 .AND. NUMDISP.GT.4) THEN
          N = 4
        ELSE IF (DLOC.GT.1 .AND. NUMDISP.GT.8) THEN
          N = 8
        ELSE IF (NUMDISP.GT.12) THEN
          N = 12
        ELSE
          N = NUMDISP
        END IF
        LASTSECT = DSECTION - 1 + (SECTSTEP*N)
        IF (ORIENT.EQ.'T') THEN
          IF (LASTSECT.GT.SLICES) N = (SLICES-DSECTION+1)/SECTSTEP
        ELSE IF (NUMPETT.EQ.6) THEN
          IF (LASTSECT.GT.100) N = (100-DSECTION+1)/SECTSTEP
        ELSE
          IF (LASTSECT.GT.128) N = (128-DSECTION+1)/SECTSTEP
        END IF
d127 37
a163 37
        IF (DLOC.EQ.1) THEN
          XORG  = 0
          YORG  = 0
        ELSE IF (DLOC.EQ.2) THEN
          XORG  = 530
          YORG  = 0
        ELSE IF (DLOC.EQ.3) THEN
          XORG  = 0
          YORG  = 448
        ELSE
          XORG  = 530
          YORG  = 448
        END IF
        IF (MAG.EQ.4) THEN
          SIZE = 112
          XLOW = 1
          XBAR = XORG + 465
          YBAR = YORG + 40
        ELSE
          SIZE = 89
          XLOW = 20
          XBAR = XORG + 438
          YBAR = YORG + 30
        END IF
        IF (NUMDISP.LE.(5-DLOC)) THEN
          N = NUMDISP
        ELSE
          N = 5-DLOC
        END IF
        LASTSECT = DSECTION - 1 + (SECTSTEP*N)
        IF (ORIENT.EQ.'T') THEN
          IF (LASTSECT.GT.SLICES) N = (SLICES-DSECTION+1)/SECTSTEP
        ELSE IF (NUMPETT.EQ.6) THEN
          IF (LASTSECT.GT.100) N = (100-DSECTION+1)/SECTSTEP
        ELSE
          IF (LASTSECT.GT.128) N = (128-DSECTION+1)/SECTSTEP
        END IF
d166 7
a172 7
        SIZE = AMAX
        XLOW = 1
        XORG = 70
        YORG = 0
        XBAR = 1000
        YBAR = 100
        N = 1
d175 29
a203 29
        SIZE = 112
        XLOW = 8
        XORG = 1
        YORG = 112*(DLOC-1)
        XBAR = 1000
        YBAR = 100
        IF (DLOC.GT.5 .AND. NUMDISP.GT.8) THEN
          N = 8
        ELSE IF (DLOC.GT.4 .AND. NUMDISP.GT.16) THEN
          N = 16
        ELSE IF (DLOC.GT.3 .AND. NUMDISP.GT.24) THEN
          N = 24
        ELSE IF (DLOC.GT.2 .AND. NUMDISP.GT.32) THEN
          N = 32
        ELSE IF (DLOC.GT.1 .AND. NUMDISP.GT.40) THEN
          N = 40
        ELSE IF (NUMDISP.GT.48) THEN
          N = 48
        ELSE
          N = NUMDISP
        END IF
        LASTSECT = DSECTION - 1 + (SECTSTEP*N)
        IF (ORIENT.EQ.'T') THEN
          IF (LASTSECT.GT.SLICES) N = (SLICES-DSECTION+1)/SECTSTEP
        ELSE IF (NUMPETT.EQ.6) THEN
          IF (LASTSECT.GT.100) N = (100-DSECTION+1)/SECTSTEP
        ELSE
          IF (LASTSECT.GT.128) N = (128-DSECTION+1)/SECTSTEP
        END IF
d206 19
a224 19
        SIZE = 128
        XLOW = 1
        XORG = (MOD(DLOC-1,3))*330
        YORG = ((DLOC-1)/3)*300
        XBAR = XORG + 275
        YBAR = YORG + 5
        IF (NUMDISP+DLOC.GT.7) THEN
          N = 7-DLOC
        ELSE
          N = NUMDISP
        END IF
        LASTSECT = DSECTION + SECTSTEP*N - 1
        IF (ORIENT.EQ.'T') THEN
          IF (LASTSECT.GT.SLICES) N = (SLICES-DSECTION+1)/SECTSTEP
        ELSE IF (NUMPETT.EQ.6) THEN
          IF (LASTSECT.GT.100) N = (100-DSECTION+1)/SECTSTEP
        ELSE
          IF (LASTSECT.GT.128) N = (128-DSECTION+1)/SECTSTEP
        END IF
d230 2
a231 2
C  Initialize SLCLINES, ZOFFSET, YLOW and YHIGH
C    for coronal/sagittal displays
d234 17
a250 6
        IF (NUMPETT.EQ.6) THEN
          IF (SLICES.EQ.7) THEN
            SLCLINES = 5
          ELSE IF (SLICES.EQ.14) THEN
            SLCLINES = 2
          ELSE
d252 17
a268 28
          END IF
        ELSE IF (NUMPETT.EQ.7) THEN
          IF (SLICES.EQ.7) THEN
            SLCLINES = 4
          ELSE IF (SLICES.EQ.14) THEN
            SLCLINES = 2
          ELSE
            SLCLINES = 1
          END IF
        ELSE IF (NUMPETT.EQ.10) THEN
          SLCLINES = 1
        ELSE
          IF (SLICES.EQ.7) THEN
            SLCLINES = 6
          ELSE IF (SLICES.EQ.14) THEN
            SLCLINES = 3
          ELSE
            SLCLINES = 1
          END IF
        END IF
        ZOFFSET = (SIZE - SLICES*SLCLINES)/2
        IF (SMOOTH) THEN
          YLOW  = 1 + (SLCLINES/2)
          YHIGH = (SLICES-1)*SLCLINES + YLOW
        ELSE
          YLOW  = 1
          YHIGH = SLICES*SLCLINES
        END IF
@


1.3
log
@added rcsheader
@
text
@d26 1
a26 1
C     NUMPETT = PETT number (1,6,7,8);
d36 1
a36 1
C
d38 1
a38 1
C
d41 1
a41 1
C
d43 2
a44 2
      rcsheader = "$Id$"
C
d77 1
a77 1
C
d104 1
a104 1
C
d129 1
a129 1
C
d168 2
a169 1
      ELSE
d177 52
d233 1
a233 1
C
d236 1
a236 1
C
d254 2
d274 1
a274 1
C
@


1.2
log
@Save window dump. 04/23/92 by Tom Yang
@
text
@d40 1
d43 1
@


1.1
log
@Initial revision
@
text
@@
