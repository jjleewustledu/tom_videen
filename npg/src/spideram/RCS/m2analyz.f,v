head	2.0;
access;
symbols;
locks; strict;
comment	@c @;


2.0
date	2004.02.20.14.34.10;	author tom;	state Exp;
branches;
next	1.6;

1.6
date	2002.12.02.21.26.52;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	99.03.05.18.49.14;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	98.04.29.15.20.35;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	93.10.04.21.55.32;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	92.04.23.21.25.39;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	92.04.13.19.12.07;	author tom;	state Exp;
branches;
next	;


desc
@Spideram function.
@


2.0
log
@Feb 2004
@
text
@CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     
C     Subroutine:   M2ANALYZ.FTN
C     Author:       Tom O. Videen
C     Date:         04-Jun-87
C     Intent:
C     .  This subroutine is the menu for automated regions analysis.
C     .  It presents a list of either all scan files which have been
C     .  processed or the current scan file list in the upper half
C     .  of the display.  When the current scan file list is displayed,
C     .  those scan files selected for region processing are indicated
C     .  by an asterisk.
C     .  In the lower half of the display is an options menu, displayed
C     .  in two columns.
C     .  All computations from automated processing are stored in arrays.
C     .  These can hold up to 20 scan files and may be printed out at any time
C     .  or stored in a disk file.  The arrays are added to each time processing
C     .  is initiated, and should be cleared (one of the options) when a new
C     .  set of regions is processed.
C     
C     .  Full screen editing techniques are used.
C     
C     History:
C     .  Modified 05-Mar-99 by TOV to allow processing for CVO2
C     .     (PROCESS may be 0-7)
C     .  Modified 28-Apr-98 by TOV to allow processing for CMRGlucose
C     .     (PROCESS may be 0-6)
C     .  Modified 15-Sep-87 by TOV so option 'X' sets SELECT(N) = ' '.
C     .  Modified 06-Oct-87 by TOV to allow processing for tissue activity
C     .     either with or without decay correction; (PROCESS may be 0-5)
C     .  Modified 27-Sep-91 by TOV for XSPIDERAM.
C     .  Modified 08-Oct-91 by Tom Yang for printing region analysis data.
C     
C     Common Blocks from SPIDERAM:
C     .  **LUINFO   - logical units (also /USRIO/)   (read only)
C     .  **DISPLAY  - display parameters             (write)
C     .  **FILES    - scan file list                 (read only)
C     .  **REGION   - region analysis parameters     (write)
C     .  **REGCOMP  - region analysis parameters     (write)
C     
C     Local Variables:
C     .  TITLE - title of this menu;
C     .  MENU - menu options;
C     .  MENUSET - set of characters allowed for menu options;
C     .  CH - input character for selecting a menu option;
C     .  ROWCH,COLCH - location of the field for entering CH;
C     .  ROW(I),COL(I) = location of each field in the files lists at the
C     .     top of the display;
C     .  WARNLINE - line on which warnings will be written;
C     .  NEXT - logical variables required by some function calls but
C     .     which is not used in this calling program;
C     .  Q,A - question and answer;
C     .  HOME,CLEAR - values passed to TCONTROL to home the cursor and
C     .     clear the terminal screen;
C     .  NUM - number of scan file selected for processing;
C     .  SELECT - '*' if a file has been selected; ' ' if not;
C     .  PFILE - file number selected to process (one at a time);
C     .  ERROR - error flag in calls to R2GET;
C     .  ERRTYPE = type of error in processing images;
C     
C     Uses Subroutines:
C     .  A2ANALYZ - analyze all selected scans with all regions;
C     .  A2PRINT  - print output list;
C     .  A2PURGE  - clear output list;
C     .  A2SAVE   - write output list to a disk file;
C     .  D2ERROR  - gets appropriate error message for an ERRTYPE;
C     .  R2GET    - get a region file from disk;
C     .  CHFIELD  - get a character from terminal;
C     .  ERSFIELD - erase a field;
C     .  INTFIELD - get an integer from a field;
C     .  QUERY    - write a question and get a Y or N response;
C     .  WRITEINT - write an integer to a field;
C     .  WRTFIELD - write a character string to a field;
C     
C     Called by:  SPIDERAM
C     
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     rcsheader = "$Id: m2analyz.f,v 1.6 2002/12/02 21:26:52 tom Exp tom $"

      SUBROUTINE M2ANALYZ

      INTEGER*4    WARNLINE,ROWCH,COLCH,NUM,HOME,CLEAR,ROW(20),COL(20),
     &     PFILE,ERRTYPE,L,L1
      CHARACTER*1  CH,BELL,SELECT(20)
      CHARACTER*3  NSTR
      CHARACTER*10 BLANK
      CHARACTER*20 TITLE,DASH,TEMPOUT
      CHARACTER*80 Q,MENU(6),MENUSET,STR,ERRMSG
      LOGICAL*1    A,NEXT,ERROR
      LOGICAL*4    PRINTON

      INCLUDE 'spideram.inc'
      
      DATA HOME,CLEAR /1,2/
      DATA BLANK /' '/
      DATA TITLE /'Regions Analysis:'/
      DATA DASH  /'---------------- '/
      DATA MENU(1)(1:39)  /'A = Process ALL selected (*) files'/
      DATA MENU(2)(1:39)  /'N = Number of scan file to process'/
      DATA MENU(3)(1:39)  /'X = Cancel a scan number'/
      DATA MENU(4)(1:39)  /'O = Process ONE file at a time'/
      DATA MENU(5)(1:39)  /'T = Type of processing'/
      DATA MENU(6)(1:39)  /'                                  '/

      DATA MENU(1)(40:80) /'P = Save output as Printable file'/
      DATA MENU(2)(40:80) /'W = Write RGT file'/
      DATA MENU(3)(40:80) /'C = Clear output list'/
      DATA MENU(4)(40:80) /'L = List current scan files'/
      DATA MENU(5)(40:80) /'F = Files processed in output list'/
      DATA MENU(6)(40:80) /'M = Exit to Main Menu'/
      DATA MENUSET  /'ANXOTPWCLFManxotpwclfm'/
      DATA ROWCH,COLCH,WARNLINE /22,1,24/
      DATA ROW /4,5,6,7,8,9,10,4,5,6,7,8,9,10,4,5,6,7,8,9/
      DATA COL /7*1,7*27,6*53/
      BELL = CHAR(7)

      ERROR = .FALSE.
      ERRTYPE = 0
 10   DO 50 I=1,20
         IF (PROC(I)) THEN
            SELECT(I) = '*'
         ELSE
            SELECT(I) = ' '
         END IF
 50   CONTINUE

C--------------------------------------------------------------------
C     Clear the screen and write the current scan file list

 8010 FORMAT(A20)
 8020 FORMAT(A20)
 8030 FORMAT('Type of Processing = ',A)
 8080 FORMAT(A80)
 8090 FORMAT(A1,I2,1X,A20,2X,A1,I2,1X,A20,2X,A1,I2,1X,A20)

 100  CALL TCONTROL(HOME,0,0)
      CALL TCONTROL(CLEAR,0,0)
      WRITE (USEROUT,8010) TITLE
      WRITE (USEROUT,8020) DASH
      WRITE (USEROUT,8020) BLANK

      DO 120 I=1,6
         WRITE (USEROUT,8090) SELECT(I),I,FILENAME(I),
     &        SELECT(I+7),I+7,FILENAME(I+7),
     &        SELECT(I+14),I+14,FILENAME(I+14)
 120  CONTINUE
      I = 7
      WRITE (USEROUT,8090) SELECT(I),I,FILENAME(I),
     &     SELECT(I+7),I+7,FILENAME(I+7)

 130  WRITE (USEROUT,*)
      IF (PROCESS.EQ.0) THEN
         WRITE (USEROUT,8030) 'PETT Numbers'
      ELSE IF (PROCESS.EQ.1) THEN
         WRITE (USEROUT,8030) 'CBF or CBV'
      ELSE IF (PROCESS.EQ.2) THEN
         WRITE (USEROUT,8030) 'OEF'
      ELSE IF (PROCESS.EQ.3) THEN
         WRITE (USEROUT,8030) 'CMRO2'
      ELSE IF (PROCESS.EQ.4) THEN
         WRITE (USEROUT,8030) 'Decay-corrected Tissue Activity'
      ELSE IF (PROCESS.EQ.5) THEN
         WRITE (USEROUT,8030) 'Non-decay-corrected Tissue Activity'
      ELSE IF (PROCESS.EQ.6) THEN
         WRITE (USEROUT,8030) 'CMRGlucose'
      ELSE IF (PROCESS.EQ.7) THEN
         WRITE (USEROUT,8030) 'CVO2'
      END IF
      WRITE (USEROUT,*)
      DO 140 I=1,6
         WRITE (USEROUT,8080) MENU(I)
 140  CONTINUE

C     ===================================================================
C     Get the options selected by the user and execute it

 200  IF (ERROR .OR. ERRTYPE.NE.0) CALL WRTFIELD(ERRMSG,70,WARNLINE,1)
      CALL CHFIELD(CH,MENUSET,ROWCH,COLCH,0)
      IF (ERROR .OR. ERRTYPE.NE.0) THEN
         CALL ERSFIELD(80,WARNLINE,1)
         ERROR = .FALSE.
         ERRTYPE = 0
      END IF

C     -------------------------------------------------------
C     #1 = Process all scan files selected (PROC(I) = TRUE);

 8003 FORMAT(I3)
      IF (CH.EQ.'A' .OR. CH.EQ.'a') THEN
         Q = 'Process all selected (*) scan files'
         CALL QUERY(Q,A,ROWCH,COLCH)
         IF (.NOT.A) GO TO 100
         IF (NSCANS.GE.20) THEN
            ERROR = .TRUE.
            ERRMSG = '** 20 files processed -- must be saved before '//
     &           'processing can continue **'//BELL
            GO TO 100
         END IF
         WRITE(USEROUT,*)
         CALL R2GET(ERROR)
         IF (ERROR) THEN
            ERRMSG = '** Did not read a region file **'//BELL
            GO TO 100
         END IF
         IF (NSCANS.EQ.0) THEN
            RGTATLAS = REGATLAS
         ELSE IF (RGTATLAS.NE.REGATLAS) THEN
            ERROR = .TRUE.
            ERRMSG = '** Atlas Name is different for this region '//
     &           'file **'//BELL
            GO TO 100
         END IF
         IF (PROCNREG.EQ.0) THEN
            PROCNREG = NREGS
         ELSE IF (NREGS.NE.PROCNREG) THEN
            ERROR = .TRUE.
            WRITE(NSTR,8003) PROCNREG
            ERRMSG = '** Previous files were processed with '//NSTR//
     &           ' regions **'//BELL
            GO TO 100
         END IF
         PFILE = 0
         CALL A2ANALYZ(PFILE,ERRTYPE)
         IF (ERRTYPE.NE.0) THEN
            IF (ERRTYPE.EQ.20) THEN
               ERRMSG = '** 20 files processed -- must be saved before '//
     &              'processing can continue **'//BELL
            ELSE
               CALL D2ERROR(ERRTYPE,ERRMSG)
            END IF
         END IF
         GO TO 100

C     -------------------------------------------------------
C     #2 = Denote a scan file number for processing

      ELSE IF (CH.EQ.'N' .OR. CH.EQ.'n') THEN
         NUM = 0
         Q = 'Scan File Number to Process'
         L = INANYR(Q,' ')
         CALL WRTFIELD(Q,L,ROWCH,COLCH)
         STR = '(enter 0 to cancel)'
         CALL WRTFIELD(STR,20,ROWCH,COLCH+L+6)
 1010    IF (NUM.LT.20) NUM = NUM+1
         CALL INTFIELD(NUM,0,20,2,ROWCH,COLCH+L+2,WARNLINE,NEXT)
         IF (NUM.NE.0) THEN
            IF (FILENAME(NUM).EQ.BLANK) THEN
               CALL WRTFIELD(BELL,1,ROWCH,COLCH)
            ELSE
               PROC(NUM) = .TRUE.
               SELECT(NUM) = '*'
               CALL WRTFIELD('*',1,ROW(NUM),COL(NUM))
            END IF
            GO TO 1010
         END IF

C     -------------------------------------------------------
C     #3 = Cancel a scan file number from being processed

      ELSE IF (CH.EQ.'X' .OR. CH.EQ.'x') THEN
         Q = 'File number to eliminate from processing list'
         L = INANYR(Q,' ')
         CALL WRTFIELD(Q,L,ROWCH,COLCH)
         STR = '(enter 0 to cancel)'
         CALL WRTFIELD(STR,20,ROWCH,COLCH+L+6)
         CALL INTFIELD(NUM,0,20,2,ROWCH,COLCH+L+2,WARNLINE,NEXT)
         IF (NUM.NE.0 .AND. PROC(NUM)) THEN
            PROC(NUM) = .FALSE.
            SELECT(NUM) = ' '
            CALL WRTFIELD(BLANK,1,ROW(NUM),COL(NUM))
         END IF

C     -------------------------------------------------------
C     #4 = Process one scan file with a  specified region file;

      ELSE IF (CH.EQ.'O' .OR. CH.EQ.'o') THEN
         IF (NSCANS.GE.20) THEN
            ERROR = .TRUE.
            ERRMSG = '** 20 files processed -- must be saved before '//
     &           'processing can continue **'//BELL
            GO TO 200
         END IF
         Q = 'Scan file to process'
         CALL GETINT(Q,PFILE,1,20)
         IF (FILENAME(PFILE).NE.' ') THEN
            WRITE(USEROUT,*) FILENAME(PFILE)
            CALL R2GET(ERROR)
            IF (ERROR) THEN
               ERRMSG = '** Did not read a region file **'//BELL
               GO TO 100
            END IF
            IF (PROCNREG.EQ.0) THEN
               PROCNREG = NREGS
            ELSE IF (NREGS.NE.PROCNREG) THEN
               ERROR = .TRUE.
               WRITE(NSTR,8003) PROCNREG
               ERRMSG = '** Previous files were processed with '//NSTR//
     &              ' regions **'//BELL
               GO TO 100
            END IF
            IF (NSCANS.EQ.0) THEN
               RGTATLAS = REGATLAS
            ELSE
               IF (RGTATLAS.NE.REGATLAS) THEN
                  ERROR = .TRUE.
                  ERRMSG = '** Atlas Name is different for this region '//
     &                 'file **'//BELL
                  GO TO 100
               END IF
            END IF
         END IF
         CALL A2ANALYZ(PFILE,ERRTYPE)
         IF (ERRTYPE.NE.0) THEN
            IF (ERRTYPE.EQ.20) THEN
               ERRMSG = '** 20 files processed -- must be saved before '//
     &              'processing can continue **'//BELL
            ELSE
               CALL D2ERROR(ERRTYPE,ERRMSG)
            END IF
         END IF
         GO TO 100

C     -------------------------------------------------------
C     #5 = Type of processing

      ELSE IF (CH.EQ.'T' .OR. CH.EQ.'t') THEN
         WRITE (USEROUT,*)
         WRITE (USEROUT,*) '0 = PETT Numbers'
         WRITE (USEROUT,*) '1 = CBF or CBV'
         WRITE (USEROUT,*) '2 = OEF'
         WRITE (USEROUT,*) '3 = CMRO2'
         WRITE (USEROUT,*) '4 = Decay-corrected Tissue Activity'
         WRITE (USEROUT,*) '5 = Non-decay-corrected Tissue Activity'
         WRITE (USEROUT,*) '6 = CMRGlucose'
         WRITE (USEROUT,*)
         Q = 'Type of processing'
         CALL GETINT(Q,PROCESS,0,7)
         GO TO 100

C     -------------------------------------------------------
C     #6 = Print current output list

      ELSE IF (CH.EQ.'P' .OR. CH.EQ.'p') THEN
         Q = 'Print output list'
         CALL QUERY(Q,A,ROWCH,COLCH)
         WRITE(USEROUT,*)
         IF (A) THEN
            Q = 'File name'
            L = INANYR(OUTFILE,' ')
            TEMPOUT = OUTFILE(1:L)
            TEMPOUT (L+1:L+1) = '~'
            CALL GETSTRNG (Q, TEMPOUT)
            L1 = INANYR(TEMPOUT, ' ')
            IF (L1 .LE. L + 1) TEMPOUT (L+1:L+1) = ' '

            IF (TEMPOUT .NE. OUTFILE) THEN
               INQUIRE (PRINTER, OPENED = PRINTON)
               IF (PRINTON) CLOSE (PRINTER)
               L1 = INANYL(TEMPOUT,' ')
               L = INANYR(TEMPOUT,' ~')
               OUTFILE = TEMPOUT(L1:L)
               INQUIRE (PRINTER, OPENED = PRINTON)
               IF (.NOT.PRINTON) OPEN (PRINTER,FILE=OUTFILE,STATUS='NEW')
            END IF
            CALL A2PRINT
         END IF
         GO TO 100

C     -------------------------------------------------------
C     #7 = Write current output list to a disk file

      ELSE IF (CH.EQ.'W' .OR. CH.EQ.'w') THEN
         Q = 'Save output list in a disk file'
         CALL QUERY(Q,A,ROWCH,COLCH)
         WRITE(USEROUT,*)
         IF (A) CALL A2SAVE
         GO TO 100

C     -------------------------------------------------------
C     #8 = Clear current output

      ELSE IF (CH.EQ.'C' .OR. CH.EQ.'c') THEN
         Q = '*** Clear the current output list ***'//BELL
         CALL QUERY(Q,A,ROWCH,COLCH)
         IF (A) CALL A2PURGE
         GO TO 10

C     -------------------------------------------------------
C     #9 = Display the current scan file list

      ELSE IF (CH.EQ.'L' .OR. CH.EQ.'l') THEN
         GO TO 100

C     -------------------------------------------------------
C     #10 = Display all scan files that have been processed

      ELSE IF (CH.EQ.'F' .OR. CH.EQ.'f') THEN
         IF (NSCANS.GT.0) THEN
            CALL TCONTROL(HOME,0,0)
            CALL TCONTROL(CLEAR,0,0)
            WRITE (USEROUT,8010) TITLE
            WRITE (USEROUT,8020) DASH
            WRITE (USEROUT,8020) BLANK
            DO 1090 I=1,6
               WRITE (USEROUT,8100) I,REGFID(I),REGFNAME(I),
     &              I+7,REGFID(I+7),REGFNAME(I+7),
     &              I+14,REGFID(I+14),REGFNAME(I+14)
 1090       CONTINUE
            I = 7
            WRITE (USEROUT,8100) I,REGFID(I),REGFNAME(I),
     &           I+7,REGFID(I+7),REGFNAME(I+7)
            GO TO 130
         ELSE
            ERROR = .TRUE.
            ERRMSG = '** No scans have been processed **'//BELL
         END IF
 8100    FORMAT(1X,3(I2,1X,A8,' [',A8,'] '))

C     -------------------------------------------------------
C     #11 = Exit to Main Menu

      ELSE IF (CH.EQ.'M' .OR. CH.EQ.'m') THEN
         GO TO 9000
      END IF

C     -------------------------------------------------------
      CALL ERSFIELD(80,ROWCH,COLCH)
      GO TO 200

 9000 RETURN
      END
@


1.6
log
@format changes plus fixes for g77
@
text
@d78 1
a78 1
C     rcsheader = "$Id: m2analyz.f,v 1.5 1999/03/05 18:49:14 tom Exp tom $"
@


1.5
log
@add CVO2
@
text
@d2 75
a76 82
C
C  Subroutine:   M2ANALYZ.FTN
C
C  Author:       Tom O. Videen
C  Date:         04-Jun-87
C  Written For:  SPIDERAM Super PETT Image Display Program
C
C  Intent:
C     This subroutine is the menu for automated regions analysis.
C  It presents a list of either all scan files which have been
C  processed or the current scan file list in the upper half
C  of the display.  When the current scan file list is displayed,
C  those scan files selected for region processing are indicated
C  by an asterisk.
C     In the lower half of the display is an options menu, displayed
C  in two columns.
C     All computations from automated processing are stored in arrays.
C  These can hold up to 20 scan files and may be printed out at any time
C  or stored in a disk file.  The arrays are added to each time processing
C  is initiated, and should be cleared (one of the options) when a new
C  set of regions is processed.
C
C     Full screen editing techniques are used.
C
C  History:
C     Modified 05-Mar-99 by TOV to allow processing for CVO2
C        (PROCESS may be 0-7)
C     Modified 28-Apr-98 by TOV to allow processing for CMRGlucose
C        (PROCESS may be 0-6)
C     Modified 15-Sep-87 by TOV so option 'X' sets SELECT(N) = ' '.
C     Modified 06-Oct-87 by TOV to allow processing for tissue activity
C        either with or without decay correction; (PROCESS may be 0-5)
C     Modified 27-Sep-91 by TOV for XSPIDERAM.
C     Modified 08-Oct-91 by Tom Yang for printing region analysis data.
C
C  Common Blocks from SPIDERAM:
C     **LUINFO   - logical units (also /USRIO/)   (read only)
C     **DISPLAY  - display parameters             (write)
C     **FILES    - scan file list                 (read only)
C     **REGION   - region analysis parameters     (write)
C     **REGCOMP  - region analysis parameters     (write)
C
C  Local Variables:
C     TITLE - title of this menu;
C     MENU - menu options;
C     MENUSET - set of characters allowed for menu options;
C     CH - input character for selecting a menu option;
C     ROWCH,COLCH - location of the field for entering CH;
C     ROW(I),COL(I) = location of each field in the files lists at the
C        top of the display;
C     WARNLINE - line on which warnings will be written;
C     NEXT - logical variables required by some function calls but
C        which is not used in this calling program;
C     Q,A - question and answer;
C     HOME,CLEAR - values passed to TCONTROL to home the cursor and
C        clear the terminal screen;
C     NUM - number of scan file selected for processing;
C     SELECT - '*' if a file has been selected; ' ' if not;
C     PFILE - file number selected to process (one at a time);
C     ERROR - error flag in calls to R2GET;
C     ERRTYPE = type of error in processing images;
C
C  Uses Subroutines:
C
C  SPIDERAM.LIB - main subroutines for SPIDERAM:
C     A2ANALYZ - analyze all selected scans with all regions;
C     A2PRINT  - print output list;
C     A2PURGE  - clear output list;
C     A2SAVE   - write output list to a disk file;
C     D2ERROR  - gets appropriate error message for an ERRTYPE;
C     R2GET    - get a region file from disk;
C
C  FIELDS.LIB - terminal I/O routines using fields:
C     CHFIELD  - get a character from terminal;
C     ERSFIELD - erase a field;
C     INTFIELD - get an integer from a field;
C     QUERY    - write a question and get a Y or N response;
C     WRITEINT - write an integer to a field;
C     WRTFIELD - write a character string to a field;
C
C  Called by:  SPIDERAM
C
d78 2
a79 1
C
d81 1
a81 2
C
C
d83 1
a83 1
     &             PFILE,ERRTYPE,L,L1
d91 1
a91 2
      character*256 rcsheader
C
d93 1
a93 2
      rcsheader = "$Id: m2analyz.f,v 1.4 1998/04/29 15:20:35 tom Exp tom $"
 
d104 1
a104 1
C
d116 1
a116 1
C
d119 8
a126 8
10    DO 50 I=1,20
        IF (PROC(I)) THEN
          SELECT(I) = '*'
        ELSE
          SELECT(I) = ' '
        END IF
50    CONTINUE
C
d128 9
a136 10
C
C  Clear the screen and write the current scan file list
C
8010  FORMAT(A20)
8020  FORMAT(A20)
8030  FORMAT('Type of Processing = ',A)
8080  FORMAT(A80)
8090  FORMAT(A1,I2,1X,A20,2X,A1,I2,1X,A20,2X,A1,I2,1X,A20)
C
100   CALL TCONTROL(HOME,0,0)
d141 1
a141 1
C
d143 4
a146 4
        WRITE (USEROUT,8090) SELECT(I),I,FILENAME(I),
     2                       SELECT(I+7),I+7,FILENAME(I+7),
     3                       SELECT(I+14),I+14,FILENAME(I+14)
120   CONTINUE
d149 3
a151 3
     2                     SELECT(I+7),I+7,FILENAME(I+7)
C
130   WRITE (USEROUT,*)
d153 1
a153 1
        WRITE (USEROUT,8030) 'PETT Numbers'
d155 1
a155 1
        WRITE (USEROUT,8030) 'CBF or CBV'
d157 1
a157 1
        WRITE (USEROUT,8030) 'OEF'
d159 1
a159 1
        WRITE (USEROUT,8030) 'CMRO2'
d161 1
a161 1
        WRITE (USEROUT,8030) 'Decay-corrected Tissue Activity'
d163 1
a163 1
        WRITE (USEROUT,8030) 'Non-decay-corrected Tissue Activity'
d165 1
a165 1
        WRITE (USEROUT,8030) 'CMRGlucose'
d167 1
a167 1
        WRITE (USEROUT,8030) 'CVO2'
d171 7
a177 8
        WRITE (USEROUT,8080) MENU(I)
140   CONTINUE
C
C ===================================================================
C
C  Get the options selected by the user and execute it
C
200   IF (ERROR .OR. ERRTYPE.NE.0) CALL WRTFIELD(ERRMSG,70,WARNLINE,1)
d180 3
a182 3
        CALL ERSFIELD(80,WARNLINE,1)
        ERROR = .FALSE.
        ERRTYPE = 0
d184 5
a188 5
C
C -------------------------------------------------------
C  #1 = Process all scan files selected (PROC(I) = TRUE);
C
8003  FORMAT(I3)
d190 5
a194 36
        Q = 'Process all selected (*) scan files'
        CALL QUERY(Q,A,ROWCH,COLCH)
        IF (.NOT.A) GO TO 100
        IF (NSCANS.GE.20) THEN
          ERROR = .TRUE.
          ERRMSG = '** 20 files processed -- must be saved before '//
     2             'processing can continue **'//BELL
          GO TO 100
        END IF
        WRITE(USEROUT,*)
        CALL R2GET(ERROR)
        IF (ERROR) THEN
          ERRMSG = '** Did not read a region file **'//BELL
          GO TO 100
        END IF
        IF (NSCANS.EQ.0) THEN
          RGTATLAS = REGATLAS
        ELSE IF (RGTATLAS.NE.REGATLAS) THEN
          ERROR = .TRUE.
          ERRMSG = '** Atlas Name is different for this region '//
     2      'file **'//BELL
          GO TO 100
        END IF
        IF (PROCNREG.EQ.0) THEN
          PROCNREG = NREGS
        ELSE IF (NREGS.NE.PROCNREG) THEN
          ERROR = .TRUE.
          WRITE(NSTR,8003) PROCNREG
          ERRMSG = '** Previous files were processed with '//NSTR//
     2             ' regions **'//BELL
          GO TO 100
        END IF
        PFILE = 0
        CALL A2ANALYZ(PFILE,ERRTYPE)
        IF (ERRTYPE.NE.0) THEN
          IF (ERRTYPE.EQ.20) THEN
d196 6
a201 62
     2               'processing can continue **'//BELL
          ELSE
            CALL D2ERROR(ERRTYPE,ERRMSG)
          END IF
        END IF
        GO TO 100
C
C -------------------------------------------------------
C  #2 = Denote a scan file number for processing
C
      ELSE IF (CH.EQ.'N' .OR. CH.EQ.'n') THEN
        NUM = 0
        Q = 'Scan File Number to Process'
        L = INANYR(Q,' ')
        CALL WRTFIELD(Q,L,ROWCH,COLCH)
        STR = '(enter 0 to cancel)'
        CALL WRTFIELD(STR,20,ROWCH,COLCH+L+6)
1010    IF (NUM.LT.20) NUM = NUM+1
        CALL INTFIELD(NUM,0,20,2,ROWCH,COLCH+L+2,WARNLINE,NEXT)
        IF (NUM.NE.0) THEN
          IF (FILENAME(NUM).EQ.BLANK) THEN
            CALL WRTFIELD(BELL,1,ROWCH,COLCH)
          ELSE
            PROC(NUM) = .TRUE.
            SELECT(NUM) = '*'
            CALL WRTFIELD('*',1,ROW(NUM),COL(NUM))
          END IF
          GO TO 1010
        END IF
C
C -------------------------------------------------------
C  #3 = Cancel a scan file number from being processed
C
      ELSE IF (CH.EQ.'X' .OR. CH.EQ.'x') THEN
        Q = 'File number to eliminate from processing list'
        L = INANYR(Q,' ')
        CALL WRTFIELD(Q,L,ROWCH,COLCH)
        STR = '(enter 0 to cancel)'
        CALL WRTFIELD(STR,20,ROWCH,COLCH+L+6)
        CALL INTFIELD(NUM,0,20,2,ROWCH,COLCH+L+2,WARNLINE,NEXT)
        IF (NUM.NE.0 .AND. PROC(NUM)) THEN
          PROC(NUM) = .FALSE.
          SELECT(NUM) = ' '
          CALL WRTFIELD(BLANK,1,ROW(NUM),COL(NUM))
        END IF
C
C -------------------------------------------------------
C  #4 = Process one scan file with a  specified region file;
C
      ELSE IF (CH.EQ.'O' .OR. CH.EQ.'o') THEN
        IF (NSCANS.GE.20) THEN
          ERROR = .TRUE.
          ERRMSG = '** 20 files processed -- must be saved before '//
     2             'processing can continue **'//BELL
          GO TO 200
        END IF
        Q = 'Scan file to process'
        CALL GETINT(Q,PFILE,1,20)
        IF (FILENAME(PFILE).NE.' ') THEN
          WRITE(USEROUT,*) FILENAME(PFILE)
          CALL R2GET(ERROR)
          IF (ERROR) THEN
d204 10
a213 2
          END IF
          IF (PROCNREG.EQ.0) THEN
d215 1
a215 1
          ELSE IF (NREGS.NE.PROCNREG) THEN
d219 1
a219 1
     2               ' regions **'//BELL
d221 9
a229 9
          END IF
          IF (NSCANS.EQ.0) THEN
            RGTATLAS = REGATLAS
          ELSE
            IF (RGTATLAS.NE.REGATLAS) THEN
              ERROR = .TRUE.
              ERRMSG = '** Atlas Name is different for this region '//
     2          'file **'//BELL
              GO TO 100
d231 48
a278 5
          END IF
        END IF
        CALL A2ANALYZ(PFILE,ERRTYPE)
        IF (ERRTYPE.NE.0) THEN
          IF (ERRTYPE.EQ.20) THEN
d280 46
a325 10
     2               'processing can continue **'//BELL
          ELSE
            CALL D2ERROR(ERRTYPE,ERRMSG)
          END IF
        END IF
        GO TO 100
C
C -------------------------------------------------------
C  #5 = Type of processing
C
d327 16
a342 16
        WRITE (USEROUT,*)
        WRITE (USEROUT,*) '0 = PETT Numbers'
        WRITE (USEROUT,*) '1 = CBF or CBV'
        WRITE (USEROUT,*) '2 = OEF'
        WRITE (USEROUT,*) '3 = CMRO2'
        WRITE (USEROUT,*) '4 = Decay-corrected Tissue Activity'
        WRITE (USEROUT,*) '5 = Non-decay-corrected Tissue Activity'
        WRITE (USEROUT,*) '6 = CMRGlucose'
        WRITE (USEROUT,*)
        Q = 'Type of processing'
        CALL GETINT(Q,PROCESS,0,7)
        GO TO 100
C
C -------------------------------------------------------
C  #6 = Print current output list
C
d344 28
a371 28
        Q = 'Print output list'
        CALL QUERY(Q,A,ROWCH,COLCH)
        WRITE(USEROUT,*)
        IF (A) THEN
          Q = 'File name'
          L = INANYR(OUTFILE,' ')
          TEMPOUT = OUTFILE(1:L)
          TEMPOUT (L+1:L+1) = '~'
          CALL GETSTRNG (Q, TEMPOUT)
          L1 = INANYR(TEMPOUT, ' ')
          IF (L1 .LE. L + 1) TEMPOUT (L+1:L+1) = ' '
C
          IF (TEMPOUT .NE. OUTFILE) THEN
            INQUIRE (PRINTER, OPENED = PRINTON)
            IF (PRINTON) CLOSE (PRINTER)
            L1 = INANYL(TEMPOUT,' ')
            L = INANYR(TEMPOUT,' ~')
            OUTFILE = TEMPOUT(L1:L)
            INQUIRE (PRINTER, OPENED = PRINTON)
            IF (.NOT.PRINTON) OPEN (PRINTER,FILE=OUTFILE,STATUS='NEW')
          END IF
       	  CALL A2PRINT
	END IF
	GO TO 100
C
C -------------------------------------------------------
C  #7 = Write current output list to a disk file
C
d373 9
a381 9
        Q = 'Save output list in a disk file'
        CALL QUERY(Q,A,ROWCH,COLCH)
        WRITE(USEROUT,*)
        IF (A) CALL A2SAVE
        GO TO 100
C
C -------------------------------------------------------
C  #8 = Clear current output
C
d383 8
a390 8
        Q = '*** Clear the current output list ***'//BELL
        CALL QUERY(Q,A,ROWCH,COLCH)
        IF (A) CALL A2PURGE
        GO TO 10
C
C -------------------------------------------------------
C  #9 = Display the current scan file list
C
d392 5
a396 5
        GO TO 100
C
C -------------------------------------------------------
C  #10 = Display all scan files that have been processed
C
d398 12
a409 7
        IF (NSCANS.GT.0) THEN
          CALL TCONTROL(HOME,0,0)
          CALL TCONTROL(CLEAR,0,0)
          WRITE (USEROUT,8010) TITLE
          WRITE (USEROUT,8020) DASH
          WRITE (USEROUT,8020) BLANK
          DO 1090 I=1,6
d411 11
a421 16
     2         I+7,REGFID(I+7),REGFNAME(I+7),
     3         I+14,REGFID(I+14),REGFNAME(I+14)
1090      CONTINUE
          I = 7
          WRITE (USEROUT,8100) I,REGFID(I),REGFNAME(I),
     2       I+7,REGFID(I+7),REGFNAME(I+7)
          GO TO 130
        ELSE
          ERROR = .TRUE.
          ERRMSG = '** No scans have been processed **'//BELL
        END IF
8100    FORMAT(1X,3(I2,1X,A8,' [',A8,'] '))
C
C -------------------------------------------------------
C  #11 = Exit to Main Menu
C
d423 1
a423 1
        GO TO 9000
d425 2
a426 2
C
C -------------------------------------------------------
d429 2
a430 2
C
9000  RETURN
@


1.4
log
@allow processing for CMRGlucose
@
text
@d27 2
d101 1
a101 1
      rcsheader = "$Id: m2analyz.f,v 1.3 1993/10/04 21:55:32 tom Exp tom $"
d176 2
d348 1
a348 1
        CALL GETINT(Q,PROCESS,0,6)
d374 1
a374 1
            IF (.NOT.PRINTON) OPEN (PRINTER,FILE=OUTFILE,TYPE='DEVICE')
@


1.3
log
@added rcsheader
@
text
@d27 2
d99 1
a99 1
      rcsheader = "$Id$"
d172 2
d341 1
d344 1
a344 1
        CALL GETINT(Q,PROCESS,0,5)
@


1.2
log
@Save window dump. 04/23/92 by Tom Yang
@
text
@d86 1
a86 1
     2             PFILE,ERRTYPE,L,L1
d94 1
d97 2
@


1.1
log
@Initial revision
@
text
@@
