head	2.0;
access;
symbols;
locks; strict;
comment	@c @;


2.0
date	2004.02.20.14.34.10;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	2002.12.02.21.26.52;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	93.10.04.21.55.32;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	92.04.23.21.25.39;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	92.04.13.19.12.07;	author tom;	state Exp;
branches;
next	;


desc
@Spideram function.
@


2.0
log
@Feb 2004
@
text
@CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     
C     Subroutine:   P2REMPNT.FTN
C     Author:       Tom O. Videen
C     Date:         11-Mar-87
C     Intent:
C     .  This routine removes the top point in the list BOUNDARY
C     .  for the current region, REG, and erases the point from
C     .  the Ramtek Display Monitor.
C     .  It updates the minimum and maximum values for X and Y
C     .  in the boundary list.
C     .  It returns the new point at the top of the list.
C     .  The cursor is not affected by this subroutine.
C     
C     Common Blocks from SPIDERAM.INC:
C     .  **LUINFO   - logical units (also /USRIO/)   (read only)
C     .  **DISPLAY  - display parameters             (read only)
C     .  **REGION   - region analysis parameters     (write)
C     
C     Variables:
C     .  X,Y = location of the point in image space (1,1 is upper left);
C     .    When the subroutine is called, the values assigned to
C     .      X and Y are irrelevant.
C     .    When the subroutine returns to the calling program,
C     .      the point X,Y is the current point at the top of the
C     .      list BOUNDARY.
C     .  PLANES = planes in which to set a bit;
C     .  N = number of the region being defined;
C     .  XL = temporary value for XMIN(N);
C     .  XH = temporary value for XMAX(N);
C     .  YL = temporary value for YMIN(N);
C     .  YH = temporary value for YMAX(N);
C     .  X1,Y1 = a point in the list, BOUNDARY;
C     .  XR,YR = screen coordinates of points;
C     .  LEN = size of each point in screen pixels;
C     
C     Uses:
C     .  XRAMTEK - converts image x-index to Ramtek x-coordinate;
C     .  YRAMTEK - converts image y-index to Ramtek y-coordinate;
C     .  RAMERASE
C     
C     Called by:  P2TRACK
C     
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     rcsheader = "$Id: p2rempnt.f,v 1.4 2002/12/02 21:26:52 tom Exp tom $"

      SUBROUTINE P2REMPNT(X,Y,PLANES,N)

      INTEGER*4   X,Y,PLANES,N,XL,XH,YL,YH,X1,Y1,XR,YR,LEN,FIRST,
     &     XRAMTEK,YRAMTEK

      INCLUDE 'spideram.inc'

C     If there is only one point in the current region RETURN

      FIRST = BVAL(N)
      IF (TOP.EQ.FIRST) GO TO 9000

C     Get the image coordiates of the top point in the list and
C     move the pointer to the next-to-the-top point in the list.

      X = BOUNDARY(1,TOP)
      Y = BOUNDARY(2,TOP)
      TOP = TOP-1
      LEN = MAG*ZFACTOR - 1

C     Erase the point from the Ramtek Display Monitor

      XR = XRAMTEK(X)
      YR = YRAMTEK(Y)
      CALL RAMERASE(XR,YR,XR+LEN,YR+LEN,PLANES,RMD)

C     If the point removed was either a minimum or maximum X,
C     search the list for a new minimum or maximum value.

      IF (X.EQ.INT(XMIN(N))) THEN
         XL = BOUNDARY(1,FIRST)
         IF (TOP.GT.1) THEN
            DO 100 I=2,TOP
               X1 = BOUNDARY(1,I)
               IF (X1.LT.XL) XL=X1
 100        CONTINUE
            XMIN(N) = XL
         END IF
      ELSE IF (X.EQ.INT(XMAX(N))) THEN
         XH = BOUNDARY(1,FIRST)
         IF (TOP.GT.1) THEN
            DO 200 I=2,TOP
               X1 = BOUNDARY(1,I)
               IF (X1.GT.XH) XH=X1
 200        CONTINUE
            XMAX(N) = XH
         END IF
      END IF

C     If the point removed was either a minimum or maximum Y,
C     search the list for a new minimum or maximum value.

      IF (Y.EQ.INT(YMIN(N))) THEN
         YL = BOUNDARY(2,FIRST)
         IF (TOP.GT.1) THEN
            DO 300 I=2,TOP
               Y1 = BOUNDARY(2,I)
               IF (Y1.LT.YL) YL=Y1
 300        CONTINUE
            YMIN(N) = YL
         END IF
      ELSE IF (Y.EQ.INT(YMAX(N))) THEN
         YH = BOUNDARY(2,FIRST)
         IF (TOP.GT.1) THEN
            DO 400 I=2,TOP
               Y1 = BOUNDARY(2,I)
               IF (Y1.GT.YH) YH=Y1
 400        CONTINUE
            YMAX(N) = YH
         END IF
      END IF

C     Return the current point at the top of the BOUNDARY list

 9000 X = BOUNDARY(1,TOP)
      Y = BOUNDARY(2,TOP)

      RETURN
      END
@


1.4
log
@format changes plus fixes for g77
@
text
@d45 1
a45 1
C     rcsheader = "$Id: p2rempnt.f,v 1.3 1993/10/04 21:55:32 tom Exp tom $"
@


1.3
log
@added rcsheader
@
text
@d2 42
a43 49
C
C  Subroutine:   P2REMPNT.FTN
C
C  Author:       Tom O. Videen
C  Date:         11-Mar-87
C  Written For:  SPIDERAM Super PET Image Display Program
C
C  Intent:
C     This routine removes the top point in the list BOUNDARY
C     for the current region, REG, and erases the point from
C     the Ramtek Display Monitor.
C     It updates the minimum and maximum values for X and Y
C     in the boundary list.
C     It returns the new point at the top of the list.
C     The cursor is not affected by this subroutine.
C
C  Common Blocks from SPIDERAM.INC:
C     **LUINFO   - logical units (also /USRIO/)   (read only)
C     **DISPLAY  - display parameters             (read only)
C     **REGION   - region analysis parameters     (write)
C
C  Variables:
C     X,Y = location of the point in image space (1,1 is upper left);
C       When the subroutine is called, the values assigned to
C         X and Y are irrelevant.
C       When the subroutine returns to the calling program,
C         the point X,Y is the current point at the top of the
C         list BOUNDARY.
C     PLANES = planes in which to set a bit;
C     N = number of the region being defined;
C     XL = temporary value for XMIN(N);
C     XH = temporary value for XMAX(N);
C     YL = temporary value for YMIN(N);
C     YH = temporary value for YMAX(N);
C     X1,Y1 = a point in the list, BOUNDARY;
C     XR,YR = screen coordinates of points;
C     LEN = size of each point in screen pixels;
C
C  Uses:
C
C  SPIDERAM.LIB Functions:
C     XRAMTEK - converts image x-index to Ramtek x-coordinate;
C     YRAMTEK - converts image y-index to Ramtek y-coordinate;
C
C  RAMUTY.LIB
C     RAMERASE
C
C  Called by:  P2TRACK
C
d45 2
a46 1
C
d48 1
a48 1
C
d50 2
a51 3
     &            XRAMTEK,YRAMTEK
      character*256 rcsheader
C
d53 3
a55 4
      rcsheader = "$Id$"
C
C  If there is only one point in the current region RETURN
C
d58 4
a61 4
C
C  Get the image coordiates of the top point in the list and
C  move the pointer to the next-to-the-top point in the list.
C
d66 3
a68 3
C
C  Erase the point from the Ramtek Display Monitor
C
d72 4
a75 4
C
C  If the point removed was either a minimum or maximum X,
C  search the list for a new minimum or maximum value.
C
d77 8
a84 8
        XL = BOUNDARY(1,FIRST)
        IF (TOP.GT.1) THEN
          DO 100 I=2,TOP
            X1 = BOUNDARY(1,I)
            IF (X1.LT.XL) XL=X1
100       CONTINUE
          XMIN(N) = XL
        END IF
d86 8
a93 8
        XH = BOUNDARY(1,FIRST)
        IF (TOP.GT.1) THEN
          DO 200 I=2,TOP
            X1 = BOUNDARY(1,I)
            IF (X1.GT.XH) XH=X1
200       CONTINUE
          XMAX(N) = XH
        END IF
d95 4
a98 4
C
C   If the point removed was either a minimum or maximum Y,
C      search the list for a new minimum or maximum value.
C
d100 8
a107 8
        YL = BOUNDARY(2,FIRST)
        IF (TOP.GT.1) THEN
          DO 300 I=2,TOP
            Y1 = BOUNDARY(2,I)
            IF (Y1.LT.YL) YL=Y1
300       CONTINUE
          YMIN(N) = YL
        END IF
d109 8
a116 8
        YH = BOUNDARY(2,FIRST)
        IF (TOP.GT.1) THEN
          DO 400 I=2,TOP
            Y1 = BOUNDARY(2,I)
            IF (Y1.GT.YH) YH=Y1
400       CONTINUE
          YMAX(N) = YH
        END IF
d118 4
a121 4
C
C  Return the current point at the top of the BOUNDARY list
C
9000  X = BOUNDARY(1,TOP)
d123 1
a123 1
C
@


1.2
log
@Save window dump. 04/23/92 by Tom Yang
@
text
@a54 1
C
d56 2
a57 1
     2            XRAMTEK,YRAMTEK
d60 1
a60 1
C
@


1.1
log
@Initial revision
@
text
@@
