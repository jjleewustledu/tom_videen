head	2.0;
access;
symbols;
locks; strict;
comment	@c @;


2.0
date	2004.02.20.14.34.10;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	2002.12.02.21.26.52;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	93.10.04.21.55.32;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	92.04.23.21.25.39;	author ty7777;	state Exp;
branches;
next	1.1;

1.1
date	92.04.13.19.12.07;	author tom;	state Exp;
branches;
next	;


desc
@Spideram function.
@


2.0
log
@Feb 2004
@
text
@CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     
C     Subroutine:   P2PTCONV.FTN
C     Author:       Tom O. Videen
C     Date:         25-Mar-87
C     Intent:
C     .  This routine takes the location of a point on the Ramtek
C     .  Display Monitor screen and converts its location to the
C     .  corresponding location in the image array in which the
C     .  point would be included.
C     
C     .  The routine checks that the point is within the boundaries
C     .  of the image:  if it is not, it returns the point on the
C     .  closest boundary of the image and positions the cursor
C     .  at this point and returns CFLAG = TRUE.
C     .  If the cursor is not repositioned, CFLAG = FALSE.
C     
C     The point returned to the calling program will always be a
C     .  point in image space.
C     
C     .  For coronal/sagittal images Y-values may be just outside
C     .  the image so that a region may be created which encloses the
C     .  entire image (i.e., Y=0 is allowed).
C     
C     Common Blocks from SPIDERAM.INC:
C     .  **LUINFO   - logical units (also /USRIO/)   (read only)
C     .  **DISPLAY  - display parameters             (read only)
C     
C     Variables:
C     .  X,Y = when the subroutine is ENTERED, these are Ramtek
C     .          coordinates of a point;
C     .        when RETURNING to the calling program, these are
C     .          image array coordinates of the point;
C     .  CFLAG = TRUE if the cursor is reset with a call to SETCUR
C     .      (this flag is necessary since SETCUR always leaves
C     .       the TRACK bit of the trackball set to 0, which can
C     .       wreak havoc in the calling program)
C     .  XCUR,YCUR = location of the point that is to be returned
C     .       in Ramtek coordinates;  (used for relocating the
C     .       cursor if necessary)
C     .  XTERM = last x-value in Ramtek coordinates;
C     .  YTERM = last y-value in Ramtek coordinates;
C     .  YONE    = first y-value in image coordinates;
C     .  YZERO = first y-value in Ramtek coordinates;
C     
C     Uses:
C     .  XINDEX - converts Ramtek x-coordinate to image x-index;
C     .  YINDEX - converts Ramtek y-coordinate to image y-index;
C     .  XRAMTEK - converts image x-index to Ramtek x-coordinate;
C     .  YRAMTEK - converts image y-index to Ramtek y-coordinate;
C     .  SETCUR
C     
C     Called by: P2TRACK
C     
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     rcsheader = "$Id: p2ptconv.f,v 1.4 2002/12/02 21:26:52 tom Exp tom $"

      SUBROUTINE P2PTCONV(X,Y,CFLAG)

      INTEGER*4  X,Y,XCUR,YCUR,YONE,YZERO,XINDEX,YINDEX,YEND,
     &     XRAMTEK,YRAMTEK,XTERM,YTERM
      LOGICAL*1  CFLAG

      INCLUDE 'spideram.inc'

      CFLAG = .FALSE.

C     Save cursor location

      XCUR = X
      YCUR = Y

C     Convert cursor coordinates to image coordinates

      X = XINDEX(XCUR)
      Y = YINDEX(YCUR)

C     Check X

      XTERM = XRAMTEK(XHIGH)
      IF (X.LT.XLOW) THEN
         X = XLOW
         XCUR = XORG
         CFLAG = .TRUE.
      ELSE IF (X.GT.XHIGH) THEN
         X = XHIGH
         XCUR = XTERM
         CFLAG = .TRUE.
      END IF

C     Check Y

      IF (ORIENT.EQ.'T') THEN
         YONE = YLOW
         YEND = YHIGH
      ELSE
         YONE = YLOW-1
         YEND = YHIGH+1
      END IF
      YZERO = YRAMTEK(YONE)
      YTERM = YRAMTEK(YEND)
      IF (Y.LT.YONE) THEN
         Y = YONE
         YCUR = YZERO
         CFLAG = .TRUE.
      ELSE IF (Y.GT.YEND) THEN
         Y = YEND
         YCUR = YTERM
         CFLAG = .TRUE.
      END IF

C     If the cursor was moved outside of the image, reposition it

      IF (CFLAG) CALL SETCUR(XCUR,YCUR,0,1,RMD)

      RETURN
      END
@


1.4
log
@format changes plus fixes for g77
@
text
@d56 1
a56 1
C     rcsheader = "$Id: p2ptconv.f,v 1.3 1993/10/04 21:55:32 tom Exp tom $"
@


1.3
log
@added rcsheader
@
text
@d2 53
a54 60
C
C  Subroutine:   P2PTCONV.FTN
C
C  Author:       Tom O. Videen
C  Date:         25-Mar-87
C  Written For:  SPIDERAM Super PET Image Display Program
C
C  Intent:
C     This routine takes the location of a point on the Ramtek
C     Display Monitor screen and converts its location to the
C     corresponding location in the image array in which the
C     point would be included.
C
C     The routine checks that the point is within the boundaries
C     of the image:  if it is not, it returns the point on the
C     closest boundary of the image and positions the cursor
C     at this point and returns CFLAG = TRUE.
C     If the cursor is not repositioned, CFLAG = FALSE.
C
C   The point returned to the calling program will always be a
C     point in image space.
C
C     For coronal/sagittal images Y-values may be just outside
C     the image so that a region may be created which encloses the
C     entire image (i.e., Y=0 is allowed).
C
C  Common Blocks from SPIDERAM.INC:
C     **LUINFO   - logical units (also /USRIO/)   (read only)
C     **DISPLAY  - display parameters             (read only)
C
C  Variables:
C     X,Y = when the subroutine is ENTERED, these are Ramtek
C             coordinates of a point;
C           when RETURNING to the calling program, these are
C             image array coordinates of the point;
C     CFLAG = TRUE if the cursor is reset with a call to SETCUR
C         (this flag is necessary since SETCUR always leaves
C          the TRACK bit of the trackball set to 0, which can
C          wreak havoc in the calling program)
C     XCUR,YCUR = location of the point that is to be returned
C          in Ramtek coordinates;  (used for relocating the
C          cursor if necessary)
C     XTERM = last x-value in Ramtek coordinates;
C     YTERM = last y-value in Ramtek coordinates;
C     YONE    = first y-value in image coordinates;
C     YZERO = first y-value in Ramtek coordinates;
C
C  Uses:
C
C  SPIDERAM.LIB Functions:
C     XINDEX - converts Ramtek x-coordinate to image x-index;
C     YINDEX - converts Ramtek y-coordinate to image y-index;
C     XRAMTEK - converts image x-index to Ramtek x-coordinate;
C     YRAMTEK - converts image y-index to Ramtek y-coordinate;
C
C  RAMUTY.LIB
C     SETCUR
C
C  Called by: P2TRACK
C
d56 2
a57 1
C
d59 1
a59 1
C
d61 1
a61 1
     &           XRAMTEK,YRAMTEK,XTERM,YTERM
d63 1
a63 2
      character*256 rcsheader
C
d65 1
a65 2
      rcsheader = "$Id$"
C
d67 3
a69 3
C
C  Save cursor location
C
d72 3
a74 3
C
C  Convert cursor coordinates to image coordinates
C
d77 3
a79 3
C
C  Check X
C
d82 3
a84 3
        X = XLOW
        XCUR = XORG
        CFLAG = .TRUE.
d86 3
a88 3
        X = XHIGH
        XCUR = XTERM
        CFLAG = .TRUE.
d90 3
a92 3
C
C  Check Y
C
d94 2
a95 2
        YONE = YLOW
        YEND = YHIGH
d97 2
a98 2
        YONE = YLOW-1
        YEND = YHIGH+1
d103 3
a105 3
        Y = YONE
        YCUR = YZERO
        CFLAG = .TRUE.
d107 3
a109 3
        Y = YEND
        YCUR = YTERM
        CFLAG = .TRUE.
d111 3
a113 3
C
C  If the cursor was moved outside of the image, reposition it
C
d115 1
a115 1
C
@


1.2
log
@Save window dump. 04/23/92 by Tom Yang
@
text
@d67 1
a67 1
     2           XRAMTEK,YRAMTEK,XTERM,YTERM
d69 1
d72 1
a72 1
C
@


1.1
log
@Initial revision
@
text
@@
