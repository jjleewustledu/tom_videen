head	2.0;
access;
symbols;
locks; strict;
comment	@ * @;


2.0
date	2004.02.13.19.51.05;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	2000.07.10.17.21.44;	author tom;	state Exp;
branches;
next	;


desc
@@


2.0
log
@Feb 2004
@
text
@/*$Log: bfloat2if.c,v $
 * Revision 1.1  2000/07/10  17:21:44  tom
 * Initial revision
 * */
/*	===============================================================================
 *	Module:			bfloat2if.c
 *	Date:			Jul 2000
 *	Author:			Tom Videen
 *	Description:	Create Interfile header for a bfloat image
 *	===============================================================================
 */
static char     rcsid[] = "$Header: /home/npggw/tom/src/bfloat2if/RCS/bfloat2if.c,v 1.1 2000/07/10 17:21:44 tom Exp tom $";

#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <image.h>

main (argc, argv)
	int             argc;
	char           *argv[];
{

	FILE           *fp;
	FILE           *ref;
	char           *in_hdr;
	char           *out_hdr;
	char           *out_img;
	char           *ref_hdr;
	char           *ptr;
	char           *val;
	char            line[100];
	char            version[5];
	char            program_date[12];
	int             dim[3];
	int             tmp;

/*
 *	Get command line arguments and initialize filenames:
 */

	if (argc != 5) {
		fprintf (stderr, "Usage: bfloat2if in_hdr out_hdr out_img ref_hdr\n");
		return (ERROR);
	}
	in_hdr = argv[1];
	out_hdr = argv[2];
	out_img = argv[3];
	ref_hdr = argv[4];

	ptr = strstr (rcsid, "v ");
	ptr += 2;
	(void) strcpy (version, "    ");
	if (ptr != NULL)
		(void) strncpy (version, ptr, 4);
	if (ptr != NULL)
		ptr = strstr (ptr, " ");
	ptr++;
	(void) strcpy (program_date, "           ");
	if (ptr != NULL)
		(void) strncpy (program_date, ptr, 10);
	ptr = strchr (program_date, '/');
	*ptr = ':';
	ptr = strchr (program_date, '/');
	*ptr = ':';

	if ((fp = fopen (in_hdr, "r")) == 0) {
		fprintf (stderr, "ERROR [bfloat2if]: Cannot open: %s\n", in_hdr);
		return (ERROR);
	}
	if (fscanf (fp, "%d %d %d %d", &dim[0], &dim[1], &dim[2], &tmp) == NULL) {
		fprintf (stderr, "ERROR [bfloat2if]: Reading %s\n", in_hdr);
		return (ERROR);
	}
	(void) fclose (fp);

	if ((ref = fopen (ref_hdr, "r")) == 0) {
		fprintf (stderr, "ERROR [bfloat2if]: Cannot open: %s\n", ref_hdr);
		return (ERROR);
	}
/*
 * Create Interfile Format header file
 */

	if ((fp = fopen (out_hdr, "w")) == 0) {
		fprintf (stderr, "ERROR [img2if]: Unable to create Interfile Format header %s\n", out_hdr);
		return (ERROR);
	}
	fprintf (fp, "INTERFILE :=\n");
	fprintf (fp, "version of keys    := 3.3\n");
	fprintf (fp, "date of keys       := 1992:01:01\n");
	fprintf (fp, "conversion program := bfloat2if\n");
	fprintf (fp, "program version    := %s\n", version);
	fprintf (fp, "program date       := %s\n", program_date);
	fprintf (fp, "name of data file    := %s\n", out_img);

	while (fgets (line, sizeof (line), ref) != NULL) {
		ptr = strstr (line, ":=");
		if (ptr != NULL) {
			val = ptr + 3;
			if (strstr (line, "INTERFILE") != NULL);
			else if (strstr (line, "version of keys") != NULL);
			else if (strstr (line, "date of keys") != NULL);
			else if (strstr (line, "conversion program") != NULL);
			else if (strstr (line, "program version") != NULL);
			else if (strstr (line, "program date") != NULL);
			else if (strstr (line, "name of data file") != NULL);
			else if (strstr (line, "number of dimensions") != NULL)
				fprintf (fp, "number of dimensions := 3\n");
			else if (strstr (line, "number of slices") != NULL)
				fprintf (fp, "number of slices := %d\n", (int) dim[2]);
			else if (strstr (line, "matrix size [1]") != NULL)
				fprintf (fp, "matrix size [1] := %d\n", (int) dim[0]);
			else if (strstr (line, "matrix size [2]") != NULL)
				fprintf (fp, "matrix size [2] := %d\n", (int) dim[1]);
			else if (strstr (line, "matrix size [3]") != NULL)
				fprintf (fp, "matrix size [3] := %d\n", (int) dim[2]);
			else if (strstr (line, "scaling factor (mm/pixel) [1]") != NULL)
				fprintf (fp, "scaling factor (mm/pixel) [1] := %f\n", atof (val));
			else if (strstr (line, "scaling factor (mm/pixel) [2]") != NULL)
				fprintf (fp, "scaling factor (mm/pixel) [2] := %f\n", atof (val));
			else if (strstr (line, "scaling factor (mm/pixel) [3]") != NULL)
				fprintf (fp, "scaling factor (mm/pixel) [3] := %f\n", atof (val));
			else if (strstr (line, "number format") != NULL)
				fprintf (fp, "number format   := float\n");
			else if (strstr (line, "number of bytes per pixel") != NULL)
				fprintf (fp, "number of bytes per pixel  := 4\n");
			else if (strstr (line, "matrix initial element [1]") != NULL)
				fprintf (fp, "matrix initial element [1] := right\n");
			else if (strstr (line, "matrix initial element [2]") != NULL)
				fprintf (fp, "matrix initial element [2] := anterior\n");
			else if (strstr (line, "matrix initial element [3]") != NULL)
				fprintf (fp, "matrix initial element [3] := inferior\n");
			else
				fprintf (fp, line);
		}
	}

	fprintf (fp, "END OF INTERFILE :=\n");
	(void) fclose (ref);
	(void) fclose (fp);
	return (OK);
}
@


1.1
log
@Initial revision
@
text
@d1 4
a4 1
/*$Log$ */
d12 1
a12 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/bfloat2if/RCS/bfloat2if.c,v 1.1 2000/07/06 20:10:56 tom Exp tom $";
d54 4
a57 2
	(void) strncpy (version, ptr, 4);
	ptr = strstr (ptr, " ");
d60 2
a61 1
	(void) strncpy (program_date, ptr, 10);
@
