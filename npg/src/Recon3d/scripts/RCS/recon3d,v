head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	99.09.30.19.45.44;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	98.07.24.20.16.17;	author tom;	state Exp;
branches;
next	;


desc
@tested 24-Jul-98
@


1.2
log
@simplified
@
text
@#!/bin/csh
# Name:		recon3d
# Author:	Tom Videen
# Intent:	simplified call to recon3d_scat

setenv TABLES /usr/local/lib/tables
setenv ND /data/recon/norm

if ($#argv != 7) then
	echo "Usage: recon3d emis trans blank nrmdate pixsize firstfrm lastfrm"
	echo "e.g.,  recon3d m704bicarb m704tr1 980312bl1 980302 1.956 1 3"
	echo "  or,  recon3d p2793mb1  p2793tr1 980219bl1 980106 2.086 1 44"
	echo 
	echo "Note:"
	echo "	always scatter corrects and"
	echo "	uses current path for raw and image files"
	echo 
	echo "Use the following pixel sizes:"
	echo "	Monkey = 1.956"
	echo "	Human  = 2.086 (hdr shows 0.208575 cm)"
	exit (1)
endif

set dpath    = $cwd
set emis     = $1
set tran     = $2
set blank    = $3
set nrmdate  = $4
set pixsize  = $5
set firstfrm = $6
set lastfrm  = $7
unalias rm

set imgdim = 80
set imgdim_fctr = `expr $imgdim / 40`
set norm = normal3d_${imgdim}x${imgdim}_{$nrmdate}

if ($firstfrm > $lastfrm) then
	echo ERROR [recon3d]: $firstfrm > $lastfrm
	exit (1)
endif

if (! -e ${emis}.scn) then
	echo ERROR [recon3d]: ${emis}.scn does not exist
	exit (1)
else if (! -e ${tran}.scn) then
	echo ERROR [recon3d]: ${tran}.scn does not exist
	exit (1)
else if (! -e ${tran}l.scn) then
	echo ERROR [recon3d]: ${tran}l.scn does not exist
	exit (1)
else if (! -e ${blank}.scn) then
	echo ERROR [recon3d]: ${blank}.scn does not exist
	exit (1)
endif
if (-e ${emis}.img) then
	echo "Replacing existing file ${emis}.img"
	rm -f ${emis}.img
endif
if (-e ${emis}.rec) rm -f ${emis}.rec

# If normalization files don't exist, create them.

if(! -e $ND\/${norm}.nrm) then
	echo makenorm_f3d $nrmdate $imgdim_fctr
	echo mv ${norm}.nrm $ND
endif

# Determine number of frames to reconstruct

set frames = `cti_getparam ${emis}.scn -nframe`
if ($lastfrm > $frames) set lastfrm = $frames
set frames = `expr $lastfrm - $firstfrm + 1`

set ifrm = $firstfrm
set ofrm = 1
while ($ifrm <= $lastfrm)
	echo "--------------------------------------------------------------"
	echo Reconstructing Frame $ifrm
 	recon3d_scat $dpath $emis $ND\/$norm $tran $blank -f $ifrm -scat \
		-fo $ofrm -if $imgdim_fctr -num_frames $frames -p $pixsize
	@@ ofrm++
	@@ ifrm++
end

#nframes ${emis}.img $frames
@


1.1
log
@Initial revision
@
text
@d2 3
a4 35
#	Name:	recon3d
#	Author:	Tom Videen
#	Date:	Jul-98
#	Intent: Reconstruct 953B 3D sinograms
#			(simplified call to recon3d_scat (JMO))
#
#	Requires:
#		p2000sp1.scn
#		p2000tr1.scn
#		p2000tr1l.scn
#		980701bl1.scn
#		${NDIR}/normal3d_80x80_980701.nrm
#	If no 3d nrm exists, ${WDIR}/normal3d_80x80_980701.nrm is created using
#		plane_eff_3d_980701.scn
#
#	makenorm_f3d creates:
#		normal3d_80x80_980716.nrm
#		unit_cti953b.scn
#		scat_80x80_96_psi13_psiatt25_h0.20_mult.ifh
#		scat_80x80_96_psi13_psiatt25_h0.20_mult.scat
#
#	rec3d_953b creates:
#		p2000sp1.img
#		p2000sp1.img.rec
#		p2000tr1_f3datn.img
#		p2000tr1_rdmax5.scn
#		p2000sp1_scat.ifh
#		p2000sp1_scat.scat
#		scat_80x80_96_psi13_psiatt25_h0.20_mult.ifh
#		scat_80x80_96_psi13_psiatt25_h0.20_mult.scat
#
#	Calls:
#		makenorm_f3d
#		rec3d_953b
#		nframes
d7 1
a7 3
setenv NDIR /data/pethp2/recon/norm
setenv WDIR /data/pethp2/recon/3d/
set BINDIR = /usr/local/npg/bin
d11 3
a13 2
	echo " e.g., recon3d m700sp1  m700tr1  980130bl1 980101 1.95583 1 30"
	echo "   or, recon3d p2000sp1 p2000tr1 980130bl1 980101 2.08575 1 40"
d15 7
a21 3
	echo "   Always uses scatter correction"
	echo "   Uses current path for both input and output files"
	exit
d32 1
a32 2
set image3d  = ${emis}.img
set recFile  = ${dpath}/${image3d}.rec
a36 2
set fullnorm = ${NDIR}/${norm}
set plneff = plane_eff_3d_${nrmdate}.scn
d39 2
a40 2
	echo "ERROR [recon3d]: $firstfrm > $lastfrm"
	exit
d43 12
a54 12
if (!(-e ${emis}.scn)) then
	echo "ERROR [recon3d]: ${emis}.scn does not exist"
	exit
else if (!(-e ${tran}.scn)) then
	echo "ERROR [recon3d]: ${tran}.scn does not exist"
	exit
else if (!(-e ${tran}l.scn)) then
	echo "ERROR [recon3d]: ${tran}l.scn does not exist"
	exit
else if (!(-e ${blank}.scn)) then
	echo "ERROR [recon3d]: ${blank}.scn does not exist"
	exit
d56 3
a58 3
if (-e ${recFile}) then
	echo "[recon3d]: Replacing existing file: ${recFile}"
	/usr/bin/rm -f ${recFile}
d60 1
a60 2
echo "rec ${image3d} `date` `whoami` `hostname` `uname`" >! ${recFile}
echo "recon3d $1 $2 $3 $4 $5 $6 $7" >> ${recFile}
d62 1
a62 1
# IF 3D NORMALIZATION DOESN'T EXIST, CREATE IT  (approx 2 hours on an Ultra 1)
d64 3
a66 20
if (!(-e ${fullnorm}.nrm)) then
	set fullnorm = ${dpath}/${norm}
	if (!(-e ${fullnorm}.nrm)) then
		set pathroot = `echo $cwd | cut -c1-22`
		if ($pathroot != $WDIR) then
			echo $pathroot
			echo $WDIR
			echo "ERROR [recon3d]: ${norm}.nrm does not exist"
			echo "  cd ${WDIR}xxxx (creating it if necessary)"
			echo "  makenorm_f3d $nrmdate $imgdim_fctr"
			echo "  (processing time approx 2 hr on Ultra1)"
			exit (-1)
		endif
		if (!(-e $plneff)) then
			echo "ERROR [recon3d]: $plneff does not exist"
			exit (-1)
		endif
		echo "[recon3d]: Creating 3D Norm at `date` -----"
		makenorm_f3d $nrmdate $imgdim_fctr
	endif
d69 1
a69 1
# COMPUTE NUMBER OF FRAMES AND RECONSTRUCT	(approx 1 hour/frame)
d72 1
a72 3
if ($lastfrm > $frames) then
	set lastfrm = $frames
endif
a74 1
echo "[recon3d]: Reconstructing $frames frames of ${emis}.scn"
d78 4
a81 3
	echo "[recon3d]: Reconstructing $emis frm = $ifrm at `date` -----"
 	${BINDIR}/rec3d_953b $dpath $emis $tran $blank $fullnorm \
		scat $imgdim_fctr $ifrm $ofrm $frames $pixsize $recFile
d85 2
a86 3
nframes ${image3d} $frames
echo "endrec" >> ${recFile}
echo "[recon3d]: Reconstruction complete at `date` -----"
@
