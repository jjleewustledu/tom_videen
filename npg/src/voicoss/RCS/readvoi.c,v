head	2.2;
access;
symbols;
locks; strict;
comment	@ * @;


2.2
date	2006.02.16.20.34.59;	author tom;	state Exp;
branches;
next	2.1;

2.1
date	2004.03.04.18.40.30;	author tom;	state Exp;
branches;
next	2.0;

2.0
date	2004.02.20.16.20.40;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	2000.08.31.15.23.07;	author tom;	state Exp;
branches;
next	;


desc
@@


2.2
log
@eliminate zero check while computing regional means
@
text
@/*	$Log: readvoi.c,v $
 * Revision 2.1  2004/03/04  18:40:30  tom
 * always write both L/R and R/L ratios
 *
 * Revision 2.0  2004/02/20  16:20:40  tom
 * Feb 2004
 *
 * Revision 1.1  2000/08/31  15:23:07  tom
 * Initial revision
 *
 * Revision 1.1  2000/08/15  21:30:24  tom
 * Initial revision
 *
 * Revision 1.6  1999/12/17  16:19:58  tom
 * lint cleaning
 *
 * Revision 1.5  1999/07/15  15:45:25  tom
 * old and new sphere options
 * new sphere is spherical in mm
 * old sphere is spherical in pixels
 *
 * Revision 1.4  1996/04/26  21:10:15  tom
 * can read VOI or spideram REG formats
 *
 * Revision 1.3  1996/04/26  15:52:53  tom
 * changed structure of rgtlist
 *
 * Revision 1.1  1996/04/25  16:16:01  tom
 * Initial revision
 * */
/* ===============================================================================
 *	Module:			readvoi.c
 *	Date:			Apr 1996
 *	Author:			Tom Yang (1994)
 *	Revised:		Tom Videen (1996)
 *	Description:	Read a region file into a VOIDATA list.
 * ===============================================================================
 */
/*@@unused@@*/
#ifndef lint
static char     rcsid[] = "$Header: /home/npggw/tom/src/voicoss/RCS/readvoi.c,v 2.1 2004/03/04 18:40:30 tom Exp tom $";
#endif

#include <stdio.h>
#include <string.h>
#include <imgutil.h>
#include <voistat.h>

int             readvoi (voifile, nvoi, voilist)
	char           *voifile;		 /* file name */
	int            *nvoi;			 /* number of VOIs */
	VOIDATA        *voilist;		 /* list of VOI names and coordinates */
{
	FILE           *voifp;
	char            line[MAXLINE];
	char            name[MAXLINE];
	char            hemisphere[MAXLINE];
	float           x = 0, y = 0, z = 0;
	int             num = 0, a = 0, b = 0;
	int             nvoi_declared = 0;
	int             type = 0;

	voifp = fopen (voifile, "r");
	if (voifp == NULL) {
		fprintf (stderr, "ERROR [readvoi]: Cannot open region file %s\n", voifile);
		return (ERROR);
	}

/* Read the file version and type	*/

	if (fgets (line, MAXLINE, voifp) == NULL || sscanf (line, "%d %s", &type, name) != 2) {
		fprintf (stderr, "ERROR [readvoi]: Reading version and type from %s\n", voifile);
		return (ERROR);
	}
	if (type != VOI_FILETYPE && type != 20) {
		fprintf (stderr, "ERROR [readvoi]: illegal filetype in %s\n", voifile);
		fprintf (stderr, "Region file must have type %d\n", VOI_FILETYPE);
		return (ERROR);
	}

/*	New VOI file format	*/

	if (type == VOI_FILETYPE) {
		if (fgets (line, MAXLINE, voifp) == NULL) {
			fprintf (stderr, "ERROR [readvoi]: Region file %s contains no data\n", voifile);
			return (ERROR);
		}
		if (fgets (line, MAXLINE, voifp) == NULL || sscanf (line, "%d", &nvoi_declared) != 1) {
			fprintf (stderr, "ERROR [readvoi]: Reading %d VOIs from %s\n", nvoi_declared, voifile);
			return (ERROR);
		}
		*nvoi = 0;
		while (fgets (line, MAXLINE, voifp) != NULL && *nvoi < nvoi_declared) {
			if (sscanf (line, "%s %f %f %f", name, &x, &y, &z) == 4) {
				voilist[*nvoi].center.x = x;
				voilist[*nvoi].center.y = y;
				voilist[*nvoi].center.z = z;
				(void) strcpy (voilist[*nvoi].voiname, name);
				(*nvoi)++;
			}
		}
		if (*nvoi < nvoi_declared) {
			fprintf (stderr, "ERROR [readvoi]: File contains only %d of %d VOIs\n", *nvoi, nvoi_declared);
			return (ERROR);
		}

/*	Spideram REG file format	*/

	} else if (type == 20) {
		if (fgets (line, MAXLINE, voifp) == NULL) {
			fprintf (stderr, "ERROR [readvoi]: Region file %s contains no data\n", voifile);
			return (ERROR);
		}
		if (fgets (line, MAXLINE, voifp) == NULL) {
			fprintf (stderr, "ERROR [readvoi]: Region file %s contains no data\n", voifile);
			return (ERROR);
		}
		*nvoi = 0;
		while (fgets (line, MAXLINE, voifp) != NULL) {
			if (sscanf (line, "%d %s %s %f %f %f %d %d", &num, name, hemisphere, &z, &x, &y, &a, &b) != 8) {
				fprintf (stderr, "ERROR [readvoi]: reading spideram reg file %s line:\n%s\n", voifile, line);
				return (ERROR);
			}
			if (num == 0)
				break;
			voilist[*nvoi].center.x = x;
			voilist[*nvoi].center.y = y;
			voilist[*nvoi].center.z = z;
			(void) strcpy (voilist[*nvoi].voiname, name);
			(*nvoi)++;
		}
		if (*nvoi != b) {
			fprintf (stderr, "ERROR [readvoi]: File contains only %d of %d VOIs\n", *nvoi, b);
			return (ERROR);
		}
	}
	(void) fclose (voifp);
	return (OK);
}
@


2.1
log
@always write both L/R and R/L ratios
@
text
@d2 3
d41 1
a41 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/voicoss/RCS/readvoi.c,v 2.0 2004/02/20 16:20:40 tom Exp tom $";
@


2.0
log
@Feb 2004
@
text
@d2 3
d38 1
a38 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/voicoss/RCS/readvoi.c,v 1.1 2000/08/31 15:23:07 tom Exp tom $";
@


1.1
log
@Initial revision
@
text
@d2 3
d27 3
a29 2
 *	Date:			Apr-96
 *	Author:			Tom Yang (02/22/94)
a30 2
 *	History:
 *		Apr-96	TOV	revised
d33 1
d35 1
a35 1
static char     rcsid[] = "$Header: /home/npggw/tom/src/voicoss/RCS/readvoi.c,v 1.1 2000/08/15 21:30:24 tom Exp $";
d62 3
a64 3
/*
 * Read the file version and type.
 */
a73 3
/*
 *	New VOI file format
 */
d75 2
a99 3
/*
 *	Spideram REG file format
 */
d101 2
@
