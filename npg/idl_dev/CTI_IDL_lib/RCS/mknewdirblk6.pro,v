head	1.1;
access;
symbols;
locks
	tom:1.1; strict;
comment	@# @;


1.1
date	93.12.07.20.44.00;	author tom;	state Exp;
branches;
next	;


desc
@from E Pearson 12/07/93
@


1.1
log
@Initial revision
@
text
@;       $Revision:   1.1  $ $Date:   10/15/93 18:18:18  $
;       Copyright(c) 1993 CTI PET Systems, Inc.

;+
; NAME:	
;		MKNEWDIRBLK6	
;
; PURPOSE:
;		Creates a new directory block for an ECAT6 matrix file in the 
;		file reqpresented by unit. The next free block is returned on 
;		success. 
;
;		The directory block for ECAT6 files is stored in DEC (LITTLE_ENDIAN)
;		format. When writing the block on a BIG_ENDIAN base system, need
;		to swap the byteorder before writing.
;					
;
; CATEGORY:
;		CTI Matrix utility.			
;
; CALLING SEQUENCE:		
;		result = mknewdirblk6 (unit,dir,dirinfo,NEW=new)
;
; INPUTS:
;		unit - lun for open file.
;
;				
;
; KEYWORD PARAMETERS:	
;		new - 	
;
; OUTPUTS:			
;
; HISTORY NOTES:		
;-

function mknewdirblk6,unit,dir,dirinfo,NEW=new
	on_error,2
	on_ioerror,io_error
	if(n_params() NE 3) then begin
	   set_ecat_error,2,"MKNEWDIRBLK6",UNIT=unit
	   return,!ECAT.ERROR
	endif

	if(keyword_set(NEW)) then begin
	   dirblk = lonarr(4,32)
	   dirblk(*,0) = [31,!ECAT.DIRBLK1,0,0]
	   dir = [dirblk(*,1:*),transpose(lonarr(31))]
	   dirinfo = dirblk(*,0)
	   point_lun,unit,!ECAT.BLKSIZE
	   if (NOT !LITTLE_ENDIAN) then byteorder,dirblk,/lswap
	   writeu,unit,dirblk
	   return, !ECAT.OK
	endif

	dirblk = lonarr(4,32)
	ndirblks = n_elements(dirinfo(0,*))
	if(ndirblks EQ 1) then 			$
	   prevblk = !ECAT.DIRBLK1		$
	else					$
	   prevblk = dirinfo(1,ndirblks-2)
	ind = where(dir(2,*) GT 0, nmats)
	if(nmats EQ 0) then begin
	   set_ecat_error,5,"MKNEWDIRBLK6",UNIT=unit
	   return,!ECAT.ERROR
	endif
	lastblk = dir(2, ind(nmats-1))

	dirblk(*,0)=[31L,0L,0L,0L]
	dirblk(1,0) = !ECAT.DIRBLK1
	dirblk(2,0) = prevblk
	dirblk(3,0) = 0L
	dir = [[dir],[lonarr(5,31)]]
	dirinfo = [[dirinfo],[dirblk(*,0)]]
	point_lun,unit,lastblk*!ECAT.BLKSIZE
	wdir = dirblk
	if (NOT !LITTLE_ENDIAN) then byteorder,wdir,/lswap
	writeu,unit,wdir
	point_lun,unit,(dirblk(2,0)-1)*!ECAT.BLKSIZE 
	prevdir = lonarr(4)
	readu,unit,prevdir 
	if (NOT !LITTLE_ENDIAN) then byteorder,prevdir,/lswap
	newdirblk = lastblk+1L
	prevdir(1) = newdirblk
	point_lun,unit,(dirblk(2,0)-1)*!ECAT.BLKSIZE 
	if (NOT !LITTLE_ENDIAN) then byteorder,prevdir,/lswap
	writeu,unit,prevdir 
	dirinfo(1,n_elements(dirinfo(0,*))-2) = newdirblk

	return,!ECAT.OK

io_error : set_ecat_error,1,"MKNEWDIRBLK6",UNIT=unit
           return,!ECAT.ERROR
end
@
