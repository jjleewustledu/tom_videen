head	1.1;
access;
symbols;
locks
	tom:1.1; strict;
comment	@# @;


1.1
date	93.12.07.20.44.00;	author tom;	state Exp;
branches;
next	;


desc
@from E Pearson 12/07/93
@


1.1
log
@Initial revision
@
text
@;       $Revision:   1.1  $ $Date:   10/15/93 18:41:22  $
;       Copyright(c) 1993 CTI PET Systems, Inc.

;+
; NAME:		
;		WDATA
;
; PURPOSE:
;		Write the data into the file represented by unit.			
;
; CATEGORY:	
;		CTI Matrix utility		
;
; CALLING SEQUENCE:		
;		result = wdata (unit,ftype,dtype,offsets,data)
;
; INPUTS:			
;
; KEYWORD PARAMETERS:		
;
; OUTPUTS:			
;
; HISTORY NOTES:		
;-

function wdata,unit,ftype,dtype,offsets,data

	on_error,2
	on_ioerror,io_error
	if(n_params() NE 5) then begin
	   set_ecat_error,2,"WDATA",UNIT=unit
	   return,!ECAT.ERROR
	endif

	s = size(data(*,*,0))
	size = s(1)*s(2)
	pad = 0

	case !ECAT.data_types(dtype) of
	   "VAX_I2" :  $
	   begin
	      pad = 0L  
	      if(size*2L LT !ECAT.BLKSIZE) then begin
	         leftover = (!ECAT.BLKSIZE/2L)-size
	         pad = intarr(s(1), leftover/s(1))
	      endif else begin
	         r = (size*2L) MOD !ECAT.BLKSIZE
	         if(r GT 0) then begin
	            leftover = (!ECAT.BLKSIZE/2L)-r
	            pad = intarr(s(1), leftover/s(1))
	         endif
	      endelse
	      byteorder,data
	      for i=0,n_elements(offsets)-1 do begin
	         d = data(*,*,i)
	         if(pad) then d = [[data(*,*,i)],[pad]]
	         a = assoc(unit,d,offsets(i))
	         a(0) = d
	      endfor             
	   end

	   "VAX_R4" : $
	   begin
	      pad = 0L  
	      if(size*4L LT !ECAT.BLKSIZE) then begin
	         leftover = (!ECAT.BLKSIZE/4L)-size
	         pad = fltarr(s(1), leftover/s(1))
	      endif else begin
	         r = (size*4L) MOD !ECAT.BLKSIZE
	         if(r GT 0) then begin
	            leftover = (!ECAT.BLKSIZE/2L)-r
	            pad = fltarr(s(1), leftover/s(1))
	         endif
	      endelse
	      for i=0,n_elements(offsets)-1 do begin
	         d = stovf(data(*,*,i))
	         if(pad) then d = [[d],[pad]]
	         a = assoc(unit,d,offsets(i))
	         a(0) = d
	      endfor             
	   end

	   "SUN_I2" : $
	   begin
	      pad = 0L  
	      if(size*2L LT !ECAT.BLKSIZE) then begin
	         leftover = (!ECAT.BLKSIZE/2L)-size
	         pad = intarr(s(1), leftover/s(1))
	      endif else begin
	         r = (size*2L) MOD !ECAT.BLKSIZE
	         if(r GT 0) then begin
	            leftover = (!ECAT.BLKSIZE/2L)-r
	            pad = intarr(s(1), leftover/s(1))
	         endif
	      endelse
	      for i=0,n_elements(offsets)-1 do begin
	         d = data(*,*,i)
	         if(pad) then d = [[data(*,*,i)],[pad]]
	         a = assoc(unit,d,offsets(i))
	         a(0) = d
	      endfor        
	   end

	   "SUN_R4" : $
	   begin
	      pad = 0L  
	      if(size*4L LT !ECAT.BLKSIZE) then begin
	         leftover = (!ECAT.BLKSIZE/4L)-size
	         pad = fltarr(s(1), leftover/s(1))
	      endif else begin
	         r = (size*4L) MOD !ECAT.BLKSIZE
	         if(r GT 0) then begin
	            leftover = (!ECAT.BLKSIZE/2L)-r
	            pad = fltarr(s(1), leftover/s(1))
	         endif
	      endelse
	      for i=0,n_elements(offsets)-1 do begin
	         d = data(*,*,i)
	         if(pad) then d = [[data(*,*,i)],[pad]]
	         a = assoc(unit,d,offsets(i))
	         a(0) = d
	      endfor        
	   end

	   else : begin
	      set_ecat_data,0,"WDATA",UNIT=unit
	      return,!ECAT.ERROR
	   end
	endcase

	return,!ECAT.OK

io_error : set_ecat_error,1,"WDATA",UNIT=unit
           return,!ECAT.ERROR

end
@
