head	1.1;
access;
symbols;
locks
	tom:1.1; strict;
comment	@# @;


1.1
date	93.12.07.20.44.00;	author tom;	state Exp;
branches;
next	;


desc
@from E Pearson 12/07/93
@


1.1
log
@Initial revision
@
text
@;       $Revision:   1.1  $ $Date:   10/15/93 18:13:26  $
;       Copyright(c) 1993 CTI PET Systems, Inc.

;+
; NAME:	
;	DIFFVAL	
;
; PURPOSE:			
;	DIFFVAL returns an array with the total number of different frames, 
;	planes, gates, data, and beds for the directory given. DIFFVAL will 
;	return the total number of different values in any vector, or in each 
;	column of an array.
;
; CATEGORY:			
;	CTI Matrix read utility.
;
; CALLING SEQUENCE:		
;	stat =  diffval (dir, NOT_DIR=not_dir)
;
; INPUTS:
;	dir - matrix directory entry, unless the not_dir keyword is set.
;				
;
; KEYWORD PARAMETERS:
;	not_dir - this keyword indicates that the dir parameter is a vector
;			to be searched.		
;
; OUTPUTS:	
;	stat - 	the total number of different frames, planes, gates, data, 
;		and beds for the directory given OR the total number of 
;		different values in any vector, or in each column of an array.	
;
;-

function diffval,dir,NOT_DIR=not_dir

	on_error,2
	if(n_params() NE 1) then begin
	   set_ecat_error,2,"DIFFVAL"
	   return,!ECAT.ERROR
	endif

	if(NOT keyword_set(NOT_DIR)) then begin
	   ind = where(dir(0,*) GT 0)
	   if(ind(0) LT 0) then ind = 0
	   matnums = dir(0,ind)
	   fpgdb = matval(matnums)
	   fpgdb = reform(fpgdb,5,n_elements(fpgdb)/5)
	   s=size(fpgdb)
	   count=s(1)
	endif else 				$
	   fpgdb=dir
	if(keyword_set(NOT_DIR)) then begin
	   s=size(fpgdb)
	   if(s(0) EQ 0) then return,fpgdb
	   if(s(0) EQ 1) then begin		$
	      if(s(1) EQ 1) then return,fpgdb	$
	      else count=1 & fpgdb=transpose(fpgdb)
	   endif else count=s(1)
	endif
	dvals = lonarr(count)
	for j=0,count-1 do begin
	   n = fpgdb(j,*)
	   n = n(sort(n))
	   count = 1
	   for i=0,n_elements(n)-2 do begin
	      if(n(i) NE n(i+1)) then count = count +1
	   endfor
	   dvals(j) = count
	endfor
	return,dvals
end
@
