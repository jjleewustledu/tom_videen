head	1.1;
access;
symbols;
locks
	tom:1.1; strict;
comment	@# @;


1.1
date	93.12.07.20.44.00;	author tom;	state Exp;
branches;
next	;


desc
@from E Pearson 12/07/93
@


1.1
log
@Initial revision
@
text
@;       $Revision:   1.1  $ $Date:   10/15/93 18:21:58  $
;       Copyright(c) 1993 CTI PET Systems, Inc.

;+
; NAME:	
;		NEXTFREE	
;
; PURPOSE:
;		Take a directory and directory information from the rdir
;		routine, check for the next free directory position or
;		create a new directory block if necessary, and return the block
;		number for the next free block.
;					
;
; CATEGORY:
;		CTI Matrix utility			
;
; CALLING SEQUENCE:		
;		result = nextfree (unit,matnum,nblks,dir,dirinfo,ecat6=ecat6)
;
; INPUTS:	
;		unit -
;
;		matnum -
;
;		nblks -
;	
;		dir -
;
;		dirinfo -
;		
;
; KEYWORD PARAMETERS:	
;		ecat6 - 	
;
; OUTPUTS:
;		result - 			
;
; HISTORY NOTES:		
;-

function nextfree,unit,matnum,nblks,dir,dirinfo,ecat6=ecat6

	on_error,2
	if(n_params() NE 5) then begin
	   set_ecat_error,2,"NEXTFREE",UNIT=unit
	   return,!ECAT.ERROR
	endif

	ind = where(dirinfo(0,*) GT 0, anyfree)
	if(anyfree EQ 0) then begin
	   if (keyword_set(ECAT6)) then begin
	     stat = mknewdirblk6(unit,dir,dirinfo)
	   endif else stat = mknewdirblk7(unit,dir,dirinfo)

	   if(stat EQ !ECAT.ERROR) then return,!ECAT.ERROR
	endif

	ndir = n_elements(dirinfo(0,*))
	if(ndir EQ 1) then 			$
	   dirblk = !ECAT.DIRBLK1		$
	else 					$			
	   dirblk = dirinfo(1,ndir-2)
	ind = where(dir(2,*) GT 0, nmats)
	if(nmats EQ 0) then begin
	   nextblk = !ECAT.DIRBLK1+1L
	endif else begin
       	   nextblk = dir(2,nmats-1)+1L
	   if(nextblk Eq dirblk) then nextblk = dirblk+1L
	endelse
   
	stat = enter_mat(unit,matnum,dir,dirinfo,dirblk,nextblk,nblks,direntry)
	if(stat EQ !ECAT.ERROR) then return, !ECAT.ERROR
	dirinfo(0,ndir-1) = dirinfo(0,ndir-1)-1
	dirinfo(3,ndir-1) = dirinfo(3,ndir-1)+1
	ind = where(dir(0,*) EQ 0)
	dir(*,ind(0)) = [direntry,(direntry(1)-1)*!ECAT.BLKSIZE]
	
	return,nextblk


end
;
@
