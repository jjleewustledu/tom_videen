head	1.1;
access;
symbols;
locks
	tom:1.1; strict;
comment	@# @;


1.1
date	93.12.07.20.44.00;	author tom;	state Exp;
branches;
next	;


desc
@from E Pearson 12/07/93
@


1.1
log
@Initial revision
@
text
@;       $Revision:   1.1  $ $Date:   10/15/93 18:18:12  $
;       Copyright(c) 1993 CTI PET Systems, Inc.

;+
; NAME:		
;		MKMATS
;
; PURPOSE:	
;		Returns the matrix numbers corresponding to frame, plane, gate,
;		data, and bed. 	
;
; CATEGORY:			
;
; CALLING SEQUENCE:		
;		result =  mkmats (f,p,g,d,b,dir,NEW=new)
; INPUTS:			
;
; KEYWORD PARAMETERS:		
;
; OUTPUTS:			
;
; HISTORY NOTES:		
;-

function   mkmats,f,p,g,d,b,dir,NEW=new

	on_error,2
	if(n_params() NE 6) then begin
	   set_ecat_error,2,"MKMATS"
	   return,[!ECAT.ERROR]
	endif
	   	   
	nf = n_elements(f)
	np = n_elements(p)
	ng = n_elements(g)
	nd = n_elements(d)
	nb = n_elements(b)
	n  = nf*np*ng*nd*nb
	if(n LE 0) then begin
	   set_ecat_error,3,"MKMATS"
	   return,!ECAT.ERROR
	end

	mats = lonarr(5, n)

;	FILL FRAME INDICES

	ind = replicate(f(0), np)
	for i=1,nf-1 do ind = [ind,replicate(f(i), np)]
	lim = ng*nb*nd & ctr = 0 & inc = nf*np
	for i=1,lim do begin
	   mats(0,ctr:ctr+inc-1) = ind
	   ctr = ctr+inc
	end

;	FILL PLANE INDICES

	lim = nf*ng*nb*nd
	ind = p
	for i=2,lim do ind = [ind,p]
	mats(1,*) = ind

;	FILL GATE INDICES

	lim = np*nf
	ind = replicate(g(0),lim)
	for i=1,ng-1 do ind = [ind, replicate(g(i),lim)]
	lim = nb*nd & ctr = 0 & inc = np*nf*ng
	for i=1,lim do begin
	   mats(2,ctr:ctr+inc-1) = ind
	   ctr = ctr + inc
	end

;	FILL DATA INDICES

	lim = np*nf*ng*nb
	ind = replicate(d(0), lim) 
	for i=1,nd-1 do ind = [ind, replicate(d(i),lim)]
	mats(3,*) = ind

;	FILL BED INDICES

	lim = np*nf*ng
	ind = replicate(b(0), lim)
	for i=1,nb-1 do ind = [ind, replicate(b(i),lim)]
	lim = nd & ctr = 0 & inc = np*nf*ng*nb
	for i=1,lim do begin
	   mats(4,ctr:ctr+inc-1) = ind
	   ctr = ctr + inc
	end

;	REMOVE MISSING MATRICES

	matnums = matnum(mats(0,*),mats(1,*),mats(2,*),mats(3,*),mats(4,*))
	if(keyword_set(NEW)) then begin
	   list = lonarr(7,n_elements(matnums))
	   for i=0,n_elements(matnums)-1 do begin
	      list(*,i) = [matnums(i), 0L, mats(*,i)]
	   endfor
	endif else begin
	   matchnums,dir,matnums,mats
	   if (mats(0) eq -1) then return, !ECAT.ERROR
 	   list = lonarr(7, n_elements(matnums))
	   for i=0,n_elements(matnums)-1 do begin
	      off = dir(4,where(dir(0,*) EQ matnums(i)))
	      list(*,i) = [matnums(i), off, mats(*,i)]
	   endfor
	endelse
	return,list
end
@
