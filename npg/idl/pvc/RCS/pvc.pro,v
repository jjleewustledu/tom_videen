head	1.5;
access;
symbols;
locks; strict;
comment	@# @;


1.5
date	99.03.11.16.33.37;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	99.03.11.15.02.11;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	98.03.10.20.40.23;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	97.12.26.20.20.38;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	97.12.26.20.18.32;	author tom;	state Exp;
branches;
next	;


desc
@renamed pvc
@


1.5
log
@*** empty log message ***
@
text
@; $Id: pvc.pro,v 1.4 1999/03/11 15:02:11 tom Exp tom $
;+
; NAME:
;	PVC
;
; PURPOSE:
;   Divide a PET image by a filtered, tissue image to correct for
;	partial volume effects.
;
; CATEGORY:
;	Image processing
;
; CALLING SEQUENCE:
;   PVC
;
; INPUTS:	(passed as environmental variables)
;	PETfile:	input filename for PET
;	Outfile:	output filename
;	Tissuefile:	input filename for tissue
;	Maskfile:	input filename for brain mask
;	Scale:		pixel value of tissuefile representing 100%
;
; OUTPUTS:
;	Correctedfile:	PET activity scaled to units of brain tissue
;
; RESTRICTIONS:
;	All files in Analyze format.
;
; PROCEDURE:
;	Read PET and Tissue images.
;	If (mask(i,j,k) > 0 and tissue(i,j,k) > 0)
;		then corrected(i,j,k) = pet(i,j,k)/tissue(i,j,k)
;	else corrected(i,j,k) = 0
;	Write Corrected image to file.
;
; MODIFICATION HISTORY:
;	Tom Videen, April 1995 (tissue_cor.pro)
;	TOV, Dec 1997 (create runtime version named pvc)
;-

PRO PVC

   on_error,2   
   
   infile = ''
   tissuefile = ''
   maskfile = ''
   outfile = ''
   scale = 0.0
   petfile = getenv('INFILE')
   outfile = getenv('OUTFILE')
   tissuefile = getenv('TISSUEFILE')
   maskfile = getenv('MASKFILE')
   scale =  getenv('SCALE')
   
; Determine image array size & type

   tsize = intarr(3)
   tpixsize = fltarr(3)
   msize = intarr(3)
   mpixsize = fltarr(3)
   asize = intarr(3)
   pixsize = fltarr(3)
   analyze_dim, tissuefile, tsize, tdsize, tpixsize
   analyze_dim, maskfile, msize, mdsize, mpixsize
   analyze_dim, petfile, asize, dsize, pixsize

   IF ((asize(0) NE tsize(0)) OR (asize(1) NE tsize(1)) OR (asize(2) NE tsize(2)) OR $
       (asize(0) NE msize(0)) OR (asize(1) NE msize(1)) OR (asize(2) NE msize(2))) THEN BEGIN
      print, asize, petfile
      print, tsize, tissuefile
      print, msize, maskfile
      message, 'Error: input files must be same size'
      RETURN
   ENDIF

   print, FORMAT = '(I2,"-bit PET image:    ",A)', tdsize, petfile
   print, FORMAT = '(I2,"-bit Tissue image: ",A)', mdsize, tissuefile
   print, FORMAT = '(I2,"-bit Mask image:   ",A)', dsize, maskfile

   IF (mdsize EQ 8) THEN BEGIN
      mask = bytarr(asize(0), asize(1), asize(2))
   ENDIF ELSE BEGIN
      mask = intarr(asize(0), asize(1), asize(2))
   ENDELSE

   IF (tdsize EQ 8) THEN BEGIN
      tissue = bytarr(asize(0), asize(1), asize(2))
   ENDIF ELSE BEGIN
      tissue = intarr(asize(0), asize(1), asize(2))
   ENDELSE

   IF (dsize EQ 8) THEN BEGIN
      pet = bytarr(asize(0), asize(1), asize(2))
   ENDIF ELSE BEGIN
      pet = intarr(asize(0), asize(1), asize(2))
   ENDELSE
   get_lun,lu

; Read images

   openr,lu,petfile
   readu,lu,pet,TRANSFER_COUNT=count
   close,lu
   openr,lu,tissuefile
   readu,lu,tissue,TRANSFER_COUNT=count
   close,lu
   openr,lu,maskfile
   readu,lu,mask,TRANSFER_COUNT=count
   close,lu

; Divide and scale

   pet = float(pet)
   tissue = float(tissue)
   maxpet = max(pet)
   cutoff = scale/2
   print, FORMAT = '("Maximum value =",I5," in PET image")', maxpet
   print, FORMAT = '("Maximum value =",I5," in Tissue image")', scale
   print, FORMAT = '("Compute PVC for pixels >",I4," in Mask")', cutoff
   petmax = 0.
   limit = 2.0 * maxpet
   count = 0L

   print, FORMAT = '("Computing for",I4," planes ...")', asize(2)
   FOR k = 0, asize(2)-1 DO BEGIN
      FOR j = 0, asize(1)-1 DO BEGIN
         FOR i = 0, asize(0)-1 DO BEGIN
            IF ((mask(i,j,k) GT cutoff) AND (tissue(i,j,k) GT 1.)) THEN BEGIN
               pet(i,j,k) = scale * pet(i,j,k) / tissue(i,j,k)
               IF (pet(i,j,k) GT limit) THEN count = count+1
               ;; print, i, j, k, pet(i,j,k), mask(i,j,k), tissue(i,j,k)
               IF (pet(i,j,k) GT petmax) THEN petmax = pet(i,j,k)
            ENDIF ELSE BEGIN
               pet(i,j,k) = 0
            ENDELSE
         ENDFOR
      ENDFOR
   ENDFOR
   print, FORMAT = '("Pixels with correction factors > 2.0:",I6)', count
   print, FORMAT = '("Maximum value =",F10.2," in corrected PET:  ",A)', petmax, outfile
   pet = fix(pet)

; Write to outfile
   
   openw, lu, outfile
   writeu, lu, pet
   close, lu
   free_lun,lu

END
@


1.4
log
@write #pixels with large correction factors rather than coordinates
@
text
@d1 1
a1 1
; $Id: pvc.pro,v 1.3 1998/03/10 20:40:23 tom Exp tom $
d125 1
a125 1
   print, FORMAT = '("Computing for ",I4," planes ...")', asize(2)
d140 1
a140 1
   print, FORMAT = '("Pixels with correction factors > 2.0:",I)', count
@


1.3
log
@revised messages
@
text
@d1 1
a1 1
; $Id: pvc.pro,v 1.2 1997/12/26 20:20:38 tom Exp tom $
d122 2
a123 1
   limit = 1.5 * maxpet
d131 2
a132 3
               IF (pet(i,j,k) GT limit) THEN BEGIN
                  print, i, j, k, pet(i,j,k), mask(i,j,k), tissue(i,j,k)
               ENDIF
d140 2
a141 1
   print, FORMAT = '("Maximum value =",F8.2," in corrected PET:    ",A)', petmax, outfile
@


1.2
log
@change comments
@
text
@d1 1
a1 1
; $Id: pvc.pro,v 1.1 1997/12/26 20:18:32 tom Exp tom $
d77 3
a79 3
   print, petfile, " is ",dsize, "-bit"
   print, tissuefile, " is ",tdsize, "-bit"
   print, maskfile, " is ",mdsize, "-bit"
d118 3
a120 3
   print, "PET max = ", maxpet
   print, "Tissue max = ",scale
   print, "Mask <= ",cutoff
d124 1
a125 1
      print, "Slice = ",k+1
d140 1
a140 1
   print, "Corrected maximum = ", petmax
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
; $Id: pvc.pro,v 1.1 1997/12/23 17:38:15 tom Exp $
d14 1
a14 1
;   PVC, PETfile, Tissuefile, Maskfile, Correctedfile, Scale
@
