head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	96.01.08.15.20.13;	author tom;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@pro fit_fid_inplane, pts, n1, n2, n3, xc, yc, distance, beta, fitp, xp

; Fit parameters

    nparm = 3                       ; number of parameters to fit
    ndim  = nparm+1                 ; number of points in the simplex
	s = n1 + n2 + n3
    s1 = n1 - 1
    s2 = n1
    s3 = n1 + n2 - 1
    s4 = n1 + n2
    nfree = 3.0 * s - nparm - 1.0

    xp = fltarr(5,s)
    yp = fltarr(s)
    yfit = fltarr(s)

; Define the x, y matrices
 
	x1 = pts(xc,0:s1)
	x2 = pts(xc,s2:s3)
	x3 = pts(xc,s4:*)

	y1 = rotate(pts(yc,0:s1),4)
	y2 = rotate(pts(yc,s2:s3),4)
	y3 = rotate(pts(yc,s4:*),4)

    null = fltarr(1,n3)
    null(*) = 0.
    xp(0,*) = [[x1],[x2],[null]]
    xp(1,0:s3) = 1.
    xp(1,s4:*) = 0.
    xp(2,0:s1) = 0.
    xp(2,s2:s3) = 1.
    xp(2,s4:*) = 0.
    xp(3,0:s3) = 0.
    xp(3,s4:*) = x3
    xp(4,0:s3) = 0.
    xp(4,s4:*) = 1.
 
    yp = [y1,y2,y3]
 
; Initial estimate for parameters
 
    best = 0                        ; index to best point on simplex
    scale = 0.5
    ftol  = double(1e-9)
    f = dblarr(ndim)
    p = dblarr(ndim, nparm)
    p(0,*) = [0., 20., 200.]       ; initial estimate of parameters
 
    simplex_init, p, f, ndim, nparm, scale, xp, yp, yfit, distance, beta, nfree
    amoeba, p, f, ndim, nparm, ftol, iter, best, xp, yp, yfit, distance, beta, nfree

    fitp = p(0,*)

end
@
