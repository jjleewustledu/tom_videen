head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	96.01.08.15.20.13;	author tom;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@; $Id: simplex_init.pro,v 1.1 1994/12/21 21:17:59 tom Exp $
;
;+
; NAME:
;   SIMPLEX_INIT
;
; PURPOSE:
;	Initialize simplex prior to calling AMOEBA
;
; CATEGORY:
;   Image processing.
;
; CALLING SEQUENCE:
;   SIMPLEX_INIT, p, f, ndim, nparm, scale
;
; INPUTS:
;	p(ndim,nparm):	starting simplex - (p(0,*) is initialized on input
;	ndim:			no. of points in simplex (nparm+1)
;	nparm:			no. of parameters in function
;					(also dimension of simplex)
;	scale			scale to used for initialization
;
; OUTPUTS:
;	p(ndim,nparm):  final simplex (best in (0,n))
;	f(ndim):		initial functional values of simplex
;
; REFERENCES:
;	S.L.S. Jacoby, J.S. Kowalik & J.T. Pizzo (1972) Iterative Methods
;		for Nonlinear Optimization Problems, Prentice-Hall, pp 80-81.
;
; INTERNAL VARIABLES:
;	pr(nparm)		single point of simplex
;	np, nq			increments to first point
;
; EXAMPLE
;   SIMPLEX_INIT, p, f, ndim, nparm, scale
;
; MODIFICATION HISTORY:
;   Written by: Tom Videen, 12-Dec-94
;-
 
pro simplex_init, p, f, ndim, nparm, scale, x, y, yfit, distance, beta, nfree

    np = scale * (sqrt(nparm+1.) + 1. + nparm) / (sqrt(2.)*nparm)
    nq = scale * (sqrt(nparm+1.) - 1.) / (sqrt(2.)*nparm)

; Form the initial simplex points using np and nq

    for i=1,ndim-1 do begin
        for j=0,nparm-1 do $
            if j+1 eq i then p(i,j) = p(0,j) + np $
            else p(i,j) = p(0,j) + nq
	endfor

; Evaluate the function for each of the initial points

	pr = fltarr(ndim)
    for i=0,ndim-1 do begin
        pr = p(i,*)
		fit_func, pr, ff, ndim, x, y, yfit, distance, beta, nfree
		f(i) = ff
	endfor
	end
@
