head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2002.08.21.19.54.39;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	2000.08.16.20.54.55;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	99.07.16.16.25.24;	author tom;	state Exp;
branches;
next	;


desc
@@


1.3
log
@add filter to pickfile
@
text
@PRO PLOTSPED_EVENT, ev
   COMMON PLOT_SPED
   catch, error_status
   IF (error_status NE 0) THEN BEGIN
      ok = widget_message(!err_string)
      RETURN
   END
   setuv = 0
   widget_control, ev.top, get_uvalue=uv
   widget_control, uv.wid.msg, set_value=''
   
   CASE ev.id OF

      uv.wid.file: BEGIN
         i = ev.value-1
         tmpname = fname[i]
         IF (strlen(fname[i]) GT 0) THEN tmpname = fname[i] $
         ELSE IF (strlen(fname[0]) GT 0) THEN tmpname = fname[0] $
         ELSE IF (strlen(fname[1]) GT 0) THEN tmpname = fname[1]

         IF (strlen(tmpname) GT 0) THEN BEGIN
            l1 = rstrpos(tmpname,'/')
            l2 = rstrpos(tmpname,'.')
            IF (l2 GT 0) THEN BEGIN
               str1 = string(replicate(32b,(l2-l1-2)))
               str1 = '*'+str1
               strput,tmpname,str1,l1+1
               filtername = strcompress(tmpname, /remove_all)
            ENDIF ELSE filtername = '*'
         ENDIF ELSE filtername = '*'

         tmpname = dialog_pickfile(FILE=tmpname, FILTER=filtername, /READ)
         IF (strlen(tmpname) EQ 0) THEN BEGIN
            widget_control, uv.wid.msg, set_value='No file entered'
         ENDIF ELSE BEGIN
            msg = ''
            openr,lu,tmpname,/get_lun
            str = ''
            nr = 0L
            nc = 0L
            readf,lu,str
            readf,lu,nr,nc
            x = fltarr(nc,nr)
            readf,lu,x
            close,lu
            free_lun,lu
            widget_control, uv.wid.msg, set_value='Data read'
            data[i] = ptr_new(x)
            nrows[i] = nr
            ncols[i] = nc
            IF (cval[i] GT ncols[i]) THEN BEGIN
               cval[i] = 0
               widget_control, uv.wid.col[i], set_value=cval[i]+1
            ENDIF 
            fname[i] = tmpname
            widget_control, uv.wid.name[i], set_value=fname[i]
            IF (ptr_valid(data[i])) THEN BEGIN
               minval[i] = min((*data[i])[cval[i],*])*scale[i]
               maxval[i] = max((*data[i])[cval[i],*])*scale[i]
               widget_control, uv.wid.min[i], set_value=minval[i]
               widget_control, uv.wid.max[i], set_value=maxval[i]
            ENDIF
         ENDELSE
      ENDCASE
      
      uv.wid.col[0]: BEGIN 
         i = 0
         cval[i] = ev.value-1
         widget_control, uv.wid.col[i], set_value=cval[i]+1
         minval[i] = min((*data[i])[cval[i],*])*scale[i]
         maxval[i] = max((*data[i])[cval[i],*])*scale[i]
         widget_control, uv.wid.min[i], set_value=minval[i]
         widget_control, uv.wid.max[i], set_value=maxval[i]
      ENDCASE

      uv.wid.col[1]: BEGIN 
         i = 1
         cval[i] = ev.value-1
         widget_control, uv.wid.col[i], set_value=cval[i]+1
         minval[i] = min((*data[i])[cval[i],*])*scale[i]
         maxval[i] = max((*data[i])[cval[i],*])*scale[i]
         widget_control, uv.wid.min[i], set_value=minval[i]
         widget_control, uv.wid.max[i], set_value=maxval[i]
      ENDCASE

      uv.wid.scaler[0]: BEGIN
         i = 0
         scale[i] = ev.value
         widget_control, uv.wid.scaler[i], set_value=scale[i]
         IF (ptr_valid(data[i])) THEN BEGIN
            minval[i] = min((*data[i])[cval[i],*])*scale[i]
            maxval[i] = max((*data[i])[cval[i],*])*scale[i]
            widget_control, uv.wid.min[i], set_value=minval[i]
            widget_control, uv.wid.max[i], set_value=maxval[i]
         ENDIF
      ENDCASE

      uv.wid.scaler[1]: BEGIN
         i = 1
         scale[i] = ev.value
         widget_control, uv.wid.scaler[i], set_value=scale[i]
         IF (ptr_valid(data[i])) THEN BEGIN
            minval[i] = min((*data[i])[cval[i],*])*scale[i]
            maxval[i] = max((*data[i])[cval[i],*])*scale[i]
            widget_control, uv.wid.min[i], set_value=minval[i]
            widget_control, uv.wid.max[i], set_value=maxval[i]
         ENDIF
      ENDCASE

      uv.wid.min[0]: BEGIN 
         minval[0] = ev.value
         widget_control, uv.wid.min[0], set_value=minval[0]
      ENDCASE

      uv.wid.min[1]: BEGIN 
         minval[1] = ev.value
         widget_control, uv.wid.min[1], set_value=minval[1]
      ENDCASE

      uv.wid.max[0]: BEGIN 
         maxval[0] = ev.value
         widget_control, uv.wid.max[0], set_value=maxval[0]
      ENDCASE

      uv.wid.max[1]: BEGIN 
         maxval[1] = ev.value
         widget_control, uv.wid.max[1], set_value=maxval[1]
      ENDCASE

      uv.wid.label[0]: BEGIN 
         xlabel = ev.value
         widget_control, uv.wid.label[0], set_value=xlabel
      ENDCASE

      uv.wid.label[1]: BEGIN 
         ylabel = ev.value
         widget_control, uv.wid.label[1], set_value=ylabel
      ENDCASE

      uv.wid.label[2]: BEGIN 
         title = ev.value
         widget_control, uv.wid.label[2], set_value=title
      ENDCASE

      uv.wid.pixelplot: BEGIN 
         IF (NOT ptr_valid(data[0])) THEN BEGIN
            widget_control, uv.wid.msg, set_value='Error: No X file entered'
         ENDIF ELSE IF (NOT ptr_valid(data[1])) THEN BEGIN
            widget_control, uv.wid.msg, set_value='Error: No Y file entered'
         ENDIF ELSE BEGIN
            x = (*data[0])[cval[0],*]*scale[0]
            y = (*data[1])[cval[1],*]*scale[1]
            window,1
            plot, x, y, xr=[minval[0],maxval[0]], yr=[minval[1],maxval[1]], psym=sym, symsize=0.2, $
               xtitle=xlabel,ytitle=ylabel,title=title,charsize=1.5,charthick=2,xthick=2,ythick=2
         ENDELSE
         lines[0] = 0
         lines[1] = 0
         lines[2] = 0
      ENDCASE

      uv.wid.line: BEGIN
         CASE ev.value OF
            1: BEGIN
               lines[0] = 1
               tmp0 = min([5*minval[1],0])
               tmp1 = max([5*maxval[1],0])
               oplot,[0,0],[tmp0,tmp1]
            ENDCASE
            2: BEGIN
               lines[1] = 1
               tmp0 = min([5*minval[0],0])
               tmp1 = max([5*maxval[0],0])
               oplot,[tmp0,tmp1],[0,0]
            ENDCASE
            3: BEGIN
               lines[2] = 1
               tmp0 = min([5*minval[0],5*minval[1],0])
               tmp1 = max([5*maxval[0],5*maxval[1],0])
               oplot,[tmp0,tmp1],[tmp0,tmp1]
            ENDCASE
         ENDCASE
      ENDCASE

      uv.wid.symbol: BEGIN
         CASE ev.value OF
            1: sym = 3
            2: sym = 4
            3: sym = -3
            4: sym = -4
         ENDCASE
      ENDCASE

      uv.wid.prnt: BEGIN
         IF (NOT ptr_valid(data[0])) THEN BEGIN
            widget_control, uv.wid.msg, set_value='Error: No X file entered'
         ENDIF ELSE IF (NOT ptr_valid(data[1])) THEN BEGIN
            widget_control, uv.wid.msg, set_value='Error: No Y file entered'
         ENDIF ELSE BEGIN 
            widget_control, uv.wid.msg, set_value='Printing...'
            set_plot,'ps'
            cmd = 'whoami'
            spawn,cmd,unit=lun
            pid = ''
            readf,lun,pid,format='(A)'
            printname = '/tmp/plotsped'+pid+'.ps'
            device,filename=printname,xsize=7,ysize=6,xoffset=0.8,yoffset=3,/inches
            x = (*data[0])[cval[0],*]*scale[0]
            y = (*data[1])[cval[1],*]*scale[1]
            plot, x, y, xr=[minval[0],maxval[0]], yr=[minval[1],maxval[1]], psym=sym, symsize=0.2, $
               xtitle=xlabel,ytitle=ylabel,title=title,charsize=1.5,charthick=2,xthick=2,ythick=2
            IF (lines[0] GT 0) THEN BEGIN
               tmp0 = min([5*minval[1],0])
               tmp1 = max([5*maxval[1],0])
               oplot,[0,0],[tmp0,tmp1]
            ENDIF
            IF (lines[1] GT 0) THEN BEGIN
               tmp0 = min([5*minval[0],0])
               tmp1 = max([5*maxval[0],0])
               oplot,[tmp0,tmp1],[0,0]
            ENDIF
            IF (lines[2] GT 0) THEN BEGIN
               tmp0 = min([5*minval[0],5*minval[1],0])
               tmp1 = max([5*maxval[0],5*maxval[1],0])
               oplot,[tmp0,tmp1],[tmp0,tmp1]
            ENDIF
            device,/close
            cmd = 'cat '+printname+' | lpr'
            spawn, cmd
            widget_control, uv.wid.msg, set_value='Plot sent to printer'
            cmd = '/usr/bin/rm '+printname
            spawn, cmd
            set_plot,'x'
         ENDELSE 
      ENDCASE

      uv.wid.exit: widget_control, ev.top, /destroy

   END
END

PRO PLOTSPED
@@PLOTSPED.h

   on_error, 2
   
   base = widget_base (TITLE='PLOTSPED', /COLUMN)
   base1 = widget_base(base, col=5)
   
   base2 = widget_base(base1, row=2)
   base2a = widget_label(base2, value='                                               Data Filename')
   name = lonarr(2)
   base2b = widget_base(base2, row=2)
   name[0] = cw_field(base2b, title='X', value=fname[0], xsize=75, /str, /ret)
   name[1] = cw_field(base2b, title='Y', value=fname[1], xsize=75, /str, /ret)
   
   base3 = widget_base(base1, row=2)
   base3a = widget_label(base3, value='  Column')
   base3b = widget_base(base3, row=2)
   col = lonarr(2) 
   col[0] = cw_field(base3b, title=' ', value=cval[0]+1, xsize=3, ysize=1, /int, /ret)
   col[1] = cw_field(base3b, title=' ', value=cval[1]+1, xsize=3, ysize=1, /int, /ret)

   base4 = widget_base(base1, row=2)
   base4a = widget_label(base4, value='      Scaler')
   base4b = widget_base(base4, row=2)
   scaler = lonarr(2)
   scaler[0] = cw_field(base4b, title=' ', value=scale[0],xsize=10, ysize=1, /float, /ret)
   scaler[1] = cw_field(base4b, title=' ', value=scale[1],xsize=10, ysize=1, /float, /ret)
   
   base5 = widget_base(base1, row=2)
   base5a = widget_label(base5, value='     Minimum')
   base5b = widget_base(base5, row=2)
   min = lonarr(2) 
   min[0] = cw_field(base5b, title=' ', value=minval[0], xsize=10, ysize=1, /float, /ret)
   min[1] = cw_field(base5b, title=' ', value=minval[1], xsize=10, ysize=1, /float, /ret)
   
   base6 = widget_base(base1, row=2)
   base6a = widget_label(base6, value='     Maximum')
   base6b = widget_base(base6, row=2)
   max = lonarr(3) 
   max[0] = cw_field(base6b, title=' ', value=maxval[0], xsize=10, ysize=1, /float, /ret)
   max[1] = cw_field(base6b, title=' ', value=maxval[1], xsize=10, ysize=1, /float, /ret)

   base8 = widget_base(base, col=2)
   label = lonarr(3)
   label[0] = cw_field(base8, title='X Label', value=xlabel, xsize=40, /str, /ret)
   label[1] = cw_field(base8, title='Y Label', value=ylabel, xsize=40, /str, /ret)
   label[2] = cw_field(base8, title='Title', value=title, xsize=45, /str, /ret)
   
   base9 = widget_base(base8, row=1)
   select0 =  ['1\Get Files', '0\X Values', '0\Y Values']
   file = cw_pdmenu(base9, select0)

   pixelplot = WIDGET_BUTTON(base9, value='Pixel Plot')

   select1 =  ['1\Plot Symbol', '0\dots', '0\diamonds', '0\connected dots', '0\connected diamonds']
   symbol = cw_pdmenu(base9, select1)

   select2 =  ['1\Draw Line', '0\x = 0', '0\y = 0','0\x = y']
   line = cw_pdmenu(base9, select2)

   prnt = WIDGET_BUTTON(base9, value='Print')
   exit = WIDGET_BUTTON(base9, value='Exit')
   
   msg = widget_text(base)
   wid = {WIDGETS,      $
          base		: base,  $
          name  	: name, $
          col		: col, $
          scaler	: scaler, $
          min   	: min,$
          max   	: max,$
          label 	: label,$
          file		: file, $
          pixelplot	: pixelplot, $
          symbol  	: symbol,  $
          line  	: line,  $
          prnt  	: prnt,  $
          exit  	: exit,  $
          msg		: msg $
         }
   
   uv = {wid:wid}
   widget_control, base, set_uvalue=uv
   widget_control, base, /realize, xoffset=0, yoffset=0
   xmanager, "PLOTSPED", base, EVENT_HANDLER='PLOTSPED_EVENT'
END 
@


1.2
log
@printname bug fixed
add connected symbols
@
text
@d17 16
a32 1
         tmpname = dialog_pickfile(FILE=tmpname, /READ)
d237 1
a237 4
      uv.wid.exit: BEGIN
         wdelete, 1
         widget_control, ev.top, /destroy
      ENDCASE
@


1.1
log
@Initial revision
@
text
@d174 2
d191 2
a192 2
            fname = '/tmp/plotsped'+pid+'.ps'
            device,filename=fname,xsize=7,ysize=6,xoffset=0.8,yoffset=3,/inches
d213 1
a213 1
            cmd = 'cat '+fname+' | lpr'
d216 1
a216 1
            cmd = '/usr/bin/rm '+fname
d285 1
a285 1
   select1 =  ['1\Plot Symbol', '0\dot', '0\diamond']
@
