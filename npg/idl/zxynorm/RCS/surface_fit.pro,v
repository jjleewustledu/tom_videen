head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2002.09.24.20.43.28;	author tom;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@;+
; NAME:
;	SURFACE_FIT
;
; PURPOSE:
;	This function fits a surface to input data,z, at locations x,y.
;
; CATEGORY:
;	Curve and surface fitting.
;
; CALLING SEQUENCE:
;	Result = SURFACE_FIT(Z, X, Y, Degree, C)
;
; INPUTS:
; 	Z:		2-dimensional array of data to fit. 
; 	X:		X values.
; 	Y:		Y values.
;	Degree:	The maximum degree of fit (in one dimension).
;
; OUTPUT:
;	FIT:	Fit values.
;	C:		Coefficients of fit.
;
; PROCEDURE:
; 	Fit a 2D array Z as a polynomial function of x and y.
; 	The function fitted is:
;  	    F[x,y] = Sum over i and j of c[j,i] * x^i * y^j
;
; MODIFICATION HISTORY:
;	July, 1993, DMS			-	initial creation of sfit.pro
;	Sept, 2002, Tom Videen	-	modified to use arbitray x,y values
;-

FUNCTION surface_fit, z, x, y, degree, c

   on_error, 2

   m = (size(z))[1]		;# of points to fit
   n = (degree+1)^2		;# of coefficients to find

   xc = rotate(x, 1)            ;change row to column vector

   ut = dblarr(n, m, /nozero)
   FOR i=0, degree DO BEGIN
      FOR j=0,degree DO BEGIN
         ut[i*(degree+1) + j, 0] = reform(xc^i * y^j, 1, m)
      ENDFOR
   ENDFOR
   kk = invert(ut # transpose(ut)) # ut
   c = fltarr(degree+1, degree+1) + float(kk # reform(z, m, 1))
   fit = reform(reform(c, n) # ut, m)
   return, fit

END

@
