head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2002.11.14.16.24.36;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	2002.10.29.17.29.35;	author tom;	state Exp;
branches;
next	;


desc
@@


1.2
log
@replace for loop
@
text
@;+
; NAME:
;	DOWNSAMPLE.PRO
;
; PURPOSE:
;	Resample 2D array
;
; INPUTS:
;	OLD:	2D data array
;	MX,MY:	size of new array
;
; OUTPUT:
;	NEW:	resampled data array
;
; REVISION HISTORY:
;	Nov 2002 Tom Videen
;-

FUNCTION DOWNSAMPLE, OLD, MX, MY
   on_error, 2
   nx = (size(old))[1]
   ny = (size(old))[2]
   IF (mx EQ nx AND my EQ ny) THEN return,old

   sx = nx/mx
   sy = ny/my
   new = fltarr(mx,my)
   xc = sx*findgen(mx)
   yc = sy*findgen(my)

   FOR j=0,sy-1 DO BEGIN
      FOR i=0,sx-1 DO BEGIN
         new = new + interpolate(old, xc+i, yc+j, /grid)
      ENDFOR
   ENDFOR
   new = new /(sx*sy)
   return, new

END
@


1.1
log
@Initial revision
@
text
@d16 1
a16 1
;	Jun 2002 Tom Videen
d28 9
a36 16
   FOR y=0,my-1 DO BEGIN
      FOR x=0,mx-1 DO BEGIN
         cnt = 0
         FOR j=0,sx-1 DO BEGIN
         	FOR i=0,sy-1 DO BEGIN
               ix = x*sx + i
               iy = y*sy + j
               IF (ix LT nx AND iy LT ny) THEN BEGIN
                  new[x,y] = new[x,y] + old[ix,iy]
                  cnt = cnt+1
               ENDIF
            ENDFOR 
         ENDFOR 
         IF (cnt GT 0) THEN new[x,y] = new[x,y]/float(cnt)
      ENDFOR 
   ENDFOR 
@
