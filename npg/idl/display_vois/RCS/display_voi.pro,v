head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2008.03.13.16.44.52;	author tom;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@PRO DISPLAY_VOI, img, atlas, peak, npeaks, maxi
   
   COMMON IMAGE_UTILS

   ipln = [21,24,26,31,33,37]
   apln = [7,9,10,12,14,16]
   zloc = ["Z=34","Z=28","Z=24","Z=12","Z=10","Z=2"]
   
   zoom = 2
   nrow = 2
   ncol = 6
   tshift = 30
   xshift = 52
   xsize = img.dim[0] * zoom
   xstep = xsize-xshift
   ysize = img.dim[1] * zoom
   xscrn = ncol*xsize - (ncol-1)*xshift
   yscrn = nrow*ysize + tshift
   
   ;; Scale and Display each slice
   
   viewbase = widget_base(TITLE='VOI Display', group_leader=tlb)
   win = widget_draw(viewbase, xsize=xscrn, ysize=yscrn)
   !p.background = 0
   widget_control, viewbase, /realize, xoffset=0, yoffset=0
   widget_control, win, get_value=windowIndex
   
   ;; Load color table + yellow + white 

   nc = 20
   loadct, 36, ncolors=nc, bottom=0, file="/usr/local/npg/idl/color_tables/videen.tbl"
   red    = rotate([255,200,0],4)
   white  = rotate([255,255,255],4)
   tvlct, red, nc
   tvlct, white, nc+1
   
   ;; Display 6 PET Planes

   FOR k=0, 5 DO BEGIN
      image = reform((*img.data)[*,*,ipln[k]])
      if (maxi EQ 100) then slcmax = 100 $
      else slcmax = max(image)
      temp = bytscl(rebin(image, xsize, ysize), MIN=0, MAX=slcmax, TOP=(nc-1))
      x0 = xstep*k
      y0 = ysize + tshift
      tv, temp, x0, y0
   ENDFOR 
   
   ;; Display 6 Corresponding Atlas Planes

   porg = img.org
   xctr = zoom*(img.dim[0]-porg[0])
   yctr = zoom*(img.dim[1]-porg[1])

   ytxt = 20
   FOR k=0, 5 DO BEGIN
      image = reform((*atlas.data)[*,*,apln[k]])
      temp = intarr(atlas.dim[0], atlas.dim[1])
      temp(*) = 0
      indx = where(image GE 100)
      if (indx[0] GT 0) then temp(indx) = nc
      x0 = fix(xctr - atlas.dim[0] + atlas.org[0]) + xstep*k
      y0 = fix(yctr - atlas.dim[1] + atlas.org[1]) + tshift
      tv, temp, x0, y0
      xtxt = k*xstep + 100
      xyouts, xtxt, ytxt, zloc[k], charsize=2, charthick=2,/device,color=nc+1
   ENDFOR 

   ;; Display VOIs 
   
   npts = 32
   radius = 5
   a = findgen(npts+1) * (2 * !pi/(npts-1))
   FOR k=0, npeaks-1 DO BEGIN
      id = peak[k].id
      x  = peak[k].x
      y  = peak[k].y
      z  = peak[k].z
      CASE z of
         21: dsp = 0
         24: dsp = 1
         26: dsp = 2
         31: dsp = 3
         33: dsp = 4
         37: dsp = 5
      ENDCASE
      xy = zoom * transpose([[x + radius * cos(a)], [y + radius * sin(a)]])
      xy[0,*] = xy[0,*] + xstep*dsp
      xy[1,*] = ysize - xy[1,*] + tshift
      plots, xy, /device, color=nc+1
      xy[1,*] = xy[1,*] + ysize 
      plots, xy, /device, color=0

      nam = strmid(id, 6, 3)
      IF (strpos(nam,'cs') EQ 0) THEN BEGIN
         ytxt = ysize+10
         xtxt = xstep*dsp + 120
      ENDIF ELSE IF (strpos(nam,'gsm') EQ 0) THEN BEGIN
         ytxt = ysize-10
         xtxt = xstep*dsp + 110
      ENDIF ELSE BEGIN
         ytxt = ysize 
         xtxt = xstep*dsp + 120
      ENDELSE
      xyouts, xtxt, ytxt, nam, charsize=2, charthick=2,/device,color=nc+1
   ENDFOR

   if (maxi EQ 100) then str = strmid(img.fname, 0, 9) + 'oef' $
   else str = strmid(img.fname, 0, 11)
   xyouts, 10, yscrn-30, str, charsize=2, charthick=2,/device,color=nc+1

END
@
