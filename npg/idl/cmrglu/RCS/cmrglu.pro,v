head	1.5;
access;
symbols;
locks; strict;
comment	@# @;


1.5
date	2008.04.03.21.16.05;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	2002.02.05.21.29.55;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	98.04.29.16.58.37;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	98.04.29.15.41.50;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	98.04.29.15.15.01;	author tom;	state Exp;
branches;
next	;


desc
@@


1.5
log
@add Hasselbalch Ks
@
text
@PRO CMRGLU_EVENT, ev
   COMMON IMAGE_UTILS
   
   catch, error_status
   IF (error_status NE 0) THEN BEGIN
      ok = widget_message(!err_string)
      RETURN
   END
   setuv = 1
   widget_control, ev.top, get_uvalue=uv
   widget_control, uv.wid.msg, set_value=''
   
   CASE ev.id OF
      
      uv.wid.fname: BEGIN
         image = uv.img
         fname =  uv.val.infile
         IF (strlen(fname) GT 0) THEN BEGIN
            l1 = rstrpos(fname,'/')
            l2 = rstrpos(fname,'.')
            str1 = string(replicate(32b,(l2-l1-2)))
            str1 = '*'+str1
            strput,fname,str1,l1+1
            fname = strcompress(fname, /remove_all)
         ENDIF ELSE fname = '*v'
         fname = dialog_pickfile(FILE=uv.val.infile, FILTER=fname, /READ)
         IF (strlen(fname) EQ 0) THEN BEGIN
            widget_control, uv.wid.msg, set_value='No file entered'
            setuv = 0
         ENDIF ELSE BEGIN
            msg = ''
            image.fname = fname
            image.ff = 1
            image.lf = 1
            image.fp = 1
            image.lp = 256
            IF (getframe(image, msg) NE 0) THEN BEGIN
               widget_control, uv.wid.msg, set_value=msg
               RETURN
            ENDIF
            uv.val.infile = fname
            widget_control, uv.wid.inimage, set_value=uv.val.infile
            len = strlen(fname)
            l1 = strpos(fname,'fdg')
            IF (l1 GT 0) THEN BEGIN
               l2 = len-l1-2
               str1 = strmid(fname, 0, l1)
               str2 = strmid(fname, l1+3, l2)
               uv.val.outfile = str1+'cmrg'+str2
            ENDIF ELSE BEGIN
               l1 = strpos(fname,'fd')
               IF (l1 GT 0) THEN BEGIN
                  l2 = len-l1-1
                  str1 = strmid(fname, 0, l1)
                  str2 = strmid(fname, l1+2, l2)
                  uv.val.outfile = str1+'cmrg'+str2
               ENDIF
            ENDELSE
            widget_control, uv.wid.outimage, set_value=uv.val.outfile
         ENDELSE
      ENDCASE

      uv.wid.crv: BEGIN
         fname =  uv.val.infile
         IF (strlen(fname) GT 0) THEN BEGIN
            l1 = rstrpos(fname,'/')
            l2 = strlen(fname)
            str1 = string(replicate(32b,(l2-l1+1)))
            str1 = '*dta'+str1
            strput,fname,str1,l1+1
            fname = strcompress(fname, /remove_all)
         ENDIF ELSE fname = '*dta'
         fname = dialog_pickfile(FILE=uv.val.dtafile, FILTER=fname, /READ)
         IF (strlen(fname) EQ 0) THEN BEGIN
            widget_control, uv.wid.msg, set_value='No file entered'
         ENDIF ELSE BEGIN
            msg = ''
            uv.val.dtafile = fname
            widget_control, uv.wid.blood, set_value=uv.val.dtafile
         ENDELSE
      ENDCASE

      uv.wid.inimage: BEGIN
         image = uv.img
         fname =  ev.value
         IF (strlen(fname) GT 0) THEN BEGIN
            msg = ''
            image.fname = fname
            image.ff = 1
            image.lf = 1
            image.fp = 1
            image.lp = 256
            IF (getframe(image, msg) NE 0) THEN widget_control, uv.wid.msg, set_value=msg $
            ELSE uv.val.infile = fname
            widget_control, uv.wid.inimage, set_value=uv.val.infile
         ENDIF 
      ENDCASE
      
      uv.wid.blood: BEGIN
         uv.val.dtafile = ev.value
         widget_control, uv.wid.blood, set_value=uv.val.dtafile
      ENDCASE

      uv.wid.outimage: BEGIN
         uv.val.outfile = ev.value
         widget_control, uv.wid.outimage, set_value=uv.val.outfile
      ENDCASE

      uv.wid.ik1: BEGIN
         uv.val.k1 = ev.value
         widget_control, uv.wid.ik1, set_value=uv.val.k1
      ENDCASE
      uv.wid.ik2: BEGIN
         uv.val.k2 = ev.value
         widget_control, uv.wid.ik2, set_value=uv.val.k2
      ENDCASE
      uv.wid.ik3: BEGIN
         uv.val.k3 = ev.value
         widget_control, uv.wid.ik3, set_value=uv.val.k3
      ENDCASE
      uv.wid.ik4: BEGIN
         uv.val.k4 = ev.value
         widget_control, uv.wid.ik4, set_value=uv.val.k4
      ENDCASE
      uv.wid.ilc: BEGIN
         uv.val.lc = ev.value
         widget_control, uv.wid.ilc, set_value=uv.val.lc
      ENDCASE
      uv.wid.ipie: BEGIN
         uv.val.pie = ev.value
         widget_control, uv.wid.ipie, set_value=uv.val.pie
      ENDCASE
      uv.wid.itime: BEGIN
         uv.val.time = ev.value
         widget_control, uv.wid.itime, set_value=uv.val.time
      ENDCASE
      uv.wid.igluc: BEGIN
         uv.val.gluc = ev.value
         widget_control, uv.wid.igluc, set_value=uv.val.gluc
      ENDCASE
      uv.wid.imodel: BEGIN
         uv.val.model = ev.value
         widget_control, uv.wid.imodel, set_value=uv.val.model
      ENDCASE
      
      uv.wid.refresh: BEGIN
         widget_control, uv.wid.inimage, set_value=uv.val.infile
         widget_control, uv.wid.blood, set_value=uv.val.dtafile
         widget_control, uv.wid.outimage, set_value=uv.val.outfile
         widget_control, uv.wid.ik1, set_value=uv.val.k1
         widget_control, uv.wid.ik2, set_value=uv.val.k2
         widget_control, uv.wid.ik3, set_value=uv.val.k3
         widget_control, uv.wid.ik4, set_value=uv.val.k4
         widget_control, uv.wid.ilc, set_value=uv.val.lc
         widget_control, uv.wid.ipie, set_value=uv.val.pie
         widget_control, uv.wid.itime, set_value=uv.val.time
         widget_control, uv.wid.igluc, set_value=uv.val.gluc
         widget_control, uv.wid.imodel, set_value=uv.val.model
         IF (strlen(uv.val.infile) LE 0) THEN msg = 'ERROR: no FDG image' $
         ELSE IF (strlen(uv.val.dtafile) LE 0) THEN msg = 'ERROR: no Blood Curve' $
         ELSE IF (strlen(uv.val.outfile) LE 0) THEN msg = 'ERROR: no Output Image' $
         ELSE IF (uv.val.lc LE 0) THEN msg = 'ERROR: LC = 0' $
         ELSE IF (uv.val.pie LE 0) THEN msg = 'ERROR: pie = 0' $
         ELSE IF (uv.val.time LE 0) THEN msg = 'ERROR: start time = 0' $
         ELSE IF (uv.val.gluc LE 0) THEN msg = 'ERROR: Glucose = 0' $
         ELSE IF (uv.val.k1 LE 0) THEN msg = 'Warning: K1 = 0' $
         ELSE IF (uv.val.k2 LE 0) THEN msg = 'Warning: k2 = 0' $
         ELSE IF (uv.val.k3 LE 0) THEN msg = 'Warning: k3 = 0' $
         ELSE IF (uv.val.k4 LE 0) THEN msg = 'Warning: k4 = 0' $
         ELSE msg = 'Check complete'
         widget_control, uv.wid.msg, set_value=msg
      ENDCASE
      
      uv.wid.loadstd: BEGIN
         uv.val.k1 = 0.091
         uv.val.k2 = 0.118
         uv.val.k3 = 0.071
         uv.val.k4 = 0.000
         uv.val.lc = 0.81
         widget_control, uv.wid.ik1, set_value=uv.val.k1
         widget_control, uv.wid.ik2, set_value=uv.val.k2
         widget_control, uv.wid.ik3, set_value=uv.val.k3
         widget_control, uv.wid.ik4, set_value=uv.val.k4
         widget_control, uv.wid.ilc, set_value=uv.val.lc
      ENDCASE
      
      uv.wid.proc: BEGIN
         str = uv.val.infile+' '+uv.val.dtafile+' '+string(uv.val.k1)+' '+string(uv.val.k2)+' '$
            +string(uv.val.k3)+' '+string(uv.val.k4)+' '+string(uv.val.lc)+' '+string(uv.val.gluc)+' '$
            +string(uv.val.pie)+' '+string(uv.val.time)+string(uv.val.model)+' '+uv.val.outfile
         cmd = '/usr/local/npg/bin/cmrglucose '+str
         spawn,cmd,unit=lun
         msg = ''
         readf,lun,msg
         WHILE (strpos(msg,'Saved') LT 0 AND strpos(msg,'ERROR') LT 0) DO BEGIN
            print,msg
            widget_control, uv.wid.msg, set_value=msg
            readf,lun,msg
         ENDWHILE
         print,msg
         widget_control, uv.wid.msg, set_value=msg
      ENDCASE
      
      uv.wid.exit: BEGIN
         widget_control, ev.top, /destroy
         return
      ENDCASE
      
   ENDCASE

   IF (setuv) THEN widget_control, ev.top, set_uvalue=uv
END

PRO CMRGLU
@@IMAGE_UTILS.h

   on_error, 2

   infile = ''
   outfile = ''
   dtafile = ''
   k1 = 0.
   k2 = 0.
   k3 = 0.
   k4 = 0.
   lc = 0.
   pie = 0.
   time = 0
   gluc = 0.
   model = 0

   base = widget_base (TITLE='CMRglu', /COLUMN)
   
   base0 = widget_base (base, /ROW)
   fname = widget_button(base0, value='Input File')
   crv = widget_button(base0, value='DTA File')
   refresh =  widget_button(base0, value='Check Values')
   loadstd =  widget_button(base0, value='Load Hasselbalch Ks')
   proc = widget_button(base0, value='Compute CMRGlu')
   exit = widget_button(base0, value='Exit')

   inimage = cw_field(base, title='FDG Image   ', value='', xsize=80, /STRING, /RETURN_EVENTS)
   blood = cw_field(base, title='Blood Curve  ', value='', xsize=80, /STRING, /RETURN_EVENTS)
   outimage = cw_field(base, title='Output Image', value='', xsize=80, /STRING, /RETURN_EVENTS)


   base2 = widget_base (base, col=3)
   base2a = widget_base (base2, /COL)
   base2b = widget_base (base2, /COL)
   base2c = widget_base (base2,/COL)
   ik1 = cw_field(base2a, title='K1 (ml/g/min)', /FLOATING, /RETURN_EVENTS, value=k1, xsize=10, ysize=1)
   ik2 = cw_field(base2a, title='k2 (1/min)     ', /FLOATING, /RETURN_EVENTS, value=k2, xsize=10, ysize=1)
   ik3 = cw_field(base2a, title='k3 (1/min)     ', /FLOATING, /RETURN_EVENTS, value=k3, xsize=10, ysize=1)
   ik4 = cw_field(base2a, title='k4 (1/min)     ', /FLOATING, /RETURN_EVENTS, value=k4, xsize=10, ysize=1)
   ilc = cw_field(base2b, title='LC             ', /FLOATING, /RETURN_EVENTS, value=lc, xsize=10, ysize=1)
   ipie = cw_field(base2b, title='Pie Factor', /FLOATING, /RETURN_EVENTS, value=pie, xsize=10, ysize=1)
   itime = cw_field(base2b, title='Start (sec)', /FLOATING, /RETURN_EVENTS, value=time, xsize=10, ysize=1)
   
   igluc = cw_field(base2c, title='Glucose (uMoles/ml)', /FLOATING, /RETURN_EVENTS, value=gluc, xsize=10, ysize=1)
   imodel = cw_bgroup(base2c, ['Huang et al (1980)', 'Brooks (1982)'], /EXCLUSIVE, /COL)

   msg = widget_text(base)
   
   val = {VALUES,	$
          infile  : infile, $
          outfile : outfile, $
          dtafile : dtafile, $
          k1	: k1,	$
          k2	: k2,	$
          k3	: k3,	$
          k4	: k4,	$
          lc	: lc,	$ 
          gluc	: gluc,	$
          pie	: pie,	$
          time	: time,	$ 
          model : model $
         }

   wid = {WIDGETS,	$
          base	: base,	$       ; top level base
          fname	: fname,$ 
          crv	: crv,	$ 
          refresh: refresh,	$
          loadstd: loadstd,	$
          proc	: proc,	$ 
          exit	: exit, $
          inimage : inimage,	$
          blood	: blood,	$
          outimage : outimage,	$ 
          ik1	: ik1,	$
          ik2	: ik2,	$
          ik3	: ik3,	$
          ik4	: ik4,	$
          ilc	: ilc,	$ 
          igluc	: igluc,$
          ipie	: ipie,	$
          itime	: itime,$ 
          imodel: imodel,$
          msg	: msg	$
         }

   img = {VIMAGE}
   uv = {val:val, wid:wid, img:img}
   widget_control, base, set_uvalue=uv
   widget_control, imodel, set_value=uv.val.model
   widget_control, base, /realize
   xmanager, "CMRGlu", base, EVENT_HANDLER='CMRGLU_EVENT'
END 
@


1.4
log
@rename k1 to K1
@
text
@d174 13
d238 1
d284 1
@


1.3
log
@*** empty log message ***
@
text
@d166 1
a166 1
         ELSE IF (uv.val.k1 LE 0) THEN msg = 'Warning: k1 = 0' $
d237 1
a237 1
   ik1 = cw_field(base2a, title='k1 (ml/g/min)', /FLOATING, /RETURN_EVENTS, value=k1, xsize=10, ysize=1)
@


1.2
log
@remove defaults
@
text
@d146 28
d224 1
d269 1
@


1.1
log
@Initial revision
@
text
@d181 8
a188 8
   k1 = 0.09127
   k2 = 0.24372
   k3 = 0.18051
   k4 = 0.0052394
   lc = 0.82
   pie = 4.6644
   time = 2880
   gluc = 3.64
@
