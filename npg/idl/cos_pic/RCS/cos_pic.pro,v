head	1.11;
access;
symbols;
locks; strict;
comment	@# @;


1.11
date	2008.12.03.21.33.49;	author tom;	state Exp;
branches;
next	1.10;

1.10
date	2005.03.29.22.56.50;	author tom;	state Exp;
branches;
next	1.9;

1.9
date	2003.04.02.22.45.02;	author tom;	state Exp;
branches;
next	1.8;

1.8
date	2003.03.10.15.12.49;	author tom;	state Exp;
branches;
next	1.7;

1.7
date	2003.01.29.18.41.54;	author tom;	state Exp;
branches;
next	1.6;

1.6
date	2002.11.20.20.37.55;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	2002.10.31.16.21.41;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	2002.10.18.16.19.59;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	2002.10.18.15.51.50;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	2002.10.18.15.50.05;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	2002.09.19.15.22.27;	author tom;	state Exp;
branches;
next	;


desc
@@


1.11
log
@optional scaling on oef image
@
text
@PRO COS_PIC
@@IMAGE_UTILS.h

   on_error, 2
   study = getenv('STUDY')
   scan = getenv('SCAN')
   oefmax = getenv('OEFMAX')
   studyname = [study+'-ho'+scan+'_g3.t88', study+'-oo'+scan+'_g3.t88', study+'-oo'+scan+'ho'+scan+'_g3.t88']

   device, decompose=0, retain=2
   device, get_visual_name=name, get_visual_depth=depth

;; Read first image to get dimensions

   msg = ''
   img = {VIMAGE}
   img.ff = 1
   img.lf = 1
   img.fp = 1
   img.lp = 38
   img.proc = 0
   img.fname = studyname[0]
   IF (getframe(img, msg) NE 0) THEN BEGIN
      print, msg
      RETURN
   ENDIF

;; Read VOI

   vname = study + '-mca.voi'
   openr,lun, vname, ERROR=err, /GET_LUN
   IF (err NE 0) THEN BEGIN
      print, 'Cannot open '+vname
      RETURN
   ENDIF
   peaks = {PEAK_STR, $
            id: '', $
            x:  0, $
            y:  0, $
            z:  0 $
           }

   str = ''
   npeaks =  0L
   id = ''
   x = 0.0
   y = 0.0
   z = 0.0
   listing = ['']
   readf, lun, str
   readf, lun, str
   readf, lun, npeaks
   FOR n=0,npeaks-1 DO BEGIN
      readf, lun, str
      IF (min('' EQ listing) EQ 1) THEN BEGIN
         listing = [str]
         peak = [peaks]
      ENDIF ELSE BEGIN
         listing = [listing,str]
         peak = [peak, peaks]
      ENDELSE
      k = strpos(str,' ')
      id = strmid(str,0,k)
      str = strmid(str,k)
      reads, str, x, y, z
      peak[n].id = id
      peak[n].x = x
      peak[n].y = y
      peak[n].z = z
   ENDFOR
   close, lun
   free_lun, lun

   FOR n=0,npeaks-1 DO BEGIN
      id = peak[n].id
      x = peak[n].x
      y = peak[n].y
      z = peak[n].z
   ENDFOR

;; Display Initialization
   
   ipln = [20,23,25,31,32,36]
   zloc = ["Z=34","Z=28","Z=24","Z=12","Z=10","Z=2"]
   zoom = 2
   nrow = 3
   ncol = 6
   nc = 20
   fname_offset = 60
   voi_name_offset = 30
   z_loc_offset = voi_name_offset + 50
   img_offset = voi_name_offset + fname_offset
   xshift = 52
   xsize = img.dim[0] * zoom
   xstep = xsize-xshift
   ysize = img.dim[1] * zoom
   ystep = ysize
   xscrn = ncol*xsize - (ncol-1)*xshift
   yscrn = nrow*ysize + img_offset 
   
   viewbase = widget_base(TITLE='VOI Display', group_leader=tlb)
   win = widget_draw(viewbase, xsize=xscrn, ysize=yscrn)
   !p.background = 0
   widget_control, viewbase, /realize, xoffset=0, yoffset=0
   widget_control, win, get_value=windowIndex
   
;; Load color table + white 

   wset, windowIndex
   loadct, 36, ncolors=nc, bottom=0, file="/usr/local/npg/idl/color_tables/videen.tbl"
   red    = rotate([255,200,0],4)
   white  = rotate([255,255,255],4)
   tvlct, red, nc
   tvlct, white, nc+1
   
;; Display 6 PET Planes for 3 images

   FOR n=0, 2 DO BEGIN
      img.fname = studyname[n]
      IF (getframe(img, msg) NE 0) THEN BEGIN
         print, msg
         RETURN
      ENDIF
      FOR k=0, 5 DO BEGIN
         image = reform((*img.data)[*,*,ipln[k]])
         IF (n EQ 2) THEN maxi=oefmax ELSE maxi = max(image)
         temp = bytscl(rebin(image, xsize, ysize), MIN=0, MAX=maxi, TOP=(nc-1))
         x0 = xstep*k
         y0 = (nrow-n-1)*ystep + img_offset 
         tv, temp, x0, y0
      ENDFOR 
      IF (n EQ 2) THEN BEGIN
         IF (oefmax EQ 100) THEN str = img.fname + '    Max = 1.00' $
         ELSE str = img.fname + '    Max = ' + strtrim(string(0.01*oefmax),2)
      ENDIF ELSE str = img.fname + '    Max = ' + strtrim(string(max(*img.data)),2)
      ytxt = (nrow-n)*ystep + fname_offset
      xyouts, 10, ytxt, str, charsize=2, charthick=2,/device,color=nc+1
   ENDFOR 
   
   ytxt = z_loc_offset
   FOR k=0, 5 DO BEGIN
      xtxt = k*xstep + 100
      xyouts, xtxt, ytxt, zloc[k], charsize=2, charthick=2,/device,color=nc+1
   ENDFOR 

;; Display VOIs 
   
   npts = 32
   radius = 5
   a = findgen(npts+1) * (2 * !pi/(npts-1))
   FOR k=0, npeaks-1 DO BEGIN
      id = peak[k].id
      x  = peak[k].x
      y  = peak[k].y
      z  = peak[k].z
      CASE z of
         21: dsp = 0
         24: dsp = 1
         26: dsp = 2
         31: dsp = 3
         33: dsp = 4
         37: dsp = 5
      ENDCASE
      xy = zoom * transpose([[x + radius * cos(a)], [y + radius * sin(a)]])
      xy[0,*] = xy[0,*] + xstep*dsp
      xy[1,*] = ysize - xy[1,*] + img_offset 
      plots, xy, /device, color=nc+1
      xy[1,*] = xy[1,*] + ysize 
      plots, xy, /device, color=0
      xy[1,*] = xy[1,*] + ysize 
      plots, xy, /device, color=0

      nam = strmid(id, 6, 3)
      IF (strpos(nam,'cs') EQ 0) THEN BEGIN
         ytxt = voi_name_offset+10
         xtxt = xstep*dsp + 120
      ENDIF ELSE IF (strpos(nam,'gsm') EQ 0) THEN BEGIN
         ytxt = voi_name_offset-10
         xtxt = xstep*dsp + 110
      ENDIF ELSE BEGIN
         ytxt = voi_name_offset 
         xtxt = xstep*dsp + 120
      ENDELSE
      xyouts, xtxt, ytxt, nam, charsize=2, charthick=2,/device,color=nc+1
   ENDFOR

PROMPT:
   ch = ''
   read,prompt='S = Save Image; Return= Exit ',ch
   IF (ch EQ 'S' OR ch EQ 's') THEN BEGIN
      arr = tvrd()
      device, get_visual_depth=depth
      IF (depth EQ 24) THEN BEGIN
         xarr = (size(arr))[1]
         yarr = (size(arr))[2]
         rgb = lonarr(3,xarr,yarr)
         rgb[0,*,*] = tvrd(0,0,xarr,yarr,1)
         rgb[1,*,*] = tvrd(0,0,xarr,yarr,2)
         rgb[2,*,*] = tvrd(0,0,xarr,yarr,3)
         fname = study + '.tif'
         write_tiff,fname,rgb,compression=1
         print, 'Window saved in TIF format:  '+fname
      ENDIF ELSE BEGIN
         tvlct,r,g,b,/get
         fname = study + '.gif'
         write_gif, fname, rotate(tvrd(),7), r,g,b
         print, 'Window saved in GIF format:  '+fname
      ENDELSE
      goto, PROMPT
   ENDIF

END 
@


1.10
log
@change ipln
@
text
@d7 1
d126 1
a126 1
         IF (n EQ 2) THEN maxi=100 ELSE maxi = max(image)
d132 4
a135 2
      IF (n EQ 2) THEN str = img.fname + '    Max = 1.00' $
      ELSE str = img.fname + '    Max = ' + strtrim(string(max(*img.data)),2)
@


1.9
log
@*** empty log message ***
@
text
@d82 1
a82 1
   ipln = [21,24,26,31,33,37]
@


1.8
log
@make save to GIF optional
@
text
@d9 3
d87 1
d106 1
a106 1
;; Load color table + yellow + white 
d108 1
a108 1
   nc = 20
a110 1
   yellow = rotate([255,255,0],4)
d186 1
a186 1
   read,prompt='S = Save as GIF; Return= Exit ',ch
d188 18
a205 4
      fname = study + '.gif'
      tvlct,r,g,b,/get
      write_gif, fname, rotate(tvrd(),7), r,g,b
      print, 'Window saved in GIF format:  '+fname
@


1.7
log
@fix to display ho1, oo1
@
text
@d181 1
d183 8
a190 5
   read,prompt='Save as GIF and Exit ',ch
   fname = study + '.gif'
   tvlct,r,g,b,/get
   write_gif, fname, rotate(tvrd(),7), r,g,b
   print, 'Window saved in GIF format:  '+fname
@


1.6
log
@*** empty log message ***
@
text
@d6 2
a7 1
   studyname = [study+'-ho1_g3.t88', study+'-oo1_g3.t88', study+'-oo1ho1_g3.t88']
@


1.5
log
@write GIF instead of TIF
@
text
@a183 1
   fname = study+'-report.gif'
@


1.4
log
@*** empty log message ***
@
text
@d181 2
a182 2
   read,prompt='Save as TIF and Exit ',ch
   fname = study + '.tif'
d184 3
a186 2
   write_tiff, fname, tvrd(), compression=1, red=r, green=g, blue=b
   print, 'Window saved in TIF format:  '+fname
@


1.3
log
@*** empty log message ***
@
text
@a118 1
      IF (n EQ 2) THEN maxi=100 ELSE maxi = max(*img.data)
d121 1
d128 1
a128 1
      ELSE str = img.fname + '    Max = ' + strtrim(string(maxi),2)
@


1.2
log
@switch locations of cs and gsm
@
text
@d169 1
a169 1
         xtxt = xstep*dsp + 110
d172 1
a172 1
         xtxt = xstep*dsp + 120
@


1.1
log
@Initial revision
@
text
@d167 1
a167 1
      IF (strpos(nam,'gsm') EQ 0) THEN BEGIN
d170 1
a170 1
      ENDIF ELSE IF (strpos(nam,'cs') EQ 0) THEN BEGIN
@
