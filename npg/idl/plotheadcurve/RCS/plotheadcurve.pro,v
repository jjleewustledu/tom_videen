head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2002.09.06.16.00.33;	author tom;	state Exp;
branches;
next	;


desc
@rename
@


1.1
log
@Initial revision
@
text
@; $Id: plothcrv.pro,v 1.10 2000/05/22 15:00:38 tom Exp $
;
;+
; NAME:
;   PLOTHCRV
;
; PURPOSE:
;   Plot a headcurve file.
;
; CATEGORY:
;   PET processing.
;
; CALLING SEQUENCE:
;   plothcrv
;
; MODIFICATION HISTORY:
;   Written by: Tom Videen, May, 1996
;	User may select an alternative frame to plot (default is 2).
;-

pro plothcrv

;	Initializations

	loadct,5
	ncurves=0L
	str=''
	str1=''
	str2=''
	root=''
	scanid = ''
	framenum = 2
start:
	read, prompt='Headcurve file root: ',root
	if (root eq '') then exit
	command = 'ls ' + root + '*.r'
	spawn, command, result
	nfiles = (size(result))(1)
	list = strarr(nfiles)
	reads, result, list
	
	read, prompt='Acquisition frame number: ',framenum
	if (framenum LE 0) then exit
	
	for i=0,nfiles-1 do begin
		openr,lu,list(i),/get_lun
		command = 'wc ' + list(i)
		spawn, command, result
		reads, result, num
		if num eq 0 then begin
    		print, list(i), ' is empty'
		endif

		readf,lu,str
		reads,str,str1,format='(A4)'
		reads,str,str2,format='(46X,A7)'
		case str1 of
    		'time': begin
        		num = num-1
				if (str2 eq 'singles') then begin
        			crv = lonarr(8,num)
				endif else begin					; Ver 7.0 beta
					crv = lonarr(7,num)
				endelse
        		curve = fltarr(4,num)
        		readf,lu,crv
        		curve = [0.001*crv(0,*), crv(3,*), crv(4,*), crv(6,*)]
    		end
    		else: begin
        		print,list(i),' is not a headcurve'
				exit
    		end
		endcase
		close,lu
		free_lun,lu

		indx = where (curve(1,*) gt 0)
		t2 = max(indx)
		t1 = min(indx)
		time = curve(0,*)
		time = [[time], [max(time) + 1.0]]
		trues = curve(1,*) - curve(2,*)
		frame = curve(3,*)
		indx = where(frame eq framenum)
		timef = time(indx)
		t2 = max(timef)
		start = min(timef)
		endf = max(timef)
		frametime = [start, start, endf, endf]
		framemark = [0.,max(trues),max(trues),0.]
		plot, time, trues, /nodata, charsize=1.5, xrange=[t1,t2], title=list(i), $
			xtitle='sec', ytitle='trues/sec'
		oplot, time, trues, color=180, thick=2
		oplot, frametime, framemark, color=100, thick=2
		xyouts, start + 20, 0.8 * max(trues), "Trues", color=180, size=2.0
		xyouts, start + 10, 0.1 * max(trues), "Acquisition", color=100, size=2.0
		result = moment(trues(1:5))
		bkgnd = result(0);
		indx = min(where(frame eq framenum))
		thresh = trues(indx)/bkgnd
		increment = trues(indx)- bkgnd
		xyouts, start - 30, 0.20 * max(trues), trues(indx), color=180, size=2.0
		xyouts, start - 30, 0.15 * max(trues), bkgnd, color=180, size=2.0
		print,"Background =", bkgnd, "  Started at =", trues(indx), " trues/sec"
		print,"Start threshold (x Bkgnd, + Trues/sec): ",thresh, increment
		read, prompt='  next...', str
	endfor
	goto, start
end
@
