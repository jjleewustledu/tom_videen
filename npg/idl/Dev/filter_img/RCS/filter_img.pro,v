head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2002.11.25.20.22.59;	author tom;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@; $Id: filter_img.pro,v 1.1 1996/11/27 15:58:13 tom Exp $
;+
; NAME:
;	FILTER_IMG
;
; PURPOSE:
;   Filter an Analyze image with 2-D gaussian.
;
; CATEGORY:
;	Image processing
;
; CALLING SEQUENCE:
;   FILTER_IMG, Infile, Halfwidth, Axialwidth
;
; INPUTS:
;   Infile:		input filename
;   Halfwidth:	halfwidth of gaussian (in pixels)
;   Axialwidth:	axial halfwidth of gaussian (in slice thickness)
;	Outfile:	output filename
;
; OUTPUTS:
;	Outfile:	filter image file
;
; PROCEDURE:
;	Read an Analyze image file, apply 2-D gaussian of specified halfwidth
;	to each slice, and write to an output Analyze file.
;
; MODIFICATION HISTORY:
;   Tom Videen, April 1995.
;-

pro filter_img, infile, halfwidth, axialwidth, outfile

	on_error,2
	if n_params() ne 4 then message,'Usage: ' + $
		'filter_img, infile, halfwidth, axialwidth, outfile'

; Determine image array size & type

	asize = intarr(3)
	pixsize = fltarr(3)
	analyze_dim, infile, asize, dsize, pixsize

	if (dsize eq 8) then begin
		type = 1
		data = bytarr(asize(0), asize(1), asize(2))
	endif else begin
		type = 2
		data = intarr(asize(0), asize(1), asize(2))
	endelse
	get_lun,lu

; Read array 

	openr,lu,infile
	readu,lu,data,TRANSFER_COUNT=count
	close,lu

; Convolve xy

	for i=0, asize(2)-1 do begin
		print,"Slice = ",i+1
		newdata = gauss2d_convol(float(data(*,*,i)), halfwidth)
		if (type eq 1) then begin
			data(*,*,i) = byte(newdata)
		endif else begin
			data(*,*,i) = fix(newdata)
		endelse
	endfor

; Convolve z

	slice_convol, data, axialwidth
	if (type eq 1) then begin
		data = byte(data)
	endif else begin
		data = fix(data)
	endelse

; Write to outfile
 
	openw, lu, outfile
	writeu, lu, data
	close, lu
	free_lun,lu

end
@
