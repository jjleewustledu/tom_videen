head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2002.11.21.20.32.38;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	2002.11.20.14.19.56;	author tom;	state Exp;
branches;
next	;


desc
@@


1.2
log
@*** empty log message ***
@
text
@;+
; NAME:
;	DOWNSAMPLE.PRO
;
; PURPOSE:
;	Resample 3D array
;
; INPUTS:
;	OLD:		3D array (dimensions NX,NY,NZ)
;	MX,MY,MZ:	Dimensions of output array
;
; RETURNS:
;	NEW:		Resampled 3D array
;
; REVISION HISTORY:
;	Nov 2002 Tom Videen
;-

FUNCTION DOWNSAMPLE, OLD, MX, MY, MZ
   COMMON WARP
   on_error, 2

   t0 = systime(1)
   nx = (size(old))[1]
   ny = (size(old))[2]
   nz = (size(old))[3]
   IF (mx EQ nx AND my EQ ny AND mz EQ nz) THEN return,old

   sx = nx/mx
   sy = ny/my
   sz = nz/mz
   new = fltarr(mx,my,mz)
   xc = sx*findgen(mx)
   yc = sy*findgen(my)
   zc = sz*findgen(mz)

   FOR k=0,sz-1 DO BEGIN
      FOR j=0,sy-1 DO BEGIN
         FOR i=0,sx-1 DO BEGIN
            new = new + interpolate(old, xc+i, yc+j, zc+k, /grid)
         ENDFOR
      ENDFOR
   ENDFOR
   new = new /(sx*sy*sz)
   if debug then print,format='("downsample",F6.1)',systime(1) - t0
   return, new
END
@


1.1
log
@Initial revision
@
text
@d9 2
a10 2
;	OLD:	3D data array
;	MX,MY:	size of new array
d12 2
a13 2
; OUTPUT:
;	NEW:	resampled data array
d20 1
a20 1
   COMMON TRANSFORMER
@
