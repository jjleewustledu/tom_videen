head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2002.11.21.20.32.38;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	2002.11.20.14.19.56;	author tom;	state Exp;
branches;
next	;


desc
@@


1.2
log
@*** empty log message ***
@
text
@;+
; NAME:
;	SHIFT3D
;
; PURPOSE
;	Rigid-body 3-D shift of array Study 
;
; INPUTS:
;   REF:	Reference or standard	(3-D data array)
;   STD:	Study or reslice		(3-D data array)
;
; OUTPUT:
;   NEW:	Deformed Study		(3-D data array)
;   DX,DY,DZ: Shift 			(3-D floating-point arrays)
;
; REVISION HISTORY:
;	Nov 2002 Tom Videen
;-

PRO SHIFT3D, REF, STD, NEW, DX, DY, DZ
   COMMON WARP

   on_error, 2
   nx = (size(ref))[1]
   ny = (size(ref))[2]
   nz = (size(ref))[3]
   xc = transpose(findgen(nx))
   yc = transpose(findgen(ny))
   zc = transpose(findgen(nz))

   sumstd = total(std)
   sumref = total(ref)
   dx = (total(total(std,2),2)##xc)/sumstd - (total(total(ref,2),2)##xc)/sumref
   dy = (total(total(std,1),2)##yc)/sumstd - (total(total(ref,1),2)##yc)/sumref
   dz = (total(total(std,1),1)##zc)/sumstd - (total(total(ref,1),1)##zc)/sumref
   if debug then print, format='("Shift (X,Y,Z) =",f7.2,f7.2,f7.2)',dx,dy,dz

   xrow = findgen(nx) + replicate(dx,nx)
   yrow = findgen(ny) + replicate(dy,ny)
   zrow = findgen(nz) + replicate(dz,nz)
   new = interpolate(std, xrow, yrow, zrow, /grid)
END
@


1.1
log
@Initial revision
@
text
@d9 2
a10 4
;   REF:	Reference or standard (3-D data array)
;   STUDY:	Study or reslice (3-D data array)
;   NEW:	Deformed Study (3-D data array)
;   NDX,NDY: Total shift (all iterations) (3-D floating-point arrays)
d13 2
a14 1
;   NEW:	Deformed Study (3-D data array)
d20 2
a21 2
PRO SHIFT3D, REF, STUDY, NEW, DX, DY, DZ
   COMMON TRANSFORMER
d31 1
a31 1
   sumnew = total(new)
d33 3
a35 3
   dx = (total(total(new,2),2)##xc)/sumnew - (total(total(ref,2),2)##xc)/sumref
   dy = (total(total(new,1),2)##yc)/sumnew - (total(total(ref,1),2)##yc)/sumref
   dz = (total(total(new,1),1)##zc)/sumnew - (total(total(ref,1),1)##zc)/sumref
d41 1
a41 1
   new = interpolate(study, xrow, yrow, zrow, /grid)
@
