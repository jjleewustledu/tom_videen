head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2009.01.16.22.36.11;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	2009.01.16.19.47.49;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	2009.01.15.22.23.53;	author tom;	state Exp;
branches;
next	;


desc
@@


1.3
log
@add 5 slices to posterior end
@
text
@; $Id: maicrop_tif2if.pro,v 1.2 2009/01/16 19:47:49 tom Exp tom $
;+
; NAME:
;   MAICROP_TIF2IF
;
; PURPOSE:
;   Convert Cropped MAI atlas TIF files to Interfile 
;
; CATEGORY:
;   Image processing
;
; CALLING SEQUENCE:
;   MAICROP_TIF2IF 
;
; PROCEDURE:
;   Read coronal TIF files (B&W) and combine them to
;   create a -slice coronal image in Interfile format.
;
; MODIFICATION HISTORY:
;   Tom Videen, Jan 2009
;-

PRO MAICROP_TIF2IF
@@IMAGE_UTILS.h

   on_error,2

   xdim = 240
   ydim = 310
   zdim = 43
   image =  intarr(xdim,ydim,zdim)
   dim = lonarr(4)
   dim[0] = xdim
   dim[1] = ydim
   dim[2] = zdim
   dim[3] = 1
   pdim = fltarr(4)
   pdim[0] = 0.14545
   pdim[1] = 0.14545
   pdim[2] = 1.336
   pdim[3] = 0

   ;; Gray scale TIF file

   n = 42
   FOR i=10,47 DO BEGIN
       file1 = strcompress('mai'+string(i)+'.tif', /remove_all)
       print, 'Reading '+file1
       img = read_tiff(file1)
       print,size(img)
       tmp = reform(img,xdim,ydim)
       image[*,*,n] = tmp
       n = n-1
	   ;; duplicate 5 planes for uniform y-spacing
       IF ((i LE 15) AND (i GE 11)) THEN BEGIN
          image[*,*,n] = tmp
          n = n-1
       ENDIF
   ENDFOR

   hname = strcompress('mai_atlas.ifh', /remove_all)
   fname = strcompress('mai_atlas.img', /remove_all)

   openw,lu1, hname, ERROR=err, /GET_LUN
   IF (err NE 0) THEN BEGIN
      msg = 'Cannot open '+hname
      RETURN
   ENDIF
   
   openw,lu2, fname, ERROR=err, APPEND=append, /GET_LUN
   IF (err NE 0) THEN BEGIN
      msg = 'Cannot open '+fname
      close, lu1
      free_lun, lu1
      free_lun, lu2
      RETURN
   ENDIF
   writeu,lu2,image
   close,lu2

   name = fname
   k = rstrpos(name,'/')
   IF (k GT 0) THEN name = strmid(name,k+1)
   maxval = MAX(image, MIN=minval)
   
   ;; File Identification

   printf, lu1, 'INTERFILE :='
   printf, lu1, 'version of keys    := 3.3'
   printf, lu1, 'date of keys       := 1992:01:01'
   printf, lu1, 'conversion program := maicrop_tif2if.pro'
   printf, lu1, 'program date       := 2009:01:16'
   printf, lu1, 'conversion date    := ' +systime(0)
   printf, lu1, ';'

   ;; General Data

   printf, lu1, 'GENERAL DATA :='
   printf, lu1, 'original institution := Washington University'
   printf, lu1, 'data starting block  := 0'
   printf, lu1, 'name of data file  := '+strtrim(name,2)
   printf, lu1, ';'

   ;; General Image Data

   printf, lu1, 'GENERAL IMAGE DATA :='
   printf, lu1, 'type of data := tomographic'
   printf, lu1, 'total number of images := '+strtrim(string(dim[2]),2)
   printf, lu1, 'imagedata byte order   := bigendian'
   printf, lu1, ';'

   ;; Study Data

   printf, lu1, 'number of dimensions   := 3'
   printf, lu1, 'number of slices := '+strtrim(string(dim[2]),2)
   printf, lu1, 'matrix size [1]    := '+strtrim(string(dim[0]),2)
   printf, lu1, 'matrix size [2]    := '+strtrim(string(dim[1]),2)
   printf, lu1, 'matrix size [3]    := '+strtrim(string(dim[2]),2)
   printf, lu1, 'matrix size [4]    := '+strtrim(string(dim[3]),2)
   printf, lu1, 'number format      := signed integer'
   printf, lu1, 'number of bytes per pixel  := 2'
   printf, lu1, 'scaling factor (mm/pixel) [1]  := '+strtrim(string(pdim[0]),2)
   printf, lu1, 'scaling factor (mm/pixel) [2]  := '+strtrim(string(pdim[1]),2)
   printf, lu1, 'scaling factor (mm/pixel) [3]  := '+strtrim(string(pdim[2]),2)
   printf, lu1, 'matrix initial element [1] := left'
   printf, lu1, 'matrix initial element [2] := anterior'
   printf, lu1, 'matrix initial element [3] := inferior'
   printf, lu1, 'maximum pixel count := '+strtrim(string(maxval),2)
   printf, lu1, 'minimum pixel count := '+strtrim(string(minval),2)
   printf, lu1, 'END OF INTERFILE :='
   close,lu1
   print, 'Created '+fname

   free_lun,lu1
   free_lun,lu2
   RETURN
END
@


1.2
log
@duplicate sections 11-15 to create uniform sampling at anterior end
@
text
@d1 1
a1 1
; $Id: maicrop_tif2if.pro,v 1.1 2009/01/15 22:23:53 tom Exp tom $
d30 1
a30 1
   zdim = 38
d45 2
a46 2
   n = 37
   FOR i=10,42 DO BEGIN
d92 1
a92 1
   printf, lu1, 'program date       := 2009:01:14'
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
; $Id: maicrop_tif2if.pro,v 1.2 2005/10/20 21:22:20 tom Exp $
d30 1
a30 1
   zdim = 33
d45 1
d52 8
a59 2
       image[*,*,42-i] = tmp
    ENDFOR
@
