head	1.7;
access;
symbols;
locks
	tom:1.7; strict;
comment	@# @;


1.7
date	2009.01.21.21.07.23;	author tom;	state Exp;
branches;
next	1.6;

1.6
date	2000.08.11.19.40.13;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	2000.07.07.15.35.45;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	99.09.20.17.06.48;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	98.01.30.19.15.24;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	97.12.18.20.55.25;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	97.12.12.23.06.21;	author tom;	state Exp;
branches;
next	;


desc
@@


1.7
log
@permit larger image
@
text
@; $Id: gauss3d.pro,v 1.6 2000/08/11 19:40:13 tom Exp tom $
;+
; NAME:
;	GAUSS3D
;
; PURPOSE:
;	Filter an image with 3-D Gaussian.
;
; CATEGORY:
;	Image processing
;
; CALLING SEQUENCE:
;	GAUSS3D
;
; INPUTS: passed from Environment variables
;	Infile:	 input filename
;	Outfile: output filename
;	F0:	 cutoff frequency of Gaussian (cycles/cm)
;
; OUTPUTS:
;	Outfile: filtered image file
;
; PROCEDURE:
;	Read an image file, apply 3-D gaussian of specified f0
;	and write to output file in Interfile format
;
; MODIFICATION HISTORY:
;   Tom Videen, Dec, 1998
;   Tom Videen, Jul, 2000 - read and write Interfile type float 
;-

PRO GAUSS3D
@@IMAGE_UTILS.h

   on_error,2
   
   infile = ''
   outfile = ''
   f0 = 0.0
   infile = getenv('INFILE')
   outfile = getenv('OUTFILE')
   f0 = getenv('HALF_FREQUENCY')
   f0 = f0*0.1	; convert to cycles/mm
   
   extra = strarr(3)
   extra[0] = 'conversion program := gauss3d'
   extra[1] = 'program version    := 1.5'
   extra[2] = 'program date       := 2000:07:07'
   
   img = {VIMAGE}
   img.fname = infile
   img.ff = 1
   img.lf = 1
   img.fp = 1
   img.lp = 300
   fmode = 0
   msg = ''
   
   print,'Reading '+img.fname+'...'
   IF (GETFRAME(img, msg) NE 0) THEN BEGIN
      message, msg
      exit
   ENDIF 
   
   nx = img.dim[0]
   ny = img.dim[1]
   nz0 = img.dim[2]
   IF (nz0 LE 49) THEN nz = 64 $
   ELSE IF (nz0 LE 100) THEN nz = 128 $
   ELSE IF (nz0 LE 256) THEN nz = 256 $
   ELSE IF (nz0 LE 512) THEN nz = 512 $
   ELSE BEGIN
      print,'This is one heck of a big image and you might want to resize it before filtering...'
      exit
   ENDELSE 
   dx = 1.0/(nx * img.pdim[0])
   dy = 1.0/(ny * img.pdim[1])
   dz = 1.0/(nz * img.pdim[2])
   
   z0 = nz-nz0
   z1 = z0+nz0-1
   tmp = fltarr(nx,ny,nz)
   tmp[*,*,z0:z1] = *img.data
   
   tmp = FFT(tmp,/OVERWRITE)
   
   print,'Filtering...' ; (this loop is the slowest part of the algorithm)
   fc = -ALOG(2.)/f0^2
   FOR k = 0, nz-1 DO BEGIN
      IF (k LE nz/2) THEN fz = dz*k ELSE fz = dz*(nz-k)
      FOR  j = 0, ny-1 DO BEGIN
         IF (j LE ny/2) THEN fy = dy*j ELSE fy = dy*(ny-j)
         FOR i = 0, nx-1 DO BEGIN
            IF (i LE nx/2) THEN fx = dx*i ELSE fx = dx*(nx-i)
            f = fx^2 + fy^2 + fz^2
            fac = EXP(f*fc)  ; Floating underflow can occur here
            tmp[i, j, k] = fac * tmp[i, j, k]
         ENDFOR
      ENDFOR
   ENDFOR
   
   tmp = FFT(tmp, /INVERSE)
   (*img.data)[*,*,*,ff-img[0].ff] = float(EXTRAC(tmp,0,0,z0,nx,ny,nz0))

   print,'Writing '+outfile+'... (Floating underflow warning is harmless)'
   IF (PUTINTERFILE(img, outfile, msg, EXTRA=extra) NE 0) THEN BEGIN
      message, msg
      exit
   ENDIF 

END 
@


1.6
log
@typo (nx0)
@
text
@d1 1
a1 1
; $Id: gauss3d.pro,v 1.5 2000/07/07 15:35:45 tom Exp tom $
d71 1
@


1.5
log
@process type float images
@
text
@d1 1
a1 1
; $Id: gauss3d.pro,v 1.4 1999/09/20 17:06:48 tom Exp tom $
d70 1
a70 1
   ELSE IF (nx0 LE 256) THEN nz = 256 $
@


1.4
log
@new putinterfile
@
text
@d1 1
a1 1
; $Id: gauss3d.pro,v 1.3 1998/01/30 19:15:24 tom Exp tom $
d29 1
d47 2
a48 2
   extra[1] = 'program version    := 1.4'
   extra[2] = 'program date       := 1999:09:20'
d105 1
a105 1
   IF (PUTINTERFILE(img, outfile, type(0), msg, EXTRA=extra) NE 0) THEN BEGIN
@


1.3
log
@*** empty log message ***
@
text
@d1 1
a1 1
; $Id: gauss3d.pro,v 1.2 1997/12/18 20:55:25 tom Exp $
d46 2
a47 2
   extra[1] = 'program version    := 1.0'
   extra[2] = 'program date       := 1998:01:30'
d103 2
a104 3
   img.fname = outfile
   print,'Writing '+img.fname+'... (Floating underflow warning is harmless)'
   IF (PUTINTERFILE(img, type(0), extra, msg) NE 0) THEN BEGIN
@


1.2
log
@*** empty log message ***
@
text
@d1 1
a1 1
; $Id: gauss3d.pro,v 1.1 1997/12/12 23:06:21 tom Exp tom $
d28 1
a28 1
;   Tom Videen, Dec, 1997
d32 1
a32 1
@@VIDI.h
d42 1
d47 1
a47 1
   extra[2] = 'program date       := 1997:12:18'
d50 5
a54 6
   uv = {img:[img,img]}
   uv.img[0].fname = infile
   uv.img[0].ff = 1
   uv.img[0].lf = 1
   uv.img[0].fp = 1
   uv.img[0].lp = 300
d58 2
a59 2
   print,'Reading '+uv.img[0].fname+'...'
   IF (GETFRAME(uv, 0, msg) NE 0) THEN BEGIN
d64 3
a66 3
   nx = uv.img[0].dim[0]
   ny = uv.img[0].dim[1]
   nz0 = uv.img[0].dim[2]
d74 3
a76 3
   dx = 1.0/(nx * uv.img[0].pdim[0])
   dy = 1.0/(ny * uv.img[0].pdim[1])
   dz = 1.0/(nz * uv.img[0].pdim[2])
d80 2
a81 2
   img = fltarr(nx,ny,nz)
   img[*,*,z0:z1] = *uv.img[0].data
d83 1
a83 1
   img = FFT(img,/OVERWRITE)
d95 1
a95 1
            img[i, j, k] = fac * img[i, j, k]
d100 2
a101 2
   img = FFT(img, /INVERSE)
   (*uv.img[0].data)[*,*,*,ff-uv.img[0].ff] = float(EXTRAC(img,0,0,z0,nx,ny,nz0))
d103 3
a105 3
   uv.img[0].fname = outfile
   print,'Writing '+uv.img[0].fname+'... (Floating underflow warning is harmless)'
   IF (PUTINTERFILE(uv, 0, type(0), extra, msg) NE 0) THEN BEGIN
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
; $Id$
d13 1
a13 1
;	GAUSS3D, Infile, F0, Outfile
d15 4
a18 4
; INPUTS:
;	Infile:	input filename
;	F0:	cutoff frequency of Gaussian (cycles/cm)
;	Outfile:output filename
d21 1
a21 1
;	Outfile:	filter image file
d25 1
a25 1
;	to each slice, and write to output file.
d31 1
a31 1
PRO GAUSS3D, infile, f0, outfile
a34 1
   IF n_params() NE 3 THEN message,'Usage: gauss3d, infile, f0, outfile'
d36 7
d46 1
a46 1
   extra[2] = 'program date       := 1997:12:12'
d54 1
a54 1
   uv.img[0].lp = 100
d67 7
a73 1
   nz = 64
d101 1
a101 1
   (*uv.img[0].data)[*,*,*,ff] = float(EXTRAC(img,0,0,z0,nx,ny,nz0))
@
