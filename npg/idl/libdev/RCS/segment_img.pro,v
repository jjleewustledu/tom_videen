head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	96.11.27.15.58.13;	author tom;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@; $Id: segment_img.pro,v 1.1 1995/05/02 13:55:30 tom Exp $
;+
; NAME:
;	SEGMENT_IMG
;
; PURPOSE:
;   Segment 2 aligned Analyze images to create an output brain tissue image.
;
; CATEGORY:
;	Image processing
;
; CALLING SEQUENCE:
;   SEGMENT_IMG, File1, Min1, Max1, File2, Min2, Max2, Outfile
;
; INPUTS:
;   File1:		First input file (e.g., MPRAGE)
;	Min1, Max1:	Limits of range to include for File1
;   File2:		Second input file (e.g., FISP)
;	Min2, Max2:	Limits of range to include for File2
;
; OUTPUTS:
;	Outfile:	Name of output file
;
; PROCEDURE:
;	Read 2 Analyze image files. 
;	If file1(x,y,z) >= min1 and file1(x,y,z) <= max1 and
;	   file2(x,y,z) >= min2 and file2(x,y,z) <= max2 then outfile(x,y,z) = 255
;
; MODIFICATION HISTORY:
;   Tom Videen, April 1995.
;-

pro segment_img, file1, min1, max1, file2, min2, max2, outfile

	on_error,2
	if n_params() ne 7 then message,'Usage: segment_img, '+$
		'file1, min1, max1, file2, min2, max2, outfile'

; Determine image array size & type

	asize = intarr(3)
	asize2 = intarr(3)
	pixsize = fltarr(3)
	pixsize2 = fltarr(3)
	analyze_dim, file1, asize, dsize, pixsize
	analyze_dim, file2, asize2, dsize2, pixsize2

	if (dsize ne 8 or dsize2 ne 8) then begin
		message, 'Error: input must be of type byte'
		return
	endif
	if (asize(0) ne asize2(0) or asize(1) ne asize2(1) or asize(2) ne asize2(2)) then begin
		message, 'Error: input files must be same size'
		return
	endif
	if (pixsize(0) ne pixsize2(0) or pixsize(1) ne pixsize2(1) or pixsize(2) ne pixsize2(2)) then begin
		message, 'Error: input files must have same pixel size'
		return
	endif

; Read arrays

	data1 = bytarr(asize(0), asize(1), asize(2))
	data2 = data1
	get_lun,lu
	openr,lu,file1
	readu,lu,data1,TRANSFER_COUNT=count
	close,lu
	openr,lu,file2
	readu,lu,data2,TRANSFER_COUNT=count
	close,lu

; Convolve xy

	for k = 0, asize(2)-1 do begin
		print, "Slice = ",k+1
		for j = 0, asize(1)-1 do begin
			for i = 0, asize(0)-1 do begin
				if ((data1(i,j,k) ge min1) and (data1(i,j,k) le max1) and $
					(data2(i,j,k) ge min2) and (data2(i,j,k) le max2)) then $
					data1(i,j,k) = 255 $
				else $
					data1(i,j,k) = 0
			endfor
		endfor
	endfor

; Write to outfile
 
	openw, lu, outfile
	writeu, lu, data1
	close, lu
	free_lun,lu

end
@
