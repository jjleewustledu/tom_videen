head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	97.04.08.21.13.59;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	96.11.27.18.32.56;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	96.11.27.15.58.13;	author tom;	state Exp;
branches;
next	;


desc
@@


1.3
log
@add edge_truncate to convol
@
text
@; $Id: slice_convol.pro,v 1.2 1996/11/27 18:32:56 tom Exp tom $
;+
; NAME:
;	SLICE_CONVOL
;
; PURPOSE:
;	Convolution across slices using a 1-D gaussian.
;
; CATEGORY:
;   Image processing
;
; CALLING SEQUENCE:
;	SLICE_CONVOL, Matrix, Halfwidth
;
; INPUTS:
;	Matrix = 2-D matrix (float)
;	Halfwidth = half-width of gaussian (in pixels)
;
; OUTPUTS:
;	Matrix = 2-D matrix (float)
;
; RESTRICTIONS:
;	Matrix should be of type FLOAT
;	
; FUNCTION:
;	CONVOL is used to convolve mat with a gaussian with specified halfwidth in pixels.
;
; MODIFICATION HISTORY:
;	Tom Videen, April 1995
;-

pro slice_convol, mat, halfwidth

	on_error,2
	if n_params() ne 2 then message,'Usage: slice_convol, matrix, halfwidth'
	sz = size(mat)
	z = fltarr(sz(3))
	prec = 3										; larger values for greater precision
	sigma = halfwidth/2.354
	n_pts = round(prec*sigma)*2 + 1					; number of points in kernel (odd)
	if n_pts ge sz(3) then $
		 n_pts = ((sz(3)-1)/2)*2 + 1				; kernel size < array size
	x = (findgen(n_pts) - n_pts/2)					; x locations to compute kernel
	gaus = exp(-0.5*(x/sigma)^2)					; gaussian of width sigma

;	Extract a slice vector, convolve, then replace the slice vector

	for i = 0, sz(1)-1 do begin
		print, "X = ",i+1
		for j = 0, sz(2)-1 do begin
			for k= 0, sz(3)-1 do begin
				z(k) = mat(i,j,k)
			endfor
			w = convol(z,gaus,/edge_truncate)/total(gaus)
			for k= 0, sz(3)-1 do begin
				mat(i,j,k) = w(k)
			endfor
		endfor
	endfor

end
@


1.2
log
@kernel size < array size
@
text
@d1 1
a1 1
; $Id: slice_convol.pro,v 1.1 1996/11/27 15:58:13 tom Exp $
d54 1
a54 1
			w = convol(z,gaus)/total(gaus)
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
; $Id: slice_convol.pro,v 1.1 1995/05/02 13:54:52 tom Exp $
d41 2
@
