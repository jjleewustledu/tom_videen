head	1.6;
access;
symbols;
locks; strict;
comment	@# @;


1.6
date	2007.04.04.15.33.58;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	99.07.12.21.08.04;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	99.07.09.18.48.05;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	99.07.09.16.27.36;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	99.07.09.16.26.00;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	99.07.08.20.52.10;	author tom;	state Exp;
branches;
next	;


desc
@@


1.6
log
@set maximum screensize
@
text
@PRO PLOTPAIR_EVENT, ev
   COMMON PLOT_PAIR
   catch, error_status
   IF (error_status NE 0) THEN BEGIN
      ok = widget_message(!err_string)
      RETURN
   END
   setuv = 0
   widget_control, ev.top, get_uvalue=uv
   widget_control, uv.wid.msg, set_value=''
   scrnsize = get_screen_size()
   xloc = scrnsize[0]/2
   IF (xloc GT 1270) THEN xloc = 1270
   
   CASE ev.id OF

      uv.wid.name[0]: BEGIN 
         i = 0
         tmp = xim.fname
         xim.fname = ev.value
         xim.ff = 1
         xim.lf = 1
         xim.fp = 1
         xim.lp = 300
         IF (getframe(xim, msg) NE 0) THEN BEGIN
            widget_control, uv.wid.msg, set_value='Error reading '+xim.fname
            xim.fname = ''
            widget_control, uv.wid.name[i], set_value=xim.fname
         ENDIF ELSE BEGIN
            widget_control, uv.wid.msg, set_value='File '+xim.fname+' found'
            data1 = (*xim.data)[*,*,*,*]
            IF (ptr_valid(msk.data)) THEN BEGIN
               data0 = (*msk.data)[*,*,*,*]
               a = where(data0 gt thresh-0.00001)
               minval[i] = min(data1[a])*scale[i]
               maxval[i] = max(data1[a])*scale[i]
            ENDIF ELSE BEGIN
               minval[i] = min(data1)*scale[i]
               maxval[i] = max(data1)*scale[i]
            ENDELSE
            widget_control, uv.wid.min[i], set_value=minval[i]
            widget_control, uv.wid.max[i], set_value=maxval[i]
         ENDELSE
      ENDCASE
      
      uv.wid.name[1]: BEGIN 
         i = 1
         tmp = yim.fname
         yim.fname = ev.value
         yim.ff = 1
         yim.lf = 1
         yim.fp = 1
         yim.lp = 300
         IF (getframe(yim, msg) NE 0) THEN BEGIN
            widget_control, uv.wid.msg, set_value='Error reading '+yim.fnam
            yim.fname = ''
            widget_control, uv.wid.name[i], set_value=yim.fname
         ENDIF ELSE BEGIN
            widget_control, uv.wid.msg, set_value='File '+yim.fname+' found'
            data2 = (*yim.data)[*,*,*,*]
            IF (ptr_valid(msk.data)) THEN BEGIN
               data0 = (*msk.data)[*,*,*,*]
               a = where(data0 gt thresh-0.00001)
               minval[i] = min(data2[a])*scale[i]
               maxval[i] = max(data2[a])*scale[i]
            ENDIF ELSE BEGIN
               minval[i] = min(data2)*scale[i]
               maxval[i] = max(data2)*scale[i]
            ENDELSE
            widget_control, uv.wid.min[i], set_value=minval[i]
            widget_control, uv.wid.max[i], set_value=maxval[i]
         ENDELSE
      ENDCASE

      uv.wid.mask: BEGIN 
         tmp = msk.fname
         msk.fname = ev.value
         msk.ff = 1
         msk.lf = 1
         msk.fp = 1
         msk.lp = 300
         IF (getframe(msk, msg) NE 0) THEN BEGIN
            widget_control, uv.wid.msg, set_value='Error reading '+msk.fname
            msk.fname = ''
            widget_control, uv.wid.mask, set_value=msk.fname
         ENDIF ELSE BEGIN
            widget_control, uv.wid.msg, set_value='File '+msk.fname+' found'
            data0 = (*msk.data)[*,*,*,*]
            a = where(data0 gt thresh-0.00001)
            npix = n_elements(a)
            widget_control, uv.wid.pixels, set_value=npix
         ENDELSE
      ENDCASE

      uv.wid.file: BEGIN
         q = ev.value
         fname = ''
         tmpname = ''
         CASE q OF
            1: img = xim
            2: img = yim
            3: img = msk
         ENDCASE
         tmpname = img.fname
         IF (strlen(tmpname) LE 0) THEN tmpname = xim.fname
         IF (strlen(tmpname) LE 0) THEN tmpname = yim.fname
         IF (strlen(tmpname) LE 0) THEN tmpname = msk.fname
         IF (strlen(tmpname) GT 0) THEN BEGIN
            l1 = rstrpos(tmpname,'/')
            l2 = rstrpos(tmpname,'.')
            IF (l2 GT 0) THEN BEGIN
               str1 = string(replicate(32b,(l2-l1-2)))
               str1 = '*'+str1
               strput,tmpname,str1,l1+1
               tmpname = strcompress(tmpname, /remove_all)
            ENDIF ELSE tmpname = '*'
         ENDIF ELSE tmpname = '*'
         
         tmpname = dialog_pickfile(FILE=tmpname, FILTER=tmpname, /READ)
         IF (strlen(tmpname) EQ 0) THEN BEGIN
            widget_control, uv.wid.msg, set_value='No file entered'
         ENDIF ELSE BEGIN
            msg = ''
            CASE q OF
               1: BEGIN 
                  xim.fname = tmpname
                  xim.ff = 1
                  xim.lf = 1
                  xim.fp = 1
                  xim.lp = 300
                  IF (getframe(xim, msg) NE 0) THEN BEGIN
                     widget_control, uv.wid.msg, set_value=msg
                     xim.fname = ''
                     RETURN
                  ENDIF
                  widget_control, uv.wid.msg, set_value='File '+xim.fname+' found'
                  i = q-1
                  widget_control, uv.wid.name[i], set_value=xim.fname
                  data1 = (*xim.data)[*,*,*,*]
                  IF (ptr_valid(msk.data)) THEN BEGIN
                     data0 = (*msk.data)[*,*,*,*]
                     a = where(data0 gt thresh-0.00001)
                     minval[i] = min(data1[a])*scale[i]
                     maxval[i] = max(data1[a])*scale[i]
                  ENDIF ELSE BEGIN
                     minval[i] = min(data1)*scale[i]
                     maxval[i] = max(data1)*scale[i]
                  ENDELSE
                  widget_control, uv.wid.min[i], set_value=minval[i]
                  widget_control, uv.wid.max[i], set_value=maxval[i]
               ENDCASE 
               
               2: BEGIN
                  yim.fname = tmpname
                  yim.ff = 1
                  yim.lf = 1
                  yim.fp = 1
                  yim.lp = 300
                  IF (getframe(yim, msg) NE 0) THEN BEGIN
                     widget_control, uv.wid.msg, set_value=msg
                     yim.fname = ''
                     RETURN
                  ENDIF
                  widget_control, uv.wid.msg, set_value='File '+yim.fname+' found'
                  i = q-1
                  widget_control, uv.wid.name[i], set_value=yim.fname
                  data1 = (*yim.data)[*,*,*,*]
                  IF (ptr_valid(msk.data)) THEN BEGIN
                     data0 = (*msk.data)[*,*,*,*]
                     a = where(data0 gt thresh-0.00001)
                     minval[i] = min(data1[a])*scale[i]
                     maxval[i] = max(data1[a])*scale[i]
                  ENDIF ELSE BEGIN
                     minval[i] = min(data1)*scale[i]
                     maxval[i] = max(data1)*scale[i]
                  ENDELSE
                  widget_control, uv.wid.min[i], set_value=minval[i]
                  widget_control, uv.wid.max[i], set_value=maxval[i]
               ENDCASE 
               
               3: BEGIN
                  msk.fname = tmpname
                  msk.ff = 1
                  msk.lf = 1
                  msk.fp = 1
                  msk.lp = 300
                  IF (getframe(msk, msg) NE 0) THEN BEGIN
                     widget_control, uv.wid.msg, set_value=msg
                     msk.fname = ''
                     RETURN
                  ENDIF
                  widget_control, uv.wid.msg, set_value='File '+msk.fname+' found'
                  widget_control, uv.wid.mask, set_value=msk.fname
                  data0 = (*msk.data)[*,*,*,*]
                  a = where(data0 gt thresh-0.00001)
                  npix = n_elements(a)
                  widget_control, uv.wid.pixels, set_value=npix
               ENDCASE
            ENDCASE
         ENDELSE
      ENDCASE
      
      uv.wid.scaler[0]: BEGIN 
         i = 0
         scale[i] = ev.value
         widget_control, uv.wid.scaler[i], set_value=scale[i]
         IF (ptr_valid(xim.data)) THEN BEGIN
            data1 = (*xim.data)[*,*,*,*]
            IF (ptr_valid(msk.data)) THEN BEGIN
               data0 = (*msk.data)[*,*,*,*]
               a = where(data0 gt thresh-0.00001)
               minval[i] = min(data1[a])*scale[i]
               maxval[i] = max(data1[a])*scale[i]
            ENDIF ELSE BEGIN
               minval[i] = min(data1)*scale[i]
               maxval[i] = max(data1)*scale[i]
            ENDELSE
            widget_control, uv.wid.min[i], set_value=minval[i]
            widget_control, uv.wid.max[i], set_value=maxval[i]
         ENDIF
      ENDCASE

      uv.wid.scaler[1]: BEGIN 
         i = 1
         scale[i] = ev.value
         widget_control, uv.wid.scaler[i], set_value=scale[i]
         IF (ptr_valid(yim.data)) THEN BEGIN
            data2 = (*yim.data)[*,*,*,*]
            IF (ptr_valid(msk.data)) THEN BEGIN
               data0 = (*msk.data)[*,*,*,*]
               a = where(data0 gt thresh-0.00001)
               minval[i] = min(data2[a])*scale[i]
               maxval[i] = max(data2[a])*scale[i]
            ENDIF ELSE BEGIN
               minval[i] = min(data2)*scale[i]
               maxval[i] = max(data2)*scale[i]
            ENDELSE
            widget_control, uv.wid.min[i], set_value=minval[i]
            widget_control, uv.wid.max[i], set_value=maxval[i]
         ENDIF
      ENDCASE

      uv.wid.min[0]: BEGIN 
         minval[0] = ev.value
         widget_control, uv.wid.min[0], set_value=minval[0]
      ENDCASE

      uv.wid.min[1]: BEGIN 
         minval[1] = ev.value
         widget_control, uv.wid.min[1], set_value=minval[1]
      ENDCASE

      uv.wid.max[0]: BEGIN 
         maxval[0] = ev.value
         widget_control, uv.wid.max[0], set_value=maxval[0]
      ENDCASE

      uv.wid.max[1]: BEGIN 
         maxval[1] = ev.value
         widget_control, uv.wid.max[1], set_value=maxval[1]
      ENDCASE

      uv.wid.cutoff: BEGIN 
         thresh = ev.value
         widget_control, uv.wid.cutoff, set_value=thresh
         IF (msk.fname NE '') THEN BEGIN
            data0 = (*msk.data)[*,*,*,*]
            a = where(data0 gt thresh-0.00001)
            npix = n_elements(a)
            widget_control, uv.wid.pixels, set_value=npix
         ENDIF
      ENDCASE

      uv.wid.label[0]: BEGIN 
         xlabel = ev.value
         widget_control, uv.wid.label[0], set_value=xlabel
      ENDCASE

      uv.wid.label[1]: BEGIN 
         ylabel = ev.value
         widget_control, uv.wid.label[1], set_value=ylabel
      ENDCASE

      uv.wid.label[2]: BEGIN 
         title = ev.value
         widget_control, uv.wid.label[2], set_value=title
      ENDCASE

      uv.wid.pixelplot: BEGIN 
         IF (NOT ptr_valid(xim.data)) THEN BEGIN
            widget_control, uv.wid.msg, set_value='Error: No X file entered'
         ENDIF ELSE IF (NOT ptr_valid(yim.data)) THEN BEGIN
            widget_control, uv.wid.msg, set_value='Error: No Y file entered'
         ENDIF ELSE IF (ptr_valid(msk.data)) THEN BEGIN
            data0 = (*msk.data)[*,*,*,*]
            a = where(data0 gt thresh-0.00001)
            data1 = (*xim.data)[*,*,*,*]*scale[0]
            data2 = (*yim.data)[*,*,*,*]*scale[1]
            window,xpos=xloc,1
            plot, data1[a], data2[a], xr=[minval[0],maxval[0]], yr=[minval[1],maxval[1]], psym=sym, symsize=0.2, $
               title=title,xtitle=xlabel,ytitle=ylabel,charsize=1.5,charthick=2,xthick=2,ythick=2
         ENDIF ELSE BEGIN
            data1 = (*xim.data)[*,*,*,*]*scale[0]
            data2 = (*yim.data)[*,*,*,*]*scale[1]
            window,xpos=xloc,1
            plot, data1, data2, xr=[minval[0],maxval[0]], yr=[minval[1],maxval[1]], psym=sym, symsize=0.2, $
               xtitle=xlabel,ytitle=ylabel,charsize=1.5,charthick=2,xthick=2,ythick=2
         ENDELSE
         lines[0] = 0
         lines[1] = 0
         lines[2] = 0
      ENDCASE

      uv.wid.line: BEGIN
         CASE ev.value OF
            1: BEGIN
               lines[0] = 1
               tmp0 = min([5*minval[1],0])
               tmp1 = max([5*maxval[1],0])
               oplot,[0,0],[tmp0,tmp1]
            ENDCASE
            2: BEGIN
               lines[1] = 1
               tmp0 = min([5*minval[0],0])
               tmp1 = max([5*maxval[0],0])
               oplot,[tmp0,tmp1],[0,0]
            ENDCASE
            3: BEGIN
               lines[2] = 1
               tmp0 = min([5*minval[0],5*minval[1],0])
               tmp1 = max([5*maxval[0],5*maxval[1],0])
               oplot,[tmp0,tmp1],[tmp0,tmp1]
            ENDCASE
         ENDCASE
      ENDCASE

      uv.wid.symbol: BEGIN
         CASE ev.value OF
            1: sym = 3
            2: sym = 4
         ENDCASE
      ENDCASE

      uv.wid.prnt: BEGIN
         IF (NOT ptr_valid(xim.data)) THEN BEGIN
            widget_control, uv.wid.msg, set_value='Error: No X file entered'
         ENDIF ELSE IF (NOT ptr_valid(yim.data)) THEN BEGIN
            widget_control, uv.wid.msg, set_value='Error: No Y file entered'
         ENDIF ELSE BEGIN 
            widget_control, uv.wid.msg, set_value='Printing...'
            set_plot,'ps'
            cmd = 'whoami'
            spawn,cmd,unit=lun
            pid = ''
            readf,lun,pid,format='(A)'
            fname = '/tmp/plotpair'+pid+'.ps'
            device,filename=fname,xsize=7,ysize=6,xoffset=0.8,yoffset=3,/inches
            IF (ptr_valid(msk.data)) THEN BEGIN
               data0 = (*msk.data)[*,*,*,*]
               a = where(data0 gt thresh-0.00001)
               data1 = (*xim.data)[*,*,*,*]*scale[0]
               data2 = (*yim.data)[*,*,*,*]*scale[1]
               plot, data1[a], data2[a], xr=[minval[0],maxval[0]], yr=[minval[1],maxval[1]], psym=sym, symsize=0.2, $
                  title=title,xtitle=xlabel,ytitle=ylabel,charsize=1.5,charthick=2,xthick=2,ythick=2
            ENDIF ELSE BEGIN
               data1 = (*xim.data)[*,*,*,*]*scale[0]
               data2 = (*yim.data)[*,*,*,*]*scale[1]
               plot, data1, data2, xr=[minval[0],maxval[0]], yr=[minval[1],maxval[1]], psym=sym, symsize=0.2, $
                  xtitle=xlabel,ytitle=ylabel,charsize=1.5,charthick=2,xthick=2,ythick=2
            ENDELSE
            IF (lines[0] GT 0) THEN BEGIN
               tmp0 = min([5*minval[1],0])
               tmp1 = max([5*maxval[1],0])
               oplot,[0,0],[tmp0,tmp1]
            ENDIF
            IF (lines[1] GT 0) THEN BEGIN
               tmp0 = min([5*minval[0],0])
               tmp1 = max([5*maxval[0],0])
               oplot,[tmp0,tmp1],[0,0]
            ENDIF
            IF (lines[2] GT 0) THEN BEGIN
               tmp0 = min([5*minval[0],5*minval[1],0])
               tmp1 = max([5*maxval[0],5*maxval[1],0])
               oplot,[tmp0,tmp1],[tmp0,tmp1]
            ENDIF
            device,/close
            cmd = 'cat '+fname+' | lpr'
            spawn, cmd
            widget_control, uv.wid.msg, set_value='Plot sent to printer'
            cmd = '/usr/bin/rm '+fname
            spawn, cmd
            set_plot,'x'
         ENDELSE 
      ENDCASE

      uv.wid.exit: BEGIN
         wdelete, 1
         widget_control, ev.top, /destroy
      ENDCASE

   END
END

PRO PLOTPAIR
@@IMAGE_UTILS.h
@@PLOTPAIR.h

   on_error, 2
   
   ;;xim.fname = '/data/npggw/data1/correl/p5572/rp5572doef_g3.v'
   ;;yim.fname = '/data/npggw/data1/correl/p5572/rp5572dcmro_g3.v'
   ;;msk.fname = '/data/npggw/data1/correl/p5572/rp5572_g3_msk.v'
   ;;scale[0] = 0.001
   ;;scale[1] = 0.001
   ;;xlabel = 'Change in OEF'
   ;;ylabel = 'Change in CMRO2'

   base = widget_base (TITLE='PLOTPAIR', /COLUMN)
   base1 = widget_base(base, col=4)
   
   base2 = widget_base(base1, row=2)
   base2a = widget_label(base2, value='                                   Image Filename')
   name = lonarr(2)
   base2b = widget_base(base2, row=2)
   name[0] = cw_field(base2b, title='X', value=xim.fname, xsize=80, /str, /ret)
   name[1] = cw_field(base2b, title='Y', value=yim.fname, xsize=80, /str, /ret)
   
   base3 = widget_base(base1, row=2)
   base3a = widget_label(base3, value='    Scaler')
   base3b = widget_base(base3, row=2)
   scaler = lonarr(2) 
   scaler[0] = cw_field(base3b, title=' ', value=scale[0],xsize=10, ysize=1, /float, /ret)
   scaler[1] = cw_field(base3b, title=' ', value=scale[1],xsize=10, ysize=1, /float, /ret)
   
   base4 = widget_base(base1, row=2)
   base4a = widget_label(base4, value='    Minimum')
   base4b = widget_base(base4, row=2)
   min = lonarr(2) 
   min[0] = cw_field(base4b, title=' ', value=minval[0], xsize=10, ysize=1, /float, /ret)
   min[1] = cw_field(base4b, title=' ', value=minval[1], xsize=10, ysize=1, /float, /ret)
   
   base5 = widget_base(base1, row=2)
   base5a = widget_label(base5, value='    Maximum')
   base5b = widget_base(base5, row=2)
   max = lonarr(3) 
   max[0] = cw_field(base5b, title=' ', value=maxval[0], xsize=10, ysize=1, /float, /ret)
   max[1] = cw_field(base5b, title=' ', value=maxval[1], xsize=10, ysize=1, /float, /ret)

   base7 = widget_base(base, row=1)
   mask = cw_field(base7, title='Mask', value=msk.fname, xsize=80, /str, /ret)
   cutoff = cw_field(base7, title='Threshold', value=thresh, xsize=10, ysize=1, /float, /ret)
   pixels = cw_field(base7, title='Pixels', value=npix, xsize=10, ysize=1, /lon)

   base8 = widget_base(base, col=2)
   label = lonarr(3)
   label[0] = cw_field(base8, title='X Label', value=xlabel, xsize=40, /str, /ret)
   label[1] = cw_field(base8, title='Y Label', value=ylabel, xsize=40, /str, /ret)
   label[2] = cw_field(base8, title='Title', value=title, xsize=45, /str, /ret)
   
   base9 = widget_base(base8, row=1)
   select0 =  ['1\Get Files', '0\Image 1', '0\Image 2','0\Mask']
   file = cw_pdmenu(base9, select0)

   pixelplot = WIDGET_BUTTON(base9, value='Pixel Plot')

   select1 =  ['1\Plot Symbol', '0\dot', '0\diamond']
   symbol = cw_pdmenu(base9, select1)

   select2 =  ['1\Draw Line', '0\x = 0', '0\y = 0','0\x = y']
   line = cw_pdmenu(base9, select2)

   prnt = WIDGET_BUTTON(base9, value='Print')
   exit = WIDGET_BUTTON(base9, value='Exit')
   
   msg = widget_text(base)
   wid = {WIDGETS,      $
          base		: base,  $
          name  	: name, $
          scaler	: scaler,$
          min   	: min,$
          max   	: max,$
          mask   	: mask, $
          cutoff   	: cutoff, $
          pixels   	: pixels, $
          label 	: label,$
          file		: file, $
          pixelplot	: pixelplot, $
          symbol  	: symbol,  $
          line  	: line,  $
          prnt  	: prnt,  $
          exit  	: exit,  $
          msg		: msg $
         }
   img = {VIMAGE}
   
   uv = {wid:wid, xim:img, yim:img, msk:img}
   uv.xim.f = 1
   uv.xim.p = 1
   uv.yim.f = 1
   uv.yim.p = 1
   uv.msk.f = 1
   uv.msk.p = 1
   widget_control, base, set_uvalue=uv
   widget_control, base, /realize, xoffset=0, yoffset=0
   xmanager, "PLOTPAIR", base, EVENT_HANDLER='PLOTPAIR_EVENT'

END 
@


1.5
log
@add plot symbol
@
text
@d11 3
d299 1
a299 1
            window,1
d305 1
a305 1
            window,1
@


1.4
log
@*** empty log message ***
@
text
@d102 3
d206 9
a214 2
            minval[i] = min(data1)*scale[i]
            maxval[i] = max(data1)*scale[i]
d226 9
a234 2
            minval[i] = min(data2)*scale[i]
            maxval[i] = max(data2)*scale[i]
d237 1
a237 1
         ENDIF 
d333 8
a340 1
      
d460 1
d462 7
a468 2
   select1 =  ['1\Draw Line', '0\x = 0', '0\y = 0','0\x = y']
   line = cw_pdmenu(base9, select1)
d485 1
@


1.3
log
@*** empty log message ***
@
text
@d431 1
a431 1
   label[2] = cw_field(base8, title='Title', value=title, xsize=65, /str, /ret)
@


1.2
log
@*** empty log message ***
@
text
@d383 7
a389 7
   xim.fname = '/data/npggw/data1/correl/p5572/rp5572doef_g3.v'
   yim.fname = '/data/npggw/data1/correl/p5572/rp5572dcmro_g3.v'
   msk.fname = '/data/npggw/data1/correl/p5572/rp5572_g3_msk.v'
   scale[0] = 0.001
   scale[1] = 0.001
   xlabel = 'Change in OEF'
   ylabel = 'Change in CMRO2'
@


1.1
log
@Initial revision
@
text
@d23 1
a23 2
            msg = 'Error reading '+xim.fname
            widget_control, uv.wid.msg, set_value=msg
d27 1
a27 2
            msg = 'Read '+xim.fname
            widget_control, uv.wid.msg, set_value=msg
d42 1
d52 1
a52 2
            msg = 'Error reading '+yim.fname
            widget_control, uv.wid.msg, set_value=msg
d56 1
a56 2
            msg = 'Read '+yim.fname
            widget_control, uv.wid.msg, set_value=msg
d80 1
a80 2
            msg = 'Error reading '+msk.fname
            widget_control, uv.wid.msg, set_value=msg
d84 1
a84 2
            msg = 'Read '+msk.fname
            widget_control, uv.wid.msg, set_value=msg
d92 105
d201 7
a207 5
         data1 = (*xim.data)[*,*,*,*]
         minval[i] = min(data1)*scale[i]
         maxval[i] = max(data1)*scale[i]
         widget_control, uv.wid.min[i], set_value=minval[i]
         widget_control, uv.wid.max[i], set_value=maxval[i]
d214 7
a220 5
         data2 = (*yim.data)[*,*,*,*]
         minval[i] = min(data2)*scale[i]
         maxval[i] = max(data2)*scale[i]
         widget_control, uv.wid.min[i], set_value=minval[i]
         widget_control, uv.wid.max[i], set_value=maxval[i]
a253 10
      uv.wid.bin[0]: BEGIN 
         binsize[0] = ev.value
         widget_control, uv.wid.bin[0], set_value=binsize[0]
      ENDCASE

      uv.wid.bin[1]: BEGIN 
         binsize[1] = ev.value
         widget_control, uv.wid.bin[1], set_value=binsize[1]
      ENDCASE

d264 5
d271 1
a271 2
            msg='Error: No X file entered'
            widget_control, uv.wid.msg, set_value=msg
d273 1
a273 2
            msg='Error: No Y file entered'
            widget_control, uv.wid.msg, set_value=msg
d279 3
a281 2
            plot, data1[a], data2[a], xr=[minval[0],maxval[0]], yr=[minval[1],maxval[1]], psym=4, symsize=0.2, $
               xtitle=xlabel,ytitle=ylabel,charsize=1.5,charthick=2,xthick=2,ythick=2
d285 2
a286 1
            plot, data1, data2, xr=[minval[0],maxval[0]], yr=[minval[1],maxval[1]], psym=4, symsize=0.2, $
d289 3
a291 2
         oplot,[0,0],[2*minval[1],2*maxval[1]]
         oplot,[2*minval[0],2*maxval[0]],[0,0]
d294 24
a317 1
      uv.wid.surfplot: BEGIN 
d319 1
a319 2
            msg='Error: No X file entered'
            widget_control, uv.wid.msg, set_value=msg
d321 46
a366 15
            msg='Error: No Y file entered'
            widget_control, uv.wid.msg, set_value=msg
         ENDIF ELSE IF (ptr_valid(msk.data)) THEN BEGIN
            data0 = (*msk.data)[*,*,*,*]
            a = where(data0 gt thresh-0.00001)
            data1 = (*xim.data)[*,*,*,*]*scale[0]
            data2 = (*yim.data)[*,*,*,*]*scale[1]
            result = hist_2d(data1(a),data2(a),bin1=binsize[0],bin2=binsize[1])
            shade_surf, result, ax=60, az=40
         ENDIF ELSE BEGIN
            data1 = (*xim.data)[*,*,*,*]*scale[0]
            data2 = (*yim.data)[*,*,*,*]*scale[1]
            result = hist_2d(data1,data2,bin1=binsize[0],bin2=binsize[1])
            shade_surf, result, ax=60, az=40
         ENDELSE
d370 1
d383 7
a389 9
   ;; xim.fname = '/data/npggw/data1/correl/p5572/rp5572doef_g3.v'
   ;; yim.fname = '/data/npggw/data1/correl/p5572/rp5572dcmro_g3.v'
   ;; msk.fname = '/data/npggw/data1/correl/p5572/rp5572_g3_msk.v'
   ;; scale[0] = 0.001
   ;; scale[1] = 0.001
   ;; binsize[0] = 0.01
   ;; binsize[1] = 0.02
   ;; xlabel = 'Change in OEF'
   ;; ylabel = 'Change in CMRO2'
d392 1
a392 1
   base1 = widget_base(base, col=5)
d398 2
a399 2
   name[0] = cw_field(base2b, title='X', value=xim.fname, xsize=70, /str, /ret)
   name[1] = cw_field(base2b, title='Y', value=yim.fname, xsize=70, /str, /ret)
d422 10
a431 6
   base6 = widget_base(base1, row=2)
   base6a = widget_label(base6, value='    Bin Size')
   base6b = widget_base(base6, row=2)
   bin = lonarr(2) 
   bin[0] = cw_field(base6b, title=' ', value=binsize[0], xsize=10, ysize=1, /float, /ret)
   bin[1] = cw_field(base6b, title=' ', value=binsize[1], xsize=10, ysize=1, /float, /ret)
d433 3
a435 11
   base7 = widget_base(base, col=2)
   label = lonarr(2)
   label[0] = cw_field(base7, title='X Label', value=xlabel, xsize=55, /str, /ret)
   label[1] = cw_field(base7, title='Y Label', value=ylabel, xsize=55, /str, /ret)
   
   base8 = widget_base(base, row=1)
   mask = cw_field(base8, title='Mask', value=msk.fname, xsize=70, /str, /ret)
   cutoff = cw_field(base8, title='Threshold', value=thresh, xsize=10, ysize=1, /float, /ret)
   pixels = cw_field(base8, title='Pixels', value=npix, xsize=10, ysize=1, /lon)

   base9 = widget_base(base, row=1)
d437 3
a439 1
   surfplot = WIDGET_BUTTON(base9, value='Surface Plot')
a448 1
          bin   	: bin, $
d453 1
d455 2
a456 1
          surfplot	: surfplot,   $
@
