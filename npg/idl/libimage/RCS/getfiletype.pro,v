head	1.15;
access;
symbols;
locks; strict;
comment	@# @;


1.15
date	2008.08.29.15.40.26;	author tom;	state Exp;
branches;
next	1.14;

1.14
date	2008.07.29.18.54.20;	author tom;	state Exp;
branches;
next	1.13;

1.13
date	2008.02.21.15.55.30;	author tom;	state Exp;
branches;
next	1.12;

1.12
date	2002.09.10.16.14.37;	author tom;	state Exp;
branches;
next	1.11;

1.11
date	2000.12.18.19.21.45;	author tom;	state Exp;
branches;
next	1.10;

1.10
date	2000.06.27.16.15.42;	author tom;	state Exp;
branches;
next	1.9;

1.9
date	2000.06.27.15.55.18;	author tom;	state Exp;
branches;
next	1.8;

1.8
date	2000.04.19.14.04.33;	author tom;	state Exp;
branches;
next	1.7;

1.7
date	2000.04.05.19.41.48;	author tom;	state Exp;
branches;
next	1.6;

1.6
date	2000.03.16.16.11.22;	author tom;	state Exp;
branches;
next	1.5;

1.5
date	99.08.27.20.55.06;	author tom;	state Exp;
branches;
next	1.4;

1.4
date	99.08.27.17.21.14;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	98.09.03.14.48.21;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	98.02.03.17.35.31;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	98.01.30.18.46.09;	author tom;	state Exp;
branches;
next	;


desc
@@


1.15
log
@modified to recognize Wake Forest converted image as Matrix6
@
text
@FUNCTION GETFILETYPE, fname
   COMMON IMAGE_UTILS

   filetype = 0

   ;; Check INTERFILE first

   i = rstrpos(fname,'.')
   IF (i GT 0) THEN BEGIN
      hname = strmid(fname,0,i)+'    '
      strput, hname,'.ifh', i
   ENDIF ELSE hname = fname + '.ifh'
   openr, lu, hname, /GET_LUN, ERROR=err
   IF (err EQ 0) THEN BEGIN
      str = ''
      readf, lu, str
      close, lu
      free_lun, lu
      IF ((strpos(str,'INTERFILE') EQ 0) OR $
          (strpos(str,'!INTERFILE') EQ 0)) THEN BEGIN
         filetype = INTERFILE
         RETURN, filetype
      ENDIF
   ENDIF

   ;; Check PET file types (ECAT7, ECAT6 or PETT6)

   openr, lu, fname, /GET_LUN, ERROR=err
   IF (err NE 0) THEN RETURN, -2
   
   test = {ver:bytarr(8), data:intarr(24)}
   readu, lu, test, TRANSFER_COUNT=count
   close,lu
   free_lun, lu
   IF (count NE 24) THEN RETURN, -1
   
   ver0 = string(test.ver(0:1))
   ver1 = string(test.ver(0:6))
   datatype = fix(test.data(21))
   system = fix(test.data(22))
   sw_version = fix(test.data(20))
   byteorder, datatype, /SSWAP
   IF (datatype EQ 2 OR datatype EQ 6) THEN BEGIN
      byteorder, system, /SSWAP
      byteorder, sw_version, /SSWAP
   ENDIF
   

   IF (filetype EQ 0) THEN BEGIN
      IF (ver1 EQ 'MATRIX7') THEN filetype = MATRIX_REV7 $
      ELSE IF (((system EQ 953) OR (system EQ 951) OR (system EQ 921) OR (system EQ 961) OR $
                (system EQ 962) OR (system EQ 6) OR (system EQ 1) OR (system EQ 0)) AND $
               ((sw_version EQ 64) OR (sw_version EQ 65))) THEN filetype = MATRIX_REV6 $
      ELSE IF ((system EQ 9110) AND (sw_version EQ 6)) THEN filetype = MATRIX_REV6 $
      ELSE IF (ver0 EQ '**') THEN filetype = PETT6
   ENDIF

   ;; Check if ANALYZE format
   
   IF (filetype EQ 0) THEN BEGIN
      i = rstrpos(fname,'.img')
      IF (i LT 0) THEN BEGIN
         i = strpos(fname,'.hdr')
         IF (i GT 0) THEN BEGIN
            hname = fname
            strput, fname, '.img', i
         ENDIF
      ENDIF ELSE BEGIN
         hname = fname
         strput, hname,'.hdr', i
      ENDELSE
      openr, lu, hname, /GET_LUN, ERROR=err
      IF (err NE 0) THEN RETURN, -2 $
      ELSE BEGIN
         hdr = ana
         readu, lu, hdr, TRANSFER_COUNT=count
         close, lu
         free_lun,lu
         IF ((count EQ 1) AND (hdr.hk.sizeof_hdr EQ 348)) THEN filetype = ANALYZE 
      ENDELSE
   END

   RETURN, filetype
END 

@


1.14
log
@*** empty log message ***
@
text
@d54 1
a54 1
      ;;ELSE IF ((system EQ 0) AND (sw_version EQ 0)) THEN filetype = MATRIX_REV6 $
@


1.13
log
@remove sw_version = 6 for Matrix 6
@
text
@d79 1
a79 3
         IF ((count EQ 1) AND (hdr.hk.sizeof_hdr EQ 348)) THEN BEGIN
            filetype = ANALYZE
         ENDIF
@


1.12
log
@if system and sw_version = 0, don't assume Matrix 6
@
text
@d53 1
a53 1
               ((sw_version EQ 64) OR (sw_version EQ 6))) THEN filetype = MATRIX_REV6 $
@


1.11
log
@add system 962
@
text
@d54 1
@


1.10
log
@return immediately if interfile type
@
text
@d43 1
a43 1
   IF (datatype EQ 2) THEN BEGIN
d51 2
a52 2
      ELSE IF (((system EQ 953) OR (system EQ 951) OR (system EQ 921) OR $
                (system EQ 961) OR (system EQ 6) OR (system EQ 1) OR (system EQ 0)) AND $
@


1.9
log
@fix interfile name bug
@
text
@d20 4
a23 1
          (strpos(str,'!INTERFILE') EQ 0)) THEN filetype = INTERFILE
@


1.8
log
@eliminate unnecessary free_lun
@
text
@d10 1
a10 1
      hname = fname
@


1.7
log
@check sizeof_hdr instead of extents (since spm doesn't set extents properly)
@
text
@d26 1
a26 4
   IF (err NE 0) THEN BEGIN
      free_lun, lu
      RETURN, -2
   ENDIF
d69 2
a70 4
      IF (err NE 0) THEN BEGIN
         free_lun, lu
         RETURN, -2
      ENDIF ELSE BEGIN
@


1.6
log
@check for interfile first
@
text
@d80 1
a80 1
         IF ((count EQ 1) AND (hdr.hk.extents EQ 16384)) THEN BEGIN
@


1.5
log
@*** empty log message ***
@
text
@d5 20
d34 1
d48 7
a54 15
   IF (ver1 EQ 'MATRIX7') THEN filetype = MATRIX_REV7 $
   ELSE IF (((system EQ 953) OR (system EQ 951) OR (system EQ 921) OR $
             (system EQ 961) OR (system EQ 6) OR (system EQ 1) OR (system EQ 0)) AND $
            ((sw_version EQ 64) OR (sw_version EQ 6))) THEN filetype = MATRIX_REV6 $
   ELSE IF (ver0 EQ '**') THEN filetype = PETT6 $
   ELSE IF (rstrpos(fname,'.ifh') GT 0) THEN BEGIN
      str = ''
      openr,lu, fname, ERROR=err
      IF (err NE 0) THEN BEGIN
         free_lun, lu
         RETURN, -2
      ENDIF
      readf, lu, str
      IF ((strpos(str,'INTERFILE') EQ 0) OR $
          (strpos(str,'!INTERFILE') EQ 0)) THEN filetype = INTERFILE
d56 2
a60 16
      IF (i GT 0) THEN BEGIN
         hname = fname
         strput, hname,'.ifh', i
      ENDIF
      openr,lu, hname, ERROR=err
      IF (err EQ 0) THEN BEGIN
         str = ''
         readf, lu, str
         close, lu
         IF ((strpos(str,'INTERFILE') EQ 0) OR $
             (strpos(str,'!INTERFILE') EQ 0)) THEN filetype = INTERFILE
      ENDIF
   END
   
   IF (filetype EQ 0) THEN BEGIN
      i = rstrpos(fname,'.img')
d71 1
a71 1
      openr,lu, hname, ERROR=err
a85 1
   free_lun, lu
@


1.4
log
@change order of checking for Interfile
@
text
@d51 1
a51 4
      IF (err NE 0) THEN BEGIN
         free_lun, lu
         RETURN, -2
      ENDIF ELSE BEGIN
d57 1
a57 1
      ENDELSE
@


1.3
log
@system=1 permitted
@
text
@d1 1
a1 1
FUNCTION getfiletype, fname
d6 4
a9 1
   IF (err NE 0) THEN RETURN, -2
a13 1
   free_lun, lu
d27 15
a41 8
   IF (ver1 EQ 'MATRIX7') THEN BEGIN
      filetype = MATRIX_REV7
   ENDIF ELSE IF (((system EQ 953) OR (system EQ 951) OR (system EQ 921) OR $
                   (system EQ 961) OR (system EQ 6) OR (system EQ 1) OR (system EQ 0)) AND $
                  ((sw_version EQ 64) OR (sw_version EQ 6))) THEN BEGIN
      filetype = MATRIX_REV6
   ENDIF ELSE IF (ver0 EQ '**') THEN BEGIN
      filetype = PETT6
d46 1
a46 7
      IF (i LT 0) THEN BEGIN
         i = strpos(fname,'.ifh')
         IF (i GT 0) THEN BEGIN
            hname = fname
            strput, fname, '.img', i
         ENDIF
      ENDIF ELSE BEGIN
d49 11
a60 9
      openr,lu, hname, ERROR=err, GET_LUN
      IF (err EQ 0) THEN BEGIN
         test = ''
         readf, lu, test
         close, lu
         IF (strpos(test,'INTERFILE') EQ 0) THEN BEGIN
            filetype = INTERFILE
         ENDIF
      ENDIF
d75 5
a79 2
      openr,lu, hname, ERROR=err, /GET_LUN
      IF (err EQ 0) THEN BEGIN
d83 1
d87 1
a87 1
      ENDIF
d89 2
a90 2
   
   free_lun,lu
@


1.2
log
@fix if clause for matrix6
@
text
@d28 1
a28 1
                   (system EQ 961) OR (system EQ 6) OR (system EQ 0)) AND $
@


1.1
log
@Initial revision
@
text
@d29 1
a29 1
                  (sw_version EQ 64) OR (sw_version EQ 6)) THEN BEGIN
@
