head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2002.11.21.20.43.13;	author tom;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@;+
; NAME:
;   WARPIT
;
; PURPOSE
;   Apply a 3D warp calculated by WARP3d to a STUDY image.
;
; INPUTS: passed and Environmental variables
;   IN:    Study image filename
;   OUT:   Output filename
;   WARP:  Root name for x,y,z warp vector files
;
; REVISION HISTORY:
;   Nov 2002 Tom Videen
;-

PRO WARPIT
@@IMAGE_UTILS.h

   on_error, 2
   infile  = getenv ('INFILE')
   outfile = getenv ('OUTFILE')
   warpfile = getenv ('WARP')

   fnamex = warpfile+'_dx.img'
   fnamey = warpfile+'_dy.img'
   fnamez = warpfile+'_dz.img'

   str = ''
   img = {VIMAGE}
   img.f = 1
   img.fp = 1
   img.lp = 256
   img.ff = 1
   img.lf = 1

   ;; warp_dx

   img.fname = fnamex
   IF (getframe(img, str) NE 0) THEN message,str
   ndx = float(reform((*img.data)[*,*,*]))

   ;; warp_dy

   img.fname = fnamey
   IF (getframe(img, str) NE 0) THEN message,str
   ndy = float(reform((*img.data)[*,*,*]))

   ;; warp_dz

   img.fname = fnamez
   IF (getframe(img, str) NE 0) THEN message,str
   ndz = float(reform((*img.data)[*,*,*]))

   ;; input image

   img.fname = infile
   IF (getframe(img, str) NE 0) THEN message,str
   study = float(reform((*img.data)[*,*,*]))

   ;; apply the warp factors

   nx = (size(study))[1]
   ny = (size(study))[2]
   nz = (size(study))[3]
   new = fltarr(nx,ny,nz)
   FOR z=0,nz-1 DO BEGIN
      FOR y=0,ny-1 DO BEGIN
         FOR x=0,nx-1 DO BEGIN
            xx = x-ndx[x,y,z]
            yy = y-ndy[x,y,z]
            zz = z-ndz[x,y,z]
            new[x,y,z] = interpolate(study, xx, yy, zz, /grid)
         ENDFOR 
      ENDFOR 
   ENDFOR 
   result = check_math()
   IF (result NE 32 AND result NE 0) THEN print,"math error ",result

   ;; Write output image

   extra = strarr(7)
   extra[0] = 'conversion program := warpit'
   extra[1] = 'program version    := 1.0'
   extra[2] = 'program date       := 2002:11:21'
   extra[3] = 'original image     := '+infile
   extra[4] = 'x warp image       := '+fnamex
   extra[5] = 'y warp image       := '+fnamey
   extra[6] = 'z warp image       := '+fnamez
   img.fname = outfile
   *img.data = new
   print,'Saving ',outfile
   stat = putinterfile(img, outfile, str, EXTRA=extra)
   IF (stat NE 0) THEN message,'ERROR saving '+outfile

END
@
