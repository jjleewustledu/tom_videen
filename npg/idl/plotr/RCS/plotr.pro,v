head	1.4;
access;
symbols;
locks; strict;
comment	@# @;


1.4
date	2008.02.05.22.19.45;	author tom;	state Exp;
branches;
next	1.3;

1.3
date	2008.02.05.19.26.23;	author tom;	state Exp;
branches;
next	1.2;

1.2
date	2007.03.21.16.15.18;	author tom;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.22.15.56.38;	author tom;	state Exp;
branches;
next	;


desc
@@


1.4
log
@*** empty log message ***
@
text
@; $Id: plotr.pro,v 1.3 2008/02/05 19:26:23 tom Exp tom $
;
;+
; NAME:
;   PLOTR
;
; PURPOSE:
;   Plot headcurve (.r) files.
;
; CATEGORY:
;   PET processing.
;
; CALLING SEQUENCE:
;   plotr PID
;
; MODIFICATION HISTORY:
;   Written by: Tom Videen, Aug 2005.
;   Modified: to check for existing files (TOV Mar 2007)
;-

PRO plotr

;	Initializations

   on_error,2
   loadct,5
   str=''
   str1=''
   str2=''
   pid=''
   pid = getenv('PID')

   if (pid eq '') then exit
   command = 'ls ' + pid + '*.r'
   spawn, command, result
   nfiles = (size(result))(1)
   if (nfiles le 0) then begin
      print,'ERROR: No files named ',pid,'*.r'
      exit
   endif
   list = strarr(nfiles)
   reads, result, list

   scrnsize = get_screen_size()
   xloc = scrnsize[0]/2
   IF (xloc GT 1270) THEN xloc = 1270
   window,xpos=xloc
   
   for i=0,nfiles-1 do begin
      openr,lu,list(i),/get_lun
      command = 'wc ' + list(i)
      spawn, command, result
      reads, result, num
      if num eq 0 then begin
         print, list(i), ' is empty'
      endif

      readf,lu,str
      reads,str,str1,format='(A4)'
      reads,str,str2,format='(46X,A7)'
      case str1 of
         'time': begin
            num = num-1
            if (str2 eq 'singles') then begin
               crv = lonarr(8,num)
            endif else begin    ; Ver 7.0 beta
               crv = lonarr(7,num)
            endelse
            curve = fltarr(4,num)
            readf,lu,crv
            curve = [0.001*crv(0,*), crv(3,*), crv(4,*), crv(6,*)]
         end
         else: begin
            print,list(i),' is not a headcurve'
            exit
         end
      endcase
      close,lu
      free_lun,lu

      indx = where (curve(1,*) gt 0)
      if (indx[0] lt 0) then begin
         print, 'ERROR: ', list(i), ' has no counts'
      endif else begin
         frm1 = 2
         frm2 = max(curve(3,*))
         idx2 = min(where (curve(3,*) eq frm1))
         t0 = curve(0,idx2)
         time = curve(0,idx2:*) - t0
         trues = (curve(1,idx2:*) - curve(2,idx2:*))/1000
         plot, time, trues, /nodata, charsize=1.5, xrange=[0,120], yrange=[0,180], $
            title=list(i), xtitle='sec', ytitle='1000 trues/sec'
         oplot, time, trues, color=180, thick=2
      endelse

      read, prompt='Enter RETURN for next plot ', str
   endfor
end
@


1.3
log
@*** empty log message ***
@
text
@d1 1
a1 1
; $Id: plotr.pro,v 1.2 2007/03/21 16:15:18 tom Exp tom $
d91 1
a91 1
         plot, time, trues, /nodata, charsize=1.5, xrange=[0,120], yrange=[0,150], $
@


1.2
log
@*** empty log message ***
@
text
@d1 1
a1 1
; $Id: plotr.pro,v 1.1 2005/08/22 15:56:38 tom Exp tom $
d86 6
a91 20
         indx = min(where (curve(3,*) eq frm1))
         if (indx lt 0) then begin
            frm1 = frm1+1
            indx = min(where (curve(3,*) eq frm1))
         endif
         data = curve(*,indx:*)

         ; Set initial time to frame 1 and max time to <= 120
         data(0,*) = data(0,*) - data(0,0)
         indx = where (data(0,*) le 120)
         data = data(*,indx)

         t0 = data(0,0)
         time = data(0,*) 
         time = [[time], [max(time) + 1.0]] 

         indx = where (data(1,*) gt 0 AND data(0,*) le 120)
         t2 = fix(max(time))
         trues = (data(1,*) - data(2,*))/1000
         plot, time, trues, /nodata, charsize=1.5, xrange=[t0,t2], yrange=[0,140], $
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
; $Id: plotr.pro,v 1.1 2002/09/06 16:05:06 tom Exp $
d18 1
d37 4
d43 5
@
