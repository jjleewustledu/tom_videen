#!/bin/csh
#	Name:	cos_align_ho2ref_without_oo
#	Author: Tom Videen
#	Date:	Oct 2007
#	Created for: COSS PET Processing
#	Intent: Coregister HO to reference t88-atlas brain without an Oxygen scan
#	Requires:
#		meanpet.img
#		meanpet.t88
#		meanmask.img
#		cs01-001-ho1_g3.v
#	Creates:
#		cs01-001-ho1_to_meanpet.air
#		cs01-001-ho1_to_meanpet.log

if (! $?STUDY) then
	echo "ERROR: env STUDY not defined"
	exit 1
else if (! $?HO) then
	echo "ERROR: env HO not defined"
	exit 1
else if (! $?LOGFILE) then
	echo "ERROR: env LOGFILE not defined"
	exit 1
endif

set REF      = /data/cvl/coss/Reference/meanpet
set MEANMASK = /data/cvl/coss/Reference/meanmask
set Z0	= 38

set VER   = 1.0
set PID   = $STUDY-
set MASK  = ${PID}mask.v
set AMASK = a$MASK:r
set THR   = 50
set GAUSS = _g3
set to    = _to_
set HO1   = $PID$HO$GAUSS
set HOREF = $PID$HO$to${REF:t}
set HOREF6 = $PID$HO$to${REF:t}6
set HOREF9 = $PID$HO$to${REF:t}9
set INIT  = $HOREF.init
set DDIR  = `pwd`

# Check existence of files:
# -------------------------
set EFILES = "$HO1.v $REF.img $MEANMASK.img $REF.t88"
set STATUS = 0
foreach i ($EFILES)
	if (! -e $i) then
		echo "ERROR: $i does not exist."
		set STATUS = 1
	endif
end
if ($STATUS != 0) exit 1

echo "==========================================================================" >>! $LOGFILE
echo "cos_align_ho2ref_without_oo  Version:" $VER `whoami` `date` >> $LOGFILE

# Create mask from HO1:
# --------------------
set lateralview = ${HO1}_lat.v
set max = `imghdr $HO1.v | grep Max | cut -f2 -d= | cut -f1 -d.`
set min = `echo "$max / 100" | bc`
set thr = 10
set PLANES = `imghdr $HO1.v | grep slices | cut -f1 -d" "`
unalias cp
cp $HO1.v $MASK

maskslc $MASK $MASK 1to1
maskslc $MASK $MASK ${PLANES}to$PLANES
sumlateral $MASK $MASK $min $max
maskpct $MASK $MASK.tmp $thr
maskimg $MASK $MASK.tmp $lateralview 1
set max = `imghdr $lateralview | grep Max | cut -f2 -d= | cut -f1 -d.`
while ($max > 32767)
    scaleimage $lateralview 0.1
    set max = `imghdr $lateralview | grep Max | cut -f2 -d= | cut -f1 -d.`
end
echo $max
prompt1:
echo "============================================================"
echo "Use vidi to edit the lateral projection of the mask"
echo "   Get Files->Image 1:   $lateralview"
echo "   Edit->Image 1"
echo "      Outline nose and tissue below base of cranium"
echo "      Fill using Fill Value = 0"
echo "   Save Image->Image 1:  ${PID}lat.img"
echo "   Press RETURN to continue (CTRL-C to quit)"
set data = `line`

if (! -e ${PID}lat.ifh) then
    echo "ERROR: Save as ${PID}lat.img"
    goto prompt1
endif
if2analyze ${PID}lat
analyze2img ${PID}lat ${PID}lat.v
masklateral $HO1.v ${PID}lat.v $MASK 10
maskslc $MASK $MASK 1to1
if ($status != 0) exit 1

# Coregister to standard image
# --------------------------------
set RMAX = `imghdr $REF.t88 | grep Max | cut -f2 -d= | cut -f1 -dM`
maskimg $HO1.v ${PID}mask.v tmpho.v 1

# If 6-parameter fit fails, try masking out more slices to set scaling factor, e.g.,
#maskslc $HO1.v tmpho.v 26to47

# SCALE is set to facilitate the coregistration to the standard and is restored later
set HMAX = `imghdr tmpho.v | grep Max | cut -f2 -d= | cut -f1 -dM`
set SCALE = `echo "$RMAX / $HMAX" | bc -l | cut -c1-11`
set INVSCALE = `echo "1.0 / $SCALE" | bc -l | cut -c1-11`
echo "Scale = $SCALE   Inverse Scale = $INVSCALE" >> $LOGFILE
echo "Scale = $SCALE   Inverse Scale = $INVSCALE"
scaleimage $HO1.v $SCALE
img2analyze $HO1.v a$HO1
scaleimage $HO1.v $INVSCALE

if (-e $INIT) goto 9_PARAMETER

setanamin a$HO1 0
if (-e air_init) then
	set N = `wc air_init | cut -c1-8`
	if ($N != 6) then
		echo "ERROR: air_init must have 6 lines"
		echo "   Be certain to run manualreslice with scale-down factors=1"
		echo 
		exit 1
	endif
	set PRM = "-m 6 -p1 1 -t1 100 -e1 $MEANMASK -x 3 -f air_init -v"
	echo "Initial 6-parameter coregistration using air_init ..."
else
	set PRM = "-m 6 -p1 1 -t1 100 -e1 $MEANMASK -x 3 -v"
	echo "Initial 6-parameter coregistration ..."
endif
echo alignlinear $REF a$HO1 $HOREF.air $PRM >> $LOGFILE

alignlinear $REF a$HO1 $HOREF.air $PRM >! log
set ERROR = `grep HESSIAN log`
if (`echo $ERROR | wc -w` != 0) then
	echo $ERROR
	echo "Alignment has probably failed..."
endif
imgreslice a$HO1 $HOREF
tail -8 log >> $LOGFILE
echo ""

# Check, then set up initialization file 
echo "============================================================"
echo "Use vidi to check co-registration of ra$HO1.img to standard"
echo "   Image 1: $REF.t88		(PET Rainbow)"
echo "   Image 2: $DDIR/ra$HO1.img	(Hot Metal)"
#echo "Press RETURN to continue (CTRL-C to quit)"
#set data = `line`

echo 0.0 >! $INIT
echo 0.0 >> $INIT
echo 0.0 >> $INIT
set shifts = `scanair $HOREF.air | tail -6 | head -3 | cut -f4 -d' '`
foreach i ($shifts)
	set a = `echo $i | cut -f1 -de`
	set chk = `echo $i | grep "+"`
	if ($chk == "") then
		set b = `echo $i | cut -f2 -de`
	else
		set b = `echo $i | cut -f2 -d+`
	endif
	set n = `echo "-2 * $a * 10^$b" | bc -l`
	echo $n | cut -c1-6 >> $INIT
end
echo 1.0 >> $INIT
echo 1.0 >> $INIT
echo 1.0 >> $INIT
mv $HOREF.air $HOREF6.air

9_PARAMETER:

set PRM = "-m 9 -p1 1 -t1 100 -e1 $MEANMASK -f $INIT -x 3 -v"
setanamin a$HO1 0
echo "Final 9-parameter coregistration ..."
echo "Initialization file:" >> $LOGFILE
cat $INIT >> $LOGFILE
echo alignlinear $REF a$HO1 $HOREF.air $PRM >> $LOGFILE

alignlinear $REF a$HO1 $HOREF.air $PRM >! log
set ERROR = `grep HESSIAN log`
if (`echo $ERROR | wc -w` != 0) then
	echo $ERROR
	echo "Alignment failed and will require manual processing" 
	exit 1
endif
# Most common reason for failure with 9-parameter fit when 6-prm succeeds
# is a difference in scaling between $REF and a$HO1

imgreslice a$HO1 $HOREF
set check = `grep HESSIAN log`
echo $check
tail -8 log | tee -a $LOGFILE
analyze2img ra$HO1 $HO1.t88
scaleimage $HO1.t88 $INVSCALE
setz0 $HO1.t88 $Z0

echo "============================================================"
echo "Use vidi to check co-registration of $HO1.t88 to standard"
echo "   Image 1: $REF.t88		(PET Rainbow)"
echo "   Image 2: $DDIR/$HO1.t88	(Hot Metal)"
echo "   Compare composite transverse, sagittal, and coronal views."
echo "Press RETURN to cleanup and finish (CTRL-C to quit)"
echo ""
echo "Note: if 6 prm fit was good but 9 prm distorted it, then after CTRL-C"
echo "use Manualreslice_ho2atlas_tweek (copy and edit from /data/cvl/coss/Reference)"
set data = `line`

unalias rm
rm tmpho.v
rm a$HO1.*
rm log
cvl

echo "HO-to-atlas AIR file:  $HOREF.air" | tee -a $LOGFILE
echo "HO atlas-image:        $HO1.t88" | tee -a $LOGFILE
echo "============================================================"

