#!/bin/csh
#	Module:	align_human_fd
#   Date:	May 2001
#   Author:	Tom Videen
#	Use:	Align all frames of an FDOPA dynamic image (30 frames on 953B)
#   Note:
#       sumimgframes requires the start time;
#       single_frames calls sumimgframes;

if ($#argv != 4) then
    echo "Usage: align_human_fd pid first last reference"
    echo " e.g., align_human_fd p3000 1 30 2"
    exit 1
endif

set PID   = $1
set FRM1  = $2
set FRM2  = $3
set REFRM = $4

set FRAMES = ${FRM1}to$FRM2
set DDIR   = `pwd`
set ROOT   = ${PID}fd
set TR     = $DDIR/${PID}tr1.img
set TRG    = ${PID}tr1_2dg5.img
set MASK   = ${PID}fd_mask.img
set ORG    = $DDIR/${PID}fd1.img
set RORG   = r${PID}fd1.img

# Check existence of all images
# -----------------------------------
if (! -e $ORG) then
	echo "ERROR [align_human_fd]: Missing fdopa image $ORG"
	exit 1
else if (! -e $TR) then
	echo "ERROR [align_human_fd]: Missing transmission image $TR"
	exit 1
endif

# Check for existence of first, last and reference frames
# -------------------------------------------------------
imghdr $ORG $FRM1 > & ! align.tmp
set CHK1 = `head -1 align.tmp | cut -c1-5`
imghdr $ORG $FRM2 > & ! align.tmp
set CHK2 = `head -1 align.tmp | cut -c1-5`
imghdr $ORG $REFRM > & ! align.tmp
set CHK3 = `head -1 align.tmp | cut -c1-5`
unalias rm
rm align.tmp
if ($CHK1 == ERROR) then
	echo "ERROR [align_human_fd]: No frame $FRM1 in $ORG"
	exit 1
else if ($CHK2 == ERROR) then
	echo "ERROR [align_human_fd]: No frame $FRM2 in $ORG"
	exit 1
else if ($CHK3 == ERROR) then
	echo "ERROR [align_human_fd]: No frame $REFRM in $ORG"
	exit 1
endif

# Create alignment subdirectory
# -----------------------------
if (-e Align_pet) then
	echo "Warning [align_human_fd]: Directory $DDIR/Align_pet already exists"
else
	mkdir Align_pet
	chmod 775 Align_pet
endif
cd Align_pet
if ($status != 0) exit 1

gauss2d $TR $TRG 0.5
	if ($status != 0) exit 1
maskobj $TRG $MASK 900 1100 64 64 16
	if ($status != 0) exit 1
single_frames $ORG $ROOT i $FRM1 $FRM2
	if ($status != 0) exit 1
align_dynamic $ROOT i $MASK ${REFRM}to${FRM2} 4 5 scale_953
	if ($status != 0) exit 1
reslicedyn $ROOT .i $FRAMES $REFRM $ORG
	if ($status != 0) exit 1
merge_dynframes r$ROOT $FRAMES .i $RORG
	if ($status != 0) exit 1
remove_dynfiles $ROOT .i $FRAMES
remove_dynfiles r$ROOT .i $FRAMES
fitlog2plt ${ROOT}_t4_p1_x3.log $REFRM

# Create composite images of early and late frames
# ------------------------------------------------
set N1 = `echo $FRM1 + 7 | bc`
set N2 = `echo $FRM2 - 5 | bc`
set time1 = `imghdr $ORG $FRM1 | grep Start | cut -f2 -d= | cut -f1 -ds`
set time2 = `imghdr $ORG $N2 | grep Start | cut -f2 -d= | cut -f1 -ds`
sumimgframes $ORG  orig_f${FRM1}to${N1}.img  $FRM1 $N1 $time1
sumimgframes $ORG  orig_f${N2}to${FRM2}.img  $N2 $FRM2 $time2
sumimgframes $RORG align_f${FRM1}to${N1}.img $FRM1 $N1 $time1
sumimgframes $RORG align_f${N2}to${FRM2}.img $N2 $FRM2 $time2

echo "-----------------------------------------------------"
echo "1) Check alignment with plot_aligndyn"
echo "      ${ROOT}_t4_p1_x3.log"
echo 
echo "2) Compare early and late frames of original and aligned (vidi)"
echo "      orig_f${FRM1}to${N1}.img"
echo "      orig_f${N2}to${FRM2}.img"
echo "      align_f${FRM1}to${N1}.img"
echo "      align_f${N2}to${FRM2}.img"
echo    
echo "3) View all frames one plane (vidi)"
echo
echo "4) Move the aligned dynamic to the parent directory"
echo "      mv $RORG* .."
echo "-----------------------------------------------------"

