#!/bin/csh
#   Name:   cos_sum_oo
#   Author: Tom Videen
#   Date:   Jan 2002
#   Created for: COSS PET Processing
#   Intent: View time-activity curve and determine frames to sum for 40-sec oxygen;
#		Activity plotted as mean counts/pixel/sec.

if ($#argv != 3) then
	echo "Usage:  cos_sum_oo X Y Z"
	exit 1
endif

set X = $1
set Y = $2
set Z = $3

#	Environmental variables used:
if (! $?SITE) then
	echo "ERROR: env SITE not defined"
	exit 1
else if (! $?SUBJ) then
	echo "ERROR: env SUBJ not defined"
	exit 1
else if (! $?SCAN) then
	echo "ERROR: env SCAN not defined"
	exit 1
else if (! $?OO) then
	echo "ERROR: env OO not defined"
	exit 1
else if (! $?STUDY) then
	echo "ERROR: env STUDY not defined"
	exit 1
else if (! $?LOGFILE) then
	echo "ERROR: env LOGFILE not defined"
	exit 1
endif

set VER      = 1.0
set DIAMETER = 80
set NFRAMES  = 20

set PREFIX = cs$SITE-
set GAUSS = _g3
set FNAME = $STUDY-$OO
set IN    = $FNAME.v
set FIL   = $FNAME$GAUSS.v
set LST   = $FNAME.lst
set PRM   = $FNAME.prm
set REG   = $FNAME.reg
set RGT   = $FNAME.rgt
set PLT   = $FNAME.plt
set START = $FNAME.start
set DURA  = $FNAME.duration
set CNTS  = $FNAME.cnts
set TMP   = cos_sum_oo$$.tmp

if (! -e $IN) then
	echo "ERROR [cos_sum_oo] file not found: $IN"
	exit 1
endif

echo "==========================================================================" >>! $LOGFILE
echo "cos_sum_oo  Version:" $VER `whoami` `date` >> $LOGFILE
echo $0 $1 $2 $3 >> $LOGFILE

imgfrms $IN | cut -c1-3 >! $TMP
set FIRST = `head -5 $TMP | tail -1`
set LAST  = `tail -1 $TMP`
set NFRMS = `echo $LAST - $FIRST + 1 | bc`
set MISSING = `echo $FIRST - 1 | bc`
echo "$IN    Frames $FIRST to $LAST"

# Create lst, prm, and reg files:

echo "$SUBJ $SCAN" >! $LST

echo "species:    $PREFIX"	>! $PRM
echo "tracer:     -oo"		>> $PRM
echo "extension:  v"		>> $PRM
echo "imgfilter:  none"		>> $PRM
echo "voi:        new_sphere $DIAMETER" >> $PRM

echo "30  voifile"                  >! $REG
echo "center of brain for $STUDY"     >> $REG
echo "1"                            >> $REG
echo "center_of_brain   $X  $Y  $Z" >> $REG

echo 0 >! $TMP
chklist_nosxr $PRM $LST 1
voistat $PRM $LST $RGT $REG < $TMP

set SIZE = `wc -l $RGT | cut -f1 -dc`
set NN = `echo $SIZE - 2 | bc`
tail -$NN $RGT | head -$NFRMS | cut -c2-12 >! $START
tail -$NN $RGT | head -$NFRMS | cut -c14-24 >! $DURA
tail -$NN $RGT | head -$NFRMS | cut -c25-40 >! $CNTS
set TIME = `cat $START`
set DURATION = `cat $DURA`
set COUNTS = `cat $CNTS`

if (-e $PLT) /usr/bin/rm $PLT
touch $PLT
set i = 1
while ($i <= $NFRMS)
	set MEAN = `echo $COUNTS[$i] / $DURATION[$i] | bc -l`
	echo $MEAN | cut -c1-12 >> $PLT
	@ i++
end

echo "================================================================="
echo " 1) Print the plot."
echo " 2) Note the first frame with counts above background"
echo "   (to be used as the first frame of 40-sec integration)"
echo "================================================================="
set STRING = "$DIAMETER-mm sphere at $X,$Y,$Z"
cos_plot $PLT $FIRST $LAST $FNAME.v $STRING

echo "$IN    Frames $FIRST to $LAST"
set STR = 'y'
prompt1:
echo "================================================================="
echo "First frame of 40-sec integration?"
set FIRST = `line`
if ($STR == 'n' || $STR == 'N') then
	echo "Last frame number?"
	set LAST = `line`
else
	set LAST = `echo $FIRST + $NFRAMES - 1 | bc`
endif
set T1 = $TIME[$FIRST]
set T2 = $TIME[$LAST]
set T3 = $DURATION[$LAST]
set TOT = `echo $T2 - $T1 + $T3 | bc -l`
prompt2:
echo "Integration time for frames $FIRST-$LAST = $TOT sec"
echo "Use this range? <y/n>"
set STR = `line`
if ($STR == 'n' || $STR == 'N') goto prompt1
if ($STR != 'y' && $STR != 'Y') goto prompt2

set OUT  = ${FNAME}_f${FIRST}to${LAST}.v
echo "Summing frames $FIRST to $LAST --> $OUT"
set ffrm = `firstfrm $IN | head -1`
set time0 = `imghdr $IN $ffrm | grep Start | cut -f2 -d= | cut -f1 -ds`
set time1 = `imghdr $IN $FIRST | grep Start | cut -f2 -d= | cut -f1 -ds`
set starttime = `echo $time1 - $time0 | bc`
sumimgframes $IN $OUT $FIRST $LAST $starttime
gauss $OUT $FIL 0.3

# Scale to reasonable short-integer range
set maxval = `imghdr $FIL | grep Max | cut -f2 -d= | cut -f1 -d.`
set scaler = `echo 30000 / $maxval | bc -l | cut -c1-10`
scaleimage $FIL $scaler

unalias rm
if (-e idl.ps) rm idl.ps
rm $LST
rm $PRM
rm $RGT
rm $START
rm $DURA
rm $CNTS
rm $TMP

echo
echo "Gaussian filter:       0.3 cycles/cm" | tee -a $LOGFILE
echo "Max: $maxval      Scaler: $scaler" | tee -a $LOGFILE
echo "VOI Coordinates:       X= $X   Y= $Y   Z= $Z" | tee -a $LOGFILE
echo "VOI Diameter for TAC:  $DIAMETER mm" | tee -a $LOGFILE
echo "Integration frames:  40-sec image filename" | tee -a $LOGFILE
echo "   OO:    $FIRST - $LAST     $FIL" | tee -a $LOGFILE
echo "================================================================="

