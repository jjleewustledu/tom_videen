#!/bin/sh
#   matlab77 - script file for invoking MATLAB 7.2

rev="`showrev | grep Release | cut -f2 -d' '`"
if [ "$rev" != "5.8" ]; then
	echo "Matlab 7 runs on SunOS 5.8 only"
	hostname="`showrev | grep Hostname | cut -f2 -d' '`"
	release="`showrev | grep OS | cut -f3-4 -d' '`"
	echo $hostname is running $release
	exit
fi

# Determine values for the following variables
#   ARCH            (machine architecture)
    ARCH="sol2"

#   AUTOMOUNT_MAP   (Path prefix map for automounting)
    AUTOMOUNT_MAPenv="$AUTOMOUNT_MAP"
    AUTOMOUNT_MAPdefault=''

#   DISPLAY         (DISPLAY variable for X Window System)
    DISPLAYenv="$DISPLAY"
    DISPLAYdefault=''

#   MATLAB          (MATLAB root directory)
    MATLAB="/usr/local/pkg/matlab7"
	MATLABdefault="$MATLAB"
    MATLAB_UTIL_DIRdefault=$MATLABdefault/bin/util
    MATLABPATHdefault=''

#   MATLAB_MEM_MGR  (Type of memory manager)
    MATLAB_MEM_MGRenv="$MATLAB_MEM_MGR"
    MATLAB_MEM_MGRdefault=''

#   MATLAB_DEBUG	(name of the debugger from -Ddebugger argument)

#   MATLABPATH      (MATLAB search path)
    MATLABPATHenv="$MATLABPATH"

#   SHELL           (which shell to use for ! and unix command in MATLAB)
    SHELLenv="$SHELL"
    SHELLdefault='$SHELL'

#   TOOLBOX         (toolbox path)
    TOOLBOXenv="$TOOLBOX"
    TOOLBOXdefault='$MATLAB/toolbox'

#   XAPPLRESDIR     (X Application Resource Directory)
    XAPPLRESDIRenv="$XAPPLRESDIR"
    XAPPLRESDIRdefault='$MATLAB/X11/app-defaults'

#   XKEYSYMDB       (X keysym Database file)
    XKEYSYMDBenv="$XKEYSYMDB"
    XKEYSYMDBdefault='$MATLAB/X11/app-defaults/XKeysymDB'

#--------------------------------------------------------------------------
    if [ -f "$HOME"/.matlab7rc.sh ]; then
        SOURCED_DIR='$HOME'
        SOURCED_DIReval=$HOME
        . "$HOME"/.matlab7rc.sh
    elif [ -f $MATLABdefault/bin/.matlab7rc.sh ]; then
        SOURCED_DIR='$MATLAB/bin'
        SOURCED_DIReval=$MATLABdefault/bin
        . $MATLABdefault/bin/.matlab7rc.sh
    else
		echo "No .matlab7rc.sh"
		exit
    fi

#--------------------------------------------------------------------------
    rcfile='r '
    environ='e '
    script='s '
    argument='a '
    rcfilep='rs'
    environp='es'

# Sourced a .matlab7rc.sh file

   	if [ "$MATLAB" != "$MATLABdefault" -a "$AUTOMOUNT_MAPenv" != "" ]; then
  	   	AUTOMOUNT_MAPmode="$environ"
   	else
   		AUTOMOUNT_MAPmode="$rcfile"
   	fi

   	if [ "$MATLAB" != "" ]; then
       	MATLABmode="$rcfile"
   	else
       	MATLABmode="$script"
       	MATLAB="$MATLABdefault"
   	fi

	if [ "$DISPLAY" != "" ]; then
    	if [ "$DISPLAYenv" = "$DISPLAY" ]; then
           	DISPLAYmode="$environ"
    	else
           	DISPLAYmode="$rcfile"
    	fi
	else
       	DISPLAYmode="$script"
    	DISPLAY="`eval echo $DISPLAYdefault`"
	fi

	if [ "$ARCH" != "" ]; then
       	ARCHmode="$rcfile"
	fi

	if [ "$TOOLBOX" != "" ]; then
	   	if [ "$TOOLBOXenv" = "$TOOLBOX" ]; then
           	TOOLBOXmode="$environ"
	   	else
           	TOOLBOXmode="$rcfile"
	   	fi
	else
       	TOOLBOXmode="$script"
	   	TOOLBOX="`eval echo $TOOLBOXdefault`"
	fi

	if [ "$XAPPLRESDIR" != "" ]; then
    	XAPPLRESDIR="`eval echo $XAPPLRESDIR`"
    	if [ "$XAPPLRESDIRenv" = "$XAPPLRESDIR" ]; then
           	XAPPLRESDIRmode="$environ"
    	else
           	XAPPLRESDIRmode="$rcfile"
    	fi
	else
       	XAPPLRESDIRmode="$script"
    	XAPPLRESDIR="`eval echo $XAPPLRESDIRdefault`"
	fi

	if [ "$XKEYSYMDB" != "" ]; then
    	XKEYSYMDB="`eval echo $XKEYSYMDB`"
    	if [ "$XKEYSYMDBenv" = "$XKEYSYMDB" ]; then
           	XKEYSYMDBmode="$environ"
    	else
           	XKEYSYMDBmode="$rcfile"
    	fi
	else
       	XKEYSYMDBmode="$script"
    	XKEYSYMDB="`eval echo $XKEYSYMDBdefault`"
	fi

    if [ "$MATLABPATH" != "" ]; then
    	if [ "$MATLABPATHenv" = "$MATLABPATH" ]; then
           	MATLABPATHmode="$environp"
    	else
           	MATLABPATHmode="$rcfilep"
    	fi
   	else
       	MATLABPATHmode="$script"
    	MATLABPATH="`eval echo $MATLABPATHdefault`"
   	fi

# For MATLAB_MEM_MGR:
#    1) memmgr manager argument
#	 2) check_malloc argument
#    3) rcfile (not currently set)
#	 4) environment
#	 5) default (empty)

	if [ "$MATLAB_MEM_MGR" != "" ]; then
    	if [ "$MATLAB_MEM_MGRenv" = "$MATLAB_MEM_MGR" ]; then
        	MATLAB_MEM_MGRmode="$environ"
    	else
        	MATLAB_MEM_MGRmode="$rcfile"
    	fi
	else
    	MATLAB_MEM_MGRmode="$script"
    	MATLAB_MEM_MGR="$MATLAB_MEM_MGRdefault"
	fi

	if [ "$SHELL" != "" ]; then
    	if [ "$SHELLenv" = "$SHELL" ]; then
           	SHELLmode="$environ"
    	else
           	SHELLmode="$rcfile"
    	fi
	else
       	SHELLmode="$script"
    	SHELL="`eval echo $SHELLdefault`"
	fi

#--------------------------------------------------------------------------
# Determine the final values for the following variables
#   LD_LIBRARY_PATH    (load library path - platform dependent)
#	_JVM_THREADS_TYPE	(type of Java virtual machine threads)
#--------------------------------------------------------------------------
# Determine the java vm path for each platform.

	JARCH="sparc"
    DEFAULT_JRE_LOC=$MATLAB/sys/java/jre/$ARCH/jre

    # No more symlinks to jre
    if [ "X$MATLAB_JAVA" = "X" ]; then
		MATLAB_JAVA_CFG=`head -n 1 ${DEFAULT_JRE_LOC}.cfg 2>/dev/null`
    else
		MATLAB_JAVA_CFG=$MATLAB_JAVA
    fi
    JRE_LOC=$DEFAULT_JRE_LOC${MATLAB_JAVA_CFG:-}
    if [ ! -d "$JRE_LOC" ]; then
		JRE_LOC=$MATLAB_JAVA_CFG
    fi

# Threads

    JLIB=lib
    JAVA_VM_PATH="$JRE_LOC/$JLIB/$JARCH/native_threads"

# JVM

    JVM_LIB_ARCH="$JRE_LOC/$JLIB/$JARCH"
    VM_FLAVOR=client
    if [ -d $JVM_LIB_ARCH/$VM_FLAVOR ]; then
		JAVA_VM_PATH="$JAVA_VM_PATH:$JVM_LIB_ARCH/$VM_FLAVOR"
    elif [ -d $JVM_LIB_ARCH/hotspot ]; then
		JAVA_VM_PATH="$JAVA_VM_PATH:$JVM_LIB_ARCH/hotspot"
    elif [ -d $JVM_LIB_ARCH/classic ]; then
		JAVA_VM_PATH="$JAVA_VM_PATH:$JVM_LIB_ARCH/classic"
		_JVM_THREADS_TYPE=native_threads; export _JVM_THREADS_TYPE
    fi
    JAVA_VM_PATH="$JAVA_VM_PATH:$JRE_LOC/$JLIB/$JARCH"

#--------------------------------------------------------------------------
    if [ "$LANG" = "ja_JP.PCK" ] ; then
        LANG=C
        export LANG
    fi
    if [ "$LC_CTYPE" = "ja_JP.PCK" ] ; then
        LC_CTYPE=C
        export LC_CTYPE
    fi
    if [ "$LC_ALL" = "ja_JP.PCK" ] ; then
        LC_ALL=C
        export LC_ALL
    fi

# Augment with AWT Motif default locale resource files

    XFILESEARCHPATH="$JRE_LOC/lib/locale/%L/%T/%N%S:$XFILESEARCHPATH"
    export XFILESEARCHPATH
    BIN_DIRS=$MATLAB/bin/$ARCH
    LDPATH_MATLAB=$MATLAB/sys/os/$ARCH:$BIN_DIRS:$MATLAB/extern/lib/$ARCH

#-------------------------------------------------------------------------
# Determine the osg library path

    osg="$MATLAB/sys/openscenegraph/lib/$ARCH"
    OSG_LD_LIBRARY_PATH=$osg
    export OSG_LD_LIBRARY_PATH

#--------------------------------------------------------------------------
# Determine <final_load_library_path> for each platform

	LD_LIBRARY_PATH="`eval echo $LD_LIBRARY_PATH`"
	LD_LIBRARY_PATH="/usr/local/npg/lib/matlab7:$LD_LIBRARY_PATH"
	LDPATH_MATLAB=$LDPATH_MATLAB:$JAVA_VM_PATH
	if [ "$LD_LIBRARY_PATH" != "" ]; then
		LD_LIBRARY_PATH=$LDPATH_MATLAB:$LD_LIBRARY_PATH
        LD_LIB_PATHmode="$rcfilep"
	else
		LD_LIBRARY_PATH=$LDPATH_MATLAB
        LD_LIB_PATHmode="$script"
	fi
	if [ "$LDPATH_PREFIX" != "" ]; then
	    LDPATH_PREFIX="`eval echo $LDPATH_PREFIX`"
	    if [ "$LDPATH_PREFIX" != "" ]; then
            LD_LIBRARY_PATH=$LDPATH_PREFIX:$LD_LIBRARY_PATH
            LD_LIB_PATHmode="$rcfilep"
		fi
	fi
	if [ "$LDPATH_SUFFIX" != "" ]; then
	    LDPATH_SUFFIX="`eval echo $LDPATH_SUFFIX`"
	    if [ "$LDPATH_SUFFIX" != "" ]; then
            LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$LDPATH_SUFFIX
            LD_LIB_PATHmode="$rcfilep"
		fi
	fi
    # Fix for Sun BugID 4663077
    if [ "`uname -r`" = "5.8" ]; then
        LD_LIBRARY_PATH=/usr/lib/lwp:$LD_LIBRARY_PATH
    fi
	export LD_LIBRARY_PATH

#--------------------------------------------------------------------------
# SHELL must be defined. 

    if [ "$SHELL" = "" ]; then 
        SHELLmode="$script"
		SHELL="/bin/sh"
    fi

#--------------------------------------------------------------------------
# Be sure that X sees the Matlab Resource Database (X11/R5).

    if [ "$XUSERFILESEARCHPATH" != "" ]; then
        XAPPLRESDIRmode="$environp"
		XUSERFILESEARCHPATH=$XUSERFILESEARCHPATH:$XAPPLRESDIR/%N
		export XUSERFILESEARCHPATH
    fi
    BASEMATLABPATH=$MATLABPATH; export BASEMATLABPATH

#--------------------------------------------------------------------------
# Add on $HOME/matlab if available and $MATLAB/toolbox/local
# Remove any leading ":" character from the path. 

    if [ -d "$HOME"/matlab ]; then
		MATLABPATH=$MATLABPATH:"$HOME"/matlab
    fi
    MATLABPATH=$MATLABPATH:$MATLAB/toolbox/local
    MATLABPATH=`echo $MATLABPATH | sed 's/^://'`

#--------------------------------------------------------------------------
# Check OS version

    if [ -f $MATLAB_UTIL_DIR/oscheck.sh ]; then
		. $MATLAB_UTIL_DIR/oscheck.sh
		if [ "$oscheck_status" = "1" ]; then
		    exit 1
		fi
    fi

#--------------------------------------------------------------------------
# Set a floor on the maximum number of file descriptors that can be opened.
# The user can always set something higher before calling MATLAB.

    FLOOR_OPEN_FILES=256
    MAX_OPEN_FILES=`ulimit -n`
    MAX_OPEN_FILESmode='e '
    if [ $MAX_OPEN_FILES -lt $FLOOR_OPEN_FILES ]; then
        ulimit -n $FLOOR_OPEN_FILES 2>/dev/null
        if [ $? -eq 0 ]; then
            MAX_OPEN_FILESmode='s '
            MAX_OPEN_FILES=`ulimit -n`
        fi
    fi

#--------------------------------------------------------------------------
# Export the variables and start MATLAB

    export MATLAB
    export AUTOMOUNT_MAP
    export DISPLAY
    export ARCH
    export TOOLBOX
    export MATLABPATH
    export XAPPLRESDIR
    export XKEYSYMDB
    if [ "$MATLAB_MEM_MGR" != "" ]; then
        export MATLAB_MEM_MGR
    fi
    export MATLAB_DEBUG
    export SHELL
	eval exec $MATLAB/bin/$ARCH/MATLAB
