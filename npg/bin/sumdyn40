#!/bin/csh
#   Name:   sumdyn40
#   Author: Tom Videen
#   Date:   Oct 2008
#   Intent: View time-activity curve and determine frames to sum for 40-sec scan
#   Creates:
#		summed 40-sec image without decay correction
#		filtered, summed 40-sec image
#		.rgt file (starttime, duration, counts)1
#		.r file (headcurve format)
#   History: Fixed 4/16/2009 to give non-zero value in first frame

if ($#argv != 6 && $#argv != 7 && $#argv != 9) then
	echo "Usage:  sumdyn40 path prefix subject tracer scan ext [reference or X Y Z]"
	echo " e.g.   sumdyn40 . p 5660 ho 1 v"
	echo "  or    sumdyn40 . p 5660 oo 1 v p5660ho1_g3.v"
	echo "  or    sumdyn40 /data/npggw/data1/COSS/p5660/Raw p 5660 oo 1 v 65 60 24"
	exit 1
endif

set DATAPATH = $1
set PREFIX   = $2
set ID       = $3
set TRACER   = $4
set NUM      = $5
set EXT      = $6
set REF      = ''
set CTR      = 0
set DIAMETER = 80
set NFRAMES  = 20

if ($#argv == 7) then
	set REF = $7
	if (! -e $REF) then
		echo "ERROR [sumdyn40] file not found: $REF"
		exit 1
	endif
endif

if ($#argv == 9) then
	set CTR = 1
	set X = $7
	set Y = $8
	set Z = $9
endif

set COB  = _center_of_brain
set FIL  = _g3
set PID  = $PREFIX$ID
set SCAN = $TRACER$NUM
set NAME = $PID$SCAN
set IN   = $DATAPATH/$NAME.$EXT
set FIN  = $NAME$FIL.$EXT
set TMP  = ${NAME}all.$EXT
set FTMP = ${NAME}all_g3.$EXT
set LST  = $NAME.lst
set PRM  = $NAME.prm
set REG  = $NAME.reg
set RGT  = $NAME.rgt
set PLT  = $NAME.cnt
set STRT = $NAME.start
set LEN  = $NAME.len
set CNTS = $NAME.cnts
set HCRV = $NAME.r

if (! -e $IN) then
	echo "ERROR [sumdyn40] file not found: $IN"
	exit 1
endif

unalias rm
imgfrms $IN | cut -c1-3 >! junk
set FIRST = `head -5 junk | tail -1`
set LAST  = `tail -1 junk`
rm junk
set NFRMS = `echo $LAST - $FIRST + 1 | bc`
set MISSING = `echo $FIRST - 1 | bc`
echo "$IN    Frames $FIRST to $LAST"
echo "================================================================="
if ($CTR == 0) then
	if ($REF == '') then
		sumimgframes $IN $TMP $FIRST $LAST -1
		gauss $TMP $REF 0.3
	endif
	echo "Using vidi"
	echo "   Image #1:  $REF"
	echo "   Locate approx center of brain in 3-D"
	echo "X center: "
	set   X = `line`
	echo "Y center: "
	set   Y = `line`
	echo "Z center: "
	set   Z = `line`
	echo "[X,Y,Z]:  $X  $Y  $Z"
	echo "Continue?"
	set data = `line`
endif

# Create lst, prm, and reg files:

echo "$ID $NUM" >! $LST

echo "datapath:   $DATAPATH"     >! $PRM
echo "species:    $PREFIX"       >> $PRM
echo "tracer:     $TRACER"       >> $PRM
echo "extension:  $EXT"          >> $PRM
echo "imgfilter:  none"          >> $PRM
echo "voi:        new_sphere $DIAMETER" >> $PRM

echo "30  voifile"                  >! $REG
echo "center of brain for $PID"     >> $REG
echo "1"                            >> $REG
echo "center_of_brain   $X  $Y  $Z" >> $REG

echo "Zero Time is the start time of the First Frame."
echo "================================================================="
voistat $PRM $LST $RGT $REG >! /tmp/voistat.tmp
set ZEROTIME = `tail -1 /tmp/voistat.tmp | cut -f2 -d=`
rm /tmp/voistat.tmp

set SIZE = `wc -l $RGT | cut -f1 -d$PREFIX`
set NN = `echo $SIZE - 2 | bc`
tail -$NN $RGT | head -$NFRMS | cut -c2-12 >! $STRT
tail -$NN $RGT | head -$NFRMS | cut -c14-24 >! $LEN
tail -$NN $RGT | head -$NFRMS | cut -c28-40 >! $CNTS
set START = `cat $STRT`
set INTERVAL = `cat $LEN`
set COUNTS = `cat $CNTS`
set FRMTIME = $ZEROTIME
set STRING = 'time    prompt  delayed p_rate  d_rate  dtime   frame   singles'
echo $STRING >! $HCRV
set i = `echo $FIRST - 1 | bc`
while ($i <= $NFRMS)
	set SEC = `echo $INTERVAL[$i] | bc -l`
	set MSEC = `echo 1000 \* $SEC | bc -l`
	set FRMTIME = `echo $FRMTIME + $MSEC | bc -l | cut -f1 -d.`
	set CNTRATE = `echo 1000 \* $COUNTS[$i] / $SEC | bc -l | cut -f1 -d.`
	if ($CNTRATE == "-") set CNTRATE = 0
	set FRM = `echo $FIRST + $i -1 | bc`
	echo $FRMTIME 0 0 $CNTRATE 0 0 $FRM 0 >> $HCRV
	@ i++
end
tail -$NFRMS $HCRV | cut -f4 -d' ' >! $PLT

echo "================================================================="
echo "Note the first frame with counts above background"
echo "(to be used as the first frame of 40-sec integration)"
echo "================================================================="
set STRING = "$DIAMETER-mm sphere at $X,$Y,$Z"
plotcol $PLT $FIRST $LAST $NAME.$EXT $STRING

echo "$IN    Frames $FIRST to $LAST"
set STR = 'y'
prompt1:
echo "================================================================="
echo "First frame of 40-sec integration?"
set FIRST = `line`
if ($STR == 'n' || $STR == 'N') then
	echo "Last frame number?"
	set END = `line`
else 
	set END = `echo $FIRST + $NFRAMES - 1 | bc`
endif
prompt2:
while ($END > $LAST)
	imgfrms $IN
	echo "Last frame number? (max=$LAST)"
	set END = `line`
end

set IDX1 = `echo $FIRST - $MISSING | bc`
set IDX2 = `echo $END - $MISSING | bc`
set T1 = $START[$IDX1]
set T2 = $START[$IDX2]
set T3 = $INTERVAL[$IDX2]

set TOT = `echo $T2 - $T1 + $T3 | bc -l`
echo "Integration time for frames $FIRST-$END = $TOT sec"
echo "Use this range? <y/n>"
set STR = `line`
if ($STR == 'n' || $STR == 'N') goto prompt1

set OUT  = $PID${SCAN}_f${FIRST}to${END}.$EXT
echo "Summing frames $FIRST to $END --> $OUT"
sumimgframes $IN $OUT $FIRST $END -1
gauss $OUT $FIN 0.3

if (-e idl.ps) rm idl.ps
if (-e $TMP) rm $TMP
if (-e $TMP.rec) rm $TMP.rec
if (-e $FTMP) rm $FTMP
if (-e $FTMP.rec) rm $FTMP.rec
rm $LST
rm $PRM
rm $REG
rm $STRT
rm $LEN
rm $CNTS
rm $OUT.rec
rm $FIN.rec

