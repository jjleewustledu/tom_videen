.TH IMAGE_ORIENTATION 1 "22-Jan-2007" "Neuroimaging Lab"

Left/right image orientation depends on both all the 
programs used to create an image plus the one used to display it. This 
is a particular problem for the Analyze/SPM format, which has no 
standard for identifying pixel order in the file header. All in-house 
software (/usr/local/npg/bin) use the following rules:

.SH ECAT Format
ECAT images written by my programs will have a field in the header 
set to indicate the orientation. This can be read using imghdr and will 
show Right-on-Right in nearly all cases except for those images created 
directly by Siemens/CTI software, which will show Right-on-Left (the 
default when the header field is blank). All my display and processing 
software (i.e., vidi) should correctly read this field and display the 
images in the conventional top-down neuroscience standard right-on-right 
no matter which internal ordering the pixels have. Should you take one 
of these images and display it with Siemens software (i.e., moving the 
image back to the PET console or send an image to some other site that 
almost certainly will not recognize the field I set in the headers), you 
  must run imgflip to restore the factory default.

.SH Interfile Format
Interfile images have the pixel order specified in their headers 
(.ifh file). For standard transverse images, the key for "matrix initial 
element [1]" will be right or left. Since Interfile provides the 
clearest definition, I create them whenever img2analyze is run and read 
them preferentially whenever one exists. This has been know to confuse 
people if they are trying to display an image named p6000data.v when 
there is a file in the same directory named p6000data.ifh that points to 
some other file named p6000surprise.img since the Interfile header names 
the data file that contains the pixels in a key labeled "name of data 
file." You cannot rename Interfiles and have then behave as expected 
without editing the .ifh file and changed the image name in this key.

.SH Analyze Format
Analyze images created using img2analyze order the pixels so that the 
images will be correctly oriented by analyze_avw. The converse program, 
analyze2img, assumes that the input image has this default Analyze 
ordering. (The assorted CT and MR conversion programs are all intended 
to create images in the Analyze default ordering but this must be 
checked for any new sequence. Moreover, it now depends on the MR 
operator correctly identifying the head orientation at the time of the 
scan -- which has been unpredictable for monkeys).

.SH SPM Format
SPM images created using img2spm order the pixels so that they will 
be oriented correctly by SPM99 and all early versions of SPM. This has 
right and left reversed from the Analyze default. The converse program, 
spm2img, assumes that the input image has this default SPM ordering.

.SH VIDI Defaults
When vidi reads an image in Analyze format (extensions .hdr, .img), it 
always assumes that it has the default Analyze ordering. Therefore, if 
you display an ECAT image (.v) and then convert it to Analyze (using 
img2analyze), it will appear the same way in vidi even though all pixel 
ordering has been reversed. (Remember if you run img2analyze, it always 
creates an Interfile header, .ifh, and you must delete this header for 
the Analyze header to be read by vidi. Vidi will always read an 
Interfile first if one can be found since these are more informative). 
If you take the same ECAT image and convert it using img2spm and then 
display it with vidi, right/left will be reversed.

.SH CONSIDERATIONS
It is frustrating that neither CTI, Mayo, nor the SPM people have 
specified pixel orientation in their file headers. It is even more 
frustrating that the SPM people, apparently recognizing that their 
convention differed from Mayo's, switched it with SPM5. To answer the 
question you originally asked: as of today I have NOT changed any of my 
conversion programs in order to minimize confusion since redoing the SPM 
flip would require you to either recreate any old SPM images you may 
have or keep track of the file creation dates. You can, however, flip 
the SPM images created by img2spm to satisfy the expectations of SPM5 
using anaflip. If you do, try to keep these images isolated as spm2img 
will not know that you have done this. If anyone can think of a better 
way to handle these, I would gladly alter the programs.

Finally, should you manipulate an image with any other software that 
does not follow these conventions, you must check that the final 
orientation is what you expect it to be (4dfp users take note).

The safest approach is to take one image with clear sidedness and run it 
through all of the same steps as your other data.

.SH AUTHOR
Tom Videen, 2007


